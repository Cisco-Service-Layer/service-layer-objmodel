// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_bfd_common.proto

#include "sl_bfd_common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace service_layer {
class SLBfdRegMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdRegMsg>
      _instance;
} _SLBfdRegMsg_default_instance_;
class SLBfdRegMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdRegMsgRsp>
      _instance;
} _SLBfdRegMsgRsp_default_instance_;
class SLBfdGetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdGetMsg>
      _instance;
} _SLBfdGetMsg_default_instance_;
class SLBfdGetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdGetMsgRsp>
      _instance;
} _SLBfdGetMsgRsp_default_instance_;
class SLBfdGetStatsMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdGetStatsMsgRsp>
      _instance;
} _SLBfdGetStatsMsgRsp_default_instance_;
class SLBfdGetNotifMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdGetNotifMsg>
      _instance;
} _SLBfdGetNotifMsg_default_instance_;
class SLBfdConfigCommonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdConfigCommon>
      _instance;
} _SLBfdConfigCommon_default_instance_;
class SLBfdCommonStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdCommonState>
      _instance;
} _SLBfdCommonState_default_instance_;
}  // namespace service_layer
namespace protobuf_sl_5fbfd_5fcommon_2eproto {
void InitDefaultsSLBfdRegMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLBfdRegMsg_default_instance_;
    new (ptr) ::service_layer::SLBfdRegMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdRegMsg::InitAsDefaultInstance();
}

void InitDefaultsSLBfdRegMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdRegMsgImpl);
}

void InitDefaultsSLBfdRegMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLBfdRegMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLBfdRegMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdRegMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLBfdRegMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdRegMsgRspImpl);
}

void InitDefaultsSLBfdGetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLBfdGetMsg_default_instance_;
    new (ptr) ::service_layer::SLBfdGetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdGetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLBfdGetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdGetMsgImpl);
}

void InitDefaultsSLBfdGetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLBfdGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLBfdGetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdGetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLBfdGetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdGetMsgRspImpl);
}

void InitDefaultsSLBfdGetStatsMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLBfdGetStatsMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLBfdGetStatsMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdGetStatsMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLBfdGetStatsMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdGetStatsMsgRspImpl);
}

void InitDefaultsSLBfdGetNotifMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLBfdGetNotifMsg_default_instance_;
    new (ptr) ::service_layer::SLBfdGetNotifMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdGetNotifMsg::InitAsDefaultInstance();
}

void InitDefaultsSLBfdGetNotifMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdGetNotifMsgImpl);
}

void InitDefaultsSLBfdConfigCommonImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLBfdConfigCommon_default_instance_;
    new (ptr) ::service_layer::SLBfdConfigCommon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdConfigCommon::InitAsDefaultInstance();
}

void InitDefaultsSLBfdConfigCommon() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdConfigCommonImpl);
}

void InitDefaultsSLBfdCommonStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLBfdCommonState_default_instance_;
    new (ptr) ::service_layer::SLBfdCommonState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdCommonState::InitAsDefaultInstance();
}

void InitDefaultsSLBfdCommonState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdCommonStateImpl);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdRegMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdRegMsg, oper_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdRegMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdRegMsgRsp, errstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetMsgRsp, maxbfdsessioncfgperslbfdmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetMsgRsp, minbfdtxintervalsinglehop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetMsgRsp, minbfdtxintervalmultihop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetMsgRsp, minbfddetectmultipliersinglehop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetMsgRsp, minbfddetectmultipliermultihop_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetStatsMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetStatsMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetStatsMsgRsp, seqnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetStatsMsgRsp, bfdcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdGetNotifMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdConfigCommon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdConfigCommon, desiredtxintusec_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdConfigCommon, detectmultiplier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdCommonState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdCommonState, seqnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdCommonState, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdCommonState, diag_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::service_layer::SLBfdRegMsg)},
  { 6, -1, sizeof(::service_layer::SLBfdRegMsgRsp)},
  { 12, -1, sizeof(::service_layer::SLBfdGetMsg)},
  { 17, -1, sizeof(::service_layer::SLBfdGetMsgRsp)},
  { 28, -1, sizeof(::service_layer::SLBfdGetStatsMsgRsp)},
  { 36, -1, sizeof(::service_layer::SLBfdGetNotifMsg)},
  { 41, -1, sizeof(::service_layer::SLBfdConfigCommon)},
  { 48, -1, sizeof(::service_layer::SLBfdCommonState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdRegMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdRegMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdGetStatsMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdGetNotifMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdConfigCommon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdCommonState_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sl_bfd_common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023sl_bfd_common.proto\022\rservice_layer\032\025sl"
      "_common_types.proto\"3\n\013SLBfdRegMsg\022$\n\004Op"
      "er\030\001 \001(\0162\026.service_layer.SLRegOp\"A\n\016SLBf"
      "dRegMsgRsp\022/\n\tErrStatus\030\001 \001(\0132\034.service_"
      "layer.SLErrorStatus\"\r\n\013SLBfdGetMsg\"\374\001\n\016S"
      "LBfdGetMsgRsp\022/\n\tErrStatus\030\001 \001(\0132\034.servi"
      "ce_layer.SLErrorStatus\022#\n\033MaxBfdSessionC"
      "fgPerSLBfdMsg\030\002 \001(\r\022!\n\031MinBfdTxIntervalS"
      "ingleHop\030\003 \001(\r\022 \n\030MinBfdTxIntervalMultiH"
      "op\030\004 \001(\r\022\'\n\037MinBfdDetectMultiplierSingle"
      "Hop\030\005 \001(\r\022&\n\036MinBfdDetectMultiplierMulti"
      "Hop\030\006 \001(\r\"h\n\023SLBfdGetStatsMsgRsp\022/\n\tErrS"
      "tatus\030\001 \001(\0132\034.service_layer.SLErrorStatu"
      "s\022\016\n\006SeqNum\030\002 \001(\004\022\020\n\010BfdCount\030\003 \001(\r\"\022\n\020S"
      "LBfdGetNotifMsg\"G\n\021SLBfdConfigCommon\022\030\n\020"
      "DesiredTxIntUsec\030\001 \001(\r\022\030\n\020DetectMultipli"
      "er\030\002 \001(\r\"\323\004\n\020SLBfdCommonState\022\016\n\006SeqNum\030"
      "\001 \001(\004\022>\n\006Status\030\002 \001(\0162..service_layer.SL"
      "BfdCommonState.SLBfdStateEnum\022@\n\004Diag\030\003 "
      "\001(\01622.service_layer.SLBfdCommonState.SLB"
      "fdDiagStateEnum\"\200\001\n\016SLBfdStateEnum\022 \n\034SL"
      "_BFD_SESSION_STATE_UNKNOWN\020\000\022\025\n\021SL_BFD_S"
      "ESSION_UP\020\001\022\027\n\023SL_BFD_SESSION_DOWN\020\002\022\034\n\030"
      "SL_BFD_NEIGHBOR_UNCONFIG\020\003\"\251\002\n\022SLBfdDiag"
      "StateEnum\022\024\n\020SL_BFD_DIAG_NONE\020\000\022\036\n\032SL_BF"
      "D_DIAG_DETECT_EXPIRED\020\001\022\030\n\024SL_BFD_DIAG_N"
      "BR_DOWN\020\002\022\031\n\025SL_BFD_DIAG_PATH_DOWN\020\003\022\"\n\036"
      "SL_BFD_DIAG_FWDING_PLANE_RESET\020\004\022\032\n\026SL_B"
      "FD_DIAG_ADMIN_DOWN\020\005\022\"\n\036SL_BFD_DIAG_REV_"
      "CONC_PATH_DOWN\020\006\022$\n SL_BFD_DIAG_ECHO_FUN"
      "CTION_FAILED\020\007\022\036\n\032SL_BFD_DIAG_CONC_PATH_"
      "DOWN\020\010*M\n\tSLBfdType\022\023\n\017SL_BFD_RESERVED\020\000"
      "\022\025\n\021SL_BFD_SINGLE_HOP\020\001\022\024\n\020SL_BFD_MULTI_"
      "HOP\020\002*r\n\016SLBfdNotifType\022\036\n\032SL_BFD_EVENT_"
      "TYPE_RESERVED\020\000\022\033\n\027SL_BFD_EVENT_TYPE_ERR"
      "OR\020\001\022#\n\037SL_BFD_EVENT_TYPE_SESSION_STATE\020"
      "\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1449);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_bfd_common.proto", &protobuf_RegisterTypes);
  ::protobuf_sl_5fcommon_5ftypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sl_5fbfd_5fcommon_2eproto
namespace service_layer {
const ::google::protobuf::EnumDescriptor* SLBfdCommonState_SLBfdStateEnum_descriptor() {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fbfd_5fcommon_2eproto::file_level_enum_descriptors[0];
}
bool SLBfdCommonState_SLBfdStateEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SLBfdCommonState_SLBfdStateEnum SLBfdCommonState::SL_BFD_SESSION_STATE_UNKNOWN;
const SLBfdCommonState_SLBfdStateEnum SLBfdCommonState::SL_BFD_SESSION_UP;
const SLBfdCommonState_SLBfdStateEnum SLBfdCommonState::SL_BFD_SESSION_DOWN;
const SLBfdCommonState_SLBfdStateEnum SLBfdCommonState::SL_BFD_NEIGHBOR_UNCONFIG;
const SLBfdCommonState_SLBfdStateEnum SLBfdCommonState::SLBfdStateEnum_MIN;
const SLBfdCommonState_SLBfdStateEnum SLBfdCommonState::SLBfdStateEnum_MAX;
const int SLBfdCommonState::SLBfdStateEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SLBfdCommonState_SLBfdDiagStateEnum_descriptor() {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fbfd_5fcommon_2eproto::file_level_enum_descriptors[1];
}
bool SLBfdCommonState_SLBfdDiagStateEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::SL_BFD_DIAG_NONE;
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::SL_BFD_DIAG_DETECT_EXPIRED;
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::SL_BFD_DIAG_NBR_DOWN;
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::SL_BFD_DIAG_PATH_DOWN;
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::SL_BFD_DIAG_FWDING_PLANE_RESET;
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::SL_BFD_DIAG_ADMIN_DOWN;
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::SL_BFD_DIAG_REV_CONC_PATH_DOWN;
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::SL_BFD_DIAG_ECHO_FUNCTION_FAILED;
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::SL_BFD_DIAG_CONC_PATH_DOWN;
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::SLBfdDiagStateEnum_MIN;
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::SLBfdDiagStateEnum_MAX;
const int SLBfdCommonState::SLBfdDiagStateEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SLBfdType_descriptor() {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fbfd_5fcommon_2eproto::file_level_enum_descriptors[2];
}
bool SLBfdType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SLBfdNotifType_descriptor() {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fbfd_5fcommon_2eproto::file_level_enum_descriptors[3];
}
bool SLBfdNotifType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SLBfdRegMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdRegMsg::kOperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdRegMsg::SLBfdRegMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdRegMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdRegMsg)
}
SLBfdRegMsg::SLBfdRegMsg(const SLBfdRegMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdRegMsg)
}

void SLBfdRegMsg::SharedCtor() {
  oper_ = 0;
  _cached_size_ = 0;
}

SLBfdRegMsg::~SLBfdRegMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdRegMsg)
  SharedDtor();
}

void SLBfdRegMsg::SharedDtor() {
}

void SLBfdRegMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdRegMsg::descriptor() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdRegMsg& SLBfdRegMsg::default_instance() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdRegMsg();
  return *internal_default_instance();
}

SLBfdRegMsg* SLBfdRegMsg::New(::google::protobuf::Arena* arena) const {
  SLBfdRegMsg* n = new SLBfdRegMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdRegMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oper_ = 0;
  _internal_metadata_.Clear();
}

bool SLBfdRegMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdRegMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLRegOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLRegOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdRegMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdRegMsg)
  return false;
#undef DO_
}

void SLBfdRegMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdRegMsg)
}

::google::protobuf::uint8* SLBfdRegMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdRegMsg)
  return target;
}

size_t SLBfdRegMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdRegMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdRegMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdRegMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdRegMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdRegMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdRegMsg)
    MergeFrom(*source);
  }
}

void SLBfdRegMsg::MergeFrom(const SLBfdRegMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLBfdRegMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdRegMsg::CopyFrom(const SLBfdRegMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdRegMsg::IsInitialized() const {
  return true;
}

void SLBfdRegMsg::Swap(SLBfdRegMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdRegMsg::InternalSwap(SLBfdRegMsg* other) {
  using std::swap;
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdRegMsg::GetMetadata() const {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdRegMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLBfdRegMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLBfdRegMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdRegMsgRsp::kErrStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdRegMsgRsp::SLBfdRegMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdRegMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdRegMsgRsp)
}
SLBfdRegMsgRsp::SLBfdRegMsgRsp(const SLBfdRegMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdRegMsgRsp)
}

void SLBfdRegMsgRsp::SharedCtor() {
  errstatus_ = NULL;
  _cached_size_ = 0;
}

SLBfdRegMsgRsp::~SLBfdRegMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdRegMsgRsp)
  SharedDtor();
}

void SLBfdRegMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLBfdRegMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdRegMsgRsp::descriptor() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdRegMsgRsp& SLBfdRegMsgRsp::default_instance() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdRegMsgRsp();
  return *internal_default_instance();
}

SLBfdRegMsgRsp* SLBfdRegMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLBfdRegMsgRsp* n = new SLBfdRegMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdRegMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  _internal_metadata_.Clear();
}

bool SLBfdRegMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdRegMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdRegMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdRegMsgRsp)
  return false;
#undef DO_
}

void SLBfdRegMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdRegMsgRsp)
}

::google::protobuf::uint8* SLBfdRegMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdRegMsgRsp)
  return target;
}

size_t SLBfdRegMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdRegMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdRegMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdRegMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdRegMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdRegMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdRegMsgRsp)
    MergeFrom(*source);
  }
}

void SLBfdRegMsgRsp::MergeFrom(const SLBfdRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
}

void SLBfdRegMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdRegMsgRsp::CopyFrom(const SLBfdRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdRegMsgRsp::IsInitialized() const {
  return true;
}

void SLBfdRegMsgRsp::Swap(SLBfdRegMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdRegMsgRsp::InternalSwap(SLBfdRegMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdRegMsgRsp::GetMetadata() const {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdGetMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdGetMsg::SLBfdGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdGetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdGetMsg)
}
SLBfdGetMsg::SLBfdGetMsg(const SLBfdGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdGetMsg)
}

void SLBfdGetMsg::SharedCtor() {
  _cached_size_ = 0;
}

SLBfdGetMsg::~SLBfdGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdGetMsg)
  SharedDtor();
}

void SLBfdGetMsg::SharedDtor() {
}

void SLBfdGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdGetMsg::descriptor() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdGetMsg& SLBfdGetMsg::default_instance() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdGetMsg();
  return *internal_default_instance();
}

SLBfdGetMsg* SLBfdGetMsg::New(::google::protobuf::Arena* arena) const {
  SLBfdGetMsg* n = new SLBfdGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SLBfdGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdGetMsg)
  return false;
#undef DO_
}

void SLBfdGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdGetMsg)
}

::google::protobuf::uint8* SLBfdGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdGetMsg)
  return target;
}

size_t SLBfdGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdGetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdGetMsg)
    MergeFrom(*source);
  }
}

void SLBfdGetMsg::MergeFrom(const SLBfdGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SLBfdGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdGetMsg::CopyFrom(const SLBfdGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdGetMsg::IsInitialized() const {
  return true;
}

void SLBfdGetMsg::Swap(SLBfdGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdGetMsg::InternalSwap(SLBfdGetMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdGetMsg::GetMetadata() const {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLBfdGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLBfdGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdGetMsgRsp::kErrStatusFieldNumber;
const int SLBfdGetMsgRsp::kMaxBfdSessionCfgPerSLBfdMsgFieldNumber;
const int SLBfdGetMsgRsp::kMinBfdTxIntervalSingleHopFieldNumber;
const int SLBfdGetMsgRsp::kMinBfdTxIntervalMultiHopFieldNumber;
const int SLBfdGetMsgRsp::kMinBfdDetectMultiplierSingleHopFieldNumber;
const int SLBfdGetMsgRsp::kMinBfdDetectMultiplierMultiHopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdGetMsgRsp::SLBfdGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdGetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdGetMsgRsp)
}
SLBfdGetMsgRsp::SLBfdGetMsgRsp(const SLBfdGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&maxbfdsessioncfgperslbfdmsg_, &from.maxbfdsessioncfgperslbfdmsg_,
    static_cast<size_t>(reinterpret_cast<char*>(&minbfddetectmultipliermultihop_) -
    reinterpret_cast<char*>(&maxbfdsessioncfgperslbfdmsg_)) + sizeof(minbfddetectmultipliermultihop_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdGetMsgRsp)
}

void SLBfdGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minbfddetectmultipliermultihop_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(minbfddetectmultipliermultihop_));
  _cached_size_ = 0;
}

SLBfdGetMsgRsp::~SLBfdGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdGetMsgRsp)
  SharedDtor();
}

void SLBfdGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLBfdGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdGetMsgRsp::descriptor() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdGetMsgRsp& SLBfdGetMsgRsp::default_instance() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdGetMsgRsp();
  return *internal_default_instance();
}

SLBfdGetMsgRsp* SLBfdGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLBfdGetMsgRsp* n = new SLBfdGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&maxbfdsessioncfgperslbfdmsg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&minbfddetectmultipliermultihop_) -
      reinterpret_cast<char*>(&maxbfdsessioncfgperslbfdmsg_)) + sizeof(minbfddetectmultipliermultihop_));
  _internal_metadata_.Clear();
}

bool SLBfdGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxBfdSessionCfgPerSLBfdMsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxbfdsessioncfgperslbfdmsg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinBfdTxIntervalSingleHop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minbfdtxintervalsinglehop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinBfdTxIntervalMultiHop = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minbfdtxintervalmultihop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinBfdDetectMultiplierSingleHop = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minbfddetectmultipliersinglehop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinBfdDetectMultiplierMultiHop = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minbfddetectmultipliermultihop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdGetMsgRsp)
  return false;
#undef DO_
}

void SLBfdGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint32 MaxBfdSessionCfgPerSLBfdMsg = 2;
  if (this->maxbfdsessioncfgperslbfdmsg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxbfdsessioncfgperslbfdmsg(), output);
  }

  // uint32 MinBfdTxIntervalSingleHop = 3;
  if (this->minbfdtxintervalsinglehop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->minbfdtxintervalsinglehop(), output);
  }

  // uint32 MinBfdTxIntervalMultiHop = 4;
  if (this->minbfdtxintervalmultihop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->minbfdtxintervalmultihop(), output);
  }

  // uint32 MinBfdDetectMultiplierSingleHop = 5;
  if (this->minbfddetectmultipliersinglehop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->minbfddetectmultipliersinglehop(), output);
  }

  // uint32 MinBfdDetectMultiplierMultiHop = 6;
  if (this->minbfddetectmultipliermultihop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->minbfddetectmultipliermultihop(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdGetMsgRsp)
}

::google::protobuf::uint8* SLBfdGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // uint32 MaxBfdSessionCfgPerSLBfdMsg = 2;
  if (this->maxbfdsessioncfgperslbfdmsg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxbfdsessioncfgperslbfdmsg(), target);
  }

  // uint32 MinBfdTxIntervalSingleHop = 3;
  if (this->minbfdtxintervalsinglehop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->minbfdtxintervalsinglehop(), target);
  }

  // uint32 MinBfdTxIntervalMultiHop = 4;
  if (this->minbfdtxintervalmultihop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->minbfdtxintervalmultihop(), target);
  }

  // uint32 MinBfdDetectMultiplierSingleHop = 5;
  if (this->minbfddetectmultipliersinglehop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->minbfddetectmultipliersinglehop(), target);
  }

  // uint32 MinBfdDetectMultiplierMultiHop = 6;
  if (this->minbfddetectmultipliermultihop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->minbfddetectmultipliermultihop(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdGetMsgRsp)
  return target;
}

size_t SLBfdGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdGetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint32 MaxBfdSessionCfgPerSLBfdMsg = 2;
  if (this->maxbfdsessioncfgperslbfdmsg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxbfdsessioncfgperslbfdmsg());
  }

  // uint32 MinBfdTxIntervalSingleHop = 3;
  if (this->minbfdtxintervalsinglehop() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minbfdtxintervalsinglehop());
  }

  // uint32 MinBfdTxIntervalMultiHop = 4;
  if (this->minbfdtxintervalmultihop() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minbfdtxintervalmultihop());
  }

  // uint32 MinBfdDetectMultiplierSingleHop = 5;
  if (this->minbfddetectmultipliersinglehop() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minbfddetectmultipliersinglehop());
  }

  // uint32 MinBfdDetectMultiplierMultiHop = 6;
  if (this->minbfddetectmultipliermultihop() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minbfddetectmultipliermultihop());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLBfdGetMsgRsp::MergeFrom(const SLBfdGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.maxbfdsessioncfgperslbfdmsg() != 0) {
    set_maxbfdsessioncfgperslbfdmsg(from.maxbfdsessioncfgperslbfdmsg());
  }
  if (from.minbfdtxintervalsinglehop() != 0) {
    set_minbfdtxintervalsinglehop(from.minbfdtxintervalsinglehop());
  }
  if (from.minbfdtxintervalmultihop() != 0) {
    set_minbfdtxintervalmultihop(from.minbfdtxintervalmultihop());
  }
  if (from.minbfddetectmultipliersinglehop() != 0) {
    set_minbfddetectmultipliersinglehop(from.minbfddetectmultipliersinglehop());
  }
  if (from.minbfddetectmultipliermultihop() != 0) {
    set_minbfddetectmultipliermultihop(from.minbfddetectmultipliermultihop());
  }
}

void SLBfdGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdGetMsgRsp::CopyFrom(const SLBfdGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdGetMsgRsp::IsInitialized() const {
  return true;
}

void SLBfdGetMsgRsp::Swap(SLBfdGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdGetMsgRsp::InternalSwap(SLBfdGetMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(maxbfdsessioncfgperslbfdmsg_, other->maxbfdsessioncfgperslbfdmsg_);
  swap(minbfdtxintervalsinglehop_, other->minbfdtxintervalsinglehop_);
  swap(minbfdtxintervalmultihop_, other->minbfdtxintervalmultihop_);
  swap(minbfddetectmultipliersinglehop_, other->minbfddetectmultipliersinglehop_);
  swap(minbfddetectmultipliermultihop_, other->minbfddetectmultipliermultihop_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdGetMsgRsp::GetMetadata() const {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdGetStatsMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLBfdGetStatsMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLBfdGetStatsMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdGetStatsMsgRsp::kErrStatusFieldNumber;
const int SLBfdGetStatsMsgRsp::kSeqNumFieldNumber;
const int SLBfdGetStatsMsgRsp::kBfdCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdGetStatsMsgRsp::SLBfdGetStatsMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdGetStatsMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdGetStatsMsgRsp)
}
SLBfdGetStatsMsgRsp::SLBfdGetStatsMsgRsp(const SLBfdGetStatsMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&bfdcount_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(bfdcount_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdGetStatsMsgRsp)
}

void SLBfdGetStatsMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bfdcount_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(bfdcount_));
  _cached_size_ = 0;
}

SLBfdGetStatsMsgRsp::~SLBfdGetStatsMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdGetStatsMsgRsp)
  SharedDtor();
}

void SLBfdGetStatsMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLBfdGetStatsMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdGetStatsMsgRsp::descriptor() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdGetStatsMsgRsp& SLBfdGetStatsMsgRsp::default_instance() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdGetStatsMsgRsp();
  return *internal_default_instance();
}

SLBfdGetStatsMsgRsp* SLBfdGetStatsMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLBfdGetStatsMsgRsp* n = new SLBfdGetStatsMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdGetStatsMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bfdcount_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(bfdcount_));
  _internal_metadata_.Clear();
}

bool SLBfdGetStatsMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdGetStatsMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 SeqNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 BfdCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bfdcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdGetStatsMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdGetStatsMsgRsp)
  return false;
#undef DO_
}

void SLBfdGetStatsMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint64 SeqNum = 2;
  if (this->seqnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->seqnum(), output);
  }

  // uint32 BfdCount = 3;
  if (this->bfdcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->bfdcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdGetStatsMsgRsp)
}

::google::protobuf::uint8* SLBfdGetStatsMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // uint64 SeqNum = 2;
  if (this->seqnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->seqnum(), target);
  }

  // uint32 BfdCount = 3;
  if (this->bfdcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->bfdcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdGetStatsMsgRsp)
  return target;
}

size_t SLBfdGetStatsMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdGetStatsMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint64 SeqNum = 2;
  if (this->seqnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seqnum());
  }

  // uint32 BfdCount = 3;
  if (this->bfdcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bfdcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdGetStatsMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdGetStatsMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdGetStatsMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdGetStatsMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdGetStatsMsgRsp)
    MergeFrom(*source);
  }
}

void SLBfdGetStatsMsgRsp::MergeFrom(const SLBfdGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.seqnum() != 0) {
    set_seqnum(from.seqnum());
  }
  if (from.bfdcount() != 0) {
    set_bfdcount(from.bfdcount());
  }
}

void SLBfdGetStatsMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdGetStatsMsgRsp::CopyFrom(const SLBfdGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdGetStatsMsgRsp::IsInitialized() const {
  return true;
}

void SLBfdGetStatsMsgRsp::Swap(SLBfdGetStatsMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdGetStatsMsgRsp::InternalSwap(SLBfdGetStatsMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(seqnum_, other->seqnum_);
  swap(bfdcount_, other->bfdcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdGetStatsMsgRsp::GetMetadata() const {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdGetNotifMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdGetNotifMsg::SLBfdGetNotifMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdGetNotifMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdGetNotifMsg)
}
SLBfdGetNotifMsg::SLBfdGetNotifMsg(const SLBfdGetNotifMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdGetNotifMsg)
}

void SLBfdGetNotifMsg::SharedCtor() {
  _cached_size_ = 0;
}

SLBfdGetNotifMsg::~SLBfdGetNotifMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdGetNotifMsg)
  SharedDtor();
}

void SLBfdGetNotifMsg::SharedDtor() {
}

void SLBfdGetNotifMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdGetNotifMsg::descriptor() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdGetNotifMsg& SLBfdGetNotifMsg::default_instance() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdGetNotifMsg();
  return *internal_default_instance();
}

SLBfdGetNotifMsg* SLBfdGetNotifMsg::New(::google::protobuf::Arena* arena) const {
  SLBfdGetNotifMsg* n = new SLBfdGetNotifMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdGetNotifMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdGetNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SLBfdGetNotifMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdGetNotifMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdGetNotifMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdGetNotifMsg)
  return false;
#undef DO_
}

void SLBfdGetNotifMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdGetNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdGetNotifMsg)
}

::google::protobuf::uint8* SLBfdGetNotifMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdGetNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdGetNotifMsg)
  return target;
}

size_t SLBfdGetNotifMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdGetNotifMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdGetNotifMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdGetNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdGetNotifMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdGetNotifMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdGetNotifMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdGetNotifMsg)
    MergeFrom(*source);
  }
}

void SLBfdGetNotifMsg::MergeFrom(const SLBfdGetNotifMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdGetNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SLBfdGetNotifMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdGetNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdGetNotifMsg::CopyFrom(const SLBfdGetNotifMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdGetNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdGetNotifMsg::IsInitialized() const {
  return true;
}

void SLBfdGetNotifMsg::Swap(SLBfdGetNotifMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdGetNotifMsg::InternalSwap(SLBfdGetNotifMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdGetNotifMsg::GetMetadata() const {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdConfigCommon::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdConfigCommon::kDesiredTxIntUsecFieldNumber;
const int SLBfdConfigCommon::kDetectMultiplierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdConfigCommon::SLBfdConfigCommon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdConfigCommon();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdConfigCommon)
}
SLBfdConfigCommon::SLBfdConfigCommon(const SLBfdConfigCommon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&desiredtxintusec_, &from.desiredtxintusec_,
    static_cast<size_t>(reinterpret_cast<char*>(&detectmultiplier_) -
    reinterpret_cast<char*>(&desiredtxintusec_)) + sizeof(detectmultiplier_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdConfigCommon)
}

void SLBfdConfigCommon::SharedCtor() {
  ::memset(&desiredtxintusec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&detectmultiplier_) -
      reinterpret_cast<char*>(&desiredtxintusec_)) + sizeof(detectmultiplier_));
  _cached_size_ = 0;
}

SLBfdConfigCommon::~SLBfdConfigCommon() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdConfigCommon)
  SharedDtor();
}

void SLBfdConfigCommon::SharedDtor() {
}

void SLBfdConfigCommon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdConfigCommon::descriptor() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdConfigCommon& SLBfdConfigCommon::default_instance() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdConfigCommon();
  return *internal_default_instance();
}

SLBfdConfigCommon* SLBfdConfigCommon::New(::google::protobuf::Arena* arena) const {
  SLBfdConfigCommon* n = new SLBfdConfigCommon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdConfigCommon::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdConfigCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&desiredtxintusec_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&detectmultiplier_) -
      reinterpret_cast<char*>(&desiredtxintusec_)) + sizeof(detectmultiplier_));
  _internal_metadata_.Clear();
}

bool SLBfdConfigCommon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdConfigCommon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 DesiredTxIntUsec = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desiredtxintusec_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 DetectMultiplier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &detectmultiplier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdConfigCommon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdConfigCommon)
  return false;
#undef DO_
}

void SLBfdConfigCommon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdConfigCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DesiredTxIntUsec = 1;
  if (this->desiredtxintusec() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->desiredtxintusec(), output);
  }

  // uint32 DetectMultiplier = 2;
  if (this->detectmultiplier() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->detectmultiplier(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdConfigCommon)
}

::google::protobuf::uint8* SLBfdConfigCommon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdConfigCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DesiredTxIntUsec = 1;
  if (this->desiredtxintusec() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->desiredtxintusec(), target);
  }

  // uint32 DetectMultiplier = 2;
  if (this->detectmultiplier() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->detectmultiplier(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdConfigCommon)
  return target;
}

size_t SLBfdConfigCommon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdConfigCommon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 DesiredTxIntUsec = 1;
  if (this->desiredtxintusec() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->desiredtxintusec());
  }

  // uint32 DetectMultiplier = 2;
  if (this->detectmultiplier() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->detectmultiplier());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdConfigCommon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdConfigCommon)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdConfigCommon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdConfigCommon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdConfigCommon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdConfigCommon)
    MergeFrom(*source);
  }
}

void SLBfdConfigCommon::MergeFrom(const SLBfdConfigCommon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdConfigCommon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.desiredtxintusec() != 0) {
    set_desiredtxintusec(from.desiredtxintusec());
  }
  if (from.detectmultiplier() != 0) {
    set_detectmultiplier(from.detectmultiplier());
  }
}

void SLBfdConfigCommon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdConfigCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdConfigCommon::CopyFrom(const SLBfdConfigCommon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdConfigCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdConfigCommon::IsInitialized() const {
  return true;
}

void SLBfdConfigCommon::Swap(SLBfdConfigCommon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdConfigCommon::InternalSwap(SLBfdConfigCommon* other) {
  using std::swap;
  swap(desiredtxintusec_, other->desiredtxintusec_);
  swap(detectmultiplier_, other->detectmultiplier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdConfigCommon::GetMetadata() const {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdCommonState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdCommonState::kSeqNumFieldNumber;
const int SLBfdCommonState::kStatusFieldNumber;
const int SLBfdCommonState::kDiagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdCommonState::SLBfdCommonState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdCommonState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdCommonState)
}
SLBfdCommonState::SLBfdCommonState(const SLBfdCommonState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&diag_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(diag_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdCommonState)
}

void SLBfdCommonState::SharedCtor() {
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diag_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(diag_));
  _cached_size_ = 0;
}

SLBfdCommonState::~SLBfdCommonState() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdCommonState)
  SharedDtor();
}

void SLBfdCommonState::SharedDtor() {
}

void SLBfdCommonState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdCommonState::descriptor() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdCommonState& SLBfdCommonState::default_instance() {
  ::protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdCommonState();
  return *internal_default_instance();
}

SLBfdCommonState* SLBfdCommonState::New(::google::protobuf::Arena* arena) const {
  SLBfdCommonState* n = new SLBfdCommonState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdCommonState::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdCommonState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&diag_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(diag_));
  _internal_metadata_.Clear();
}

bool SLBfdCommonState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdCommonState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 SeqNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLBfdCommonState.SLBfdStateEnum Status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::service_layer::SLBfdCommonState_SLBfdStateEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLBfdCommonState.SLBfdDiagStateEnum Diag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_diag(static_cast< ::service_layer::SLBfdCommonState_SLBfdDiagStateEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdCommonState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdCommonState)
  return false;
#undef DO_
}

void SLBfdCommonState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdCommonState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 SeqNum = 1;
  if (this->seqnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->seqnum(), output);
  }

  // .service_layer.SLBfdCommonState.SLBfdStateEnum Status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // .service_layer.SLBfdCommonState.SLBfdDiagStateEnum Diag = 3;
  if (this->diag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->diag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdCommonState)
}

::google::protobuf::uint8* SLBfdCommonState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdCommonState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 SeqNum = 1;
  if (this->seqnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->seqnum(), target);
  }

  // .service_layer.SLBfdCommonState.SLBfdStateEnum Status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // .service_layer.SLBfdCommonState.SLBfdDiagStateEnum Diag = 3;
  if (this->diag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->diag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdCommonState)
  return target;
}

size_t SLBfdCommonState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdCommonState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 SeqNum = 1;
  if (this->seqnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seqnum());
  }

  // .service_layer.SLBfdCommonState.SLBfdStateEnum Status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  // .service_layer.SLBfdCommonState.SLBfdDiagStateEnum Diag = 3;
  if (this->diag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->diag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdCommonState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdCommonState)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdCommonState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdCommonState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdCommonState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdCommonState)
    MergeFrom(*source);
  }
}

void SLBfdCommonState::MergeFrom(const SLBfdCommonState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdCommonState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.seqnum() != 0) {
    set_seqnum(from.seqnum());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.diag() != 0) {
    set_diag(from.diag());
  }
}

void SLBfdCommonState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdCommonState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdCommonState::CopyFrom(const SLBfdCommonState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdCommonState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdCommonState::IsInitialized() const {
  return true;
}

void SLBfdCommonState::Swap(SLBfdCommonState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdCommonState::InternalSwap(SLBfdCommonState* other) {
  using std::swap;
  swap(seqnum_, other->seqnum_);
  swap(status_, other->status_);
  swap(diag_, other->diag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdCommonState::GetMetadata() const {
  protobuf_sl_5fbfd_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
