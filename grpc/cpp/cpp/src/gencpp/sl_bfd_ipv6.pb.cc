// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_bfd_ipv6.proto

#include "sl_bfd_ipv6.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace service_layer {
class SLBfdv6KeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdv6Key>
      _instance;
} _SLBfdv6Key_default_instance_;
class SLBfdv6SessionCfgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdv6SessionCfg>
      _instance;
} _SLBfdv6SessionCfg_default_instance_;
class SLBfdv6MsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdv6Msg>
      _instance;
} _SLBfdv6Msg_default_instance_;
class SLBfdv6ResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdv6Res>
      _instance;
} _SLBfdv6Res_default_instance_;
class SLBfdv6MsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdv6MsgRsp>
      _instance;
} _SLBfdv6MsgRsp_default_instance_;
class SLBfdv6GetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdv6GetMsg>
      _instance;
} _SLBfdv6GetMsg_default_instance_;
class SLBfdv6SessionCfgStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdv6SessionCfgState>
      _instance;
} _SLBfdv6SessionCfgState_default_instance_;
class SLBfdv6GetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdv6GetMsgRsp>
      _instance;
} _SLBfdv6GetMsgRsp_default_instance_;
class SLBfdv6SessionStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdv6SessionState>
      _instance;
} _SLBfdv6SessionState_default_instance_;
class SLBfdv6NotifDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLBfdv6Notif>
      _instance;
  const ::service_layer::SLErrorStatus* errstatus_;
  const ::service_layer::SLBfdv6SessionState* session_;
} _SLBfdv6Notif_default_instance_;
}  // namespace service_layer
namespace protobuf_sl_5fbfd_5fipv6_2eproto {
void InitDefaultsSLBfdv6KeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLInterface();
  {
    void* ptr = &::service_layer::_SLBfdv6Key_default_instance_;
    new (ptr) ::service_layer::SLBfdv6Key();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdv6Key::InitAsDefaultInstance();
}

void InitDefaultsSLBfdv6Key() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdv6KeyImpl);
}

void InitDefaultsSLBfdv6SessionCfgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Key();
  protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdConfigCommon();
  {
    void* ptr = &::service_layer::_SLBfdv6SessionCfg_default_instance_;
    new (ptr) ::service_layer::SLBfdv6SessionCfg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdv6SessionCfg::InitAsDefaultInstance();
}

void InitDefaultsSLBfdv6SessionCfg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdv6SessionCfgImpl);
}

void InitDefaultsSLBfdv6MsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6SessionCfg();
  {
    void* ptr = &::service_layer::_SLBfdv6Msg_default_instance_;
    new (ptr) ::service_layer::SLBfdv6Msg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdv6Msg::InitAsDefaultInstance();
}

void InitDefaultsSLBfdv6Msg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdv6MsgImpl);
}

void InitDefaultsSLBfdv6ResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Key();
  {
    void* ptr = &::service_layer::_SLBfdv6Res_default_instance_;
    new (ptr) ::service_layer::SLBfdv6Res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdv6Res::InitAsDefaultInstance();
}

void InitDefaultsSLBfdv6Res() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdv6ResImpl);
}

void InitDefaultsSLBfdv6MsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Res();
  {
    void* ptr = &::service_layer::_SLBfdv6MsgRsp_default_instance_;
    new (ptr) ::service_layer::SLBfdv6MsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdv6MsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLBfdv6MsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdv6MsgRspImpl);
}

void InitDefaultsSLBfdv6GetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Key();
  {
    void* ptr = &::service_layer::_SLBfdv6GetMsg_default_instance_;
    new (ptr) ::service_layer::SLBfdv6GetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdv6GetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLBfdv6GetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdv6GetMsgImpl);
}

void InitDefaultsSLBfdv6SessionCfgStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Key();
  protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdConfigCommon();
  protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdCommonState();
  {
    void* ptr = &::service_layer::_SLBfdv6SessionCfgState_default_instance_;
    new (ptr) ::service_layer::SLBfdv6SessionCfgState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdv6SessionCfgState::InitAsDefaultInstance();
}

void InitDefaultsSLBfdv6SessionCfgState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdv6SessionCfgStateImpl);
}

void InitDefaultsSLBfdv6GetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6SessionCfgState();
  {
    void* ptr = &::service_layer::_SLBfdv6GetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLBfdv6GetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdv6GetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLBfdv6GetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdv6GetMsgRspImpl);
}

void InitDefaultsSLBfdv6SessionStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Key();
  protobuf_sl_5fbfd_5fcommon_2eproto::InitDefaultsSLBfdCommonState();
  {
    void* ptr = &::service_layer::_SLBfdv6SessionState_default_instance_;
    new (ptr) ::service_layer::SLBfdv6SessionState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdv6SessionState::InitAsDefaultInstance();
}

void InitDefaultsSLBfdv6SessionState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdv6SessionStateImpl);
}

void InitDefaultsSLBfdv6NotifImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6SessionState();
  {
    void* ptr = &::service_layer::_SLBfdv6Notif_default_instance_;
    new (ptr) ::service_layer::SLBfdv6Notif();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLBfdv6Notif::InitAsDefaultInstance();
}

void InitDefaultsSLBfdv6Notif() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLBfdv6NotifImpl);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Key, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Key, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Key, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Key, nbraddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Key, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Key, sourceaddr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6SessionCfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6SessionCfg, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6SessionCfg, config_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Msg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Msg, sessions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Res, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Res, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6MsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6MsgRsp, statussummary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6MsgRsp, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6GetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6GetMsg, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6GetMsg, seqnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6GetMsg, entriescount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6GetMsg, getnext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6SessionCfgState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6SessionCfgState, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6SessionCfgState, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6SessionCfgState, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6GetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6GetMsgRsp, eof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6GetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6GetMsgRsp, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6SessionState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6SessionState, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6SessionState, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Notif, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Notif, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Notif, eventtype_),
  offsetof(::service_layer::SLBfdv6NotifDefaultTypeInternal, errstatus_),
  offsetof(::service_layer::SLBfdv6NotifDefaultTypeInternal, session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLBfdv6Notif, Event_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::service_layer::SLBfdv6Key)},
  { 10, -1, sizeof(::service_layer::SLBfdv6SessionCfg)},
  { 17, -1, sizeof(::service_layer::SLBfdv6Msg)},
  { 24, -1, sizeof(::service_layer::SLBfdv6Res)},
  { 31, -1, sizeof(::service_layer::SLBfdv6MsgRsp)},
  { 38, -1, sizeof(::service_layer::SLBfdv6GetMsg)},
  { 47, -1, sizeof(::service_layer::SLBfdv6SessionCfgState)},
  { 55, -1, sizeof(::service_layer::SLBfdv6GetMsgRsp)},
  { 63, -1, sizeof(::service_layer::SLBfdv6SessionState)},
  { 70, -1, sizeof(::service_layer::SLBfdv6Notif)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdv6Key_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdv6SessionCfg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdv6Msg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdv6Res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdv6MsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdv6GetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdv6SessionCfgState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdv6GetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdv6SessionState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLBfdv6Notif_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sl_bfd_ipv6.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021sl_bfd_ipv6.proto\022\rservice_layer\032\025sl_c"
      "ommon_types.proto\032\023sl_bfd_common.proto\"\231"
      "\001\n\nSLBfdv6Key\022&\n\004Type\030\001 \001(\0162\030.service_la"
      "yer.SLBfdType\022\017\n\007VrfName\030\002 \001(\t\022\017\n\007NbrAdd"
      "r\030\003 \001(\014\022-\n\tInterface\030\004 \001(\0132\032.service_lay"
      "er.SLInterface\022\022\n\nSourceAddr\030\005 \001(\014\"m\n\021SL"
      "Bfdv6SessionCfg\022&\n\003Key\030\001 \001(\0132\031.service_l"
      "ayer.SLBfdv6Key\0220\n\006Config\030\002 \001(\0132 .servic"
      "e_layer.SLBfdConfigCommon\"i\n\nSLBfdv6Msg\022"
      "\'\n\004Oper\030\001 \001(\0162\031.service_layer.SLObjectOp"
      "\0222\n\010Sessions\030\002 \003(\0132 .service_layer.SLBfd"
      "v6SessionCfg\"e\n\nSLBfdv6Res\022/\n\tErrStatus\030"
      "\001 \001(\0132\034.service_layer.SLErrorStatus\022&\n\003K"
      "ey\030\002 \001(\0132\031.service_layer.SLBfdv6Key\"p\n\rS"
      "LBfdv6MsgRsp\0223\n\rStatusSummary\030\001 \001(\0132\034.se"
      "rvice_layer.SLErrorStatus\022*\n\007Results\030\002 \003"
      "(\0132\031.service_layer.SLBfdv6Res\"n\n\rSLBfdv6"
      "GetMsg\022&\n\003Key\030\001 \001(\0132\031.service_layer.SLBf"
      "dv6Key\022\016\n\006SeqNum\030\002 \001(\004\022\024\n\014EntriesCount\030\003"
      " \001(\r\022\017\n\007GetNext\030\004 \001(\010\"\242\001\n\026SLBfdv6Session"
      "CfgState\022&\n\003Key\030\001 \001(\0132\031.service_layer.SL"
      "Bfdv6Key\0220\n\006Config\030\002 \001(\0132 .service_layer"
      ".SLBfdConfigCommon\022.\n\005State\030\003 \001(\0132\037.serv"
      "ice_layer.SLBfdCommonState\"\210\001\n\020SLBfdv6Ge"
      "tMsgRsp\022\013\n\003Eof\030\001 \001(\010\022/\n\tErrStatus\030\002 \001(\0132"
      "\034.service_layer.SLErrorStatus\0226\n\007Entries"
      "\030\003 \003(\0132%.service_layer.SLBfdv6SessionCfg"
      "State\"m\n\023SLBfdv6SessionState\022&\n\003Key\030\001 \001("
      "\0132\031.service_layer.SLBfdv6Key\022.\n\005State\030\002 "
      "\001(\0132\037.service_layer.SLBfdCommonState\"\263\001\n"
      "\014SLBfdv6Notif\0220\n\tEventType\030\001 \001(\0162\035.servi"
      "ce_layer.SLBfdNotifType\0221\n\tErrStatus\030\002 \001"
      "(\0132\034.service_layer.SLErrorStatusH\000\0225\n\007Se"
      "ssion\030\003 \001(\0132\".service_layer.SLBfdv6Sessi"
      "onStateH\000B\007\n\005Event2\356\003\n\013SLBfdv6Oper\022I\n\014SL"
      "Bfdv6RegOp\022\032.service_layer.SLBfdRegMsg\032\035"
      ".service_layer.SLBfdRegMsgRsp\022G\n\nSLBfdv6"
      "Get\022\032.service_layer.SLBfdGetMsg\032\035.servic"
      "e_layer.SLBfdGetMsgRsp\022Q\n\017SLBfdv6GetStat"
      "s\022\032.service_layer.SLBfdGetMsg\032\".service_"
      "layer.SLBfdGetStatsMsgRsp\022W\n\025SLBfdv6GetN"
      "otifStream\022\037.service_layer.SLBfdGetNotif"
      "Msg\032\033.service_layer.SLBfdv6Notif0\001\022K\n\020SL"
      "Bfdv6SessionOp\022\031.service_layer.SLBfdv6Ms"
      "g\032\034.service_layer.SLBfdv6MsgRsp\022R\n\021SLBfd"
      "v6SessionGet\022\034.service_layer.SLBfdv6GetM"
      "sg\032\037.service_layer.SLBfdv6GetMsgRspb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1883);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_bfd_ipv6.proto", &protobuf_RegisterTypes);
  ::protobuf_sl_5fcommon_5ftypes_2eproto::AddDescriptors();
  ::protobuf_sl_5fbfd_5fcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sl_5fbfd_5fipv6_2eproto
namespace service_layer {

// ===================================================================

void SLBfdv6Key::InitAsDefaultInstance() {
  ::service_layer::_SLBfdv6Key_default_instance_._instance.get_mutable()->interface_ = const_cast< ::service_layer::SLInterface*>(
      ::service_layer::SLInterface::internal_default_instance());
}
void SLBfdv6Key::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdv6Key::kTypeFieldNumber;
const int SLBfdv6Key::kVrfNameFieldNumber;
const int SLBfdv6Key::kNbrAddrFieldNumber;
const int SLBfdv6Key::kInterfaceFieldNumber;
const int SLBfdv6Key::kSourceAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdv6Key::SLBfdv6Key()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Key();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdv6Key)
}
SLBfdv6Key::SLBfdv6Key(const SLBfdv6Key& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  nbraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nbraddr().size() > 0) {
    nbraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nbraddr_);
  }
  sourceaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sourceaddr().size() > 0) {
    sourceaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourceaddr_);
  }
  if (from.has_interface()) {
    interface_ = new ::service_layer::SLInterface(*from.interface_);
  } else {
    interface_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdv6Key)
}

void SLBfdv6Key::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nbraddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourceaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&interface_)) + sizeof(type_));
  _cached_size_ = 0;
}

SLBfdv6Key::~SLBfdv6Key() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdv6Key)
  SharedDtor();
}

void SLBfdv6Key::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nbraddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourceaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interface_;
}

void SLBfdv6Key::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdv6Key::descriptor() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdv6Key& SLBfdv6Key::default_instance() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Key();
  return *internal_default_instance();
}

SLBfdv6Key* SLBfdv6Key::New(::google::protobuf::Arena* arena) const {
  SLBfdv6Key* n = new SLBfdv6Key;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdv6Key::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdv6Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nbraddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sourceaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool SLBfdv6Key::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdv6Key)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLBfdType Type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::service_layer::SLBfdType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLBfdv6Key.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes NbrAddr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_nbraddr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLInterface Interface = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes SourceAddr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sourceaddr()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdv6Key)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdv6Key)
  return false;
#undef DO_
}

void SLBfdv6Key::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdv6Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdType Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLBfdv6Key.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vrfname(), output);
  }

  // bytes NbrAddr = 3;
  if (this->nbraddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->nbraddr(), output);
  }

  // .service_layer.SLInterface Interface = 4;
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->interface_, output);
  }

  // bytes SourceAddr = 5;
  if (this->sourceaddr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->sourceaddr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdv6Key)
}

::google::protobuf::uint8* SLBfdv6Key::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdv6Key)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdType Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLBfdv6Key.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vrfname(), target);
  }

  // bytes NbrAddr = 3;
  if (this->nbraddr().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->nbraddr(), target);
  }

  // .service_layer.SLInterface Interface = 4;
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->interface_, deterministic, target);
  }

  // bytes SourceAddr = 5;
  if (this->sourceaddr().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->sourceaddr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdv6Key)
  return target;
}

size_t SLBfdv6Key::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdv6Key)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // bytes NbrAddr = 3;
  if (this->nbraddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->nbraddr());
  }

  // bytes SourceAddr = 5;
  if (this->sourceaddr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sourceaddr());
  }

  // .service_layer.SLInterface Interface = 4;
  if (this->has_interface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  // .service_layer.SLBfdType Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdv6Key::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdv6Key)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdv6Key* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdv6Key>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdv6Key)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdv6Key)
    MergeFrom(*source);
  }
}

void SLBfdv6Key::MergeFrom(const SLBfdv6Key& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdv6Key)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.nbraddr().size() > 0) {

    nbraddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nbraddr_);
  }
  if (from.sourceaddr().size() > 0) {

    sourceaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sourceaddr_);
  }
  if (from.has_interface()) {
    mutable_interface()->::service_layer::SLInterface::MergeFrom(from.interface());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void SLBfdv6Key::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdv6Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdv6Key::CopyFrom(const SLBfdv6Key& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdv6Key)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdv6Key::IsInitialized() const {
  return true;
}

void SLBfdv6Key::Swap(SLBfdv6Key* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdv6Key::InternalSwap(SLBfdv6Key* other) {
  using std::swap;
  vrfname_.Swap(&other->vrfname_);
  nbraddr_.Swap(&other->nbraddr_);
  sourceaddr_.Swap(&other->sourceaddr_);
  swap(interface_, other->interface_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdv6Key::GetMetadata() const {
  protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdv6SessionCfg::InitAsDefaultInstance() {
  ::service_layer::_SLBfdv6SessionCfg_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLBfdv6Key*>(
      ::service_layer::SLBfdv6Key::internal_default_instance());
  ::service_layer::_SLBfdv6SessionCfg_default_instance_._instance.get_mutable()->config_ = const_cast< ::service_layer::SLBfdConfigCommon*>(
      ::service_layer::SLBfdConfigCommon::internal_default_instance());
}
void SLBfdv6SessionCfg::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdv6SessionCfg::kKeyFieldNumber;
const int SLBfdv6SessionCfg::kConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdv6SessionCfg::SLBfdv6SessionCfg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6SessionCfg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdv6SessionCfg)
}
SLBfdv6SessionCfg::SLBfdv6SessionCfg(const SLBfdv6SessionCfg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::service_layer::SLBfdv6Key(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::service_layer::SLBfdConfigCommon(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdv6SessionCfg)
}

void SLBfdv6SessionCfg::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&key_)) + sizeof(config_));
  _cached_size_ = 0;
}

SLBfdv6SessionCfg::~SLBfdv6SessionCfg() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdv6SessionCfg)
  SharedDtor();
}

void SLBfdv6SessionCfg::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete config_;
}

void SLBfdv6SessionCfg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdv6SessionCfg::descriptor() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdv6SessionCfg& SLBfdv6SessionCfg::default_instance() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6SessionCfg();
  return *internal_default_instance();
}

SLBfdv6SessionCfg* SLBfdv6SessionCfg::New(::google::protobuf::Arena* arena) const {
  SLBfdv6SessionCfg* n = new SLBfdv6SessionCfg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdv6SessionCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdv6SessionCfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool SLBfdv6SessionCfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdv6SessionCfg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLBfdv6Key Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLBfdConfigCommon Config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdv6SessionCfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdv6SessionCfg)
  return false;
#undef DO_
}

void SLBfdv6SessionCfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdv6SessionCfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // .service_layer.SLBfdConfigCommon Config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdv6SessionCfg)
}

::google::protobuf::uint8* SLBfdv6SessionCfg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdv6SessionCfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  // .service_layer.SLBfdConfigCommon Config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdv6SessionCfg)
  return target;
}

size_t SLBfdv6SessionCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdv6SessionCfg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  // .service_layer.SLBfdConfigCommon Config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdv6SessionCfg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdv6SessionCfg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdv6SessionCfg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdv6SessionCfg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdv6SessionCfg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdv6SessionCfg)
    MergeFrom(*source);
  }
}

void SLBfdv6SessionCfg::MergeFrom(const SLBfdv6SessionCfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdv6SessionCfg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::service_layer::SLBfdv6Key::MergeFrom(from.key());
  }
  if (from.has_config()) {
    mutable_config()->::service_layer::SLBfdConfigCommon::MergeFrom(from.config());
  }
}

void SLBfdv6SessionCfg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdv6SessionCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdv6SessionCfg::CopyFrom(const SLBfdv6SessionCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdv6SessionCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdv6SessionCfg::IsInitialized() const {
  return true;
}

void SLBfdv6SessionCfg::Swap(SLBfdv6SessionCfg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdv6SessionCfg::InternalSwap(SLBfdv6SessionCfg* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdv6SessionCfg::GetMetadata() const {
  protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdv6Msg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdv6Msg::kOperFieldNumber;
const int SLBfdv6Msg::kSessionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdv6Msg::SLBfdv6Msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Msg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdv6Msg)
}
SLBfdv6Msg::SLBfdv6Msg(const SLBfdv6Msg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sessions_(from.sessions_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdv6Msg)
}

void SLBfdv6Msg::SharedCtor() {
  oper_ = 0;
  _cached_size_ = 0;
}

SLBfdv6Msg::~SLBfdv6Msg() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdv6Msg)
  SharedDtor();
}

void SLBfdv6Msg::SharedDtor() {
}

void SLBfdv6Msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdv6Msg::descriptor() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdv6Msg& SLBfdv6Msg::default_instance() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Msg();
  return *internal_default_instance();
}

SLBfdv6Msg* SLBfdv6Msg::New(::google::protobuf::Arena* arena) const {
  SLBfdv6Msg* n = new SLBfdv6Msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdv6Msg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdv6Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sessions_.Clear();
  oper_ = 0;
  _internal_metadata_.Clear();
}

bool SLBfdv6Msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdv6Msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLObjectOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLObjectOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLBfdv6SessionCfg Sessions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_sessions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdv6Msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdv6Msg)
  return false;
#undef DO_
}

void SLBfdv6Msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdv6Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // repeated .service_layer.SLBfdv6SessionCfg Sessions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sessions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sessions(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdv6Msg)
}

::google::protobuf::uint8* SLBfdv6Msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdv6Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // repeated .service_layer.SLBfdv6SessionCfg Sessions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sessions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->sessions(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdv6Msg)
  return target;
}

size_t SLBfdv6Msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdv6Msg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLBfdv6SessionCfg Sessions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->sessions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sessions(static_cast<int>(i)));
    }
  }

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdv6Msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdv6Msg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdv6Msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdv6Msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdv6Msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdv6Msg)
    MergeFrom(*source);
  }
}

void SLBfdv6Msg::MergeFrom(const SLBfdv6Msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdv6Msg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sessions_.MergeFrom(from.sessions_);
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLBfdv6Msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdv6Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdv6Msg::CopyFrom(const SLBfdv6Msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdv6Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdv6Msg::IsInitialized() const {
  return true;
}

void SLBfdv6Msg::Swap(SLBfdv6Msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdv6Msg::InternalSwap(SLBfdv6Msg* other) {
  using std::swap;
  sessions_.InternalSwap(&other->sessions_);
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdv6Msg::GetMetadata() const {
  protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdv6Res::InitAsDefaultInstance() {
  ::service_layer::_SLBfdv6Res_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  ::service_layer::_SLBfdv6Res_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLBfdv6Key*>(
      ::service_layer::SLBfdv6Key::internal_default_instance());
}
void SLBfdv6Res::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdv6Res::kErrStatusFieldNumber;
const int SLBfdv6Res::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdv6Res::SLBfdv6Res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Res();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdv6Res)
}
SLBfdv6Res::SLBfdv6Res(const SLBfdv6Res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  if (from.has_key()) {
    key_ = new ::service_layer::SLBfdv6Key(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdv6Res)
}

void SLBfdv6Res::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(key_));
  _cached_size_ = 0;
}

SLBfdv6Res::~SLBfdv6Res() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdv6Res)
  SharedDtor();
}

void SLBfdv6Res::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
  if (this != internal_default_instance()) delete key_;
}

void SLBfdv6Res::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdv6Res::descriptor() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdv6Res& SLBfdv6Res::default_instance() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Res();
  return *internal_default_instance();
}

SLBfdv6Res* SLBfdv6Res::New(::google::protobuf::Arena* arena) const {
  SLBfdv6Res* n = new SLBfdv6Res;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdv6Res::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdv6Res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  _internal_metadata_.Clear();
}

bool SLBfdv6Res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdv6Res)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLBfdv6Key Key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdv6Res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdv6Res)
  return false;
#undef DO_
}

void SLBfdv6Res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdv6Res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // .service_layer.SLBfdv6Key Key = 2;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->key_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdv6Res)
}

::google::protobuf::uint8* SLBfdv6Res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdv6Res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // .service_layer.SLBfdv6Key Key = 2;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->key_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdv6Res)
  return target;
}

size_t SLBfdv6Res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdv6Res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // .service_layer.SLBfdv6Key Key = 2;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdv6Res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdv6Res)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdv6Res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdv6Res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdv6Res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdv6Res)
    MergeFrom(*source);
  }
}

void SLBfdv6Res::MergeFrom(const SLBfdv6Res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdv6Res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.has_key()) {
    mutable_key()->::service_layer::SLBfdv6Key::MergeFrom(from.key());
  }
}

void SLBfdv6Res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdv6Res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdv6Res::CopyFrom(const SLBfdv6Res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdv6Res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdv6Res::IsInitialized() const {
  return true;
}

void SLBfdv6Res::Swap(SLBfdv6Res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdv6Res::InternalSwap(SLBfdv6Res* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdv6Res::GetMetadata() const {
  protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdv6MsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLBfdv6MsgRsp_default_instance_._instance.get_mutable()->statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLBfdv6MsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdv6MsgRsp::kStatusSummaryFieldNumber;
const int SLBfdv6MsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdv6MsgRsp::SLBfdv6MsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6MsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdv6MsgRsp)
}
SLBfdv6MsgRsp::SLBfdv6MsgRsp(const SLBfdv6MsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statussummary()) {
    statussummary_ = new ::service_layer::SLErrorStatus(*from.statussummary_);
  } else {
    statussummary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdv6MsgRsp)
}

void SLBfdv6MsgRsp::SharedCtor() {
  statussummary_ = NULL;
  _cached_size_ = 0;
}

SLBfdv6MsgRsp::~SLBfdv6MsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdv6MsgRsp)
  SharedDtor();
}

void SLBfdv6MsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete statussummary_;
}

void SLBfdv6MsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdv6MsgRsp::descriptor() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdv6MsgRsp& SLBfdv6MsgRsp::default_instance() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6MsgRsp();
  return *internal_default_instance();
}

SLBfdv6MsgRsp* SLBfdv6MsgRsp::New(::google::protobuf::Arena* arena) const {
  SLBfdv6MsgRsp* n = new SLBfdv6MsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdv6MsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdv6MsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
  _internal_metadata_.Clear();
}

bool SLBfdv6MsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdv6MsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus StatusSummary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLBfdv6Res Results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdv6MsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdv6MsgRsp)
  return false;
#undef DO_
}

void SLBfdv6MsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdv6MsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->statussummary_, output);
  }

  // repeated .service_layer.SLBfdv6Res Results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdv6MsgRsp)
}

::google::protobuf::uint8* SLBfdv6MsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdv6MsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->statussummary_, deterministic, target);
  }

  // repeated .service_layer.SLBfdv6Res Results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdv6MsgRsp)
  return target;
}

size_t SLBfdv6MsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdv6MsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLBfdv6Res Results = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->statussummary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdv6MsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdv6MsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdv6MsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdv6MsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdv6MsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdv6MsgRsp)
    MergeFrom(*source);
  }
}

void SLBfdv6MsgRsp::MergeFrom(const SLBfdv6MsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdv6MsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
}

void SLBfdv6MsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdv6MsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdv6MsgRsp::CopyFrom(const SLBfdv6MsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdv6MsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdv6MsgRsp::IsInitialized() const {
  return true;
}

void SLBfdv6MsgRsp::Swap(SLBfdv6MsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdv6MsgRsp::InternalSwap(SLBfdv6MsgRsp* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  swap(statussummary_, other->statussummary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdv6MsgRsp::GetMetadata() const {
  protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdv6GetMsg::InitAsDefaultInstance() {
  ::service_layer::_SLBfdv6GetMsg_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLBfdv6Key*>(
      ::service_layer::SLBfdv6Key::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdv6GetMsg::kKeyFieldNumber;
const int SLBfdv6GetMsg::kSeqNumFieldNumber;
const int SLBfdv6GetMsg::kEntriesCountFieldNumber;
const int SLBfdv6GetMsg::kGetNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdv6GetMsg::SLBfdv6GetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6GetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdv6GetMsg)
}
SLBfdv6GetMsg::SLBfdv6GetMsg(const SLBfdv6GetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::service_layer::SLBfdv6Key(*from.key_);
  } else {
    key_ = NULL;
  }
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(getnext_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdv6GetMsg)
}

void SLBfdv6GetMsg::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&key_)) + sizeof(getnext_));
  _cached_size_ = 0;
}

SLBfdv6GetMsg::~SLBfdv6GetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdv6GetMsg)
  SharedDtor();
}

void SLBfdv6GetMsg::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void SLBfdv6GetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdv6GetMsg::descriptor() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdv6GetMsg& SLBfdv6GetMsg::default_instance() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6GetMsg();
  return *internal_default_instance();
}

SLBfdv6GetMsg* SLBfdv6GetMsg::New(::google::protobuf::Arena* arena) const {
  SLBfdv6GetMsg* n = new SLBfdv6GetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdv6GetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdv6GetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(getnext_));
  _internal_metadata_.Clear();
}

bool SLBfdv6GetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdv6GetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLBfdv6Key Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 SeqNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EntriesCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entriescount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool GetNext = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getnext_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdv6GetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdv6GetMsg)
  return false;
#undef DO_
}

void SLBfdv6GetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdv6GetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // uint64 SeqNum = 2;
  if (this->seqnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->seqnum(), output);
  }

  // uint32 EntriesCount = 3;
  if (this->entriescount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->entriescount(), output);
  }

  // bool GetNext = 4;
  if (this->getnext() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->getnext(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdv6GetMsg)
}

::google::protobuf::uint8* SLBfdv6GetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdv6GetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  // uint64 SeqNum = 2;
  if (this->seqnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->seqnum(), target);
  }

  // uint32 EntriesCount = 3;
  if (this->entriescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->entriescount(), target);
  }

  // bool GetNext = 4;
  if (this->getnext() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->getnext(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdv6GetMsg)
  return target;
}

size_t SLBfdv6GetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdv6GetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  // uint64 SeqNum = 2;
  if (this->seqnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seqnum());
  }

  // uint32 EntriesCount = 3;
  if (this->entriescount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entriescount());
  }

  // bool GetNext = 4;
  if (this->getnext() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdv6GetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdv6GetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdv6GetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdv6GetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdv6GetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdv6GetMsg)
    MergeFrom(*source);
  }
}

void SLBfdv6GetMsg::MergeFrom(const SLBfdv6GetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdv6GetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::service_layer::SLBfdv6Key::MergeFrom(from.key());
  }
  if (from.seqnum() != 0) {
    set_seqnum(from.seqnum());
  }
  if (from.entriescount() != 0) {
    set_entriescount(from.entriescount());
  }
  if (from.getnext() != 0) {
    set_getnext(from.getnext());
  }
}

void SLBfdv6GetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdv6GetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdv6GetMsg::CopyFrom(const SLBfdv6GetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdv6GetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdv6GetMsg::IsInitialized() const {
  return true;
}

void SLBfdv6GetMsg::Swap(SLBfdv6GetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdv6GetMsg::InternalSwap(SLBfdv6GetMsg* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(seqnum_, other->seqnum_);
  swap(entriescount_, other->entriescount_);
  swap(getnext_, other->getnext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdv6GetMsg::GetMetadata() const {
  protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdv6SessionCfgState::InitAsDefaultInstance() {
  ::service_layer::_SLBfdv6SessionCfgState_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLBfdv6Key*>(
      ::service_layer::SLBfdv6Key::internal_default_instance());
  ::service_layer::_SLBfdv6SessionCfgState_default_instance_._instance.get_mutable()->config_ = const_cast< ::service_layer::SLBfdConfigCommon*>(
      ::service_layer::SLBfdConfigCommon::internal_default_instance());
  ::service_layer::_SLBfdv6SessionCfgState_default_instance_._instance.get_mutable()->state_ = const_cast< ::service_layer::SLBfdCommonState*>(
      ::service_layer::SLBfdCommonState::internal_default_instance());
}
void SLBfdv6SessionCfgState::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
void SLBfdv6SessionCfgState::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdv6SessionCfgState::kKeyFieldNumber;
const int SLBfdv6SessionCfgState::kConfigFieldNumber;
const int SLBfdv6SessionCfgState::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdv6SessionCfgState::SLBfdv6SessionCfgState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6SessionCfgState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdv6SessionCfgState)
}
SLBfdv6SessionCfgState::SLBfdv6SessionCfgState(const SLBfdv6SessionCfgState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::service_layer::SLBfdv6Key(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::service_layer::SLBfdConfigCommon(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::service_layer::SLBfdCommonState(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdv6SessionCfgState)
}

void SLBfdv6SessionCfgState::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&key_)) + sizeof(state_));
  _cached_size_ = 0;
}

SLBfdv6SessionCfgState::~SLBfdv6SessionCfgState() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdv6SessionCfgState)
  SharedDtor();
}

void SLBfdv6SessionCfgState::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void SLBfdv6SessionCfgState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdv6SessionCfgState::descriptor() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdv6SessionCfgState& SLBfdv6SessionCfgState::default_instance() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6SessionCfgState();
  return *internal_default_instance();
}

SLBfdv6SessionCfgState* SLBfdv6SessionCfgState::New(::google::protobuf::Arena* arena) const {
  SLBfdv6SessionCfgState* n = new SLBfdv6SessionCfgState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdv6SessionCfgState::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdv6SessionCfgState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool SLBfdv6SessionCfgState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdv6SessionCfgState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLBfdv6Key Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLBfdConfigCommon Config = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLBfdCommonState State = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdv6SessionCfgState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdv6SessionCfgState)
  return false;
#undef DO_
}

void SLBfdv6SessionCfgState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdv6SessionCfgState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // .service_layer.SLBfdConfigCommon Config = 2;
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->config_, output);
  }

  // .service_layer.SLBfdCommonState State = 3;
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdv6SessionCfgState)
}

::google::protobuf::uint8* SLBfdv6SessionCfgState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdv6SessionCfgState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  // .service_layer.SLBfdConfigCommon Config = 2;
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->config_, deterministic, target);
  }

  // .service_layer.SLBfdCommonState State = 3;
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdv6SessionCfgState)
  return target;
}

size_t SLBfdv6SessionCfgState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdv6SessionCfgState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  // .service_layer.SLBfdConfigCommon Config = 2;
  if (this->has_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .service_layer.SLBfdCommonState State = 3;
  if (this->has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdv6SessionCfgState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdv6SessionCfgState)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdv6SessionCfgState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdv6SessionCfgState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdv6SessionCfgState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdv6SessionCfgState)
    MergeFrom(*source);
  }
}

void SLBfdv6SessionCfgState::MergeFrom(const SLBfdv6SessionCfgState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdv6SessionCfgState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::service_layer::SLBfdv6Key::MergeFrom(from.key());
  }
  if (from.has_config()) {
    mutable_config()->::service_layer::SLBfdConfigCommon::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::service_layer::SLBfdCommonState::MergeFrom(from.state());
  }
}

void SLBfdv6SessionCfgState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdv6SessionCfgState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdv6SessionCfgState::CopyFrom(const SLBfdv6SessionCfgState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdv6SessionCfgState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdv6SessionCfgState::IsInitialized() const {
  return true;
}

void SLBfdv6SessionCfgState::Swap(SLBfdv6SessionCfgState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdv6SessionCfgState::InternalSwap(SLBfdv6SessionCfgState* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdv6SessionCfgState::GetMetadata() const {
  protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdv6GetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLBfdv6GetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLBfdv6GetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdv6GetMsgRsp::kEofFieldNumber;
const int SLBfdv6GetMsgRsp::kErrStatusFieldNumber;
const int SLBfdv6GetMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdv6GetMsgRsp::SLBfdv6GetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6GetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdv6GetMsgRsp)
}
SLBfdv6GetMsgRsp::SLBfdv6GetMsgRsp(const SLBfdv6GetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  eof_ = from.eof_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdv6GetMsgRsp)
}

void SLBfdv6GetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(eof_));
  _cached_size_ = 0;
}

SLBfdv6GetMsgRsp::~SLBfdv6GetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdv6GetMsgRsp)
  SharedDtor();
}

void SLBfdv6GetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLBfdv6GetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdv6GetMsgRsp::descriptor() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdv6GetMsgRsp& SLBfdv6GetMsgRsp::default_instance() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6GetMsgRsp();
  return *internal_default_instance();
}

SLBfdv6GetMsgRsp* SLBfdv6GetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLBfdv6GetMsgRsp* n = new SLBfdv6GetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdv6GetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdv6GetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  eof_ = false;
  _internal_metadata_.Clear();
}

bool SLBfdv6GetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdv6GetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Eof = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLBfdv6SessionCfgState Entries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdv6GetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdv6GetMsgRsp)
  return false;
#undef DO_
}

void SLBfdv6GetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdv6GetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Eof = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->eof(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // repeated .service_layer.SLBfdv6SessionCfgState Entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdv6GetMsgRsp)
}

::google::protobuf::uint8* SLBfdv6GetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdv6GetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Eof = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->eof(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->errstatus_, deterministic, target);
  }

  // repeated .service_layer.SLBfdv6SessionCfgState Entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdv6GetMsgRsp)
  return target;
}

size_t SLBfdv6GetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdv6GetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLBfdv6SessionCfgState Entries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // bool Eof = 1;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdv6GetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdv6GetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdv6GetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdv6GetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdv6GetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdv6GetMsgRsp)
    MergeFrom(*source);
  }
}

void SLBfdv6GetMsgRsp::MergeFrom(const SLBfdv6GetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdv6GetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
}

void SLBfdv6GetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdv6GetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdv6GetMsgRsp::CopyFrom(const SLBfdv6GetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdv6GetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdv6GetMsgRsp::IsInitialized() const {
  return true;
}

void SLBfdv6GetMsgRsp::Swap(SLBfdv6GetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdv6GetMsgRsp::InternalSwap(SLBfdv6GetMsgRsp* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  swap(errstatus_, other->errstatus_);
  swap(eof_, other->eof_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdv6GetMsgRsp::GetMetadata() const {
  protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdv6SessionState::InitAsDefaultInstance() {
  ::service_layer::_SLBfdv6SessionState_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLBfdv6Key*>(
      ::service_layer::SLBfdv6Key::internal_default_instance());
  ::service_layer::_SLBfdv6SessionState_default_instance_._instance.get_mutable()->state_ = const_cast< ::service_layer::SLBfdCommonState*>(
      ::service_layer::SLBfdCommonState::internal_default_instance());
}
void SLBfdv6SessionState::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdv6SessionState::kKeyFieldNumber;
const int SLBfdv6SessionState::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdv6SessionState::SLBfdv6SessionState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6SessionState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdv6SessionState)
}
SLBfdv6SessionState::SLBfdv6SessionState(const SLBfdv6SessionState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::service_layer::SLBfdv6Key(*from.key_);
  } else {
    key_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::service_layer::SLBfdCommonState(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdv6SessionState)
}

void SLBfdv6SessionState::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&key_)) + sizeof(state_));
  _cached_size_ = 0;
}

SLBfdv6SessionState::~SLBfdv6SessionState() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdv6SessionState)
  SharedDtor();
}

void SLBfdv6SessionState::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete state_;
}

void SLBfdv6SessionState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdv6SessionState::descriptor() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdv6SessionState& SLBfdv6SessionState::default_instance() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6SessionState();
  return *internal_default_instance();
}

SLBfdv6SessionState* SLBfdv6SessionState::New(::google::protobuf::Arena* arena) const {
  SLBfdv6SessionState* n = new SLBfdv6SessionState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdv6SessionState::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdv6SessionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool SLBfdv6SessionState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdv6SessionState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLBfdv6Key Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLBfdCommonState State = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdv6SessionState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdv6SessionState)
  return false;
#undef DO_
}

void SLBfdv6SessionState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdv6SessionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // .service_layer.SLBfdCommonState State = 2;
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdv6SessionState)
}

::google::protobuf::uint8* SLBfdv6SessionState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdv6SessionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  // .service_layer.SLBfdCommonState State = 2;
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdv6SessionState)
  return target;
}

size_t SLBfdv6SessionState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdv6SessionState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLBfdv6Key Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  // .service_layer.SLBfdCommonState State = 2;
  if (this->has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdv6SessionState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdv6SessionState)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdv6SessionState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdv6SessionState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdv6SessionState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdv6SessionState)
    MergeFrom(*source);
  }
}

void SLBfdv6SessionState::MergeFrom(const SLBfdv6SessionState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdv6SessionState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::service_layer::SLBfdv6Key::MergeFrom(from.key());
  }
  if (from.has_state()) {
    mutable_state()->::service_layer::SLBfdCommonState::MergeFrom(from.state());
  }
}

void SLBfdv6SessionState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdv6SessionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdv6SessionState::CopyFrom(const SLBfdv6SessionState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdv6SessionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdv6SessionState::IsInitialized() const {
  return true;
}

void SLBfdv6SessionState::Swap(SLBfdv6SessionState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdv6SessionState::InternalSwap(SLBfdv6SessionState* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdv6SessionState::GetMetadata() const {
  protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLBfdv6Notif::InitAsDefaultInstance() {
  ::service_layer::_SLBfdv6Notif_default_instance_.errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  ::service_layer::_SLBfdv6Notif_default_instance_.session_ = const_cast< ::service_layer::SLBfdv6SessionState*>(
      ::service_layer::SLBfdv6SessionState::internal_default_instance());
}
void SLBfdv6Notif::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (errstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    set_has_errstatus();
    Event_.errstatus_ = errstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLBfdv6Notif.ErrStatus)
}
void SLBfdv6Notif::clear_errstatus() {
  if (has_errstatus()) {
    delete Event_.errstatus_;
    clear_has_Event();
  }
}
void SLBfdv6Notif::set_allocated_session(::service_layer::SLBfdv6SessionState* session) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (session) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      session = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session, submessage_arena);
    }
    set_has_session();
    Event_.session_ = session;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLBfdv6Notif.Session)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLBfdv6Notif::kEventTypeFieldNumber;
const int SLBfdv6Notif::kErrStatusFieldNumber;
const int SLBfdv6Notif::kSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLBfdv6Notif::SLBfdv6Notif()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Notif();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLBfdv6Notif)
}
SLBfdv6Notif::SLBfdv6Notif(const SLBfdv6Notif& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eventtype_ = from.eventtype_;
  clear_has_Event();
  switch (from.Event_case()) {
    case kErrStatus: {
      mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
      break;
    }
    case kSession: {
      mutable_session()->::service_layer::SLBfdv6SessionState::MergeFrom(from.session());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLBfdv6Notif)
}

void SLBfdv6Notif::SharedCtor() {
  eventtype_ = 0;
  clear_has_Event();
  _cached_size_ = 0;
}

SLBfdv6Notif::~SLBfdv6Notif() {
  // @@protoc_insertion_point(destructor:service_layer.SLBfdv6Notif)
  SharedDtor();
}

void SLBfdv6Notif::SharedDtor() {
  if (has_Event()) {
    clear_Event();
  }
}

void SLBfdv6Notif::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLBfdv6Notif::descriptor() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLBfdv6Notif& SLBfdv6Notif::default_instance() {
  ::protobuf_sl_5fbfd_5fipv6_2eproto::InitDefaultsSLBfdv6Notif();
  return *internal_default_instance();
}

SLBfdv6Notif* SLBfdv6Notif::New(::google::protobuf::Arena* arena) const {
  SLBfdv6Notif* n = new SLBfdv6Notif;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLBfdv6Notif::clear_Event() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLBfdv6Notif)
  switch (Event_case()) {
    case kErrStatus: {
      delete Event_.errstatus_;
      break;
    }
    case kSession: {
      delete Event_.session_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void SLBfdv6Notif::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLBfdv6Notif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eventtype_ = 0;
  clear_Event();
  _internal_metadata_.Clear();
}

bool SLBfdv6Notif::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLBfdv6Notif)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLBfdNotifType EventType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_eventtype(static_cast< ::service_layer::SLBfdNotifType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLBfdv6SessionState Session = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_session()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLBfdv6Notif)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLBfdv6Notif)
  return false;
#undef DO_
}

void SLBfdv6Notif::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLBfdv6Notif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdNotifType EventType = 1;
  if (this->eventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eventtype(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *Event_.errstatus_, output);
  }

  // .service_layer.SLBfdv6SessionState Session = 3;
  if (has_session()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *Event_.session_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLBfdv6Notif)
}

::google::protobuf::uint8* SLBfdv6Notif::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLBfdv6Notif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLBfdNotifType EventType = 1;
  if (this->eventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eventtype(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *Event_.errstatus_, deterministic, target);
  }

  // .service_layer.SLBfdv6SessionState Session = 3;
  if (has_session()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *Event_.session_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLBfdv6Notif)
  return target;
}

size_t SLBfdv6Notif::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLBfdv6Notif)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLBfdNotifType EventType = 1;
  if (this->eventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->eventtype());
  }

  switch (Event_case()) {
    // .service_layer.SLErrorStatus ErrStatus = 2;
    case kErrStatus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.errstatus_);
      break;
    }
    // .service_layer.SLBfdv6SessionState Session = 3;
    case kSession: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.session_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLBfdv6Notif::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLBfdv6Notif)
  GOOGLE_DCHECK_NE(&from, this);
  const SLBfdv6Notif* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLBfdv6Notif>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLBfdv6Notif)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLBfdv6Notif)
    MergeFrom(*source);
  }
}

void SLBfdv6Notif::MergeFrom(const SLBfdv6Notif& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLBfdv6Notif)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eventtype() != 0) {
    set_eventtype(from.eventtype());
  }
  switch (from.Event_case()) {
    case kErrStatus: {
      mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
      break;
    }
    case kSession: {
      mutable_session()->::service_layer::SLBfdv6SessionState::MergeFrom(from.session());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void SLBfdv6Notif::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLBfdv6Notif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLBfdv6Notif::CopyFrom(const SLBfdv6Notif& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLBfdv6Notif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLBfdv6Notif::IsInitialized() const {
  return true;
}

void SLBfdv6Notif::Swap(SLBfdv6Notif* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLBfdv6Notif::InternalSwap(SLBfdv6Notif* other) {
  using std::swap;
  swap(eventtype_, other->eventtype_);
  swap(Event_, other->Event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLBfdv6Notif::GetMetadata() const {
  protobuf_sl_5fbfd_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fbfd_5fipv6_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
