// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_interface.proto

#include "sl_interface.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace service_layer {
class SLInterfaceGlobalsRegMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceGlobalsRegMsg>
      _instance;
} _SLInterfaceGlobalsRegMsg_default_instance_;
class SLInterfaceGlobalsRegMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceGlobalsRegMsgRsp>
      _instance;
} _SLInterfaceGlobalsRegMsgRsp_default_instance_;
class SLInterfaceGlobalsGetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceGlobalsGetMsg>
      _instance;
} _SLInterfaceGlobalsGetMsg_default_instance_;
class SLInterfaceGlobalsGetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceGlobalsGetMsgRsp>
      _instance;
} _SLInterfaceGlobalsGetMsgRsp_default_instance_;
class SLInterfaceGlobalsGetStatsMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceGlobalsGetStatsMsgRsp>
      _instance;
} _SLInterfaceGlobalsGetStatsMsgRsp_default_instance_;
class SLInterfaceGetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceGetMsg>
      _instance;
} _SLInterfaceGetMsg_default_instance_;
class SLInterfaceInfoMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceInfoMsg>
      _instance;
} _SLInterfaceInfoMsg_default_instance_;
class SLInterfaceGetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceGetMsgRsp>
      _instance;
} _SLInterfaceGetMsgRsp_default_instance_;
class SLInterfaceGetNotifMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceGetNotifMsg>
      _instance;
} _SLInterfaceGetNotifMsg_default_instance_;
class SLInterfaceNotifDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceNotif>
      _instance;
  const ::service_layer::SLErrorStatus* errstatus_;
  const ::service_layer::SLInterfaceInfoMsg* info_;
} _SLInterfaceNotif_default_instance_;
class SLInterfaceNotifMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceNotifMsg>
      _instance;
} _SLInterfaceNotifMsg_default_instance_;
class SLInterfaceNotifMsgResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceNotifMsgRes>
      _instance;
} _SLInterfaceNotifMsgRes_default_instance_;
class SLInterfaceNotifMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLInterfaceNotifMsgRsp>
      _instance;
} _SLInterfaceNotifMsgRsp_default_instance_;
}  // namespace service_layer
namespace protobuf_sl_5finterface_2eproto {
void InitDefaultsSLInterfaceGlobalsRegMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLInterfaceGlobalsRegMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGlobalsRegMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGlobalsRegMsg::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceGlobalsRegMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceGlobalsRegMsgImpl);
}

void InitDefaultsSLInterfaceGlobalsRegMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLInterfaceGlobalsRegMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGlobalsRegMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGlobalsRegMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceGlobalsRegMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceGlobalsRegMsgRspImpl);
}

void InitDefaultsSLInterfaceGlobalsGetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLInterfaceGlobalsGetMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGlobalsGetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGlobalsGetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceGlobalsGetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceGlobalsGetMsgImpl);
}

void InitDefaultsSLInterfaceGlobalsGetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLInterfaceGlobalsGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGlobalsGetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGlobalsGetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceGlobalsGetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceGlobalsGetMsgRspImpl);
}

void InitDefaultsSLInterfaceGlobalsGetStatsMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLInterfaceGlobalsGetStatsMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGlobalsGetStatsMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGlobalsGetStatsMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceGlobalsGetStatsMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceGlobalsGetStatsMsgRspImpl);
}

void InitDefaultsSLInterfaceGetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLInterface();
  {
    void* ptr = &::service_layer::_SLInterfaceGetMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceGetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceGetMsgImpl);
}

void InitDefaultsSLInterfaceInfoMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLInterface();
  {
    void* ptr = &::service_layer::_SLInterfaceInfoMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceInfoMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceInfoMsg::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceInfoMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceInfoMsgImpl);
}

void InitDefaultsSLInterfaceGetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceInfoMsg();
  {
    void* ptr = &::service_layer::_SLInterfaceGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceGetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceGetMsgRspImpl);
}

void InitDefaultsSLInterfaceGetNotifMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLInterfaceGetNotifMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGetNotifMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGetNotifMsg::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceGetNotifMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceGetNotifMsgImpl);
}

void InitDefaultsSLInterfaceNotifImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceInfoMsg();
  {
    void* ptr = &::service_layer::_SLInterfaceNotif_default_instance_;
    new (ptr) ::service_layer::SLInterfaceNotif();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceNotif::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceNotif() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceNotifImpl);
}

void InitDefaultsSLInterfaceNotifMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLInterface();
  {
    void* ptr = &::service_layer::_SLInterfaceNotifMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceNotifMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceNotifMsg::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceNotifMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceNotifMsgImpl);
}

void InitDefaultsSLInterfaceNotifMsgResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLInterface();
  {
    void* ptr = &::service_layer::_SLInterfaceNotifMsgRes_default_instance_;
    new (ptr) ::service_layer::SLInterfaceNotifMsgRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceNotifMsgRes::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceNotifMsgRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceNotifMsgResImpl);
}

void InitDefaultsSLInterfaceNotifMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceNotifMsgRes();
  {
    void* ptr = &::service_layer::_SLInterfaceNotifMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLInterfaceNotifMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceNotifMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLInterfaceNotifMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLInterfaceNotifMsgRspImpl);
}

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsRegMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsRegMsg, oper_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsRegMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsRegMsgRsp, errstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetMsgRsp, maxinterfacesperbatch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetStatsMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetStatsMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetStatsMsgRsp, seqnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetStatsMsgRsp, interfacenotifcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGetMsg, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGetMsg, entriescount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGetMsg, getnext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceInfoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceInfoMsg, slifinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceInfoMsg, ifstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceInfoMsg, seqnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGetMsgRsp, eof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGetMsgRsp, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceGetNotifMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotif, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotif, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotif, eventtype_),
  offsetof(::service_layer::SLInterfaceNotifDefaultTypeInternal, errstatus_),
  offsetof(::service_layer::SLInterfaceNotifDefaultTypeInternal, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotif, Event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsg, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRes, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRes, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRsp, statussummary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRsp, results_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::service_layer::SLInterfaceGlobalsRegMsg)},
  { 6, -1, sizeof(::service_layer::SLInterfaceGlobalsRegMsgRsp)},
  { 12, -1, sizeof(::service_layer::SLInterfaceGlobalsGetMsg)},
  { 17, -1, sizeof(::service_layer::SLInterfaceGlobalsGetMsgRsp)},
  { 24, -1, sizeof(::service_layer::SLInterfaceGlobalsGetStatsMsgRsp)},
  { 32, -1, sizeof(::service_layer::SLInterfaceGetMsg)},
  { 40, -1, sizeof(::service_layer::SLInterfaceInfoMsg)},
  { 48, -1, sizeof(::service_layer::SLInterfaceGetMsgRsp)},
  { 56, -1, sizeof(::service_layer::SLInterfaceGetNotifMsg)},
  { 61, -1, sizeof(::service_layer::SLInterfaceNotif)},
  { 70, -1, sizeof(::service_layer::SLInterfaceNotifMsg)},
  { 77, -1, sizeof(::service_layer::SLInterfaceNotifMsgRes)},
  { 84, -1, sizeof(::service_layer::SLInterfaceNotifMsgRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceGlobalsRegMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceGlobalsRegMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceGlobalsGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceGlobalsGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceGlobalsGetStatsMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceInfoMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceGetNotifMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceNotif_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceNotifMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceNotifMsgRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLInterfaceNotifMsgRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sl_interface.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022sl_interface.proto\022\rservice_layer\032\025sl_"
      "common_types.proto\"@\n\030SLInterfaceGlobals"
      "RegMsg\022$\n\004Oper\030\001 \001(\0162\026.service_layer.SLR"
      "egOp\"N\n\033SLInterfaceGlobalsRegMsgRsp\022/\n\tE"
      "rrStatus\030\001 \001(\0132\034.service_layer.SLErrorSt"
      "atus\"\032\n\030SLInterfaceGlobalsGetMsg\"m\n\033SLIn"
      "terfaceGlobalsGetMsgRsp\022/\n\tErrStatus\030\001 \001"
      "(\0132\034.service_layer.SLErrorStatus\022\035\n\025MaxI"
      "nterfacesPerBatch\030\002 \001(\r\"\200\001\n SLInterfaceG"
      "lobalsGetStatsMsgRsp\022/\n\tErrStatus\030\001 \001(\0132"
      "\034.service_layer.SLErrorStatus\022\016\n\006SeqNum\030"
      "\002 \001(\004\022\033\n\023InterfaceNotifCount\030\003 \001(\r\"c\n\021SL"
      "InterfaceGetMsg\022\'\n\003Key\030\001 \001(\0132\032.service_l"
      "ayer.SLInterface\022\024\n\014EntriesCount\030\002 \001(\r\022\017"
      "\n\007GetNext\030\003 \001(\010\"\204\001\n\022SLInterfaceInfoMsg\022,"
      "\n\010SLIfInfo\030\001 \001(\0132\032.service_layer.SLInter"
      "face\0220\n\007IfState\030\002 \001(\0162\037.service_layer.SL"
      "InterfaceState\022\016\n\006SeqNum\030\003 \001(\004\"\210\001\n\024SLInt"
      "erfaceGetMsgRsp\022\013\n\003Eof\030\001 \001(\010\022/\n\tErrStatu"
      "s\030\002 \001(\0132\034.service_layer.SLErrorStatus\0222\n"
      "\007Entries\030\003 \003(\0132!.service_layer.SLInterfa"
      "ceInfoMsg\"\030\n\026SLInterfaceGetNotifMsg\"\271\001\n\020"
      "SLInterfaceNotif\0226\n\tEventType\030\001 \001(\0162#.se"
      "rvice_layer.SLInterfaceNotifType\0221\n\tErrS"
      "tatus\030\002 \001(\0132\034.service_layer.SLErrorStatu"
      "sH\000\0221\n\004Info\030\003 \001(\0132!.service_layer.SLInte"
      "rfaceInfoMsgH\000B\007\n\005Event\"j\n\023SLInterfaceNo"
      "tifMsg\022&\n\004Oper\030\001 \001(\0162\030.service_layer.SLN"
      "otifOp\022+\n\007Entries\030\002 \003(\0132\032.service_layer."
      "SLInterface\"r\n\026SLInterfaceNotifMsgRes\022/\n"
      "\tErrStatus\030\001 \001(\0132\034.service_layer.SLError"
      "Status\022\'\n\003Key\030\002 \001(\0132\032.service_layer.SLIn"
      "terface\"\205\001\n\026SLInterfaceNotifMsgRsp\0223\n\rSt"
      "atusSummary\030\001 \001(\0132\034.service_layer.SLErro"
      "rStatus\0226\n\007Results\030\002 \003(\0132%.service_layer"
      ".SLInterfaceNotifMsgRes*U\n\020SLInterfaceSt"
      "ate\022\027\n\023SL_IF_STATE_UNKNOWN\020\000\022\024\n\020SL_IF_ST"
      "ATE_DOWN\020\001\022\022\n\016SL_IF_STATE_UP\020\002*\213\001\n\024SLInt"
      "erfaceNotifType\022$\n SL_INTERFACE_EVENT_TY"
      "PE_RESERVED\020\000\022!\n\035SL_INTERFACE_EVENT_TYPE"
      "_ERROR\020\001\022*\n&SL_INTERFACE_EVENT_TYPE_INTE"
      "RFACE_INFO\020\0022\210\005\n\017SLInterfaceOper\022n\n\027SLIn"
      "terfaceGlobalsRegOp\022\'.service_layer.SLIn"
      "terfaceGlobalsRegMsg\032*.service_layer.SLI"
      "nterfaceGlobalsRegMsgRsp\022l\n\025SLInterfaceG"
      "lobalsGet\022\'.service_layer.SLInterfaceGlo"
      "balsGetMsg\032*.service_layer.SLInterfaceGl"
      "obalsGetMsgRsp\022v\n\032SLInterfaceGlobalsGetS"
      "tats\022\'.service_layer.SLInterfaceGlobalsG"
      "etMsg\032/.service_layer.SLInterfaceGlobals"
      "GetStatsMsgRsp\022W\n\016SLInterfaceGet\022 .servi"
      "ce_layer.SLInterfaceGetMsg\032#.service_lay"
      "er.SLInterfaceGetMsgRsp\022e\n\031SLInterfaceGe"
      "tNotifStream\022%.service_layer.SLInterface"
      "GetNotifMsg\032\037.service_layer.SLInterfaceN"
      "otif0\001\022_\n\022SLInterfaceNotifOp\022\".service_l"
      "ayer.SLInterfaceNotifMsg\032%.service_layer"
      ".SLInterfaceNotifMsgRspb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2311);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_interface.proto", &protobuf_RegisterTypes);
  ::protobuf_sl_5fcommon_5ftypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sl_5finterface_2eproto
namespace service_layer {
const ::google::protobuf::EnumDescriptor* SLInterfaceState_descriptor() {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5finterface_2eproto::file_level_enum_descriptors[0];
}
bool SLInterfaceState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SLInterfaceNotifType_descriptor() {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5finterface_2eproto::file_level_enum_descriptors[1];
}
bool SLInterfaceNotifType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SLInterfaceGlobalsRegMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInterfaceGlobalsRegMsg::kOperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceGlobalsRegMsg::SLInterfaceGlobalsRegMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGlobalsRegMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceGlobalsRegMsg)
}
SLInterfaceGlobalsRegMsg::SLInterfaceGlobalsRegMsg(const SLInterfaceGlobalsRegMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGlobalsRegMsg)
}

void SLInterfaceGlobalsRegMsg::SharedCtor() {
  oper_ = 0;
  _cached_size_ = 0;
}

SLInterfaceGlobalsRegMsg::~SLInterfaceGlobalsRegMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGlobalsRegMsg)
  SharedDtor();
}

void SLInterfaceGlobalsRegMsg::SharedDtor() {
}

void SLInterfaceGlobalsRegMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceGlobalsRegMsg::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceGlobalsRegMsg& SLInterfaceGlobalsRegMsg::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGlobalsRegMsg();
  return *internal_default_instance();
}

SLInterfaceGlobalsRegMsg* SLInterfaceGlobalsRegMsg::New(::google::protobuf::Arena* arena) const {
  SLInterfaceGlobalsRegMsg* n = new SLInterfaceGlobalsRegMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceGlobalsRegMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGlobalsRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oper_ = 0;
  _internal_metadata_.Clear();
}

bool SLInterfaceGlobalsRegMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceGlobalsRegMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLRegOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLRegOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceGlobalsRegMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceGlobalsRegMsg)
  return false;
#undef DO_
}

void SLInterfaceGlobalsRegMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceGlobalsRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceGlobalsRegMsg)
}

::google::protobuf::uint8* SLInterfaceGlobalsRegMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGlobalsRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGlobalsRegMsg)
  return target;
}

size_t SLInterfaceGlobalsRegMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGlobalsRegMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceGlobalsRegMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGlobalsRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGlobalsRegMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceGlobalsRegMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGlobalsRegMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGlobalsRegMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceGlobalsRegMsg::MergeFrom(const SLInterfaceGlobalsRegMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGlobalsRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLInterfaceGlobalsRegMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGlobalsRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGlobalsRegMsg::CopyFrom(const SLInterfaceGlobalsRegMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGlobalsRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGlobalsRegMsg::IsInitialized() const {
  return true;
}

void SLInterfaceGlobalsRegMsg::Swap(SLInterfaceGlobalsRegMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceGlobalsRegMsg::InternalSwap(SLInterfaceGlobalsRegMsg* other) {
  using std::swap;
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceGlobalsRegMsg::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceGlobalsRegMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceGlobalsRegMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLInterfaceGlobalsRegMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInterfaceGlobalsRegMsgRsp::kErrStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceGlobalsRegMsgRsp::SLInterfaceGlobalsRegMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGlobalsRegMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceGlobalsRegMsgRsp)
}
SLInterfaceGlobalsRegMsgRsp::SLInterfaceGlobalsRegMsgRsp(const SLInterfaceGlobalsRegMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGlobalsRegMsgRsp)
}

void SLInterfaceGlobalsRegMsgRsp::SharedCtor() {
  errstatus_ = NULL;
  _cached_size_ = 0;
}

SLInterfaceGlobalsRegMsgRsp::~SLInterfaceGlobalsRegMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGlobalsRegMsgRsp)
  SharedDtor();
}

void SLInterfaceGlobalsRegMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLInterfaceGlobalsRegMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceGlobalsRegMsgRsp::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceGlobalsRegMsgRsp& SLInterfaceGlobalsRegMsgRsp::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGlobalsRegMsgRsp();
  return *internal_default_instance();
}

SLInterfaceGlobalsRegMsgRsp* SLInterfaceGlobalsRegMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLInterfaceGlobalsRegMsgRsp* n = new SLInterfaceGlobalsRegMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceGlobalsRegMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  _internal_metadata_.Clear();
}

bool SLInterfaceGlobalsRegMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceGlobalsRegMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceGlobalsRegMsgRsp)
  return false;
#undef DO_
}

void SLInterfaceGlobalsRegMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceGlobalsRegMsgRsp)
}

::google::protobuf::uint8* SLInterfaceGlobalsRegMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGlobalsRegMsgRsp)
  return target;
}

size_t SLInterfaceGlobalsRegMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceGlobalsRegMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGlobalsRegMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceGlobalsRegMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGlobalsRegMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGlobalsRegMsgRsp)
    MergeFrom(*source);
  }
}

void SLInterfaceGlobalsRegMsgRsp::MergeFrom(const SLInterfaceGlobalsRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
}

void SLInterfaceGlobalsRegMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGlobalsRegMsgRsp::CopyFrom(const SLInterfaceGlobalsRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGlobalsRegMsgRsp::IsInitialized() const {
  return true;
}

void SLInterfaceGlobalsRegMsgRsp::Swap(SLInterfaceGlobalsRegMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceGlobalsRegMsgRsp::InternalSwap(SLInterfaceGlobalsRegMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceGlobalsRegMsgRsp::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceGlobalsGetMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceGlobalsGetMsg::SLInterfaceGlobalsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGlobalsGetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceGlobalsGetMsg)
}
SLInterfaceGlobalsGetMsg::SLInterfaceGlobalsGetMsg(const SLInterfaceGlobalsGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGlobalsGetMsg)
}

void SLInterfaceGlobalsGetMsg::SharedCtor() {
  _cached_size_ = 0;
}

SLInterfaceGlobalsGetMsg::~SLInterfaceGlobalsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGlobalsGetMsg)
  SharedDtor();
}

void SLInterfaceGlobalsGetMsg::SharedDtor() {
}

void SLInterfaceGlobalsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceGlobalsGetMsg::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceGlobalsGetMsg& SLInterfaceGlobalsGetMsg::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGlobalsGetMsg();
  return *internal_default_instance();
}

SLInterfaceGlobalsGetMsg* SLInterfaceGlobalsGetMsg::New(::google::protobuf::Arena* arena) const {
  SLInterfaceGlobalsGetMsg* n = new SLInterfaceGlobalsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceGlobalsGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGlobalsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SLInterfaceGlobalsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceGlobalsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceGlobalsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceGlobalsGetMsg)
  return false;
#undef DO_
}

void SLInterfaceGlobalsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceGlobalsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceGlobalsGetMsg)
}

::google::protobuf::uint8* SLInterfaceGlobalsGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGlobalsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGlobalsGetMsg)
  return target;
}

size_t SLInterfaceGlobalsGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGlobalsGetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceGlobalsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGlobalsGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceGlobalsGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGlobalsGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGlobalsGetMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceGlobalsGetMsg::MergeFrom(const SLInterfaceGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SLInterfaceGlobalsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGlobalsGetMsg::CopyFrom(const SLInterfaceGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGlobalsGetMsg::IsInitialized() const {
  return true;
}

void SLInterfaceGlobalsGetMsg::Swap(SLInterfaceGlobalsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceGlobalsGetMsg::InternalSwap(SLInterfaceGlobalsGetMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceGlobalsGetMsg::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceGlobalsGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceGlobalsGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLInterfaceGlobalsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInterfaceGlobalsGetMsgRsp::kErrStatusFieldNumber;
const int SLInterfaceGlobalsGetMsgRsp::kMaxInterfacesPerBatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceGlobalsGetMsgRsp::SLInterfaceGlobalsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGlobalsGetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceGlobalsGetMsgRsp)
}
SLInterfaceGlobalsGetMsgRsp::SLInterfaceGlobalsGetMsgRsp(const SLInterfaceGlobalsGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  maxinterfacesperbatch_ = from.maxinterfacesperbatch_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGlobalsGetMsgRsp)
}

void SLInterfaceGlobalsGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxinterfacesperbatch_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(maxinterfacesperbatch_));
  _cached_size_ = 0;
}

SLInterfaceGlobalsGetMsgRsp::~SLInterfaceGlobalsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGlobalsGetMsgRsp)
  SharedDtor();
}

void SLInterfaceGlobalsGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLInterfaceGlobalsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceGlobalsGetMsgRsp::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceGlobalsGetMsgRsp& SLInterfaceGlobalsGetMsgRsp::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGlobalsGetMsgRsp();
  return *internal_default_instance();
}

SLInterfaceGlobalsGetMsgRsp* SLInterfaceGlobalsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLInterfaceGlobalsGetMsgRsp* n = new SLInterfaceGlobalsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceGlobalsGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  maxinterfacesperbatch_ = 0u;
  _internal_metadata_.Clear();
}

bool SLInterfaceGlobalsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxInterfacesPerBatch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxinterfacesperbatch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceGlobalsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceGlobalsGetMsgRsp)
  return false;
#undef DO_
}

void SLInterfaceGlobalsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint32 MaxInterfacesPerBatch = 2;
  if (this->maxinterfacesperbatch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxinterfacesperbatch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceGlobalsGetMsgRsp)
}

::google::protobuf::uint8* SLInterfaceGlobalsGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // uint32 MaxInterfacesPerBatch = 2;
  if (this->maxinterfacesperbatch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxinterfacesperbatch(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGlobalsGetMsgRsp)
  return target;
}

size_t SLInterfaceGlobalsGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint32 MaxInterfacesPerBatch = 2;
  if (this->maxinterfacesperbatch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxinterfacesperbatch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceGlobalsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGlobalsGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceGlobalsGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGlobalsGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGlobalsGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLInterfaceGlobalsGetMsgRsp::MergeFrom(const SLInterfaceGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.maxinterfacesperbatch() != 0) {
    set_maxinterfacesperbatch(from.maxinterfacesperbatch());
  }
}

void SLInterfaceGlobalsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGlobalsGetMsgRsp::CopyFrom(const SLInterfaceGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGlobalsGetMsgRsp::IsInitialized() const {
  return true;
}

void SLInterfaceGlobalsGetMsgRsp::Swap(SLInterfaceGlobalsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceGlobalsGetMsgRsp::InternalSwap(SLInterfaceGlobalsGetMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(maxinterfacesperbatch_, other->maxinterfacesperbatch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceGlobalsGetMsgRsp::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceGlobalsGetStatsMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceGlobalsGetStatsMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLInterfaceGlobalsGetStatsMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInterfaceGlobalsGetStatsMsgRsp::kErrStatusFieldNumber;
const int SLInterfaceGlobalsGetStatsMsgRsp::kSeqNumFieldNumber;
const int SLInterfaceGlobalsGetStatsMsgRsp::kInterfaceNotifCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceGlobalsGetStatsMsgRsp::SLInterfaceGlobalsGetStatsMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGlobalsGetStatsMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
}
SLInterfaceGlobalsGetStatsMsgRsp::SLInterfaceGlobalsGetStatsMsgRsp(const SLInterfaceGlobalsGetStatsMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&interfacenotifcount_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(interfacenotifcount_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
}

void SLInterfaceGlobalsGetStatsMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interfacenotifcount_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(interfacenotifcount_));
  _cached_size_ = 0;
}

SLInterfaceGlobalsGetStatsMsgRsp::~SLInterfaceGlobalsGetStatsMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  SharedDtor();
}

void SLInterfaceGlobalsGetStatsMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLInterfaceGlobalsGetStatsMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceGlobalsGetStatsMsgRsp::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceGlobalsGetStatsMsgRsp& SLInterfaceGlobalsGetStatsMsgRsp::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGlobalsGetStatsMsgRsp();
  return *internal_default_instance();
}

SLInterfaceGlobalsGetStatsMsgRsp* SLInterfaceGlobalsGetStatsMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLInterfaceGlobalsGetStatsMsgRsp* n = new SLInterfaceGlobalsGetStatsMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceGlobalsGetStatsMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interfacenotifcount_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(interfacenotifcount_));
  _internal_metadata_.Clear();
}

bool SLInterfaceGlobalsGetStatsMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 SeqNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 InterfaceNotifCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &interfacenotifcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  return false;
#undef DO_
}

void SLInterfaceGlobalsGetStatsMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint64 SeqNum = 2;
  if (this->seqnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->seqnum(), output);
  }

  // uint32 InterfaceNotifCount = 3;
  if (this->interfacenotifcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->interfacenotifcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
}

::google::protobuf::uint8* SLInterfaceGlobalsGetStatsMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // uint64 SeqNum = 2;
  if (this->seqnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->seqnum(), target);
  }

  // uint32 InterfaceNotifCount = 3;
  if (this->interfacenotifcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->interfacenotifcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  return target;
}

size_t SLInterfaceGlobalsGetStatsMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint64 SeqNum = 2;
  if (this->seqnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seqnum());
  }

  // uint32 InterfaceNotifCount = 3;
  if (this->interfacenotifcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->interfacenotifcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceGlobalsGetStatsMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGlobalsGetStatsMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceGlobalsGetStatsMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
    MergeFrom(*source);
  }
}

void SLInterfaceGlobalsGetStatsMsgRsp::MergeFrom(const SLInterfaceGlobalsGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.seqnum() != 0) {
    set_seqnum(from.seqnum());
  }
  if (from.interfacenotifcount() != 0) {
    set_interfacenotifcount(from.interfacenotifcount());
  }
}

void SLInterfaceGlobalsGetStatsMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGlobalsGetStatsMsgRsp::CopyFrom(const SLInterfaceGlobalsGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGlobalsGetStatsMsgRsp::IsInitialized() const {
  return true;
}

void SLInterfaceGlobalsGetStatsMsgRsp::Swap(SLInterfaceGlobalsGetStatsMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceGlobalsGetStatsMsgRsp::InternalSwap(SLInterfaceGlobalsGetStatsMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(seqnum_, other->seqnum_);
  swap(interfacenotifcount_, other->interfacenotifcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceGlobalsGetStatsMsgRsp::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceGetMsg::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceGetMsg_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLInterface*>(
      ::service_layer::SLInterface::internal_default_instance());
}
void SLInterfaceGetMsg::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInterfaceGetMsg::kKeyFieldNumber;
const int SLInterfaceGetMsg::kEntriesCountFieldNumber;
const int SLInterfaceGetMsg::kGetNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceGetMsg::SLInterfaceGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceGetMsg)
}
SLInterfaceGetMsg::SLInterfaceGetMsg(const SLInterfaceGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::service_layer::SLInterface(*from.key_);
  } else {
    key_ = NULL;
  }
  ::memcpy(&entriescount_, &from.entriescount_,
    static_cast<size_t>(reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&entriescount_)) + sizeof(getnext_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGetMsg)
}

void SLInterfaceGetMsg::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&key_)) + sizeof(getnext_));
  _cached_size_ = 0;
}

SLInterfaceGetMsg::~SLInterfaceGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGetMsg)
  SharedDtor();
}

void SLInterfaceGetMsg::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void SLInterfaceGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceGetMsg::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceGetMsg& SLInterfaceGetMsg::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGetMsg();
  return *internal_default_instance();
}

SLInterfaceGetMsg* SLInterfaceGetMsg::New(::google::protobuf::Arena* arena) const {
  SLInterfaceGetMsg* n = new SLInterfaceGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  ::memset(&entriescount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&entriescount_)) + sizeof(getnext_));
  _internal_metadata_.Clear();
}

bool SLInterfaceGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLInterface Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EntriesCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entriescount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool GetNext = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getnext_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceGetMsg)
  return false;
#undef DO_
}

void SLInterfaceGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLInterface Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entriescount(), output);
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->getnext(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceGetMsg)
}

::google::protobuf::uint8* SLInterfaceGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLInterface Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entriescount(), target);
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->getnext(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGetMsg)
  return target;
}

size_t SLInterfaceGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLInterface Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entriescount());
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGetMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceGetMsg::MergeFrom(const SLInterfaceGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::service_layer::SLInterface::MergeFrom(from.key());
  }
  if (from.entriescount() != 0) {
    set_entriescount(from.entriescount());
  }
  if (from.getnext() != 0) {
    set_getnext(from.getnext());
  }
}

void SLInterfaceGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGetMsg::CopyFrom(const SLInterfaceGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGetMsg::IsInitialized() const {
  return true;
}

void SLInterfaceGetMsg::Swap(SLInterfaceGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceGetMsg::InternalSwap(SLInterfaceGetMsg* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(entriescount_, other->entriescount_);
  swap(getnext_, other->getnext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceGetMsg::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceInfoMsg::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceInfoMsg_default_instance_._instance.get_mutable()->slifinfo_ = const_cast< ::service_layer::SLInterface*>(
      ::service_layer::SLInterface::internal_default_instance());
}
void SLInterfaceInfoMsg::clear_slifinfo() {
  if (GetArenaNoVirtual() == NULL && slifinfo_ != NULL) {
    delete slifinfo_;
  }
  slifinfo_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInterfaceInfoMsg::kSLIfInfoFieldNumber;
const int SLInterfaceInfoMsg::kIfStateFieldNumber;
const int SLInterfaceInfoMsg::kSeqNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceInfoMsg::SLInterfaceInfoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceInfoMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceInfoMsg)
}
SLInterfaceInfoMsg::SLInterfaceInfoMsg(const SLInterfaceInfoMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_slifinfo()) {
    slifinfo_ = new ::service_layer::SLInterface(*from.slifinfo_);
  } else {
    slifinfo_ = NULL;
  }
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&ifstate_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(ifstate_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceInfoMsg)
}

void SLInterfaceInfoMsg::SharedCtor() {
  ::memset(&slifinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ifstate_) -
      reinterpret_cast<char*>(&slifinfo_)) + sizeof(ifstate_));
  _cached_size_ = 0;
}

SLInterfaceInfoMsg::~SLInterfaceInfoMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceInfoMsg)
  SharedDtor();
}

void SLInterfaceInfoMsg::SharedDtor() {
  if (this != internal_default_instance()) delete slifinfo_;
}

void SLInterfaceInfoMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceInfoMsg::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceInfoMsg& SLInterfaceInfoMsg::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceInfoMsg();
  return *internal_default_instance();
}

SLInterfaceInfoMsg* SLInterfaceInfoMsg::New(::google::protobuf::Arena* arena) const {
  SLInterfaceInfoMsg* n = new SLInterfaceInfoMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceInfoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && slifinfo_ != NULL) {
    delete slifinfo_;
  }
  slifinfo_ = NULL;
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ifstate_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(ifstate_));
  _internal_metadata_.Clear();
}

bool SLInterfaceInfoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceInfoMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLInterface SLIfInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_slifinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLInterfaceState IfState = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ifstate(static_cast< ::service_layer::SLInterfaceState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 SeqNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceInfoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceInfoMsg)
  return false;
#undef DO_
}

void SLInterfaceInfoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLInterface SLIfInfo = 1;
  if (this->has_slifinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->slifinfo_, output);
  }

  // .service_layer.SLInterfaceState IfState = 2;
  if (this->ifstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ifstate(), output);
  }

  // uint64 SeqNum = 3;
  if (this->seqnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->seqnum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceInfoMsg)
}

::google::protobuf::uint8* SLInterfaceInfoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLInterface SLIfInfo = 1;
  if (this->has_slifinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->slifinfo_, deterministic, target);
  }

  // .service_layer.SLInterfaceState IfState = 2;
  if (this->ifstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ifstate(), target);
  }

  // uint64 SeqNum = 3;
  if (this->seqnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->seqnum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceInfoMsg)
  return target;
}

size_t SLInterfaceInfoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceInfoMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLInterface SLIfInfo = 1;
  if (this->has_slifinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->slifinfo_);
  }

  // uint64 SeqNum = 3;
  if (this->seqnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->seqnum());
  }

  // .service_layer.SLInterfaceState IfState = 2;
  if (this->ifstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ifstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceInfoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceInfoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceInfoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceInfoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceInfoMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceInfoMsg::MergeFrom(const SLInterfaceInfoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slifinfo()) {
    mutable_slifinfo()->::service_layer::SLInterface::MergeFrom(from.slifinfo());
  }
  if (from.seqnum() != 0) {
    set_seqnum(from.seqnum());
  }
  if (from.ifstate() != 0) {
    set_ifstate(from.ifstate());
  }
}

void SLInterfaceInfoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceInfoMsg::CopyFrom(const SLInterfaceInfoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceInfoMsg::IsInitialized() const {
  return true;
}

void SLInterfaceInfoMsg::Swap(SLInterfaceInfoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceInfoMsg::InternalSwap(SLInterfaceInfoMsg* other) {
  using std::swap;
  swap(slifinfo_, other->slifinfo_);
  swap(seqnum_, other->seqnum_);
  swap(ifstate_, other->ifstate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceInfoMsg::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLInterfaceGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInterfaceGetMsgRsp::kEofFieldNumber;
const int SLInterfaceGetMsgRsp::kErrStatusFieldNumber;
const int SLInterfaceGetMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceGetMsgRsp::SLInterfaceGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceGetMsgRsp)
}
SLInterfaceGetMsgRsp::SLInterfaceGetMsgRsp(const SLInterfaceGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  eof_ = from.eof_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGetMsgRsp)
}

void SLInterfaceGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(eof_));
  _cached_size_ = 0;
}

SLInterfaceGetMsgRsp::~SLInterfaceGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGetMsgRsp)
  SharedDtor();
}

void SLInterfaceGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLInterfaceGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceGetMsgRsp::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceGetMsgRsp& SLInterfaceGetMsgRsp::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGetMsgRsp();
  return *internal_default_instance();
}

SLInterfaceGetMsgRsp* SLInterfaceGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLInterfaceGetMsgRsp* n = new SLInterfaceGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  eof_ = false;
  _internal_metadata_.Clear();
}

bool SLInterfaceGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Eof = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLInterfaceInfoMsg Entries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceGetMsgRsp)
  return false;
#undef DO_
}

void SLInterfaceGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Eof = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->eof(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // repeated .service_layer.SLInterfaceInfoMsg Entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceGetMsgRsp)
}

::google::protobuf::uint8* SLInterfaceGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Eof = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->eof(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->errstatus_, deterministic, target);
  }

  // repeated .service_layer.SLInterfaceInfoMsg Entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGetMsgRsp)
  return target;
}

size_t SLInterfaceGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLInterfaceInfoMsg Entries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // bool Eof = 1;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLInterfaceGetMsgRsp::MergeFrom(const SLInterfaceGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
}

void SLInterfaceGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGetMsgRsp::CopyFrom(const SLInterfaceGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGetMsgRsp::IsInitialized() const {
  return true;
}

void SLInterfaceGetMsgRsp::Swap(SLInterfaceGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceGetMsgRsp::InternalSwap(SLInterfaceGetMsgRsp* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  swap(errstatus_, other->errstatus_);
  swap(eof_, other->eof_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceGetMsgRsp::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceGetNotifMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceGetNotifMsg::SLInterfaceGetNotifMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGetNotifMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceGetNotifMsg)
}
SLInterfaceGetNotifMsg::SLInterfaceGetNotifMsg(const SLInterfaceGetNotifMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGetNotifMsg)
}

void SLInterfaceGetNotifMsg::SharedCtor() {
  _cached_size_ = 0;
}

SLInterfaceGetNotifMsg::~SLInterfaceGetNotifMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGetNotifMsg)
  SharedDtor();
}

void SLInterfaceGetNotifMsg::SharedDtor() {
}

void SLInterfaceGetNotifMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceGetNotifMsg::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceGetNotifMsg& SLInterfaceGetNotifMsg::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceGetNotifMsg();
  return *internal_default_instance();
}

SLInterfaceGetNotifMsg* SLInterfaceGetNotifMsg::New(::google::protobuf::Arena* arena) const {
  SLInterfaceGetNotifMsg* n = new SLInterfaceGetNotifMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceGetNotifMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGetNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SLInterfaceGetNotifMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceGetNotifMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceGetNotifMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceGetNotifMsg)
  return false;
#undef DO_
}

void SLInterfaceGetNotifMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceGetNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceGetNotifMsg)
}

::google::protobuf::uint8* SLInterfaceGetNotifMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGetNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGetNotifMsg)
  return target;
}

size_t SLInterfaceGetNotifMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGetNotifMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceGetNotifMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGetNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGetNotifMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceGetNotifMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGetNotifMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGetNotifMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceGetNotifMsg::MergeFrom(const SLInterfaceGetNotifMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGetNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SLInterfaceGetNotifMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGetNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGetNotifMsg::CopyFrom(const SLInterfaceGetNotifMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGetNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGetNotifMsg::IsInitialized() const {
  return true;
}

void SLInterfaceGetNotifMsg::Swap(SLInterfaceGetNotifMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceGetNotifMsg::InternalSwap(SLInterfaceGetNotifMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceGetNotifMsg::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceNotif::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceNotif_default_instance_.errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  ::service_layer::_SLInterfaceNotif_default_instance_.info_ = const_cast< ::service_layer::SLInterfaceInfoMsg*>(
      ::service_layer::SLInterfaceInfoMsg::internal_default_instance());
}
void SLInterfaceNotif::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (errstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    set_has_errstatus();
    Event_.errstatus_ = errstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLInterfaceNotif.ErrStatus)
}
void SLInterfaceNotif::clear_errstatus() {
  if (has_errstatus()) {
    delete Event_.errstatus_;
    clear_has_Event();
  }
}
void SLInterfaceNotif::set_allocated_info(::service_layer::SLInterfaceInfoMsg* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    set_has_info();
    Event_.info_ = info;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLInterfaceNotif.Info)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInterfaceNotif::kEventTypeFieldNumber;
const int SLInterfaceNotif::kErrStatusFieldNumber;
const int SLInterfaceNotif::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceNotif::SLInterfaceNotif()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceNotif();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceNotif)
}
SLInterfaceNotif::SLInterfaceNotif(const SLInterfaceNotif& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eventtype_ = from.eventtype_;
  clear_has_Event();
  switch (from.Event_case()) {
    case kErrStatus: {
      mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
      break;
    }
    case kInfo: {
      mutable_info()->::service_layer::SLInterfaceInfoMsg::MergeFrom(from.info());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceNotif)
}

void SLInterfaceNotif::SharedCtor() {
  eventtype_ = 0;
  clear_has_Event();
  _cached_size_ = 0;
}

SLInterfaceNotif::~SLInterfaceNotif() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceNotif)
  SharedDtor();
}

void SLInterfaceNotif::SharedDtor() {
  if (has_Event()) {
    clear_Event();
  }
}

void SLInterfaceNotif::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceNotif::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceNotif& SLInterfaceNotif::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceNotif();
  return *internal_default_instance();
}

SLInterfaceNotif* SLInterfaceNotif::New(::google::protobuf::Arena* arena) const {
  SLInterfaceNotif* n = new SLInterfaceNotif;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceNotif::clear_Event() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLInterfaceNotif)
  switch (Event_case()) {
    case kErrStatus: {
      delete Event_.errstatus_;
      break;
    }
    case kInfo: {
      delete Event_.info_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void SLInterfaceNotif::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceNotif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eventtype_ = 0;
  clear_Event();
  _internal_metadata_.Clear();
}

bool SLInterfaceNotif::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceNotif)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLInterfaceNotifType EventType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_eventtype(static_cast< ::service_layer::SLInterfaceNotifType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLInterfaceInfoMsg Info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceNotif)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceNotif)
  return false;
#undef DO_
}

void SLInterfaceNotif::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceNotif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLInterfaceNotifType EventType = 1;
  if (this->eventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eventtype(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *Event_.errstatus_, output);
  }

  // .service_layer.SLInterfaceInfoMsg Info = 3;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *Event_.info_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceNotif)
}

::google::protobuf::uint8* SLInterfaceNotif::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceNotif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLInterfaceNotifType EventType = 1;
  if (this->eventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eventtype(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *Event_.errstatus_, deterministic, target);
  }

  // .service_layer.SLInterfaceInfoMsg Info = 3;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *Event_.info_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceNotif)
  return target;
}

size_t SLInterfaceNotif::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceNotif)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLInterfaceNotifType EventType = 1;
  if (this->eventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->eventtype());
  }

  switch (Event_case()) {
    // .service_layer.SLErrorStatus ErrStatus = 2;
    case kErrStatus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.errstatus_);
      break;
    }
    // .service_layer.SLInterfaceInfoMsg Info = 3;
    case kInfo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.info_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceNotif::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceNotif)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceNotif* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceNotif>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceNotif)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceNotif)
    MergeFrom(*source);
  }
}

void SLInterfaceNotif::MergeFrom(const SLInterfaceNotif& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceNotif)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eventtype() != 0) {
    set_eventtype(from.eventtype());
  }
  switch (from.Event_case()) {
    case kErrStatus: {
      mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
      break;
    }
    case kInfo: {
      mutable_info()->::service_layer::SLInterfaceInfoMsg::MergeFrom(from.info());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void SLInterfaceNotif::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceNotif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceNotif::CopyFrom(const SLInterfaceNotif& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceNotif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceNotif::IsInitialized() const {
  return true;
}

void SLInterfaceNotif::Swap(SLInterfaceNotif* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceNotif::InternalSwap(SLInterfaceNotif* other) {
  using std::swap;
  swap(eventtype_, other->eventtype_);
  swap(Event_, other->Event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceNotif::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceNotifMsg::InitAsDefaultInstance() {
}
void SLInterfaceNotifMsg::clear_entries() {
  entries_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInterfaceNotifMsg::kOperFieldNumber;
const int SLInterfaceNotifMsg::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceNotifMsg::SLInterfaceNotifMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceNotifMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceNotifMsg)
}
SLInterfaceNotifMsg::SLInterfaceNotifMsg(const SLInterfaceNotifMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceNotifMsg)
}

void SLInterfaceNotifMsg::SharedCtor() {
  oper_ = 0;
  _cached_size_ = 0;
}

SLInterfaceNotifMsg::~SLInterfaceNotifMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceNotifMsg)
  SharedDtor();
}

void SLInterfaceNotifMsg::SharedDtor() {
}

void SLInterfaceNotifMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceNotifMsg::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceNotifMsg& SLInterfaceNotifMsg::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceNotifMsg();
  return *internal_default_instance();
}

SLInterfaceNotifMsg* SLInterfaceNotifMsg::New(::google::protobuf::Arena* arena) const {
  SLInterfaceNotifMsg* n = new SLInterfaceNotifMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceNotifMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  oper_ = 0;
  _internal_metadata_.Clear();
}

bool SLInterfaceNotifMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceNotifMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLNotifOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLNotifOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLInterface Entries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceNotifMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceNotifMsg)
  return false;
#undef DO_
}

void SLInterfaceNotifMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // repeated .service_layer.SLInterface Entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceNotifMsg)
}

::google::protobuf::uint8* SLInterfaceNotifMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // repeated .service_layer.SLInterface Entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceNotifMsg)
  return target;
}

size_t SLInterfaceNotifMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceNotifMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLInterface Entries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceNotifMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceNotifMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceNotifMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceNotifMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceNotifMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceNotifMsg::MergeFrom(const SLInterfaceNotifMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLInterfaceNotifMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceNotifMsg::CopyFrom(const SLInterfaceNotifMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceNotifMsg::IsInitialized() const {
  return true;
}

void SLInterfaceNotifMsg::Swap(SLInterfaceNotifMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceNotifMsg::InternalSwap(SLInterfaceNotifMsg* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceNotifMsg::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceNotifMsgRes::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceNotifMsgRes_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  ::service_layer::_SLInterfaceNotifMsgRes_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLInterface*>(
      ::service_layer::SLInterface::internal_default_instance());
}
void SLInterfaceNotifMsgRes::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
void SLInterfaceNotifMsgRes::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInterfaceNotifMsgRes::kErrStatusFieldNumber;
const int SLInterfaceNotifMsgRes::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceNotifMsgRes::SLInterfaceNotifMsgRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceNotifMsgRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceNotifMsgRes)
}
SLInterfaceNotifMsgRes::SLInterfaceNotifMsgRes(const SLInterfaceNotifMsgRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  if (from.has_key()) {
    key_ = new ::service_layer::SLInterface(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceNotifMsgRes)
}

void SLInterfaceNotifMsgRes::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(key_));
  _cached_size_ = 0;
}

SLInterfaceNotifMsgRes::~SLInterfaceNotifMsgRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceNotifMsgRes)
  SharedDtor();
}

void SLInterfaceNotifMsgRes::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
  if (this != internal_default_instance()) delete key_;
}

void SLInterfaceNotifMsgRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceNotifMsgRes::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceNotifMsgRes& SLInterfaceNotifMsgRes::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceNotifMsgRes();
  return *internal_default_instance();
}

SLInterfaceNotifMsgRes* SLInterfaceNotifMsgRes::New(::google::protobuf::Arena* arena) const {
  SLInterfaceNotifMsgRes* n = new SLInterfaceNotifMsgRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceNotifMsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceNotifMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  _internal_metadata_.Clear();
}

bool SLInterfaceNotifMsgRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceNotifMsgRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLInterface Key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceNotifMsgRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceNotifMsgRes)
  return false;
#undef DO_
}

void SLInterfaceNotifMsgRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceNotifMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // .service_layer.SLInterface Key = 2;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->key_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceNotifMsgRes)
}

::google::protobuf::uint8* SLInterfaceNotifMsgRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceNotifMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // .service_layer.SLInterface Key = 2;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->key_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceNotifMsgRes)
  return target;
}

size_t SLInterfaceNotifMsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceNotifMsgRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // .service_layer.SLInterface Key = 2;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceNotifMsgRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceNotifMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceNotifMsgRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceNotifMsgRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceNotifMsgRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceNotifMsgRes)
    MergeFrom(*source);
  }
}

void SLInterfaceNotifMsgRes::MergeFrom(const SLInterfaceNotifMsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceNotifMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.has_key()) {
    mutable_key()->::service_layer::SLInterface::MergeFrom(from.key());
  }
}

void SLInterfaceNotifMsgRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceNotifMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceNotifMsgRes::CopyFrom(const SLInterfaceNotifMsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceNotifMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceNotifMsgRes::IsInitialized() const {
  return true;
}

void SLInterfaceNotifMsgRes::Swap(SLInterfaceNotifMsgRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceNotifMsgRes::InternalSwap(SLInterfaceNotifMsgRes* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceNotifMsgRes::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLInterfaceNotifMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceNotifMsgRsp_default_instance_._instance.get_mutable()->statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLInterfaceNotifMsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInterfaceNotifMsgRsp::kStatusSummaryFieldNumber;
const int SLInterfaceNotifMsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInterfaceNotifMsgRsp::SLInterfaceNotifMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceNotifMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInterfaceNotifMsgRsp)
}
SLInterfaceNotifMsgRsp::SLInterfaceNotifMsgRsp(const SLInterfaceNotifMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statussummary()) {
    statussummary_ = new ::service_layer::SLErrorStatus(*from.statussummary_);
  } else {
    statussummary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceNotifMsgRsp)
}

void SLInterfaceNotifMsgRsp::SharedCtor() {
  statussummary_ = NULL;
  _cached_size_ = 0;
}

SLInterfaceNotifMsgRsp::~SLInterfaceNotifMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceNotifMsgRsp)
  SharedDtor();
}

void SLInterfaceNotifMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete statussummary_;
}

void SLInterfaceNotifMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInterfaceNotifMsgRsp::descriptor() {
  ::protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLInterfaceNotifMsgRsp& SLInterfaceNotifMsgRsp::default_instance() {
  ::protobuf_sl_5finterface_2eproto::InitDefaultsSLInterfaceNotifMsgRsp();
  return *internal_default_instance();
}

SLInterfaceNotifMsgRsp* SLInterfaceNotifMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLInterfaceNotifMsgRsp* n = new SLInterfaceNotifMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInterfaceNotifMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceNotifMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
  _internal_metadata_.Clear();
}

bool SLInterfaceNotifMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInterfaceNotifMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus StatusSummary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLInterfaceNotifMsgRes Results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInterfaceNotifMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInterfaceNotifMsgRsp)
  return false;
#undef DO_
}

void SLInterfaceNotifMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInterfaceNotifMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->statussummary_, output);
  }

  // repeated .service_layer.SLInterfaceNotifMsgRes Results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLInterfaceNotifMsgRsp)
}

::google::protobuf::uint8* SLInterfaceNotifMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceNotifMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->statussummary_, deterministic, target);
  }

  // repeated .service_layer.SLInterfaceNotifMsgRes Results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceNotifMsgRsp)
  return target;
}

size_t SLInterfaceNotifMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceNotifMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLInterfaceNotifMsgRes Results = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->statussummary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInterfaceNotifMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceNotifMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceNotifMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInterfaceNotifMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceNotifMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceNotifMsgRsp)
    MergeFrom(*source);
  }
}

void SLInterfaceNotifMsgRsp::MergeFrom(const SLInterfaceNotifMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceNotifMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
}

void SLInterfaceNotifMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceNotifMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceNotifMsgRsp::CopyFrom(const SLInterfaceNotifMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceNotifMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceNotifMsgRsp::IsInitialized() const {
  return true;
}

void SLInterfaceNotifMsgRsp::Swap(SLInterfaceNotifMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInterfaceNotifMsgRsp::InternalSwap(SLInterfaceNotifMsgRsp* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  swap(statussummary_, other->statussummary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInterfaceNotifMsgRsp::GetMetadata() const {
  protobuf_sl_5finterface_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5finterface_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
