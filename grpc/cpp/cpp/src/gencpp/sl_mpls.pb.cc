// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_mpls.proto

#include "sl_mpls.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace service_layer {
class SLMplsLabelBlockKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsLabelBlockKey>
      _instance;
} _SLMplsLabelBlockKey_default_instance_;
class SLMplsLabelBlockMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsLabelBlockMsg>
      _instance;
} _SLMplsLabelBlockMsg_default_instance_;
class SLMplsLabelBlockMsgResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsLabelBlockMsgRes>
      _instance;
} _SLMplsLabelBlockMsgRes_default_instance_;
class SLMplsLabelBlockMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsLabelBlockMsgRsp>
      _instance;
} _SLMplsLabelBlockMsgRsp_default_instance_;
class SLMplsLabelBlockGetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsLabelBlockGetMsg>
      _instance;
} _SLMplsLabelBlockGetMsg_default_instance_;
class SLMplsLabelBlockGetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsLabelBlockGetMsgRsp>
      _instance;
} _SLMplsLabelBlockGetMsgRsp_default_instance_;
class SLMplsRegMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsRegMsg>
      _instance;
} _SLMplsRegMsg_default_instance_;
class SLMplsRegMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsRegMsgRsp>
      _instance;
} _SLMplsRegMsgRsp_default_instance_;
class SLMplsGetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsGetMsg>
      _instance;
} _SLMplsGetMsg_default_instance_;
class SLMplsGetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsGetMsgRsp>
      _instance;
} _SLMplsGetMsgRsp_default_instance_;
class SLMplsGetStatsMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsGetStatsMsgRsp>
      _instance;
} _SLMplsGetStatsMsgRsp_default_instance_;
class SLMplsPathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsPath>
      _instance;
} _SLMplsPath_default_instance_;
class SLMplsIlmKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsIlmKey>
      _instance;
} _SLMplsIlmKey_default_instance_;
class SLMplsIlmEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsIlmEntry>
      _instance;
} _SLMplsIlmEntry_default_instance_;
class SLMplsIlmMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsIlmMsg>
      _instance;
} _SLMplsIlmMsg_default_instance_;
class SLMplsIlmResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsIlmRes>
      _instance;
} _SLMplsIlmRes_default_instance_;
class SLMplsIlmMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsIlmMsgRsp>
      _instance;
} _SLMplsIlmMsgRsp_default_instance_;
class SLMplsIlmGetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsIlmGetMsg>
      _instance;
} _SLMplsIlmGetMsg_default_instance_;
class SLMplsIlmGetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLMplsIlmGetMsgRsp>
      _instance;
} _SLMplsIlmGetMsgRsp_default_instance_;
}  // namespace service_layer
namespace protobuf_sl_5fmpls_2eproto {
void InitDefaultsSLMplsLabelBlockKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLMplsLabelBlockKey_default_instance_;
    new (ptr) ::service_layer::SLMplsLabelBlockKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsLabelBlockKey::InitAsDefaultInstance();
}

void InitDefaultsSLMplsLabelBlockKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsLabelBlockKeyImpl);
}

void InitDefaultsSLMplsLabelBlockMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockKey();
  {
    void* ptr = &::service_layer::_SLMplsLabelBlockMsg_default_instance_;
    new (ptr) ::service_layer::SLMplsLabelBlockMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsLabelBlockMsg::InitAsDefaultInstance();
}

void InitDefaultsSLMplsLabelBlockMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsLabelBlockMsgImpl);
}

void InitDefaultsSLMplsLabelBlockMsgResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockKey();
  {
    void* ptr = &::service_layer::_SLMplsLabelBlockMsgRes_default_instance_;
    new (ptr) ::service_layer::SLMplsLabelBlockMsgRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsLabelBlockMsgRes::InitAsDefaultInstance();
}

void InitDefaultsSLMplsLabelBlockMsgRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsLabelBlockMsgResImpl);
}

void InitDefaultsSLMplsLabelBlockMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockMsgRes();
  {
    void* ptr = &::service_layer::_SLMplsLabelBlockMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLMplsLabelBlockMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsLabelBlockMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLMplsLabelBlockMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsLabelBlockMsgRspImpl);
}

void InitDefaultsSLMplsLabelBlockGetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockKey();
  {
    void* ptr = &::service_layer::_SLMplsLabelBlockGetMsg_default_instance_;
    new (ptr) ::service_layer::SLMplsLabelBlockGetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsLabelBlockGetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLMplsLabelBlockGetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsLabelBlockGetMsgImpl);
}

void InitDefaultsSLMplsLabelBlockGetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockKey();
  {
    void* ptr = &::service_layer::_SLMplsLabelBlockGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLMplsLabelBlockGetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsLabelBlockGetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLMplsLabelBlockGetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsLabelBlockGetMsgRspImpl);
}

void InitDefaultsSLMplsRegMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLMplsRegMsg_default_instance_;
    new (ptr) ::service_layer::SLMplsRegMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsRegMsg::InitAsDefaultInstance();
}

void InitDefaultsSLMplsRegMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsRegMsgImpl);
}

void InitDefaultsSLMplsRegMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLMplsRegMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLMplsRegMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsRegMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLMplsRegMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsRegMsgRspImpl);
}

void InitDefaultsSLMplsGetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLMplsGetMsg_default_instance_;
    new (ptr) ::service_layer::SLMplsGetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsGetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLMplsGetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsGetMsgImpl);
}

void InitDefaultsSLMplsGetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLMplsGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLMplsGetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsGetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLMplsGetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsGetMsgRspImpl);
}

void InitDefaultsSLMplsGetStatsMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLMplsGetStatsMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLMplsGetStatsMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsGetStatsMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLMplsGetStatsMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsGetStatsMsgRspImpl);
}

void InitDefaultsSLMplsPathImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLIpAddress();
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLInterface();
  {
    void* ptr = &::service_layer::_SLMplsPath_default_instance_;
    new (ptr) ::service_layer::SLMplsPath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsPath::InitAsDefaultInstance();
}

void InitDefaultsSLMplsPath() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsPathImpl);
}

void InitDefaultsSLMplsIlmKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLMplsIlmKey_default_instance_;
    new (ptr) ::service_layer::SLMplsIlmKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsIlmKey::InitAsDefaultInstance();
}

void InitDefaultsSLMplsIlmKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsIlmKeyImpl);
}

void InitDefaultsSLMplsIlmEntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmKey();
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsPath();
  {
    void* ptr = &::service_layer::_SLMplsIlmEntry_default_instance_;
    new (ptr) ::service_layer::SLMplsIlmEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsIlmEntry::InitAsDefaultInstance();
}

void InitDefaultsSLMplsIlmEntry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsIlmEntryImpl);
}

void InitDefaultsSLMplsIlmMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmEntry();
  {
    void* ptr = &::service_layer::_SLMplsIlmMsg_default_instance_;
    new (ptr) ::service_layer::SLMplsIlmMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsIlmMsg::InitAsDefaultInstance();
}

void InitDefaultsSLMplsIlmMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsIlmMsgImpl);
}

void InitDefaultsSLMplsIlmResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmKey();
  {
    void* ptr = &::service_layer::_SLMplsIlmRes_default_instance_;
    new (ptr) ::service_layer::SLMplsIlmRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsIlmRes::InitAsDefaultInstance();
}

void InitDefaultsSLMplsIlmRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsIlmResImpl);
}

void InitDefaultsSLMplsIlmMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmRes();
  {
    void* ptr = &::service_layer::_SLMplsIlmMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLMplsIlmMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsIlmMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLMplsIlmMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsIlmMsgRspImpl);
}

void InitDefaultsSLMplsIlmGetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmKey();
  {
    void* ptr = &::service_layer::_SLMplsIlmGetMsg_default_instance_;
    new (ptr) ::service_layer::SLMplsIlmGetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsIlmGetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLMplsIlmGetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsIlmGetMsgImpl);
}

void InitDefaultsSLMplsIlmGetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmEntry();
  {
    void* ptr = &::service_layer::_SLMplsIlmGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLMplsIlmGetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLMplsIlmGetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLMplsIlmGetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLMplsIlmGetMsgRspImpl);
}

::google::protobuf::Metadata file_level_metadata[19];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockKey, startlabel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockKey, labelblocksize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockMsg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockMsg, mplsblocks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockMsgRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockMsgRes, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockMsgRes, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockMsgRsp, statussummary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockMsgRsp, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockGetMsg, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockGetMsg, entriescount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockGetMsg, getnext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockGetMsgRsp, eof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsLabelBlockGetMsgRsp, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsRegMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsRegMsg, oper_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsRegMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsRegMsgRsp, errstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetMsgRsp, maxlabelsperblock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetMsgRsp, maxlabelblocksperlabelblockmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetMsgRsp, minstartlabel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetMsgRsp, labeltablesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetMsgRsp, maxilmperilmmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetMsgRsp, maxpathsperilm_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetStatsMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetStatsMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetStatsMsgRsp, labelblockcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsGetStatsMsgRsp, ilmcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsPath, nexthopaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsPath, nexthopinterface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsPath, loadmetric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsPath, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsPath, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsPath, pathid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsPath, protectedpathbitmap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsPath, labelstack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsPath, remoteaddress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmKey, locallabel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmEntry, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmEntry, paths_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmMsg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmMsg, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmMsg, mplsilms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmRes, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmRes, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmMsgRsp, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmMsgRsp, statussummary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmMsgRsp, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmGetMsg, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmGetMsg, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmGetMsg, entriescount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmGetMsg, getnext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmGetMsgRsp, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmGetMsgRsp, eof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLMplsIlmGetMsgRsp, entries_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::service_layer::SLMplsLabelBlockKey)},
  { 7, -1, sizeof(::service_layer::SLMplsLabelBlockMsg)},
  { 14, -1, sizeof(::service_layer::SLMplsLabelBlockMsgRes)},
  { 21, -1, sizeof(::service_layer::SLMplsLabelBlockMsgRsp)},
  { 28, -1, sizeof(::service_layer::SLMplsLabelBlockGetMsg)},
  { 36, -1, sizeof(::service_layer::SLMplsLabelBlockGetMsgRsp)},
  { 44, -1, sizeof(::service_layer::SLMplsRegMsg)},
  { 50, -1, sizeof(::service_layer::SLMplsRegMsgRsp)},
  { 56, -1, sizeof(::service_layer::SLMplsGetMsg)},
  { 61, -1, sizeof(::service_layer::SLMplsGetMsgRsp)},
  { 73, -1, sizeof(::service_layer::SLMplsGetStatsMsgRsp)},
  { 81, -1, sizeof(::service_layer::SLMplsPath)},
  { 95, -1, sizeof(::service_layer::SLMplsIlmKey)},
  { 101, -1, sizeof(::service_layer::SLMplsIlmEntry)},
  { 108, -1, sizeof(::service_layer::SLMplsIlmMsg)},
  { 116, -1, sizeof(::service_layer::SLMplsIlmRes)},
  { 123, -1, sizeof(::service_layer::SLMplsIlmMsgRsp)},
  { 131, -1, sizeof(::service_layer::SLMplsIlmGetMsg)},
  { 140, -1, sizeof(::service_layer::SLMplsIlmGetMsgRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsLabelBlockKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsLabelBlockMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsLabelBlockMsgRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsLabelBlockMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsLabelBlockGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsLabelBlockGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsRegMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsRegMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsGetStatsMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsPath_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsIlmKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsIlmEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsIlmMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsIlmRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsIlmMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsIlmGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLMplsIlmGetMsgRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sl_mpls.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 19);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rsl_mpls.proto\022\rservice_layer\032\025sl_commo"
      "n_types.proto\"A\n\023SLMplsLabelBlockKey\022\022\n\n"
      "StartLabel\030\001 \001(\r\022\026\n\016LabelBlockSize\030\002 \001(\r"
      "\"v\n\023SLMplsLabelBlockMsg\022\'\n\004Oper\030\001 \001(\0162\031."
      "service_layer.SLObjectOp\0226\n\nMplsBlocks\030\002"
      " \003(\0132\".service_layer.SLMplsLabelBlockKey"
      "\"z\n\026SLMplsLabelBlockMsgRes\022/\n\tErrStatus\030"
      "\001 \001(\0132\034.service_layer.SLErrorStatus\022/\n\003K"
      "ey\030\002 \001(\0132\".service_layer.SLMplsLabelBloc"
      "kKey\"\205\001\n\026SLMplsLabelBlockMsgRsp\0223\n\rStatu"
      "sSummary\030\001 \001(\0132\034.service_layer.SLErrorSt"
      "atus\0226\n\007Results\030\002 \003(\0132%.service_layer.SL"
      "MplsLabelBlockMsgRes\"p\n\026SLMplsLabelBlock"
      "GetMsg\022/\n\003Key\030\001 \001(\0132\".service_layer.SLMp"
      "lsLabelBlockKey\022\024\n\014EntriesCount\030\002 \001(\r\022\017\n"
      "\007GetNext\030\003 \001(\010\"\216\001\n\031SLMplsLabelBlockGetMs"
      "gRsp\022\013\n\003Eof\030\001 \001(\010\022/\n\tErrStatus\030\002 \001(\0132\034.s"
      "ervice_layer.SLErrorStatus\0223\n\007Entries\030\003 "
      "\003(\0132\".service_layer.SLMplsLabelBlockKey\""
      "4\n\014SLMplsRegMsg\022$\n\004Oper\030\001 \001(\0162\026.service_"
      "layer.SLRegOp\"B\n\017SLMplsRegMsgRsp\022/\n\tErrS"
      "tatus\030\001 \001(\0132\034.service_layer.SLErrorStatu"
      "s\"\016\n\014SLMplsGetMsg\"\345\001\n\017SLMplsGetMsgRsp\022/\n"
      "\tErrStatus\030\001 \001(\0132\034.service_layer.SLError"
      "Status\022\031\n\021MaxLabelsPerBlock\030\002 \001(\r\022&\n\036Max"
      "LabelblocksPerLabelblockmsg\030\003 \001(\r\022\025\n\rMin"
      "StartLabel\030\004 \001(\r\022\026\n\016LabelTableSize\030\005 \001(\r"
      "\022\027\n\017MaxIlmPerIlmmsg\030\006 \001(\r\022\026\n\016MaxPathsPer"
      "Ilm\030\007 \001(\r\"r\n\024SLMplsGetStatsMsgRsp\022/\n\tErr"
      "Status\030\001 \001(\0132\034.service_layer.SLErrorStat"
      "us\022\027\n\017LabelBlockCount\030\002 \001(\r\022\020\n\010IlmCount\030"
      "\003 \001(\r\"\275\002\n\nSLMplsPath\0222\n\016NexthopAddress\030\001"
      " \001(\0132\032.service_layer.SLIpAddress\0224\n\020Next"
      "hopInterface\030\002 \001(\0132\032.service_layer.SLInt"
      "erface\022\022\n\nLoadMetric\030\003 \001(\r\022\017\n\007VrfName\030\004 "
      "\001(\t\022,\n\006Action\030\005 \001(\0162\034.service_layer.SlLa"
      "belAction\022\016\n\006PathId\030\006 \001(\r\022\033\n\023ProtectedPa"
      "thBitmap\030\007 \003(\004\022\022\n\nLabelStack\030\010 \003(\r\0221\n\rRe"
      "moteAddress\030\t \003(\0132\032.service_layer.SLIpAd"
      "dress\"\"\n\014SLMplsIlmKey\022\022\n\nLocalLabel\030\001 \001("
      "\r\"d\n\016SLMplsIlmEntry\022(\n\003Key\030\001 \001(\0132\033.servi"
      "ce_layer.SLMplsIlmKey\022(\n\005Paths\030\002 \003(\0132\031.s"
      "ervice_layer.SLMplsPath\"|\n\014SLMplsIlmMsg\022"
      "\'\n\004Oper\030\001 \001(\0162\031.service_layer.SLObjectOp"
      "\022\022\n\nCorrelator\030\002 \001(\004\022/\n\010MplsIlms\030\003 \003(\0132\035"
      ".service_layer.SLMplsIlmEntry\"i\n\014SLMplsI"
      "lmRes\022/\n\tErrStatus\030\001 \001(\0132\034.service_layer"
      ".SLErrorStatus\022(\n\003Key\030\002 \001(\0132\033.service_la"
      "yer.SLMplsIlmKey\"\210\001\n\017SLMplsIlmMsgRsp\022\022\n\n"
      "Correlator\030\001 \001(\004\0223\n\rStatusSummary\030\002 \001(\0132"
      "\034.service_layer.SLErrorStatus\022,\n\007Results"
      "\030\003 \003(\0132\033.service_layer.SLMplsIlmRes\"v\n\017S"
      "LMplsIlmGetMsg\022\022\n\nCorrelator\030\001 \001(\004\022(\n\003Ke"
      "y\030\002 \001(\0132\033.service_layer.SLMplsIlmKey\022\024\n\014"
      "EntriesCount\030\003 \001(\r\022\017\n\007GetNext\030\004 \001(\010\"\226\001\n\022"
      "SLMplsIlmGetMsgRsp\022\022\n\nCorrelator\030\001 \001(\004\022\013"
      "\n\003Eof\030\002 \001(\010\022/\n\tErrStatus\030\003 \001(\0132\034.service"
      "_layer.SLErrorStatus\022.\n\007Entries\030\004 \003(\0132\035."
      "service_layer.SLMplsIlmEntry*\276\001\n\rSlLabel"
      "Action\022\034\n\030SL_LABEL_ACTION_RESERVED\020\000\022\030\n\024"
      "SL_LABEL_ACTION_SWAP\020\001\022#\n\037SL_LABEL_ACTIO"
      "N_POP_AND_FORWARD\020\002\022\'\n#SL_LABEL_ACTION_P"
      "OP_AND_LOOKUP_IPV4\020\003\022\'\n#SL_LABEL_ACTION_"
      "POP_AND_LOOKUP_IPV6\020\0042\221\006\n\nSLMplsOper\022J\n\013"
      "SLMplsRegOp\022\033.service_layer.SLMplsRegMsg"
      "\032\036.service_layer.SLMplsRegMsgRsp\022H\n\tSLMp"
      "lsGet\022\033.service_layer.SLMplsGetMsg\032\036.ser"
      "vice_layer.SLMplsGetMsgRsp\022R\n\016SLMplsGetS"
      "tats\022\033.service_layer.SLMplsGetMsg\032#.serv"
      "ice_layer.SLMplsGetStatsMsgRsp\022_\n\022SLMpls"
      "LabelBlockOp\022\".service_layer.SLMplsLabel"
      "BlockMsg\032%.service_layer.SLMplsLabelBloc"
      "kMsgRsp\022f\n\023SLMplsLabelBlockGet\022%.service"
      "_layer.SLMplsLabelBlockGetMsg\032(.service_"
      "layer.SLMplsLabelBlockGetMsgRsp\022J\n\013SLMpl"
      "sIlmOp\022\033.service_layer.SLMplsIlmMsg\032\036.se"
      "rvice_layer.SLMplsIlmMsgRsp\022Q\n\014SLMplsIlm"
      "Get\022\036.service_layer.SLMplsIlmGetMsg\032!.se"
      "rvice_layer.SLMplsIlmGetMsgRsp\022T\n\021SLMpls"
      "IlmOpStream\022\033.service_layer.SLMplsIlmMsg"
      "\032\036.service_layer.SLMplsIlmMsgRsp(\0010\001\022[\n\022"
      "SLMplsIlmGetStream\022\036.service_layer.SLMpl"
      "sIlmGetMsg\032!.service_layer.SLMplsIlmGetM"
      "sgRsp(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3337);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_mpls.proto", &protobuf_RegisterTypes);
  ::protobuf_sl_5fcommon_5ftypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sl_5fmpls_2eproto
namespace service_layer {
const ::google::protobuf::EnumDescriptor* SlLabelAction_descriptor() {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fmpls_2eproto::file_level_enum_descriptors[0];
}
bool SlLabelAction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SLMplsLabelBlockKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsLabelBlockKey::kStartLabelFieldNumber;
const int SLMplsLabelBlockKey::kLabelBlockSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsLabelBlockKey::SLMplsLabelBlockKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsLabelBlockKey)
}
SLMplsLabelBlockKey::SLMplsLabelBlockKey(const SLMplsLabelBlockKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&startlabel_, &from.startlabel_,
    static_cast<size_t>(reinterpret_cast<char*>(&labelblocksize_) -
    reinterpret_cast<char*>(&startlabel_)) + sizeof(labelblocksize_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsLabelBlockKey)
}

void SLMplsLabelBlockKey::SharedCtor() {
  ::memset(&startlabel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&labelblocksize_) -
      reinterpret_cast<char*>(&startlabel_)) + sizeof(labelblocksize_));
  _cached_size_ = 0;
}

SLMplsLabelBlockKey::~SLMplsLabelBlockKey() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsLabelBlockKey)
  SharedDtor();
}

void SLMplsLabelBlockKey::SharedDtor() {
}

void SLMplsLabelBlockKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsLabelBlockKey::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsLabelBlockKey& SLMplsLabelBlockKey::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockKey();
  return *internal_default_instance();
}

SLMplsLabelBlockKey* SLMplsLabelBlockKey::New(::google::protobuf::Arena* arena) const {
  SLMplsLabelBlockKey* n = new SLMplsLabelBlockKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsLabelBlockKey::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsLabelBlockKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&startlabel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&labelblocksize_) -
      reinterpret_cast<char*>(&startlabel_)) + sizeof(labelblocksize_));
  _internal_metadata_.Clear();
}

bool SLMplsLabelBlockKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsLabelBlockKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 StartLabel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startlabel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LabelBlockSize = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &labelblocksize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsLabelBlockKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsLabelBlockKey)
  return false;
#undef DO_
}

void SLMplsLabelBlockKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsLabelBlockKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 StartLabel = 1;
  if (this->startlabel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->startlabel(), output);
  }

  // uint32 LabelBlockSize = 2;
  if (this->labelblocksize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->labelblocksize(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsLabelBlockKey)
}

::google::protobuf::uint8* SLMplsLabelBlockKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsLabelBlockKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 StartLabel = 1;
  if (this->startlabel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->startlabel(), target);
  }

  // uint32 LabelBlockSize = 2;
  if (this->labelblocksize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->labelblocksize(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsLabelBlockKey)
  return target;
}

size_t SLMplsLabelBlockKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsLabelBlockKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 StartLabel = 1;
  if (this->startlabel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startlabel());
  }

  // uint32 LabelBlockSize = 2;
  if (this->labelblocksize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->labelblocksize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsLabelBlockKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsLabelBlockKey)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsLabelBlockKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsLabelBlockKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsLabelBlockKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsLabelBlockKey)
    MergeFrom(*source);
  }
}

void SLMplsLabelBlockKey::MergeFrom(const SLMplsLabelBlockKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsLabelBlockKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.startlabel() != 0) {
    set_startlabel(from.startlabel());
  }
  if (from.labelblocksize() != 0) {
    set_labelblocksize(from.labelblocksize());
  }
}

void SLMplsLabelBlockKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsLabelBlockKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsLabelBlockKey::CopyFrom(const SLMplsLabelBlockKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsLabelBlockKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsLabelBlockKey::IsInitialized() const {
  return true;
}

void SLMplsLabelBlockKey::Swap(SLMplsLabelBlockKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsLabelBlockKey::InternalSwap(SLMplsLabelBlockKey* other) {
  using std::swap;
  swap(startlabel_, other->startlabel_);
  swap(labelblocksize_, other->labelblocksize_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsLabelBlockKey::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsLabelBlockMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsLabelBlockMsg::kOperFieldNumber;
const int SLMplsLabelBlockMsg::kMplsBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsLabelBlockMsg::SLMplsLabelBlockMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsLabelBlockMsg)
}
SLMplsLabelBlockMsg::SLMplsLabelBlockMsg(const SLMplsLabelBlockMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mplsblocks_(from.mplsblocks_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsLabelBlockMsg)
}

void SLMplsLabelBlockMsg::SharedCtor() {
  oper_ = 0;
  _cached_size_ = 0;
}

SLMplsLabelBlockMsg::~SLMplsLabelBlockMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsLabelBlockMsg)
  SharedDtor();
}

void SLMplsLabelBlockMsg::SharedDtor() {
}

void SLMplsLabelBlockMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsLabelBlockMsg::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsLabelBlockMsg& SLMplsLabelBlockMsg::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockMsg();
  return *internal_default_instance();
}

SLMplsLabelBlockMsg* SLMplsLabelBlockMsg::New(::google::protobuf::Arena* arena) const {
  SLMplsLabelBlockMsg* n = new SLMplsLabelBlockMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsLabelBlockMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsLabelBlockMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mplsblocks_.Clear();
  oper_ = 0;
  _internal_metadata_.Clear();
}

bool SLMplsLabelBlockMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsLabelBlockMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLObjectOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLObjectOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLMplsLabelBlockKey MplsBlocks = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_mplsblocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsLabelBlockMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsLabelBlockMsg)
  return false;
#undef DO_
}

void SLMplsLabelBlockMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsLabelBlockMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // repeated .service_layer.SLMplsLabelBlockKey MplsBlocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mplsblocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->mplsblocks(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsLabelBlockMsg)
}

::google::protobuf::uint8* SLMplsLabelBlockMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsLabelBlockMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // repeated .service_layer.SLMplsLabelBlockKey MplsBlocks = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mplsblocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->mplsblocks(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsLabelBlockMsg)
  return target;
}

size_t SLMplsLabelBlockMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsLabelBlockMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLMplsLabelBlockKey MplsBlocks = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mplsblocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mplsblocks(static_cast<int>(i)));
    }
  }

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsLabelBlockMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsLabelBlockMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsLabelBlockMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsLabelBlockMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsLabelBlockMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsLabelBlockMsg)
    MergeFrom(*source);
  }
}

void SLMplsLabelBlockMsg::MergeFrom(const SLMplsLabelBlockMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsLabelBlockMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mplsblocks_.MergeFrom(from.mplsblocks_);
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLMplsLabelBlockMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsLabelBlockMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsLabelBlockMsg::CopyFrom(const SLMplsLabelBlockMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsLabelBlockMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsLabelBlockMsg::IsInitialized() const {
  return true;
}

void SLMplsLabelBlockMsg::Swap(SLMplsLabelBlockMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsLabelBlockMsg::InternalSwap(SLMplsLabelBlockMsg* other) {
  using std::swap;
  mplsblocks_.InternalSwap(&other->mplsblocks_);
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsLabelBlockMsg::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsLabelBlockMsgRes::InitAsDefaultInstance() {
  ::service_layer::_SLMplsLabelBlockMsgRes_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  ::service_layer::_SLMplsLabelBlockMsgRes_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLMplsLabelBlockKey*>(
      ::service_layer::SLMplsLabelBlockKey::internal_default_instance());
}
void SLMplsLabelBlockMsgRes::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsLabelBlockMsgRes::kErrStatusFieldNumber;
const int SLMplsLabelBlockMsgRes::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsLabelBlockMsgRes::SLMplsLabelBlockMsgRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockMsgRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsLabelBlockMsgRes)
}
SLMplsLabelBlockMsgRes::SLMplsLabelBlockMsgRes(const SLMplsLabelBlockMsgRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  if (from.has_key()) {
    key_ = new ::service_layer::SLMplsLabelBlockKey(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsLabelBlockMsgRes)
}

void SLMplsLabelBlockMsgRes::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(key_));
  _cached_size_ = 0;
}

SLMplsLabelBlockMsgRes::~SLMplsLabelBlockMsgRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsLabelBlockMsgRes)
  SharedDtor();
}

void SLMplsLabelBlockMsgRes::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
  if (this != internal_default_instance()) delete key_;
}

void SLMplsLabelBlockMsgRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsLabelBlockMsgRes::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsLabelBlockMsgRes& SLMplsLabelBlockMsgRes::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockMsgRes();
  return *internal_default_instance();
}

SLMplsLabelBlockMsgRes* SLMplsLabelBlockMsgRes::New(::google::protobuf::Arena* arena) const {
  SLMplsLabelBlockMsgRes* n = new SLMplsLabelBlockMsgRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsLabelBlockMsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsLabelBlockMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  _internal_metadata_.Clear();
}

bool SLMplsLabelBlockMsgRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsLabelBlockMsgRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLMplsLabelBlockKey Key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsLabelBlockMsgRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsLabelBlockMsgRes)
  return false;
#undef DO_
}

void SLMplsLabelBlockMsgRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsLabelBlockMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // .service_layer.SLMplsLabelBlockKey Key = 2;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->key_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsLabelBlockMsgRes)
}

::google::protobuf::uint8* SLMplsLabelBlockMsgRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsLabelBlockMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // .service_layer.SLMplsLabelBlockKey Key = 2;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->key_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsLabelBlockMsgRes)
  return target;
}

size_t SLMplsLabelBlockMsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsLabelBlockMsgRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // .service_layer.SLMplsLabelBlockKey Key = 2;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsLabelBlockMsgRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsLabelBlockMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsLabelBlockMsgRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsLabelBlockMsgRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsLabelBlockMsgRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsLabelBlockMsgRes)
    MergeFrom(*source);
  }
}

void SLMplsLabelBlockMsgRes::MergeFrom(const SLMplsLabelBlockMsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsLabelBlockMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.has_key()) {
    mutable_key()->::service_layer::SLMplsLabelBlockKey::MergeFrom(from.key());
  }
}

void SLMplsLabelBlockMsgRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsLabelBlockMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsLabelBlockMsgRes::CopyFrom(const SLMplsLabelBlockMsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsLabelBlockMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsLabelBlockMsgRes::IsInitialized() const {
  return true;
}

void SLMplsLabelBlockMsgRes::Swap(SLMplsLabelBlockMsgRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsLabelBlockMsgRes::InternalSwap(SLMplsLabelBlockMsgRes* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsLabelBlockMsgRes::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsLabelBlockMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLMplsLabelBlockMsgRsp_default_instance_._instance.get_mutable()->statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLMplsLabelBlockMsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsLabelBlockMsgRsp::kStatusSummaryFieldNumber;
const int SLMplsLabelBlockMsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsLabelBlockMsgRsp::SLMplsLabelBlockMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsLabelBlockMsgRsp)
}
SLMplsLabelBlockMsgRsp::SLMplsLabelBlockMsgRsp(const SLMplsLabelBlockMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statussummary()) {
    statussummary_ = new ::service_layer::SLErrorStatus(*from.statussummary_);
  } else {
    statussummary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsLabelBlockMsgRsp)
}

void SLMplsLabelBlockMsgRsp::SharedCtor() {
  statussummary_ = NULL;
  _cached_size_ = 0;
}

SLMplsLabelBlockMsgRsp::~SLMplsLabelBlockMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsLabelBlockMsgRsp)
  SharedDtor();
}

void SLMplsLabelBlockMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete statussummary_;
}

void SLMplsLabelBlockMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsLabelBlockMsgRsp::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsLabelBlockMsgRsp& SLMplsLabelBlockMsgRsp::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockMsgRsp();
  return *internal_default_instance();
}

SLMplsLabelBlockMsgRsp* SLMplsLabelBlockMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLMplsLabelBlockMsgRsp* n = new SLMplsLabelBlockMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsLabelBlockMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsLabelBlockMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
  _internal_metadata_.Clear();
}

bool SLMplsLabelBlockMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsLabelBlockMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus StatusSummary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLMplsLabelBlockMsgRes Results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsLabelBlockMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsLabelBlockMsgRsp)
  return false;
#undef DO_
}

void SLMplsLabelBlockMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsLabelBlockMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->statussummary_, output);
  }

  // repeated .service_layer.SLMplsLabelBlockMsgRes Results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsLabelBlockMsgRsp)
}

::google::protobuf::uint8* SLMplsLabelBlockMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsLabelBlockMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->statussummary_, deterministic, target);
  }

  // repeated .service_layer.SLMplsLabelBlockMsgRes Results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsLabelBlockMsgRsp)
  return target;
}

size_t SLMplsLabelBlockMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsLabelBlockMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLMplsLabelBlockMsgRes Results = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->statussummary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsLabelBlockMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsLabelBlockMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsLabelBlockMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsLabelBlockMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsLabelBlockMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsLabelBlockMsgRsp)
    MergeFrom(*source);
  }
}

void SLMplsLabelBlockMsgRsp::MergeFrom(const SLMplsLabelBlockMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsLabelBlockMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
}

void SLMplsLabelBlockMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsLabelBlockMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsLabelBlockMsgRsp::CopyFrom(const SLMplsLabelBlockMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsLabelBlockMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsLabelBlockMsgRsp::IsInitialized() const {
  return true;
}

void SLMplsLabelBlockMsgRsp::Swap(SLMplsLabelBlockMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsLabelBlockMsgRsp::InternalSwap(SLMplsLabelBlockMsgRsp* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  swap(statussummary_, other->statussummary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsLabelBlockMsgRsp::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsLabelBlockGetMsg::InitAsDefaultInstance() {
  ::service_layer::_SLMplsLabelBlockGetMsg_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLMplsLabelBlockKey*>(
      ::service_layer::SLMplsLabelBlockKey::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsLabelBlockGetMsg::kKeyFieldNumber;
const int SLMplsLabelBlockGetMsg::kEntriesCountFieldNumber;
const int SLMplsLabelBlockGetMsg::kGetNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsLabelBlockGetMsg::SLMplsLabelBlockGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockGetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsLabelBlockGetMsg)
}
SLMplsLabelBlockGetMsg::SLMplsLabelBlockGetMsg(const SLMplsLabelBlockGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::service_layer::SLMplsLabelBlockKey(*from.key_);
  } else {
    key_ = NULL;
  }
  ::memcpy(&entriescount_, &from.entriescount_,
    static_cast<size_t>(reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&entriescount_)) + sizeof(getnext_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsLabelBlockGetMsg)
}

void SLMplsLabelBlockGetMsg::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&key_)) + sizeof(getnext_));
  _cached_size_ = 0;
}

SLMplsLabelBlockGetMsg::~SLMplsLabelBlockGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsLabelBlockGetMsg)
  SharedDtor();
}

void SLMplsLabelBlockGetMsg::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void SLMplsLabelBlockGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsLabelBlockGetMsg::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsLabelBlockGetMsg& SLMplsLabelBlockGetMsg::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockGetMsg();
  return *internal_default_instance();
}

SLMplsLabelBlockGetMsg* SLMplsLabelBlockGetMsg::New(::google::protobuf::Arena* arena) const {
  SLMplsLabelBlockGetMsg* n = new SLMplsLabelBlockGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsLabelBlockGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsLabelBlockGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  ::memset(&entriescount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&entriescount_)) + sizeof(getnext_));
  _internal_metadata_.Clear();
}

bool SLMplsLabelBlockGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsLabelBlockGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLMplsLabelBlockKey Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EntriesCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entriescount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool GetNext = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getnext_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsLabelBlockGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsLabelBlockGetMsg)
  return false;
#undef DO_
}

void SLMplsLabelBlockGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsLabelBlockGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLMplsLabelBlockKey Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entriescount(), output);
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->getnext(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsLabelBlockGetMsg)
}

::google::protobuf::uint8* SLMplsLabelBlockGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsLabelBlockGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLMplsLabelBlockKey Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entriescount(), target);
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->getnext(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsLabelBlockGetMsg)
  return target;
}

size_t SLMplsLabelBlockGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsLabelBlockGetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLMplsLabelBlockKey Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entriescount());
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsLabelBlockGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsLabelBlockGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsLabelBlockGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsLabelBlockGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsLabelBlockGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsLabelBlockGetMsg)
    MergeFrom(*source);
  }
}

void SLMplsLabelBlockGetMsg::MergeFrom(const SLMplsLabelBlockGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsLabelBlockGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::service_layer::SLMplsLabelBlockKey::MergeFrom(from.key());
  }
  if (from.entriescount() != 0) {
    set_entriescount(from.entriescount());
  }
  if (from.getnext() != 0) {
    set_getnext(from.getnext());
  }
}

void SLMplsLabelBlockGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsLabelBlockGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsLabelBlockGetMsg::CopyFrom(const SLMplsLabelBlockGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsLabelBlockGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsLabelBlockGetMsg::IsInitialized() const {
  return true;
}

void SLMplsLabelBlockGetMsg::Swap(SLMplsLabelBlockGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsLabelBlockGetMsg::InternalSwap(SLMplsLabelBlockGetMsg* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(entriescount_, other->entriescount_);
  swap(getnext_, other->getnext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsLabelBlockGetMsg::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsLabelBlockGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLMplsLabelBlockGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLMplsLabelBlockGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsLabelBlockGetMsgRsp::kEofFieldNumber;
const int SLMplsLabelBlockGetMsgRsp::kErrStatusFieldNumber;
const int SLMplsLabelBlockGetMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsLabelBlockGetMsgRsp::SLMplsLabelBlockGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockGetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsLabelBlockGetMsgRsp)
}
SLMplsLabelBlockGetMsgRsp::SLMplsLabelBlockGetMsgRsp(const SLMplsLabelBlockGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  eof_ = from.eof_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsLabelBlockGetMsgRsp)
}

void SLMplsLabelBlockGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(eof_));
  _cached_size_ = 0;
}

SLMplsLabelBlockGetMsgRsp::~SLMplsLabelBlockGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsLabelBlockGetMsgRsp)
  SharedDtor();
}

void SLMplsLabelBlockGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLMplsLabelBlockGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsLabelBlockGetMsgRsp::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsLabelBlockGetMsgRsp& SLMplsLabelBlockGetMsgRsp::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsLabelBlockGetMsgRsp();
  return *internal_default_instance();
}

SLMplsLabelBlockGetMsgRsp* SLMplsLabelBlockGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLMplsLabelBlockGetMsgRsp* n = new SLMplsLabelBlockGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsLabelBlockGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsLabelBlockGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  eof_ = false;
  _internal_metadata_.Clear();
}

bool SLMplsLabelBlockGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsLabelBlockGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Eof = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLMplsLabelBlockKey Entries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsLabelBlockGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsLabelBlockGetMsgRsp)
  return false;
#undef DO_
}

void SLMplsLabelBlockGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsLabelBlockGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Eof = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->eof(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // repeated .service_layer.SLMplsLabelBlockKey Entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsLabelBlockGetMsgRsp)
}

::google::protobuf::uint8* SLMplsLabelBlockGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsLabelBlockGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Eof = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->eof(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->errstatus_, deterministic, target);
  }

  // repeated .service_layer.SLMplsLabelBlockKey Entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsLabelBlockGetMsgRsp)
  return target;
}

size_t SLMplsLabelBlockGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsLabelBlockGetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLMplsLabelBlockKey Entries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // bool Eof = 1;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsLabelBlockGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsLabelBlockGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsLabelBlockGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsLabelBlockGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsLabelBlockGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsLabelBlockGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLMplsLabelBlockGetMsgRsp::MergeFrom(const SLMplsLabelBlockGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsLabelBlockGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
}

void SLMplsLabelBlockGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsLabelBlockGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsLabelBlockGetMsgRsp::CopyFrom(const SLMplsLabelBlockGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsLabelBlockGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsLabelBlockGetMsgRsp::IsInitialized() const {
  return true;
}

void SLMplsLabelBlockGetMsgRsp::Swap(SLMplsLabelBlockGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsLabelBlockGetMsgRsp::InternalSwap(SLMplsLabelBlockGetMsgRsp* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  swap(errstatus_, other->errstatus_);
  swap(eof_, other->eof_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsLabelBlockGetMsgRsp::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsRegMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsRegMsg::kOperFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsRegMsg::SLMplsRegMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsRegMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsRegMsg)
}
SLMplsRegMsg::SLMplsRegMsg(const SLMplsRegMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsRegMsg)
}

void SLMplsRegMsg::SharedCtor() {
  oper_ = 0;
  _cached_size_ = 0;
}

SLMplsRegMsg::~SLMplsRegMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsRegMsg)
  SharedDtor();
}

void SLMplsRegMsg::SharedDtor() {
}

void SLMplsRegMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsRegMsg::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsRegMsg& SLMplsRegMsg::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsRegMsg();
  return *internal_default_instance();
}

SLMplsRegMsg* SLMplsRegMsg::New(::google::protobuf::Arena* arena) const {
  SLMplsRegMsg* n = new SLMplsRegMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsRegMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oper_ = 0;
  _internal_metadata_.Clear();
}

bool SLMplsRegMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsRegMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLRegOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLRegOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsRegMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsRegMsg)
  return false;
#undef DO_
}

void SLMplsRegMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsRegMsg)
}

::google::protobuf::uint8* SLMplsRegMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsRegMsg)
  return target;
}

size_t SLMplsRegMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsRegMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsRegMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsRegMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsRegMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsRegMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsRegMsg)
    MergeFrom(*source);
  }
}

void SLMplsRegMsg::MergeFrom(const SLMplsRegMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLMplsRegMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsRegMsg::CopyFrom(const SLMplsRegMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsRegMsg::IsInitialized() const {
  return true;
}

void SLMplsRegMsg::Swap(SLMplsRegMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsRegMsg::InternalSwap(SLMplsRegMsg* other) {
  using std::swap;
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsRegMsg::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsRegMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLMplsRegMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLMplsRegMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsRegMsgRsp::kErrStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsRegMsgRsp::SLMplsRegMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsRegMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsRegMsgRsp)
}
SLMplsRegMsgRsp::SLMplsRegMsgRsp(const SLMplsRegMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsRegMsgRsp)
}

void SLMplsRegMsgRsp::SharedCtor() {
  errstatus_ = NULL;
  _cached_size_ = 0;
}

SLMplsRegMsgRsp::~SLMplsRegMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsRegMsgRsp)
  SharedDtor();
}

void SLMplsRegMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLMplsRegMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsRegMsgRsp::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsRegMsgRsp& SLMplsRegMsgRsp::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsRegMsgRsp();
  return *internal_default_instance();
}

SLMplsRegMsgRsp* SLMplsRegMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLMplsRegMsgRsp* n = new SLMplsRegMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsRegMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  _internal_metadata_.Clear();
}

bool SLMplsRegMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsRegMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsRegMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsRegMsgRsp)
  return false;
#undef DO_
}

void SLMplsRegMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsRegMsgRsp)
}

::google::protobuf::uint8* SLMplsRegMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsRegMsgRsp)
  return target;
}

size_t SLMplsRegMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsRegMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsRegMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsRegMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsRegMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsRegMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsRegMsgRsp)
    MergeFrom(*source);
  }
}

void SLMplsRegMsgRsp::MergeFrom(const SLMplsRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
}

void SLMplsRegMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsRegMsgRsp::CopyFrom(const SLMplsRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsRegMsgRsp::IsInitialized() const {
  return true;
}

void SLMplsRegMsgRsp::Swap(SLMplsRegMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsRegMsgRsp::InternalSwap(SLMplsRegMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsRegMsgRsp::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsGetMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsGetMsg::SLMplsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsGetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsGetMsg)
}
SLMplsGetMsg::SLMplsGetMsg(const SLMplsGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsGetMsg)
}

void SLMplsGetMsg::SharedCtor() {
  _cached_size_ = 0;
}

SLMplsGetMsg::~SLMplsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsGetMsg)
  SharedDtor();
}

void SLMplsGetMsg::SharedDtor() {
}

void SLMplsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsGetMsg::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsGetMsg& SLMplsGetMsg::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsGetMsg();
  return *internal_default_instance();
}

SLMplsGetMsg* SLMplsGetMsg::New(::google::protobuf::Arena* arena) const {
  SLMplsGetMsg* n = new SLMplsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SLMplsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsGetMsg)
  return false;
#undef DO_
}

void SLMplsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsGetMsg)
}

::google::protobuf::uint8* SLMplsGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsGetMsg)
  return target;
}

size_t SLMplsGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsGetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsGetMsg)
    MergeFrom(*source);
  }
}

void SLMplsGetMsg::MergeFrom(const SLMplsGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SLMplsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsGetMsg::CopyFrom(const SLMplsGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsGetMsg::IsInitialized() const {
  return true;
}

void SLMplsGetMsg::Swap(SLMplsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsGetMsg::InternalSwap(SLMplsGetMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsGetMsg::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLMplsGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLMplsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsGetMsgRsp::kErrStatusFieldNumber;
const int SLMplsGetMsgRsp::kMaxLabelsPerBlockFieldNumber;
const int SLMplsGetMsgRsp::kMaxLabelblocksPerLabelblockmsgFieldNumber;
const int SLMplsGetMsgRsp::kMinStartLabelFieldNumber;
const int SLMplsGetMsgRsp::kLabelTableSizeFieldNumber;
const int SLMplsGetMsgRsp::kMaxIlmPerIlmmsgFieldNumber;
const int SLMplsGetMsgRsp::kMaxPathsPerIlmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsGetMsgRsp::SLMplsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsGetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsGetMsgRsp)
}
SLMplsGetMsgRsp::SLMplsGetMsgRsp(const SLMplsGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&maxlabelsperblock_, &from.maxlabelsperblock_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxpathsperilm_) -
    reinterpret_cast<char*>(&maxlabelsperblock_)) + sizeof(maxpathsperilm_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsGetMsgRsp)
}

void SLMplsGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxpathsperilm_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(maxpathsperilm_));
  _cached_size_ = 0;
}

SLMplsGetMsgRsp::~SLMplsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsGetMsgRsp)
  SharedDtor();
}

void SLMplsGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLMplsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsGetMsgRsp::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsGetMsgRsp& SLMplsGetMsgRsp::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsGetMsgRsp();
  return *internal_default_instance();
}

SLMplsGetMsgRsp* SLMplsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLMplsGetMsgRsp* n = new SLMplsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&maxlabelsperblock_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxpathsperilm_) -
      reinterpret_cast<char*>(&maxlabelsperblock_)) + sizeof(maxpathsperilm_));
  _internal_metadata_.Clear();
}

bool SLMplsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxLabelsPerBlock = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxlabelsperblock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxLabelblocksPerLabelblockmsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxlabelblocksperlabelblockmsg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinStartLabel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minstartlabel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LabelTableSize = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &labeltablesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxIlmPerIlmmsg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxilmperilmmsg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxPathsPerIlm = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxpathsperilm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsGetMsgRsp)
  return false;
#undef DO_
}

void SLMplsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint32 MaxLabelsPerBlock = 2;
  if (this->maxlabelsperblock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxlabelsperblock(), output);
  }

  // uint32 MaxLabelblocksPerLabelblockmsg = 3;
  if (this->maxlabelblocksperlabelblockmsg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxlabelblocksperlabelblockmsg(), output);
  }

  // uint32 MinStartLabel = 4;
  if (this->minstartlabel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->minstartlabel(), output);
  }

  // uint32 LabelTableSize = 5;
  if (this->labeltablesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->labeltablesize(), output);
  }

  // uint32 MaxIlmPerIlmmsg = 6;
  if (this->maxilmperilmmsg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->maxilmperilmmsg(), output);
  }

  // uint32 MaxPathsPerIlm = 7;
  if (this->maxpathsperilm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->maxpathsperilm(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsGetMsgRsp)
}

::google::protobuf::uint8* SLMplsGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // uint32 MaxLabelsPerBlock = 2;
  if (this->maxlabelsperblock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxlabelsperblock(), target);
  }

  // uint32 MaxLabelblocksPerLabelblockmsg = 3;
  if (this->maxlabelblocksperlabelblockmsg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxlabelblocksperlabelblockmsg(), target);
  }

  // uint32 MinStartLabel = 4;
  if (this->minstartlabel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->minstartlabel(), target);
  }

  // uint32 LabelTableSize = 5;
  if (this->labeltablesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->labeltablesize(), target);
  }

  // uint32 MaxIlmPerIlmmsg = 6;
  if (this->maxilmperilmmsg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->maxilmperilmmsg(), target);
  }

  // uint32 MaxPathsPerIlm = 7;
  if (this->maxpathsperilm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->maxpathsperilm(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsGetMsgRsp)
  return target;
}

size_t SLMplsGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsGetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint32 MaxLabelsPerBlock = 2;
  if (this->maxlabelsperblock() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxlabelsperblock());
  }

  // uint32 MaxLabelblocksPerLabelblockmsg = 3;
  if (this->maxlabelblocksperlabelblockmsg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxlabelblocksperlabelblockmsg());
  }

  // uint32 MinStartLabel = 4;
  if (this->minstartlabel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minstartlabel());
  }

  // uint32 LabelTableSize = 5;
  if (this->labeltablesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->labeltablesize());
  }

  // uint32 MaxIlmPerIlmmsg = 6;
  if (this->maxilmperilmmsg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxilmperilmmsg());
  }

  // uint32 MaxPathsPerIlm = 7;
  if (this->maxpathsperilm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxpathsperilm());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLMplsGetMsgRsp::MergeFrom(const SLMplsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.maxlabelsperblock() != 0) {
    set_maxlabelsperblock(from.maxlabelsperblock());
  }
  if (from.maxlabelblocksperlabelblockmsg() != 0) {
    set_maxlabelblocksperlabelblockmsg(from.maxlabelblocksperlabelblockmsg());
  }
  if (from.minstartlabel() != 0) {
    set_minstartlabel(from.minstartlabel());
  }
  if (from.labeltablesize() != 0) {
    set_labeltablesize(from.labeltablesize());
  }
  if (from.maxilmperilmmsg() != 0) {
    set_maxilmperilmmsg(from.maxilmperilmmsg());
  }
  if (from.maxpathsperilm() != 0) {
    set_maxpathsperilm(from.maxpathsperilm());
  }
}

void SLMplsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsGetMsgRsp::CopyFrom(const SLMplsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsGetMsgRsp::IsInitialized() const {
  return true;
}

void SLMplsGetMsgRsp::Swap(SLMplsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsGetMsgRsp::InternalSwap(SLMplsGetMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(maxlabelsperblock_, other->maxlabelsperblock_);
  swap(maxlabelblocksperlabelblockmsg_, other->maxlabelblocksperlabelblockmsg_);
  swap(minstartlabel_, other->minstartlabel_);
  swap(labeltablesize_, other->labeltablesize_);
  swap(maxilmperilmmsg_, other->maxilmperilmmsg_);
  swap(maxpathsperilm_, other->maxpathsperilm_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsGetMsgRsp::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsGetStatsMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLMplsGetStatsMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLMplsGetStatsMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsGetStatsMsgRsp::kErrStatusFieldNumber;
const int SLMplsGetStatsMsgRsp::kLabelBlockCountFieldNumber;
const int SLMplsGetStatsMsgRsp::kIlmCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsGetStatsMsgRsp::SLMplsGetStatsMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsGetStatsMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsGetStatsMsgRsp)
}
SLMplsGetStatsMsgRsp::SLMplsGetStatsMsgRsp(const SLMplsGetStatsMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&labelblockcount_, &from.labelblockcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&ilmcount_) -
    reinterpret_cast<char*>(&labelblockcount_)) + sizeof(ilmcount_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsGetStatsMsgRsp)
}

void SLMplsGetStatsMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ilmcount_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(ilmcount_));
  _cached_size_ = 0;
}

SLMplsGetStatsMsgRsp::~SLMplsGetStatsMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsGetStatsMsgRsp)
  SharedDtor();
}

void SLMplsGetStatsMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLMplsGetStatsMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsGetStatsMsgRsp::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsGetStatsMsgRsp& SLMplsGetStatsMsgRsp::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsGetStatsMsgRsp();
  return *internal_default_instance();
}

SLMplsGetStatsMsgRsp* SLMplsGetStatsMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLMplsGetStatsMsgRsp* n = new SLMplsGetStatsMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsGetStatsMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&labelblockcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ilmcount_) -
      reinterpret_cast<char*>(&labelblockcount_)) + sizeof(ilmcount_));
  _internal_metadata_.Clear();
}

bool SLMplsGetStatsMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsGetStatsMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LabelBlockCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &labelblockcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IlmCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ilmcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsGetStatsMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsGetStatsMsgRsp)
  return false;
#undef DO_
}

void SLMplsGetStatsMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint32 LabelBlockCount = 2;
  if (this->labelblockcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->labelblockcount(), output);
  }

  // uint32 IlmCount = 3;
  if (this->ilmcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ilmcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsGetStatsMsgRsp)
}

::google::protobuf::uint8* SLMplsGetStatsMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // uint32 LabelBlockCount = 2;
  if (this->labelblockcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->labelblockcount(), target);
  }

  // uint32 IlmCount = 3;
  if (this->ilmcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ilmcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsGetStatsMsgRsp)
  return target;
}

size_t SLMplsGetStatsMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsGetStatsMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint32 LabelBlockCount = 2;
  if (this->labelblockcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->labelblockcount());
  }

  // uint32 IlmCount = 3;
  if (this->ilmcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ilmcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsGetStatsMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsGetStatsMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsGetStatsMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsGetStatsMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsGetStatsMsgRsp)
    MergeFrom(*source);
  }
}

void SLMplsGetStatsMsgRsp::MergeFrom(const SLMplsGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.labelblockcount() != 0) {
    set_labelblockcount(from.labelblockcount());
  }
  if (from.ilmcount() != 0) {
    set_ilmcount(from.ilmcount());
  }
}

void SLMplsGetStatsMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsGetStatsMsgRsp::CopyFrom(const SLMplsGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsGetStatsMsgRsp::IsInitialized() const {
  return true;
}

void SLMplsGetStatsMsgRsp::Swap(SLMplsGetStatsMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsGetStatsMsgRsp::InternalSwap(SLMplsGetStatsMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(labelblockcount_, other->labelblockcount_);
  swap(ilmcount_, other->ilmcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsGetStatsMsgRsp::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsPath::InitAsDefaultInstance() {
  ::service_layer::_SLMplsPath_default_instance_._instance.get_mutable()->nexthopaddress_ = const_cast< ::service_layer::SLIpAddress*>(
      ::service_layer::SLIpAddress::internal_default_instance());
  ::service_layer::_SLMplsPath_default_instance_._instance.get_mutable()->nexthopinterface_ = const_cast< ::service_layer::SLInterface*>(
      ::service_layer::SLInterface::internal_default_instance());
}
void SLMplsPath::clear_nexthopaddress() {
  if (GetArenaNoVirtual() == NULL && nexthopaddress_ != NULL) {
    delete nexthopaddress_;
  }
  nexthopaddress_ = NULL;
}
void SLMplsPath::clear_nexthopinterface() {
  if (GetArenaNoVirtual() == NULL && nexthopinterface_ != NULL) {
    delete nexthopinterface_;
  }
  nexthopinterface_ = NULL;
}
void SLMplsPath::clear_remoteaddress() {
  remoteaddress_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsPath::kNexthopAddressFieldNumber;
const int SLMplsPath::kNexthopInterfaceFieldNumber;
const int SLMplsPath::kLoadMetricFieldNumber;
const int SLMplsPath::kVrfNameFieldNumber;
const int SLMplsPath::kActionFieldNumber;
const int SLMplsPath::kPathIdFieldNumber;
const int SLMplsPath::kProtectedPathBitmapFieldNumber;
const int SLMplsPath::kLabelStackFieldNumber;
const int SLMplsPath::kRemoteAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsPath::SLMplsPath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsPath();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsPath)
}
SLMplsPath::SLMplsPath(const SLMplsPath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      protectedpathbitmap_(from.protectedpathbitmap_),
      labelstack_(from.labelstack_),
      remoteaddress_(from.remoteaddress_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_nexthopaddress()) {
    nexthopaddress_ = new ::service_layer::SLIpAddress(*from.nexthopaddress_);
  } else {
    nexthopaddress_ = NULL;
  }
  if (from.has_nexthopinterface()) {
    nexthopinterface_ = new ::service_layer::SLInterface(*from.nexthopinterface_);
  } else {
    nexthopinterface_ = NULL;
  }
  ::memcpy(&loadmetric_, &from.loadmetric_,
    static_cast<size_t>(reinterpret_cast<char*>(&pathid_) -
    reinterpret_cast<char*>(&loadmetric_)) + sizeof(pathid_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsPath)
}

void SLMplsPath::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nexthopaddress_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pathid_) -
      reinterpret_cast<char*>(&nexthopaddress_)) + sizeof(pathid_));
  _cached_size_ = 0;
}

SLMplsPath::~SLMplsPath() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsPath)
  SharedDtor();
}

void SLMplsPath::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete nexthopaddress_;
  if (this != internal_default_instance()) delete nexthopinterface_;
}

void SLMplsPath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsPath::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsPath& SLMplsPath::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsPath();
  return *internal_default_instance();
}

SLMplsPath* SLMplsPath::New(::google::protobuf::Arena* arena) const {
  SLMplsPath* n = new SLMplsPath;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsPath::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  protectedpathbitmap_.Clear();
  labelstack_.Clear();
  remoteaddress_.Clear();
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && nexthopaddress_ != NULL) {
    delete nexthopaddress_;
  }
  nexthopaddress_ = NULL;
  if (GetArenaNoVirtual() == NULL && nexthopinterface_ != NULL) {
    delete nexthopinterface_;
  }
  nexthopinterface_ = NULL;
  ::memset(&loadmetric_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pathid_) -
      reinterpret_cast<char*>(&loadmetric_)) + sizeof(pathid_));
  _internal_metadata_.Clear();
}

bool SLMplsPath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsPath)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLIpAddress NexthopAddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nexthopaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLInterface NexthopInterface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nexthopinterface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LoadMetric = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loadmetric_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLMplsPath.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SlLabelAction Action = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::service_layer::SlLabelAction >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PathId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pathid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 ProtectedPathBitmap = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_protectedpathbitmap())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 58u, input, this->mutable_protectedpathbitmap())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 LabelStack = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_labelstack())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_labelstack())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLIpAddress RemoteAddress = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_remoteaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsPath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsPath)
  return false;
#undef DO_
}

void SLMplsPath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->nexthopaddress_, output);
  }

  // .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->nexthopinterface_, output);
  }

  // uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->loadmetric(), output);
  }

  // string VrfName = 4;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLMplsPath.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->vrfname(), output);
  }

  // .service_layer.SlLabelAction Action = 5;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->action(), output);
  }

  // uint32 PathId = 6;
  if (this->pathid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pathid(), output);
  }

  // repeated uint64 ProtectedPathBitmap = 7;
  if (this->protectedpathbitmap_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _protectedpathbitmap_cached_byte_size_));
  }
  for (int i = 0, n = this->protectedpathbitmap_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->protectedpathbitmap(i), output);
  }

  // repeated uint32 LabelStack = 8;
  if (this->labelstack_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _labelstack_cached_byte_size_));
  }
  for (int i = 0, n = this->labelstack_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->labelstack(i), output);
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->remoteaddress_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->remoteaddress(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsPath)
}

::google::protobuf::uint8* SLMplsPath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->nexthopaddress_, deterministic, target);
  }

  // .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->nexthopinterface_, deterministic, target);
  }

  // uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->loadmetric(), target);
  }

  // string VrfName = 4;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLMplsPath.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->vrfname(), target);
  }

  // .service_layer.SlLabelAction Action = 5;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->action(), target);
  }

  // uint32 PathId = 6;
  if (this->pathid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pathid(), target);
  }

  // repeated uint64 ProtectedPathBitmap = 7;
  if (this->protectedpathbitmap_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _protectedpathbitmap_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->protectedpathbitmap_, target);
  }

  // repeated uint32 LabelStack = 8;
  if (this->labelstack_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _labelstack_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->labelstack_, target);
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->remoteaddress_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->remoteaddress(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsPath)
  return target;
}

size_t SLMplsPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsPath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 ProtectedPathBitmap = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->protectedpathbitmap_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _protectedpathbitmap_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 LabelStack = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->labelstack_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _labelstack_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->remoteaddress_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->remoteaddress(static_cast<int>(i)));
    }
  }

  // string VrfName = 4;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->nexthopaddress_);
  }

  // .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->nexthopinterface_);
  }

  // uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loadmetric());
  }

  // .service_layer.SlLabelAction Action = 5;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  // uint32 PathId = 6;
  if (this->pathid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pathid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsPath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsPath)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsPath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsPath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsPath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsPath)
    MergeFrom(*source);
  }
}

void SLMplsPath::MergeFrom(const SLMplsPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  protectedpathbitmap_.MergeFrom(from.protectedpathbitmap_);
  labelstack_.MergeFrom(from.labelstack_);
  remoteaddress_.MergeFrom(from.remoteaddress_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_nexthopaddress()) {
    mutable_nexthopaddress()->::service_layer::SLIpAddress::MergeFrom(from.nexthopaddress());
  }
  if (from.has_nexthopinterface()) {
    mutable_nexthopinterface()->::service_layer::SLInterface::MergeFrom(from.nexthopinterface());
  }
  if (from.loadmetric() != 0) {
    set_loadmetric(from.loadmetric());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.pathid() != 0) {
    set_pathid(from.pathid());
  }
}

void SLMplsPath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsPath::CopyFrom(const SLMplsPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsPath::IsInitialized() const {
  return true;
}

void SLMplsPath::Swap(SLMplsPath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsPath::InternalSwap(SLMplsPath* other) {
  using std::swap;
  protectedpathbitmap_.InternalSwap(&other->protectedpathbitmap_);
  labelstack_.InternalSwap(&other->labelstack_);
  remoteaddress_.InternalSwap(&other->remoteaddress_);
  vrfname_.Swap(&other->vrfname_);
  swap(nexthopaddress_, other->nexthopaddress_);
  swap(nexthopinterface_, other->nexthopinterface_);
  swap(loadmetric_, other->loadmetric_);
  swap(action_, other->action_);
  swap(pathid_, other->pathid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsPath::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsIlmKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsIlmKey::kLocalLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsIlmKey::SLMplsIlmKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsIlmKey)
}
SLMplsIlmKey::SLMplsIlmKey(const SLMplsIlmKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  locallabel_ = from.locallabel_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsIlmKey)
}

void SLMplsIlmKey::SharedCtor() {
  locallabel_ = 0u;
  _cached_size_ = 0;
}

SLMplsIlmKey::~SLMplsIlmKey() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsIlmKey)
  SharedDtor();
}

void SLMplsIlmKey::SharedDtor() {
}

void SLMplsIlmKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsIlmKey::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsIlmKey& SLMplsIlmKey::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmKey();
  return *internal_default_instance();
}

SLMplsIlmKey* SLMplsIlmKey::New(::google::protobuf::Arena* arena) const {
  SLMplsIlmKey* n = new SLMplsIlmKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsIlmKey::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsIlmKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locallabel_ = 0u;
  _internal_metadata_.Clear();
}

bool SLMplsIlmKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsIlmKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 LocalLabel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &locallabel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsIlmKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsIlmKey)
  return false;
#undef DO_
}

void SLMplsIlmKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsIlmKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 LocalLabel = 1;
  if (this->locallabel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->locallabel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsIlmKey)
}

::google::protobuf::uint8* SLMplsIlmKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsIlmKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 LocalLabel = 1;
  if (this->locallabel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->locallabel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsIlmKey)
  return target;
}

size_t SLMplsIlmKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsIlmKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 LocalLabel = 1;
  if (this->locallabel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->locallabel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsIlmKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsIlmKey)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsIlmKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsIlmKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsIlmKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsIlmKey)
    MergeFrom(*source);
  }
}

void SLMplsIlmKey::MergeFrom(const SLMplsIlmKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsIlmKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.locallabel() != 0) {
    set_locallabel(from.locallabel());
  }
}

void SLMplsIlmKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsIlmKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsIlmKey::CopyFrom(const SLMplsIlmKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsIlmKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsIlmKey::IsInitialized() const {
  return true;
}

void SLMplsIlmKey::Swap(SLMplsIlmKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsIlmKey::InternalSwap(SLMplsIlmKey* other) {
  using std::swap;
  swap(locallabel_, other->locallabel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsIlmKey::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsIlmEntry::InitAsDefaultInstance() {
  ::service_layer::_SLMplsIlmEntry_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLMplsIlmKey*>(
      ::service_layer::SLMplsIlmKey::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsIlmEntry::kKeyFieldNumber;
const int SLMplsIlmEntry::kPathsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsIlmEntry::SLMplsIlmEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmEntry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsIlmEntry)
}
SLMplsIlmEntry::SLMplsIlmEntry(const SLMplsIlmEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      paths_(from.paths_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::service_layer::SLMplsIlmKey(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsIlmEntry)
}

void SLMplsIlmEntry::SharedCtor() {
  key_ = NULL;
  _cached_size_ = 0;
}

SLMplsIlmEntry::~SLMplsIlmEntry() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsIlmEntry)
  SharedDtor();
}

void SLMplsIlmEntry::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void SLMplsIlmEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsIlmEntry::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsIlmEntry& SLMplsIlmEntry::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmEntry();
  return *internal_default_instance();
}

SLMplsIlmEntry* SLMplsIlmEntry::New(::google::protobuf::Arena* arena) const {
  SLMplsIlmEntry* n = new SLMplsIlmEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsIlmEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsIlmEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paths_.Clear();
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  _internal_metadata_.Clear();
}

bool SLMplsIlmEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsIlmEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLMplsIlmKey Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLMplsPath Paths = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_paths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsIlmEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsIlmEntry)
  return false;
#undef DO_
}

void SLMplsIlmEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsIlmEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLMplsIlmKey Key = 1;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->key_, output);
  }

  // repeated .service_layer.SLMplsPath Paths = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paths_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->paths(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsIlmEntry)
}

::google::protobuf::uint8* SLMplsIlmEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsIlmEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLMplsIlmKey Key = 1;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->key_, deterministic, target);
  }

  // repeated .service_layer.SLMplsPath Paths = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->paths_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->paths(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsIlmEntry)
  return target;
}

size_t SLMplsIlmEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsIlmEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLMplsPath Paths = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->paths_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->paths(static_cast<int>(i)));
    }
  }

  // .service_layer.SLMplsIlmKey Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsIlmEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsIlmEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsIlmEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsIlmEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsIlmEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsIlmEntry)
    MergeFrom(*source);
  }
}

void SLMplsIlmEntry::MergeFrom(const SLMplsIlmEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsIlmEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paths_.MergeFrom(from.paths_);
  if (from.has_key()) {
    mutable_key()->::service_layer::SLMplsIlmKey::MergeFrom(from.key());
  }
}

void SLMplsIlmEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsIlmEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsIlmEntry::CopyFrom(const SLMplsIlmEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsIlmEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsIlmEntry::IsInitialized() const {
  return true;
}

void SLMplsIlmEntry::Swap(SLMplsIlmEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsIlmEntry::InternalSwap(SLMplsIlmEntry* other) {
  using std::swap;
  paths_.InternalSwap(&other->paths_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsIlmEntry::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsIlmMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsIlmMsg::kOperFieldNumber;
const int SLMplsIlmMsg::kCorrelatorFieldNumber;
const int SLMplsIlmMsg::kMplsIlmsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsIlmMsg::SLMplsIlmMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsIlmMsg)
}
SLMplsIlmMsg::SLMplsIlmMsg(const SLMplsIlmMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mplsilms_(from.mplsilms_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&correlator_, &from.correlator_,
    static_cast<size_t>(reinterpret_cast<char*>(&oper_) -
    reinterpret_cast<char*>(&correlator_)) + sizeof(oper_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsIlmMsg)
}

void SLMplsIlmMsg::SharedCtor() {
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(oper_));
  _cached_size_ = 0;
}

SLMplsIlmMsg::~SLMplsIlmMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsIlmMsg)
  SharedDtor();
}

void SLMplsIlmMsg::SharedDtor() {
}

void SLMplsIlmMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsIlmMsg::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsIlmMsg& SLMplsIlmMsg::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmMsg();
  return *internal_default_instance();
}

SLMplsIlmMsg* SLMplsIlmMsg::New(::google::protobuf::Arena* arena) const {
  SLMplsIlmMsg* n = new SLMplsIlmMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsIlmMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsIlmMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mplsilms_.Clear();
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(oper_));
  _internal_metadata_.Clear();
}

bool SLMplsIlmMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsIlmMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLObjectOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLObjectOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Correlator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLMplsIlmEntry MplsIlms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_mplsilms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsIlmMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsIlmMsg)
  return false;
#undef DO_
}

void SLMplsIlmMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsIlmMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->correlator(), output);
  }

  // repeated .service_layer.SLMplsIlmEntry MplsIlms = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mplsilms_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mplsilms(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsIlmMsg)
}

::google::protobuf::uint8* SLMplsIlmMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsIlmMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->correlator(), target);
  }

  // repeated .service_layer.SLMplsIlmEntry MplsIlms = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mplsilms_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->mplsilms(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsIlmMsg)
  return target;
}

size_t SLMplsIlmMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsIlmMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLMplsIlmEntry MplsIlms = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->mplsilms_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mplsilms(static_cast<int>(i)));
    }
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsIlmMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsIlmMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsIlmMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsIlmMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsIlmMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsIlmMsg)
    MergeFrom(*source);
  }
}

void SLMplsIlmMsg::MergeFrom(const SLMplsIlmMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsIlmMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mplsilms_.MergeFrom(from.mplsilms_);
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLMplsIlmMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsIlmMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsIlmMsg::CopyFrom(const SLMplsIlmMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsIlmMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsIlmMsg::IsInitialized() const {
  return true;
}

void SLMplsIlmMsg::Swap(SLMplsIlmMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsIlmMsg::InternalSwap(SLMplsIlmMsg* other) {
  using std::swap;
  mplsilms_.InternalSwap(&other->mplsilms_);
  swap(correlator_, other->correlator_);
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsIlmMsg::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsIlmRes::InitAsDefaultInstance() {
  ::service_layer::_SLMplsIlmRes_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  ::service_layer::_SLMplsIlmRes_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLMplsIlmKey*>(
      ::service_layer::SLMplsIlmKey::internal_default_instance());
}
void SLMplsIlmRes::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsIlmRes::kErrStatusFieldNumber;
const int SLMplsIlmRes::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsIlmRes::SLMplsIlmRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsIlmRes)
}
SLMplsIlmRes::SLMplsIlmRes(const SLMplsIlmRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  if (from.has_key()) {
    key_ = new ::service_layer::SLMplsIlmKey(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsIlmRes)
}

void SLMplsIlmRes::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(key_));
  _cached_size_ = 0;
}

SLMplsIlmRes::~SLMplsIlmRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsIlmRes)
  SharedDtor();
}

void SLMplsIlmRes::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
  if (this != internal_default_instance()) delete key_;
}

void SLMplsIlmRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsIlmRes::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsIlmRes& SLMplsIlmRes::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmRes();
  return *internal_default_instance();
}

SLMplsIlmRes* SLMplsIlmRes::New(::google::protobuf::Arena* arena) const {
  SLMplsIlmRes* n = new SLMplsIlmRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsIlmRes::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsIlmRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  _internal_metadata_.Clear();
}

bool SLMplsIlmRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsIlmRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLMplsIlmKey Key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsIlmRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsIlmRes)
  return false;
#undef DO_
}

void SLMplsIlmRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsIlmRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // .service_layer.SLMplsIlmKey Key = 2;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->key_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsIlmRes)
}

::google::protobuf::uint8* SLMplsIlmRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsIlmRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // .service_layer.SLMplsIlmKey Key = 2;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->key_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsIlmRes)
  return target;
}

size_t SLMplsIlmRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsIlmRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // .service_layer.SLMplsIlmKey Key = 2;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsIlmRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsIlmRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsIlmRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsIlmRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsIlmRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsIlmRes)
    MergeFrom(*source);
  }
}

void SLMplsIlmRes::MergeFrom(const SLMplsIlmRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsIlmRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.has_key()) {
    mutable_key()->::service_layer::SLMplsIlmKey::MergeFrom(from.key());
  }
}

void SLMplsIlmRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsIlmRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsIlmRes::CopyFrom(const SLMplsIlmRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsIlmRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsIlmRes::IsInitialized() const {
  return true;
}

void SLMplsIlmRes::Swap(SLMplsIlmRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsIlmRes::InternalSwap(SLMplsIlmRes* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(key_, other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsIlmRes::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsIlmMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLMplsIlmMsgRsp_default_instance_._instance.get_mutable()->statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLMplsIlmMsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsIlmMsgRsp::kCorrelatorFieldNumber;
const int SLMplsIlmMsgRsp::kStatusSummaryFieldNumber;
const int SLMplsIlmMsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsIlmMsgRsp::SLMplsIlmMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsIlmMsgRsp)
}
SLMplsIlmMsgRsp::SLMplsIlmMsgRsp(const SLMplsIlmMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statussummary()) {
    statussummary_ = new ::service_layer::SLErrorStatus(*from.statussummary_);
  } else {
    statussummary_ = NULL;
  }
  correlator_ = from.correlator_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsIlmMsgRsp)
}

void SLMplsIlmMsgRsp::SharedCtor() {
  ::memset(&statussummary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&correlator_) -
      reinterpret_cast<char*>(&statussummary_)) + sizeof(correlator_));
  _cached_size_ = 0;
}

SLMplsIlmMsgRsp::~SLMplsIlmMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsIlmMsgRsp)
  SharedDtor();
}

void SLMplsIlmMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete statussummary_;
}

void SLMplsIlmMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsIlmMsgRsp::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsIlmMsgRsp& SLMplsIlmMsgRsp::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmMsgRsp();
  return *internal_default_instance();
}

SLMplsIlmMsgRsp* SLMplsIlmMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLMplsIlmMsgRsp* n = new SLMplsIlmMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsIlmMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsIlmMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
  correlator_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SLMplsIlmMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsIlmMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus StatusSummary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLMplsIlmRes Results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsIlmMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsIlmMsgRsp)
  return false;
#undef DO_
}

void SLMplsIlmMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsIlmMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // .service_layer.SLErrorStatus StatusSummary = 2;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->statussummary_, output);
  }

  // repeated .service_layer.SLMplsIlmRes Results = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsIlmMsgRsp)
}

::google::protobuf::uint8* SLMplsIlmMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsIlmMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // .service_layer.SLErrorStatus StatusSummary = 2;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->statussummary_, deterministic, target);
  }

  // repeated .service_layer.SLMplsIlmRes Results = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsIlmMsgRsp)
  return target;
}

size_t SLMplsIlmMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsIlmMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLMplsIlmRes Results = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus StatusSummary = 2;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->statussummary_);
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsIlmMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsIlmMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsIlmMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsIlmMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsIlmMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsIlmMsgRsp)
    MergeFrom(*source);
  }
}

void SLMplsIlmMsgRsp::MergeFrom(const SLMplsIlmMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsIlmMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
}

void SLMplsIlmMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsIlmMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsIlmMsgRsp::CopyFrom(const SLMplsIlmMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsIlmMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsIlmMsgRsp::IsInitialized() const {
  return true;
}

void SLMplsIlmMsgRsp::Swap(SLMplsIlmMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsIlmMsgRsp::InternalSwap(SLMplsIlmMsgRsp* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  swap(statussummary_, other->statussummary_);
  swap(correlator_, other->correlator_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsIlmMsgRsp::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsIlmGetMsg::InitAsDefaultInstance() {
  ::service_layer::_SLMplsIlmGetMsg_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLMplsIlmKey*>(
      ::service_layer::SLMplsIlmKey::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsIlmGetMsg::kCorrelatorFieldNumber;
const int SLMplsIlmGetMsg::kKeyFieldNumber;
const int SLMplsIlmGetMsg::kEntriesCountFieldNumber;
const int SLMplsIlmGetMsg::kGetNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsIlmGetMsg::SLMplsIlmGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmGetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsIlmGetMsg)
}
SLMplsIlmGetMsg::SLMplsIlmGetMsg(const SLMplsIlmGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::service_layer::SLMplsIlmKey(*from.key_);
  } else {
    key_ = NULL;
  }
  ::memcpy(&correlator_, &from.correlator_,
    static_cast<size_t>(reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&correlator_)) + sizeof(getnext_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsIlmGetMsg)
}

void SLMplsIlmGetMsg::SharedCtor() {
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&key_)) + sizeof(getnext_));
  _cached_size_ = 0;
}

SLMplsIlmGetMsg::~SLMplsIlmGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsIlmGetMsg)
  SharedDtor();
}

void SLMplsIlmGetMsg::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void SLMplsIlmGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsIlmGetMsg::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsIlmGetMsg& SLMplsIlmGetMsg::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmGetMsg();
  return *internal_default_instance();
}

SLMplsIlmGetMsg* SLMplsIlmGetMsg::New(::google::protobuf::Arena* arena) const {
  SLMplsIlmGetMsg* n = new SLMplsIlmGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsIlmGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsIlmGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(getnext_));
  _internal_metadata_.Clear();
}

bool SLMplsIlmGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsIlmGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLMplsIlmKey Key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EntriesCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entriescount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool GetNext = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getnext_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsIlmGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsIlmGetMsg)
  return false;
#undef DO_
}

void SLMplsIlmGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsIlmGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // .service_layer.SLMplsIlmKey Key = 2;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->key_, output);
  }

  // uint32 EntriesCount = 3;
  if (this->entriescount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->entriescount(), output);
  }

  // bool GetNext = 4;
  if (this->getnext() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->getnext(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsIlmGetMsg)
}

::google::protobuf::uint8* SLMplsIlmGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsIlmGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // .service_layer.SLMplsIlmKey Key = 2;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->key_, deterministic, target);
  }

  // uint32 EntriesCount = 3;
  if (this->entriescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->entriescount(), target);
  }

  // bool GetNext = 4;
  if (this->getnext() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->getnext(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsIlmGetMsg)
  return target;
}

size_t SLMplsIlmGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsIlmGetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLMplsIlmKey Key = 2;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->key_);
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // uint32 EntriesCount = 3;
  if (this->entriescount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entriescount());
  }

  // bool GetNext = 4;
  if (this->getnext() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsIlmGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsIlmGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsIlmGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsIlmGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsIlmGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsIlmGetMsg)
    MergeFrom(*source);
  }
}

void SLMplsIlmGetMsg::MergeFrom(const SLMplsIlmGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsIlmGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    mutable_key()->::service_layer::SLMplsIlmKey::MergeFrom(from.key());
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.entriescount() != 0) {
    set_entriescount(from.entriescount());
  }
  if (from.getnext() != 0) {
    set_getnext(from.getnext());
  }
}

void SLMplsIlmGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsIlmGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsIlmGetMsg::CopyFrom(const SLMplsIlmGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsIlmGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsIlmGetMsg::IsInitialized() const {
  return true;
}

void SLMplsIlmGetMsg::Swap(SLMplsIlmGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsIlmGetMsg::InternalSwap(SLMplsIlmGetMsg* other) {
  using std::swap;
  swap(key_, other->key_);
  swap(correlator_, other->correlator_);
  swap(entriescount_, other->entriescount_);
  swap(getnext_, other->getnext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsIlmGetMsg::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLMplsIlmGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLMplsIlmGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLMplsIlmGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLMplsIlmGetMsgRsp::kCorrelatorFieldNumber;
const int SLMplsIlmGetMsgRsp::kEofFieldNumber;
const int SLMplsIlmGetMsgRsp::kErrStatusFieldNumber;
const int SLMplsIlmGetMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLMplsIlmGetMsgRsp::SLMplsIlmGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmGetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLMplsIlmGetMsgRsp)
}
SLMplsIlmGetMsgRsp::SLMplsIlmGetMsgRsp(const SLMplsIlmGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&correlator_, &from.correlator_,
    static_cast<size_t>(reinterpret_cast<char*>(&eof_) -
    reinterpret_cast<char*>(&correlator_)) + sizeof(eof_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLMplsIlmGetMsgRsp)
}

void SLMplsIlmGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(eof_));
  _cached_size_ = 0;
}

SLMplsIlmGetMsgRsp::~SLMplsIlmGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLMplsIlmGetMsgRsp)
  SharedDtor();
}

void SLMplsIlmGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLMplsIlmGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLMplsIlmGetMsgRsp::descriptor() {
  ::protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLMplsIlmGetMsgRsp& SLMplsIlmGetMsgRsp::default_instance() {
  ::protobuf_sl_5fmpls_2eproto::InitDefaultsSLMplsIlmGetMsgRsp();
  return *internal_default_instance();
}

SLMplsIlmGetMsgRsp* SLMplsIlmGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLMplsIlmGetMsgRsp* n = new SLMplsIlmGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLMplsIlmGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLMplsIlmGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(eof_));
  _internal_metadata_.Clear();
}

bool SLMplsIlmGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLMplsIlmGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Eof = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLMplsIlmEntry Entries = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLMplsIlmGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLMplsIlmGetMsgRsp)
  return false;
#undef DO_
}

void SLMplsIlmGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLMplsIlmGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // bool Eof = 2;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->eof(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 3;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->errstatus_, output);
  }

  // repeated .service_layer.SLMplsIlmEntry Entries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLMplsIlmGetMsgRsp)
}

::google::protobuf::uint8* SLMplsIlmGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLMplsIlmGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // bool Eof = 2;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->eof(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 3;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->errstatus_, deterministic, target);
  }

  // repeated .service_layer.SLMplsIlmEntry Entries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLMplsIlmGetMsgRsp)
  return target;
}

size_t SLMplsIlmGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLMplsIlmGetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLMplsIlmEntry Entries = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus ErrStatus = 3;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // bool Eof = 2;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLMplsIlmGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLMplsIlmGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLMplsIlmGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLMplsIlmGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLMplsIlmGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLMplsIlmGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLMplsIlmGetMsgRsp::MergeFrom(const SLMplsIlmGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLMplsIlmGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
}

void SLMplsIlmGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLMplsIlmGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLMplsIlmGetMsgRsp::CopyFrom(const SLMplsIlmGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLMplsIlmGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLMplsIlmGetMsgRsp::IsInitialized() const {
  return true;
}

void SLMplsIlmGetMsgRsp::Swap(SLMplsIlmGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLMplsIlmGetMsgRsp::InternalSwap(SLMplsIlmGetMsgRsp* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  swap(errstatus_, other->errstatus_);
  swap(correlator_, other->correlator_);
  swap(eof_, other->eof_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLMplsIlmGetMsgRsp::GetMetadata() const {
  protobuf_sl_5fmpls_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fmpls_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
