// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_route_common.proto

#include "sl_route_common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace service_layer {
class SLRouteGlobalsGetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRouteGlobalsGetMsg>
      _instance;
} _SLRouteGlobalsGetMsg_default_instance_;
class SLRouteGlobalsGetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRouteGlobalsGetMsgRsp>
      _instance;
} _SLRouteGlobalsGetMsgRsp_default_instance_;
class SLRouteGlobalStatsGetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRouteGlobalStatsGetMsg>
      _instance;
} _SLRouteGlobalStatsGetMsg_default_instance_;
class SLRouteGlobalStatsGetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRouteGlobalStatsGetMsgRsp>
      _instance;
} _SLRouteGlobalStatsGetMsgRsp_default_instance_;
class SLVrfRegDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLVrfReg>
      _instance;
} _SLVrfReg_default_instance_;
class SLVrfRegMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLVrfRegMsg>
      _instance;
} _SLVrfRegMsg_default_instance_;
class SLVrfRegMsgResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLVrfRegMsgRes>
      _instance;
} _SLVrfRegMsgRes_default_instance_;
class SLVrfRegMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLVrfRegMsgRsp>
      _instance;
} _SLVrfRegMsgRsp_default_instance_;
class SLVrfRegGetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLVrfRegGetMsg>
      _instance;
} _SLVrfRegGetMsg_default_instance_;
class SLVrfRegGetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLVrfRegGetMsgRsp>
      _instance;
} _SLVrfRegGetMsgRsp_default_instance_;
class SLVRFGetStatsMsgResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLVRFGetStatsMsgRes>
      _instance;
} _SLVRFGetStatsMsgRes_default_instance_;
class SLVRFGetStatsMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLVRFGetStatsMsgRsp>
      _instance;
} _SLVRFGetStatsMsgRsp_default_instance_;
class SLRouteCommonDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRouteCommon>
      _instance;
} _SLRouteCommon_default_instance_;
class SLRoutePathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRoutePath>
      _instance;
} _SLRoutePath_default_instance_;
}  // namespace service_layer
namespace protobuf_sl_5froute_5fcommon_2eproto {
void InitDefaultsSLRouteGlobalsGetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLRouteGlobalsGetMsg_default_instance_;
    new (ptr) ::service_layer::SLRouteGlobalsGetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRouteGlobalsGetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLRouteGlobalsGetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRouteGlobalsGetMsgImpl);
}

void InitDefaultsSLRouteGlobalsGetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLRouteGlobalsGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLRouteGlobalsGetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRouteGlobalsGetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLRouteGlobalsGetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRouteGlobalsGetMsgRspImpl);
}

void InitDefaultsSLRouteGlobalStatsGetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLRouteGlobalStatsGetMsg_default_instance_;
    new (ptr) ::service_layer::SLRouteGlobalStatsGetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRouteGlobalStatsGetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLRouteGlobalStatsGetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRouteGlobalStatsGetMsgImpl);
}

void InitDefaultsSLRouteGlobalStatsGetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLRouteGlobalStatsGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLRouteGlobalStatsGetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRouteGlobalStatsGetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLRouteGlobalStatsGetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRouteGlobalStatsGetMsgRspImpl);
}

void InitDefaultsSLVrfRegImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLVrfReg_default_instance_;
    new (ptr) ::service_layer::SLVrfReg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLVrfReg::InitAsDefaultInstance();
}

void InitDefaultsSLVrfReg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLVrfRegImpl);
}

void InitDefaultsSLVrfRegMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfReg();
  {
    void* ptr = &::service_layer::_SLVrfRegMsg_default_instance_;
    new (ptr) ::service_layer::SLVrfRegMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLVrfRegMsg::InitAsDefaultInstance();
}

void InitDefaultsSLVrfRegMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLVrfRegMsgImpl);
}

void InitDefaultsSLVrfRegMsgResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLVrfRegMsgRes_default_instance_;
    new (ptr) ::service_layer::SLVrfRegMsgRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLVrfRegMsgRes::InitAsDefaultInstance();
}

void InitDefaultsSLVrfRegMsgRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLVrfRegMsgResImpl);
}

void InitDefaultsSLVrfRegMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegMsgRes();
  {
    void* ptr = &::service_layer::_SLVrfRegMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLVrfRegMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLVrfRegMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLVrfRegMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLVrfRegMsgRspImpl);
}

void InitDefaultsSLVrfRegGetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLVrfRegGetMsg_default_instance_;
    new (ptr) ::service_layer::SLVrfRegGetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLVrfRegGetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLVrfRegGetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLVrfRegGetMsgImpl);
}

void InitDefaultsSLVrfRegGetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfReg();
  {
    void* ptr = &::service_layer::_SLVrfRegGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLVrfRegGetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLVrfRegGetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLVrfRegGetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLVrfRegGetMsgRspImpl);
}

void InitDefaultsSLVRFGetStatsMsgResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLVRFGetStatsMsgRes_default_instance_;
    new (ptr) ::service_layer::SLVRFGetStatsMsgRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLVRFGetStatsMsgRes::InitAsDefaultInstance();
}

void InitDefaultsSLVRFGetStatsMsgRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLVRFGetStatsMsgResImpl);
}

void InitDefaultsSLVRFGetStatsMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVRFGetStatsMsgRes();
  {
    void* ptr = &::service_layer::_SLVRFGetStatsMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLVRFGetStatsMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLVRFGetStatsMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLVRFGetStatsMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLVRFGetStatsMsgRspImpl);
}

void InitDefaultsSLRouteCommonImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLRouteCommon_default_instance_;
    new (ptr) ::service_layer::SLRouteCommon();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRouteCommon::InitAsDefaultInstance();
}

void InitDefaultsSLRouteCommon() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRouteCommonImpl);
}

void InitDefaultsSLRoutePathImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLIpAddress();
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLInterface();
  {
    void* ptr = &::service_layer::_SLRoutePath_default_instance_;
    new (ptr) ::service_layer::SLRoutePath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRoutePath::InitAsDefaultInstance();
}

void InitDefaultsSLRoutePath() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRoutePathImpl);
}

::google::protobuf::Metadata file_level_metadata[14];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteGlobalsGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteGlobalsGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteGlobalsGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteGlobalsGetMsgRsp, maxvrfregpervrfregmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteGlobalsGetMsgRsp, maxrouteperroutemsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteGlobalStatsGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteGlobalStatsGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteGlobalStatsGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteGlobalStatsGetMsgRsp, vrfcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteGlobalStatsGetMsgRsp, routecount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfReg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfReg, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfReg, admindistance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfReg, vrfpurgeintervalseconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegMsg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegMsg, vrfregmsgs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegMsgRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegMsgRes, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegMsgRes, vrfname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegMsgRsp, statussummary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegMsgRsp, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegGetMsg, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegGetMsg, entriescount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegGetMsg, getnext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegGetMsgRsp, eof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVrfRegGetMsgRsp, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVRFGetStatsMsgRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVRFGetStatsMsgRes, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVRFGetStatsMsgRes, routecount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVRFGetStatsMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVRFGetStatsMsgRsp, eof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVRFGetStatsMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLVRFGetStatsMsgRsp, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteCommon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteCommon, admindistance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteCommon, locallabel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRouteCommon, tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutePath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutePath, nexthopaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutePath, nexthopinterface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutePath, loadmetric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutePath, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutePath, metric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutePath, pathid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutePath, protectedpathbitmap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutePath, labelstack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutePath, remoteaddress_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::service_layer::SLRouteGlobalsGetMsg)},
  { 5, -1, sizeof(::service_layer::SLRouteGlobalsGetMsgRsp)},
  { 13, -1, sizeof(::service_layer::SLRouteGlobalStatsGetMsg)},
  { 18, -1, sizeof(::service_layer::SLRouteGlobalStatsGetMsgRsp)},
  { 26, -1, sizeof(::service_layer::SLVrfReg)},
  { 34, -1, sizeof(::service_layer::SLVrfRegMsg)},
  { 41, -1, sizeof(::service_layer::SLVrfRegMsgRes)},
  { 48, -1, sizeof(::service_layer::SLVrfRegMsgRsp)},
  { 55, -1, sizeof(::service_layer::SLVrfRegGetMsg)},
  { 63, -1, sizeof(::service_layer::SLVrfRegGetMsgRsp)},
  { 71, -1, sizeof(::service_layer::SLVRFGetStatsMsgRes)},
  { 78, -1, sizeof(::service_layer::SLVRFGetStatsMsgRsp)},
  { 86, -1, sizeof(::service_layer::SLRouteCommon)},
  { 94, -1, sizeof(::service_layer::SLRoutePath)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRouteGlobalsGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRouteGlobalsGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRouteGlobalStatsGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRouteGlobalStatsGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLVrfReg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLVrfRegMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLVrfRegMsgRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLVrfRegMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLVrfRegGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLVrfRegGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLVRFGetStatsMsgRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLVRFGetStatsMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRouteCommon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRoutePath_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sl_route_common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025sl_route_common.proto\022\rservice_layer\032\025"
      "sl_common_types.proto\"\026\n\024SLRouteGlobalsG"
      "etMsg\"\206\001\n\027SLRouteGlobalsGetMsgRsp\022/\n\tErr"
      "Status\030\001 \001(\0132\034.service_layer.SLErrorStat"
      "us\022\035\n\025MaxVrfregPerVrfregmsg\030\002 \001(\r\022\033\n\023Max"
      "RoutePerRoutemsg\030\003 \001(\r\"\032\n\030SLRouteGlobalS"
      "tatsGetMsg\"t\n\033SLRouteGlobalStatsGetMsgRs"
      "p\022/\n\tErrStatus\030\001 \001(\0132\034.service_layer.SLE"
      "rrorStatus\022\020\n\010VrfCount\030\002 \001(\r\022\022\n\nRouteCou"
      "nt\030\003 \001(\r\"S\n\010SLVrfReg\022\017\n\007VrfName\030\001 \001(\t\022\025\n"
      "\rAdminDistance\030\002 \001(\r\022\037\n\027VrfPurgeInterval"
      "Seconds\030\003 \001(\r\"`\n\013SLVrfRegMsg\022$\n\004Oper\030\001 \001"
      "(\0162\026.service_layer.SLRegOp\022+\n\nVrfRegMsgs"
      "\030\002 \003(\0132\027.service_layer.SLVrfReg\"R\n\016SLVrf"
      "RegMsgRes\022/\n\tErrStatus\030\001 \001(\0132\034.service_l"
      "ayer.SLErrorStatus\022\017\n\007VrfName\030\002 \001(\t\"u\n\016S"
      "LVrfRegMsgRsp\0223\n\rStatusSummary\030\001 \001(\0132\034.s"
      "ervice_layer.SLErrorStatus\022.\n\007Results\030\002 "
      "\003(\0132\035.service_layer.SLVrfRegMsgRes\"H\n\016SL"
      "VrfRegGetMsg\022\017\n\007VrfName\030\001 \001(\t\022\024\n\014Entries"
      "Count\030\002 \001(\r\022\017\n\007GetNext\030\003 \001(\010\"{\n\021SLVrfReg"
      "GetMsgRsp\022\013\n\003Eof\030\001 \001(\010\022/\n\tErrStatus\030\002 \001("
      "\0132\034.service_layer.SLErrorStatus\022(\n\007Entri"
      "es\030\003 \003(\0132\027.service_layer.SLVrfReg\":\n\023SLV"
      "RFGetStatsMsgRes\022\017\n\007VrfName\030\001 \001(\t\022\022\n\nRou"
      "teCount\030\002 \001(\r\"\210\001\n\023SLVRFGetStatsMsgRsp\022\013\n"
      "\003Eof\030\001 \001(\010\022/\n\tErrStatus\030\002 \001(\0132\034.service_"
      "layer.SLErrorStatus\0223\n\007Entries\030\003 \003(\0132\".s"
      "ervice_layer.SLVRFGetStatsMsgRes\"G\n\rSLRo"
      "uteCommon\022\025\n\rAdminDistance\030\001 \001(\r\022\022\n\nLoca"
      "lLabel\030\002 \001(\r\022\013\n\003Tag\030\003 \001(\r\"\240\002\n\013SLRoutePat"
      "h\0222\n\016NexthopAddress\030\001 \001(\0132\032.service_laye"
      "r.SLIpAddress\0224\n\020NexthopInterface\030\002 \001(\0132"
      "\032.service_layer.SLInterface\022\022\n\nLoadMetri"
      "c\030\003 \001(\r\022\017\n\007VrfName\030\004 \001(\t\022\016\n\006Metric\030\005 \001(\r"
      "\022\016\n\006PathId\030\006 \001(\r\022\033\n\023ProtectedPathBitmap\030"
      "\007 \003(\004\022\022\n\nLabelStack\030\010 \003(\r\0221\n\rRemoteAddre"
      "ss\030\t \003(\0132\032.service_layer.SLIpAddressb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1524);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_route_common.proto", &protobuf_RegisterTypes);
  ::protobuf_sl_5fcommon_5ftypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sl_5froute_5fcommon_2eproto
namespace service_layer {

// ===================================================================

void SLRouteGlobalsGetMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalsGetMsg::SLRouteGlobalsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalsGetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalsGetMsg)
}
SLRouteGlobalsGetMsg::SLRouteGlobalsGetMsg(const SLRouteGlobalsGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalsGetMsg)
}

void SLRouteGlobalsGetMsg::SharedCtor() {
  _cached_size_ = 0;
}

SLRouteGlobalsGetMsg::~SLRouteGlobalsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalsGetMsg)
  SharedDtor();
}

void SLRouteGlobalsGetMsg::SharedDtor() {
}

void SLRouteGlobalsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalsGetMsg::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRouteGlobalsGetMsg& SLRouteGlobalsGetMsg::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalsGetMsg();
  return *internal_default_instance();
}

SLRouteGlobalsGetMsg* SLRouteGlobalsGetMsg::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalsGetMsg* n = new SLRouteGlobalsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalsGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteGlobalsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SLRouteGlobalsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalsGetMsg)
  return false;
#undef DO_
}

void SLRouteGlobalsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalsGetMsg)
}

::google::protobuf::uint8* SLRouteGlobalsGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalsGetMsg)
  return target;
}

size_t SLRouteGlobalsGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteGlobalsGetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteGlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteGlobalsGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalsGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteGlobalsGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteGlobalsGetMsg)
    MergeFrom(*source);
  }
}

void SLRouteGlobalsGetMsg::MergeFrom(const SLRouteGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteGlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SLRouteGlobalsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalsGetMsg::CopyFrom(const SLRouteGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalsGetMsg::IsInitialized() const {
  return true;
}

void SLRouteGlobalsGetMsg::Swap(SLRouteGlobalsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalsGetMsg::InternalSwap(SLRouteGlobalsGetMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalsGetMsg::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRouteGlobalsGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLRouteGlobalsGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLRouteGlobalsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteGlobalsGetMsgRsp::kErrStatusFieldNumber;
const int SLRouteGlobalsGetMsgRsp::kMaxVrfregPerVrfregmsgFieldNumber;
const int SLRouteGlobalsGetMsgRsp::kMaxRoutePerRoutemsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalsGetMsgRsp::SLRouteGlobalsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalsGetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalsGetMsgRsp)
}
SLRouteGlobalsGetMsgRsp::SLRouteGlobalsGetMsgRsp(const SLRouteGlobalsGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&maxvrfregpervrfregmsg_, &from.maxvrfregpervrfregmsg_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxrouteperroutemsg_) -
    reinterpret_cast<char*>(&maxvrfregpervrfregmsg_)) + sizeof(maxrouteperroutemsg_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalsGetMsgRsp)
}

void SLRouteGlobalsGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxrouteperroutemsg_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(maxrouteperroutemsg_));
  _cached_size_ = 0;
}

SLRouteGlobalsGetMsgRsp::~SLRouteGlobalsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalsGetMsgRsp)
  SharedDtor();
}

void SLRouteGlobalsGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLRouteGlobalsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalsGetMsgRsp::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRouteGlobalsGetMsgRsp& SLRouteGlobalsGetMsgRsp::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalsGetMsgRsp();
  return *internal_default_instance();
}

SLRouteGlobalsGetMsgRsp* SLRouteGlobalsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalsGetMsgRsp* n = new SLRouteGlobalsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalsGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteGlobalsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&maxvrfregpervrfregmsg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxrouteperroutemsg_) -
      reinterpret_cast<char*>(&maxvrfregpervrfregmsg_)) + sizeof(maxrouteperroutemsg_));
  _internal_metadata_.Clear();
}

bool SLRouteGlobalsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxVrfregPerVrfregmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxvrfregpervrfregmsg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxRoutePerRoutemsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxrouteperroutemsg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalsGetMsgRsp)
  return false;
#undef DO_
}

void SLRouteGlobalsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint32 MaxVrfregPerVrfregmsg = 2;
  if (this->maxvrfregpervrfregmsg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxvrfregpervrfregmsg(), output);
  }

  // uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxrouteperroutemsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalsGetMsgRsp)
}

::google::protobuf::uint8* SLRouteGlobalsGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // uint32 MaxVrfregPerVrfregmsg = 2;
  if (this->maxvrfregpervrfregmsg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxvrfregpervrfregmsg(), target);
  }

  // uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxrouteperroutemsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalsGetMsgRsp)
  return target;
}

size_t SLRouteGlobalsGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteGlobalsGetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint32 MaxVrfregPerVrfregmsg = 2;
  if (this->maxvrfregpervrfregmsg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxvrfregpervrfregmsg());
  }

  // uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxrouteperroutemsg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteGlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteGlobalsGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalsGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteGlobalsGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteGlobalsGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLRouteGlobalsGetMsgRsp::MergeFrom(const SLRouteGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteGlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.maxvrfregpervrfregmsg() != 0) {
    set_maxvrfregpervrfregmsg(from.maxvrfregpervrfregmsg());
  }
  if (from.maxrouteperroutemsg() != 0) {
    set_maxrouteperroutemsg(from.maxrouteperroutemsg());
  }
}

void SLRouteGlobalsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalsGetMsgRsp::CopyFrom(const SLRouteGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalsGetMsgRsp::IsInitialized() const {
  return true;
}

void SLRouteGlobalsGetMsgRsp::Swap(SLRouteGlobalsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalsGetMsgRsp::InternalSwap(SLRouteGlobalsGetMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(maxvrfregpervrfregmsg_, other->maxvrfregpervrfregmsg_);
  swap(maxrouteperroutemsg_, other->maxrouteperroutemsg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalsGetMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRouteGlobalStatsGetMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalStatsGetMsg::SLRouteGlobalStatsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalStatsGetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalStatsGetMsg)
}
SLRouteGlobalStatsGetMsg::SLRouteGlobalStatsGetMsg(const SLRouteGlobalStatsGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalStatsGetMsg)
}

void SLRouteGlobalStatsGetMsg::SharedCtor() {
  _cached_size_ = 0;
}

SLRouteGlobalStatsGetMsg::~SLRouteGlobalStatsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalStatsGetMsg)
  SharedDtor();
}

void SLRouteGlobalStatsGetMsg::SharedDtor() {
}

void SLRouteGlobalStatsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalStatsGetMsg::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRouteGlobalStatsGetMsg& SLRouteGlobalStatsGetMsg::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalStatsGetMsg();
  return *internal_default_instance();
}

SLRouteGlobalStatsGetMsg* SLRouteGlobalStatsGetMsg::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalStatsGetMsg* n = new SLRouteGlobalStatsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalStatsGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteGlobalStatsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SLRouteGlobalStatsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalStatsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalStatsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalStatsGetMsg)
  return false;
#undef DO_
}

void SLRouteGlobalStatsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalStatsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalStatsGetMsg)
}

::google::protobuf::uint8* SLRouteGlobalStatsGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalStatsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalStatsGetMsg)
  return target;
}

size_t SLRouteGlobalStatsGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteGlobalStatsGetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalStatsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteGlobalStatsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteGlobalStatsGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalStatsGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteGlobalStatsGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteGlobalStatsGetMsg)
    MergeFrom(*source);
  }
}

void SLRouteGlobalStatsGetMsg::MergeFrom(const SLRouteGlobalStatsGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteGlobalStatsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SLRouteGlobalStatsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteGlobalStatsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalStatsGetMsg::CopyFrom(const SLRouteGlobalStatsGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteGlobalStatsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalStatsGetMsg::IsInitialized() const {
  return true;
}

void SLRouteGlobalStatsGetMsg::Swap(SLRouteGlobalStatsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalStatsGetMsg::InternalSwap(SLRouteGlobalStatsGetMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalStatsGetMsg::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRouteGlobalStatsGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLRouteGlobalStatsGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLRouteGlobalStatsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteGlobalStatsGetMsgRsp::kErrStatusFieldNumber;
const int SLRouteGlobalStatsGetMsgRsp::kVrfCountFieldNumber;
const int SLRouteGlobalStatsGetMsgRsp::kRouteCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalStatsGetMsgRsp::SLRouteGlobalStatsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalStatsGetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalStatsGetMsgRsp)
}
SLRouteGlobalStatsGetMsgRsp::SLRouteGlobalStatsGetMsgRsp(const SLRouteGlobalStatsGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&vrfcount_, &from.vrfcount_,
    static_cast<size_t>(reinterpret_cast<char*>(&routecount_) -
    reinterpret_cast<char*>(&vrfcount_)) + sizeof(routecount_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalStatsGetMsgRsp)
}

void SLRouteGlobalStatsGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&routecount_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(routecount_));
  _cached_size_ = 0;
}

SLRouteGlobalStatsGetMsgRsp::~SLRouteGlobalStatsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalStatsGetMsgRsp)
  SharedDtor();
}

void SLRouteGlobalStatsGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLRouteGlobalStatsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalStatsGetMsgRsp::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRouteGlobalStatsGetMsgRsp& SLRouteGlobalStatsGetMsgRsp::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalStatsGetMsgRsp();
  return *internal_default_instance();
}

SLRouteGlobalStatsGetMsgRsp* SLRouteGlobalStatsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalStatsGetMsgRsp* n = new SLRouteGlobalStatsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalStatsGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&vrfcount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&routecount_) -
      reinterpret_cast<char*>(&vrfcount_)) + sizeof(routecount_));
  _internal_metadata_.Clear();
}

bool SLRouteGlobalStatsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 VrfCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vrfcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RouteCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &routecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalStatsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalStatsGetMsgRsp)
  return false;
#undef DO_
}

void SLRouteGlobalStatsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint32 VrfCount = 2;
  if (this->vrfcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vrfcount(), output);
  }

  // uint32 RouteCount = 3;
  if (this->routecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->routecount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalStatsGetMsgRsp)
}

::google::protobuf::uint8* SLRouteGlobalStatsGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // uint32 VrfCount = 2;
  if (this->vrfcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vrfcount(), target);
  }

  // uint32 RouteCount = 3;
  if (this->routecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->routecount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalStatsGetMsgRsp)
  return target;
}

size_t SLRouteGlobalStatsGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint32 VrfCount = 2;
  if (this->vrfcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vrfcount());
  }

  // uint32 RouteCount = 3;
  if (this->routecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->routecount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalStatsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteGlobalStatsGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalStatsGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteGlobalStatsGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteGlobalStatsGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLRouteGlobalStatsGetMsgRsp::MergeFrom(const SLRouteGlobalStatsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.vrfcount() != 0) {
    set_vrfcount(from.vrfcount());
  }
  if (from.routecount() != 0) {
    set_routecount(from.routecount());
  }
}

void SLRouteGlobalStatsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalStatsGetMsgRsp::CopyFrom(const SLRouteGlobalStatsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalStatsGetMsgRsp::IsInitialized() const {
  return true;
}

void SLRouteGlobalStatsGetMsgRsp::Swap(SLRouteGlobalStatsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalStatsGetMsgRsp::InternalSwap(SLRouteGlobalStatsGetMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(vrfcount_, other->vrfcount_);
  swap(routecount_, other->routecount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalStatsGetMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLVrfReg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfReg::kVrfNameFieldNumber;
const int SLVrfReg::kAdminDistanceFieldNumber;
const int SLVrfReg::kVrfPurgeIntervalSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfReg::SLVrfReg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfReg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfReg)
}
SLVrfReg::SLVrfReg(const SLVrfReg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  ::memcpy(&admindistance_, &from.admindistance_,
    static_cast<size_t>(reinterpret_cast<char*>(&vrfpurgeintervalseconds_) -
    reinterpret_cast<char*>(&admindistance_)) + sizeof(vrfpurgeintervalseconds_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfReg)
}

void SLVrfReg::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&admindistance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vrfpurgeintervalseconds_) -
      reinterpret_cast<char*>(&admindistance_)) + sizeof(vrfpurgeintervalseconds_));
  _cached_size_ = 0;
}

SLVrfReg::~SLVrfReg() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfReg)
  SharedDtor();
}

void SLVrfReg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLVrfReg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfReg::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLVrfReg& SLVrfReg::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfReg();
  return *internal_default_instance();
}

SLVrfReg* SLVrfReg::New(::google::protobuf::Arena* arena) const {
  SLVrfReg* n = new SLVrfReg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfReg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfReg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&admindistance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vrfpurgeintervalseconds_) -
      reinterpret_cast<char*>(&admindistance_)) + sizeof(vrfpurgeintervalseconds_));
  _internal_metadata_.Clear();
}

bool SLVrfReg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfReg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string VrfName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVrfReg.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 AdminDistance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admindistance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 VrfPurgeIntervalSeconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vrfpurgeintervalseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfReg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfReg)
  return false;
#undef DO_
}

void SLVrfReg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfReg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfReg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->admindistance(), output);
  }

  // uint32 VrfPurgeIntervalSeconds = 3;
  if (this->vrfpurgeintervalseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->vrfpurgeintervalseconds(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfReg)
}

::google::protobuf::uint8* SLVrfReg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfReg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfReg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->admindistance(), target);
  }

  // uint32 VrfPurgeIntervalSeconds = 3;
  if (this->vrfpurgeintervalseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->vrfpurgeintervalseconds(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfReg)
  return target;
}

size_t SLVrfReg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfReg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->admindistance());
  }

  // uint32 VrfPurgeIntervalSeconds = 3;
  if (this->vrfpurgeintervalseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vrfpurgeintervalseconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfReg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfReg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfReg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfReg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfReg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfReg)
    MergeFrom(*source);
  }
}

void SLVrfReg::MergeFrom(const SLVrfReg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfReg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.admindistance() != 0) {
    set_admindistance(from.admindistance());
  }
  if (from.vrfpurgeintervalseconds() != 0) {
    set_vrfpurgeintervalseconds(from.vrfpurgeintervalseconds());
  }
}

void SLVrfReg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfReg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfReg::CopyFrom(const SLVrfReg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfReg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfReg::IsInitialized() const {
  return true;
}

void SLVrfReg::Swap(SLVrfReg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfReg::InternalSwap(SLVrfReg* other) {
  using std::swap;
  vrfname_.Swap(&other->vrfname_);
  swap(admindistance_, other->admindistance_);
  swap(vrfpurgeintervalseconds_, other->vrfpurgeintervalseconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfReg::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLVrfRegMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegMsg::kOperFieldNumber;
const int SLVrfRegMsg::kVrfRegMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegMsg::SLVrfRegMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegMsg)
}
SLVrfRegMsg::SLVrfRegMsg(const SLVrfRegMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vrfregmsgs_(from.vrfregmsgs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegMsg)
}

void SLVrfRegMsg::SharedCtor() {
  oper_ = 0;
  _cached_size_ = 0;
}

SLVrfRegMsg::~SLVrfRegMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegMsg)
  SharedDtor();
}

void SLVrfRegMsg::SharedDtor() {
}

void SLVrfRegMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegMsg::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLVrfRegMsg& SLVrfRegMsg::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegMsg();
  return *internal_default_instance();
}

SLVrfRegMsg* SLVrfRegMsg::New(::google::protobuf::Arena* arena) const {
  SLVrfRegMsg* n = new SLVrfRegMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vrfregmsgs_.Clear();
  oper_ = 0;
  _internal_metadata_.Clear();
}

bool SLVrfRegMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLRegOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLRegOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_vrfregmsgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegMsg)
  return false;
#undef DO_
}

void SLVrfRegMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vrfregmsgs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vrfregmsgs(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegMsg)
}

::google::protobuf::uint8* SLVrfRegMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vrfregmsgs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->vrfregmsgs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegMsg)
  return target;
}

size_t SLVrfRegMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfRegMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->vrfregmsgs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vrfregmsgs(static_cast<int>(i)));
    }
  }

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfRegMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfRegMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfRegMsg)
    MergeFrom(*source);
  }
}

void SLVrfRegMsg::MergeFrom(const SLVrfRegMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vrfregmsgs_.MergeFrom(from.vrfregmsgs_);
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLVrfRegMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegMsg::CopyFrom(const SLVrfRegMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegMsg::IsInitialized() const {
  return true;
}

void SLVrfRegMsg::Swap(SLVrfRegMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegMsg::InternalSwap(SLVrfRegMsg* other) {
  using std::swap;
  vrfregmsgs_.InternalSwap(&other->vrfregmsgs_);
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegMsg::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLVrfRegMsgRes::InitAsDefaultInstance() {
  ::service_layer::_SLVrfRegMsgRes_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLVrfRegMsgRes::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegMsgRes::kErrStatusFieldNumber;
const int SLVrfRegMsgRes::kVrfNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegMsgRes::SLVrfRegMsgRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegMsgRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegMsgRes)
}
SLVrfRegMsgRes::SLVrfRegMsgRes(const SLVrfRegMsgRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegMsgRes)
}

void SLVrfRegMsgRes::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errstatus_ = NULL;
  _cached_size_ = 0;
}

SLVrfRegMsgRes::~SLVrfRegMsgRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegMsgRes)
  SharedDtor();
}

void SLVrfRegMsgRes::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete errstatus_;
}

void SLVrfRegMsgRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegMsgRes::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLVrfRegMsgRes& SLVrfRegMsgRes::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegMsgRes();
  return *internal_default_instance();
}

SLVrfRegMsgRes* SLVrfRegMsgRes::New(::google::protobuf::Arena* arena) const {
  SLVrfRegMsgRes* n = new SLVrfRegMsgRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegMsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfRegMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  _internal_metadata_.Clear();
}

bool SLVrfRegMsgRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegMsgRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVrfRegMsgRes.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegMsgRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegMsgRes)
  return false;
#undef DO_
}

void SLVrfRegMsgRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegMsgRes.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vrfname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegMsgRes)
}

::google::protobuf::uint8* SLVrfRegMsgRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegMsgRes.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vrfname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegMsgRes)
  return target;
}

size_t SLVrfRegMsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfRegMsgRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegMsgRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfRegMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfRegMsgRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegMsgRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfRegMsgRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfRegMsgRes)
    MergeFrom(*source);
  }
}

void SLVrfRegMsgRes::MergeFrom(const SLVrfRegMsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfRegMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
}

void SLVrfRegMsgRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfRegMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegMsgRes::CopyFrom(const SLVrfRegMsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfRegMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegMsgRes::IsInitialized() const {
  return true;
}

void SLVrfRegMsgRes::Swap(SLVrfRegMsgRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegMsgRes::InternalSwap(SLVrfRegMsgRes* other) {
  using std::swap;
  vrfname_.Swap(&other->vrfname_);
  swap(errstatus_, other->errstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegMsgRes::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLVrfRegMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLVrfRegMsgRsp_default_instance_._instance.get_mutable()->statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLVrfRegMsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegMsgRsp::kStatusSummaryFieldNumber;
const int SLVrfRegMsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegMsgRsp::SLVrfRegMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegMsgRsp)
}
SLVrfRegMsgRsp::SLVrfRegMsgRsp(const SLVrfRegMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statussummary()) {
    statussummary_ = new ::service_layer::SLErrorStatus(*from.statussummary_);
  } else {
    statussummary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegMsgRsp)
}

void SLVrfRegMsgRsp::SharedCtor() {
  statussummary_ = NULL;
  _cached_size_ = 0;
}

SLVrfRegMsgRsp::~SLVrfRegMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegMsgRsp)
  SharedDtor();
}

void SLVrfRegMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete statussummary_;
}

void SLVrfRegMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegMsgRsp::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLVrfRegMsgRsp& SLVrfRegMsgRsp::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegMsgRsp();
  return *internal_default_instance();
}

SLVrfRegMsgRsp* SLVrfRegMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLVrfRegMsgRsp* n = new SLVrfRegMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
  _internal_metadata_.Clear();
}

bool SLVrfRegMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus StatusSummary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLVrfRegMsgRes Results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegMsgRsp)
  return false;
#undef DO_
}

void SLVrfRegMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->statussummary_, output);
  }

  // repeated .service_layer.SLVrfRegMsgRes Results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegMsgRsp)
}

::google::protobuf::uint8* SLVrfRegMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->statussummary_, deterministic, target);
  }

  // repeated .service_layer.SLVrfRegMsgRes Results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegMsgRsp)
  return target;
}

size_t SLVrfRegMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfRegMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLVrfRegMsgRes Results = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->statussummary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfRegMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfRegMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfRegMsgRsp)
    MergeFrom(*source);
  }
}

void SLVrfRegMsgRsp::MergeFrom(const SLVrfRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
}

void SLVrfRegMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegMsgRsp::CopyFrom(const SLVrfRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegMsgRsp::IsInitialized() const {
  return true;
}

void SLVrfRegMsgRsp::Swap(SLVrfRegMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegMsgRsp::InternalSwap(SLVrfRegMsgRsp* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  swap(statussummary_, other->statussummary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLVrfRegGetMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegGetMsg::kVrfNameFieldNumber;
const int SLVrfRegGetMsg::kEntriesCountFieldNumber;
const int SLVrfRegGetMsg::kGetNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegGetMsg::SLVrfRegGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegGetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegGetMsg)
}
SLVrfRegGetMsg::SLVrfRegGetMsg(const SLVrfRegGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  ::memcpy(&entriescount_, &from.entriescount_,
    static_cast<size_t>(reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&entriescount_)) + sizeof(getnext_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegGetMsg)
}

void SLVrfRegGetMsg::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entriescount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&entriescount_)) + sizeof(getnext_));
  _cached_size_ = 0;
}

SLVrfRegGetMsg::~SLVrfRegGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegGetMsg)
  SharedDtor();
}

void SLVrfRegGetMsg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLVrfRegGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegGetMsg::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLVrfRegGetMsg& SLVrfRegGetMsg::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegGetMsg();
  return *internal_default_instance();
}

SLVrfRegGetMsg* SLVrfRegGetMsg::New(::google::protobuf::Arena* arena) const {
  SLVrfRegGetMsg* n = new SLVrfRegGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfRegGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entriescount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&entriescount_)) + sizeof(getnext_));
  _internal_metadata_.Clear();
}

bool SLVrfRegGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string VrfName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVrfRegGetMsg.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EntriesCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entriescount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool GetNext = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getnext_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegGetMsg)
  return false;
#undef DO_
}

void SLVrfRegGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegGetMsg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entriescount(), output);
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->getnext(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegGetMsg)
}

::google::protobuf::uint8* SLVrfRegGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegGetMsg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entriescount(), target);
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->getnext(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegGetMsg)
  return target;
}

size_t SLVrfRegGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfRegGetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entriescount());
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfRegGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfRegGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfRegGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfRegGetMsg)
    MergeFrom(*source);
  }
}

void SLVrfRegGetMsg::MergeFrom(const SLVrfRegGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfRegGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.entriescount() != 0) {
    set_entriescount(from.entriescount());
  }
  if (from.getnext() != 0) {
    set_getnext(from.getnext());
  }
}

void SLVrfRegGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfRegGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegGetMsg::CopyFrom(const SLVrfRegGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfRegGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegGetMsg::IsInitialized() const {
  return true;
}

void SLVrfRegGetMsg::Swap(SLVrfRegGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegGetMsg::InternalSwap(SLVrfRegGetMsg* other) {
  using std::swap;
  vrfname_.Swap(&other->vrfname_);
  swap(entriescount_, other->entriescount_);
  swap(getnext_, other->getnext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegGetMsg::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLVrfRegGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLVrfRegGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLVrfRegGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegGetMsgRsp::kEofFieldNumber;
const int SLVrfRegGetMsgRsp::kErrStatusFieldNumber;
const int SLVrfRegGetMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegGetMsgRsp::SLVrfRegGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegGetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegGetMsgRsp)
}
SLVrfRegGetMsgRsp::SLVrfRegGetMsgRsp(const SLVrfRegGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  eof_ = from.eof_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegGetMsgRsp)
}

void SLVrfRegGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(eof_));
  _cached_size_ = 0;
}

SLVrfRegGetMsgRsp::~SLVrfRegGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegGetMsgRsp)
  SharedDtor();
}

void SLVrfRegGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLVrfRegGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegGetMsgRsp::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLVrfRegGetMsgRsp& SLVrfRegGetMsgRsp::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegGetMsgRsp();
  return *internal_default_instance();
}

SLVrfRegGetMsgRsp* SLVrfRegGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLVrfRegGetMsgRsp* n = new SLVrfRegGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfRegGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  eof_ = false;
  _internal_metadata_.Clear();
}

bool SLVrfRegGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Eof = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLVrfReg Entries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegGetMsgRsp)
  return false;
#undef DO_
}

void SLVrfRegGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Eof = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->eof(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // repeated .service_layer.SLVrfReg Entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegGetMsgRsp)
}

::google::protobuf::uint8* SLVrfRegGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Eof = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->eof(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->errstatus_, deterministic, target);
  }

  // repeated .service_layer.SLVrfReg Entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegGetMsgRsp)
  return target;
}

size_t SLVrfRegGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfRegGetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLVrfReg Entries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // bool Eof = 1;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfRegGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfRegGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfRegGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfRegGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLVrfRegGetMsgRsp::MergeFrom(const SLVrfRegGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfRegGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
}

void SLVrfRegGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfRegGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegGetMsgRsp::CopyFrom(const SLVrfRegGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfRegGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegGetMsgRsp::IsInitialized() const {
  return true;
}

void SLVrfRegGetMsgRsp::Swap(SLVrfRegGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegGetMsgRsp::InternalSwap(SLVrfRegGetMsgRsp* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  swap(errstatus_, other->errstatus_);
  swap(eof_, other->eof_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegGetMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLVRFGetStatsMsgRes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVRFGetStatsMsgRes::kVrfNameFieldNumber;
const int SLVRFGetStatsMsgRes::kRouteCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVRFGetStatsMsgRes::SLVRFGetStatsMsgRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVRFGetStatsMsgRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVRFGetStatsMsgRes)
}
SLVRFGetStatsMsgRes::SLVRFGetStatsMsgRes(const SLVRFGetStatsMsgRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  routecount_ = from.routecount_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVRFGetStatsMsgRes)
}

void SLVRFGetStatsMsgRes::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routecount_ = 0u;
  _cached_size_ = 0;
}

SLVRFGetStatsMsgRes::~SLVRFGetStatsMsgRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLVRFGetStatsMsgRes)
  SharedDtor();
}

void SLVRFGetStatsMsgRes::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLVRFGetStatsMsgRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVRFGetStatsMsgRes::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLVRFGetStatsMsgRes& SLVRFGetStatsMsgRes::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVRFGetStatsMsgRes();
  return *internal_default_instance();
}

SLVRFGetStatsMsgRes* SLVRFGetStatsMsgRes::New(::google::protobuf::Arena* arena) const {
  SLVRFGetStatsMsgRes* n = new SLVRFGetStatsMsgRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVRFGetStatsMsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVRFGetStatsMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routecount_ = 0u;
  _internal_metadata_.Clear();
}

bool SLVRFGetStatsMsgRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVRFGetStatsMsgRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string VrfName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVRFGetStatsMsgRes.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RouteCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &routecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVRFGetStatsMsgRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVRFGetStatsMsgRes)
  return false;
#undef DO_
}

void SLVRFGetStatsMsgRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVRFGetStatsMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVRFGetStatsMsgRes.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // uint32 RouteCount = 2;
  if (this->routecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->routecount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLVRFGetStatsMsgRes)
}

::google::protobuf::uint8* SLVRFGetStatsMsgRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVRFGetStatsMsgRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVRFGetStatsMsgRes.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // uint32 RouteCount = 2;
  if (this->routecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->routecount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVRFGetStatsMsgRes)
  return target;
}

size_t SLVRFGetStatsMsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVRFGetStatsMsgRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // uint32 RouteCount = 2;
  if (this->routecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->routecount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVRFGetStatsMsgRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVRFGetStatsMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVRFGetStatsMsgRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVRFGetStatsMsgRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVRFGetStatsMsgRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVRFGetStatsMsgRes)
    MergeFrom(*source);
  }
}

void SLVRFGetStatsMsgRes::MergeFrom(const SLVRFGetStatsMsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVRFGetStatsMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.routecount() != 0) {
    set_routecount(from.routecount());
  }
}

void SLVRFGetStatsMsgRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVRFGetStatsMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVRFGetStatsMsgRes::CopyFrom(const SLVRFGetStatsMsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVRFGetStatsMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVRFGetStatsMsgRes::IsInitialized() const {
  return true;
}

void SLVRFGetStatsMsgRes::Swap(SLVRFGetStatsMsgRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVRFGetStatsMsgRes::InternalSwap(SLVRFGetStatsMsgRes* other) {
  using std::swap;
  vrfname_.Swap(&other->vrfname_);
  swap(routecount_, other->routecount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVRFGetStatsMsgRes::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLVRFGetStatsMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLVRFGetStatsMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLVRFGetStatsMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVRFGetStatsMsgRsp::kEofFieldNumber;
const int SLVRFGetStatsMsgRsp::kErrStatusFieldNumber;
const int SLVRFGetStatsMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVRFGetStatsMsgRsp::SLVRFGetStatsMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVRFGetStatsMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVRFGetStatsMsgRsp)
}
SLVRFGetStatsMsgRsp::SLVRFGetStatsMsgRsp(const SLVRFGetStatsMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  eof_ = from.eof_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVRFGetStatsMsgRsp)
}

void SLVRFGetStatsMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(eof_));
  _cached_size_ = 0;
}

SLVRFGetStatsMsgRsp::~SLVRFGetStatsMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLVRFGetStatsMsgRsp)
  SharedDtor();
}

void SLVRFGetStatsMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLVRFGetStatsMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVRFGetStatsMsgRsp::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLVRFGetStatsMsgRsp& SLVRFGetStatsMsgRsp::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVRFGetStatsMsgRsp();
  return *internal_default_instance();
}

SLVRFGetStatsMsgRsp* SLVRFGetStatsMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLVRFGetStatsMsgRsp* n = new SLVRFGetStatsMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVRFGetStatsMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVRFGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  eof_ = false;
  _internal_metadata_.Clear();
}

bool SLVRFGetStatsMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVRFGetStatsMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Eof = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVRFGetStatsMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVRFGetStatsMsgRsp)
  return false;
#undef DO_
}

void SLVRFGetStatsMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVRFGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Eof = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->eof(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLVRFGetStatsMsgRsp)
}

::google::protobuf::uint8* SLVRFGetStatsMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVRFGetStatsMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Eof = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->eof(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->errstatus_, deterministic, target);
  }

  // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVRFGetStatsMsgRsp)
  return target;
}

size_t SLVRFGetStatsMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVRFGetStatsMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // bool Eof = 1;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVRFGetStatsMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVRFGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVRFGetStatsMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVRFGetStatsMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVRFGetStatsMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVRFGetStatsMsgRsp)
    MergeFrom(*source);
  }
}

void SLVRFGetStatsMsgRsp::MergeFrom(const SLVRFGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVRFGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
}

void SLVRFGetStatsMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVRFGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVRFGetStatsMsgRsp::CopyFrom(const SLVRFGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVRFGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVRFGetStatsMsgRsp::IsInitialized() const {
  return true;
}

void SLVRFGetStatsMsgRsp::Swap(SLVRFGetStatsMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVRFGetStatsMsgRsp::InternalSwap(SLVRFGetStatsMsgRsp* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  swap(errstatus_, other->errstatus_);
  swap(eof_, other->eof_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVRFGetStatsMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRouteCommon::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteCommon::kAdminDistanceFieldNumber;
const int SLRouteCommon::kLocalLabelFieldNumber;
const int SLRouteCommon::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteCommon::SLRouteCommon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteCommon();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteCommon)
}
SLRouteCommon::SLRouteCommon(const SLRouteCommon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&admindistance_, &from.admindistance_,
    static_cast<size_t>(reinterpret_cast<char*>(&tag_) -
    reinterpret_cast<char*>(&admindistance_)) + sizeof(tag_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteCommon)
}

void SLRouteCommon::SharedCtor() {
  ::memset(&admindistance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tag_) -
      reinterpret_cast<char*>(&admindistance_)) + sizeof(tag_));
  _cached_size_ = 0;
}

SLRouteCommon::~SLRouteCommon() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteCommon)
  SharedDtor();
}

void SLRouteCommon::SharedDtor() {
}

void SLRouteCommon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteCommon::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRouteCommon& SLRouteCommon::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteCommon();
  return *internal_default_instance();
}

SLRouteCommon* SLRouteCommon::New(::google::protobuf::Arena* arena) const {
  SLRouteCommon* n = new SLRouteCommon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteCommon::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&admindistance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tag_) -
      reinterpret_cast<char*>(&admindistance_)) + sizeof(tag_));
  _internal_metadata_.Clear();
}

bool SLRouteCommon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteCommon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 AdminDistance = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admindistance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LocalLabel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &locallabel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Tag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteCommon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteCommon)
  return false;
#undef DO_
}

void SLRouteCommon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AdminDistance = 1;
  if (this->admindistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->admindistance(), output);
  }

  // uint32 LocalLabel = 2;
  if (this->locallabel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->locallabel(), output);
  }

  // uint32 Tag = 3;
  if (this->tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteCommon)
}

::google::protobuf::uint8* SLRouteCommon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteCommon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AdminDistance = 1;
  if (this->admindistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->admindistance(), target);
  }

  // uint32 LocalLabel = 2;
  if (this->locallabel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->locallabel(), target);
  }

  // uint32 Tag = 3;
  if (this->tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteCommon)
  return target;
}

size_t SLRouteCommon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteCommon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 AdminDistance = 1;
  if (this->admindistance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->admindistance());
  }

  // uint32 LocalLabel = 2;
  if (this->locallabel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->locallabel());
  }

  // uint32 Tag = 3;
  if (this->tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteCommon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteCommon)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteCommon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteCommon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteCommon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteCommon)
    MergeFrom(*source);
  }
}

void SLRouteCommon::MergeFrom(const SLRouteCommon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteCommon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.admindistance() != 0) {
    set_admindistance(from.admindistance());
  }
  if (from.locallabel() != 0) {
    set_locallabel(from.locallabel());
  }
  if (from.tag() != 0) {
    set_tag(from.tag());
  }
}

void SLRouteCommon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteCommon::CopyFrom(const SLRouteCommon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteCommon::IsInitialized() const {
  return true;
}

void SLRouteCommon::Swap(SLRouteCommon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteCommon::InternalSwap(SLRouteCommon* other) {
  using std::swap;
  swap(admindistance_, other->admindistance_);
  swap(locallabel_, other->locallabel_);
  swap(tag_, other->tag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteCommon::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRoutePath::InitAsDefaultInstance() {
  ::service_layer::_SLRoutePath_default_instance_._instance.get_mutable()->nexthopaddress_ = const_cast< ::service_layer::SLIpAddress*>(
      ::service_layer::SLIpAddress::internal_default_instance());
  ::service_layer::_SLRoutePath_default_instance_._instance.get_mutable()->nexthopinterface_ = const_cast< ::service_layer::SLInterface*>(
      ::service_layer::SLInterface::internal_default_instance());
}
void SLRoutePath::clear_nexthopaddress() {
  if (GetArenaNoVirtual() == NULL && nexthopaddress_ != NULL) {
    delete nexthopaddress_;
  }
  nexthopaddress_ = NULL;
}
void SLRoutePath::clear_nexthopinterface() {
  if (GetArenaNoVirtual() == NULL && nexthopinterface_ != NULL) {
    delete nexthopinterface_;
  }
  nexthopinterface_ = NULL;
}
void SLRoutePath::clear_remoteaddress() {
  remoteaddress_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutePath::kNexthopAddressFieldNumber;
const int SLRoutePath::kNexthopInterfaceFieldNumber;
const int SLRoutePath::kLoadMetricFieldNumber;
const int SLRoutePath::kVrfNameFieldNumber;
const int SLRoutePath::kMetricFieldNumber;
const int SLRoutePath::kPathIdFieldNumber;
const int SLRoutePath::kProtectedPathBitmapFieldNumber;
const int SLRoutePath::kLabelStackFieldNumber;
const int SLRoutePath::kRemoteAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutePath::SLRoutePath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRoutePath();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutePath)
}
SLRoutePath::SLRoutePath(const SLRoutePath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      protectedpathbitmap_(from.protectedpathbitmap_),
      labelstack_(from.labelstack_),
      remoteaddress_(from.remoteaddress_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_nexthopaddress()) {
    nexthopaddress_ = new ::service_layer::SLIpAddress(*from.nexthopaddress_);
  } else {
    nexthopaddress_ = NULL;
  }
  if (from.has_nexthopinterface()) {
    nexthopinterface_ = new ::service_layer::SLInterface(*from.nexthopinterface_);
  } else {
    nexthopinterface_ = NULL;
  }
  ::memcpy(&loadmetric_, &from.loadmetric_,
    static_cast<size_t>(reinterpret_cast<char*>(&pathid_) -
    reinterpret_cast<char*>(&loadmetric_)) + sizeof(pathid_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutePath)
}

void SLRoutePath::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nexthopaddress_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pathid_) -
      reinterpret_cast<char*>(&nexthopaddress_)) + sizeof(pathid_));
  _cached_size_ = 0;
}

SLRoutePath::~SLRoutePath() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutePath)
  SharedDtor();
}

void SLRoutePath::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete nexthopaddress_;
  if (this != internal_default_instance()) delete nexthopinterface_;
}

void SLRoutePath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutePath::descriptor() {
  ::protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRoutePath& SLRoutePath::default_instance() {
  ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRoutePath();
  return *internal_default_instance();
}

SLRoutePath* SLRoutePath::New(::google::protobuf::Arena* arena) const {
  SLRoutePath* n = new SLRoutePath;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutePath::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  protectedpathbitmap_.Clear();
  labelstack_.Clear();
  remoteaddress_.Clear();
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && nexthopaddress_ != NULL) {
    delete nexthopaddress_;
  }
  nexthopaddress_ = NULL;
  if (GetArenaNoVirtual() == NULL && nexthopinterface_ != NULL) {
    delete nexthopinterface_;
  }
  nexthopinterface_ = NULL;
  ::memset(&loadmetric_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pathid_) -
      reinterpret_cast<char*>(&loadmetric_)) + sizeof(pathid_));
  _internal_metadata_.Clear();
}

bool SLRoutePath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutePath)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLIpAddress NexthopAddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nexthopaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLInterface NexthopInterface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nexthopinterface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LoadMetric = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loadmetric_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutePath.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Metric = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &metric_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PathId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pathid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 ProtectedPathBitmap = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_protectedpathbitmap())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 58u, input, this->mutable_protectedpathbitmap())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 LabelStack = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_labelstack())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_labelstack())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLIpAddress RemoteAddress = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_remoteaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutePath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutePath)
  return false;
#undef DO_
}

void SLRoutePath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->nexthopaddress_, output);
  }

  // .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->nexthopinterface_, output);
  }

  // uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->loadmetric(), output);
  }

  // string VrfName = 4;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutePath.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->vrfname(), output);
  }

  // uint32 Metric = 5;
  if (this->metric() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->metric(), output);
  }

  // uint32 PathId = 6;
  if (this->pathid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pathid(), output);
  }

  // repeated uint64 ProtectedPathBitmap = 7;
  if (this->protectedpathbitmap_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _protectedpathbitmap_cached_byte_size_));
  }
  for (int i = 0, n = this->protectedpathbitmap_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->protectedpathbitmap(i), output);
  }

  // repeated uint32 LabelStack = 8;
  if (this->labelstack_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _labelstack_cached_byte_size_));
  }
  for (int i = 0, n = this->labelstack_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->labelstack(i), output);
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->remoteaddress_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->remoteaddress(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutePath)
}

::google::protobuf::uint8* SLRoutePath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutePath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->nexthopaddress_, deterministic, target);
  }

  // .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->nexthopinterface_, deterministic, target);
  }

  // uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->loadmetric(), target);
  }

  // string VrfName = 4;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutePath.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->vrfname(), target);
  }

  // uint32 Metric = 5;
  if (this->metric() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->metric(), target);
  }

  // uint32 PathId = 6;
  if (this->pathid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pathid(), target);
  }

  // repeated uint64 ProtectedPathBitmap = 7;
  if (this->protectedpathbitmap_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _protectedpathbitmap_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->protectedpathbitmap_, target);
  }

  // repeated uint32 LabelStack = 8;
  if (this->labelstack_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _labelstack_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->labelstack_, target);
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->remoteaddress_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->remoteaddress(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutePath)
  return target;
}

size_t SLRoutePath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutePath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 ProtectedPathBitmap = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->protectedpathbitmap_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _protectedpathbitmap_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 LabelStack = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->labelstack_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _labelstack_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->remoteaddress_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->remoteaddress(static_cast<int>(i)));
    }
  }

  // string VrfName = 4;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->nexthopaddress_);
  }

  // .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->nexthopinterface_);
  }

  // uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loadmetric());
  }

  // uint32 Metric = 5;
  if (this->metric() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->metric());
  }

  // uint32 PathId = 6;
  if (this->pathid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pathid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutePath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutePath)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutePath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutePath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutePath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutePath)
    MergeFrom(*source);
  }
}

void SLRoutePath::MergeFrom(const SLRoutePath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutePath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  protectedpathbitmap_.MergeFrom(from.protectedpathbitmap_);
  labelstack_.MergeFrom(from.labelstack_);
  remoteaddress_.MergeFrom(from.remoteaddress_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_nexthopaddress()) {
    mutable_nexthopaddress()->::service_layer::SLIpAddress::MergeFrom(from.nexthopaddress());
  }
  if (from.has_nexthopinterface()) {
    mutable_nexthopinterface()->::service_layer::SLInterface::MergeFrom(from.nexthopinterface());
  }
  if (from.loadmetric() != 0) {
    set_loadmetric(from.loadmetric());
  }
  if (from.metric() != 0) {
    set_metric(from.metric());
  }
  if (from.pathid() != 0) {
    set_pathid(from.pathid());
  }
}

void SLRoutePath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutePath::CopyFrom(const SLRoutePath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutePath::IsInitialized() const {
  return true;
}

void SLRoutePath::Swap(SLRoutePath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutePath::InternalSwap(SLRoutePath* other) {
  using std::swap;
  protectedpathbitmap_.InternalSwap(&other->protectedpathbitmap_);
  labelstack_.InternalSwap(&other->labelstack_);
  remoteaddress_.InternalSwap(&other->remoteaddress_);
  vrfname_.Swap(&other->vrfname_);
  swap(nexthopaddress_, other->nexthopaddress_);
  swap(nexthopinterface_, other->nexthopinterface_);
  swap(loadmetric_, other->loadmetric_);
  swap(metric_, other->metric_);
  swap(pathid_, other->pathid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutePath::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
