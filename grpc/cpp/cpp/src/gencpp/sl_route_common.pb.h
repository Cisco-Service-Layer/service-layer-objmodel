// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_route_common.proto

#ifndef PROTOBUF_sl_5froute_5fcommon_2eproto__INCLUDED
#define PROTOBUF_sl_5froute_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "sl_common_types.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_sl_5froute_5fcommon_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[14];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSLRouteGlobalsGetMsgImpl();
void InitDefaultsSLRouteGlobalsGetMsg();
void InitDefaultsSLRouteGlobalsGetMsgRspImpl();
void InitDefaultsSLRouteGlobalsGetMsgRsp();
void InitDefaultsSLRouteGlobalStatsGetMsgImpl();
void InitDefaultsSLRouteGlobalStatsGetMsg();
void InitDefaultsSLRouteGlobalStatsGetMsgRspImpl();
void InitDefaultsSLRouteGlobalStatsGetMsgRsp();
void InitDefaultsSLVrfRegImpl();
void InitDefaultsSLVrfReg();
void InitDefaultsSLVrfRegMsgImpl();
void InitDefaultsSLVrfRegMsg();
void InitDefaultsSLVrfRegMsgResImpl();
void InitDefaultsSLVrfRegMsgRes();
void InitDefaultsSLVrfRegMsgRspImpl();
void InitDefaultsSLVrfRegMsgRsp();
void InitDefaultsSLVrfRegGetMsgImpl();
void InitDefaultsSLVrfRegGetMsg();
void InitDefaultsSLVrfRegGetMsgRspImpl();
void InitDefaultsSLVrfRegGetMsgRsp();
void InitDefaultsSLVRFGetStatsMsgResImpl();
void InitDefaultsSLVRFGetStatsMsgRes();
void InitDefaultsSLVRFGetStatsMsgRspImpl();
void InitDefaultsSLVRFGetStatsMsgRsp();
void InitDefaultsSLRouteCommonImpl();
void InitDefaultsSLRouteCommon();
void InitDefaultsSLRoutePathImpl();
void InitDefaultsSLRoutePath();
inline void InitDefaults() {
  InitDefaultsSLRouteGlobalsGetMsg();
  InitDefaultsSLRouteGlobalsGetMsgRsp();
  InitDefaultsSLRouteGlobalStatsGetMsg();
  InitDefaultsSLRouteGlobalStatsGetMsgRsp();
  InitDefaultsSLVrfReg();
  InitDefaultsSLVrfRegMsg();
  InitDefaultsSLVrfRegMsgRes();
  InitDefaultsSLVrfRegMsgRsp();
  InitDefaultsSLVrfRegGetMsg();
  InitDefaultsSLVrfRegGetMsgRsp();
  InitDefaultsSLVRFGetStatsMsgRes();
  InitDefaultsSLVRFGetStatsMsgRsp();
  InitDefaultsSLRouteCommon();
  InitDefaultsSLRoutePath();
}
}  // namespace protobuf_sl_5froute_5fcommon_2eproto
namespace service_layer {
class SLRouteCommon;
class SLRouteCommonDefaultTypeInternal;
extern SLRouteCommonDefaultTypeInternal _SLRouteCommon_default_instance_;
class SLRouteGlobalStatsGetMsg;
class SLRouteGlobalStatsGetMsgDefaultTypeInternal;
extern SLRouteGlobalStatsGetMsgDefaultTypeInternal _SLRouteGlobalStatsGetMsg_default_instance_;
class SLRouteGlobalStatsGetMsgRsp;
class SLRouteGlobalStatsGetMsgRspDefaultTypeInternal;
extern SLRouteGlobalStatsGetMsgRspDefaultTypeInternal _SLRouteGlobalStatsGetMsgRsp_default_instance_;
class SLRouteGlobalsGetMsg;
class SLRouteGlobalsGetMsgDefaultTypeInternal;
extern SLRouteGlobalsGetMsgDefaultTypeInternal _SLRouteGlobalsGetMsg_default_instance_;
class SLRouteGlobalsGetMsgRsp;
class SLRouteGlobalsGetMsgRspDefaultTypeInternal;
extern SLRouteGlobalsGetMsgRspDefaultTypeInternal _SLRouteGlobalsGetMsgRsp_default_instance_;
class SLRoutePath;
class SLRoutePathDefaultTypeInternal;
extern SLRoutePathDefaultTypeInternal _SLRoutePath_default_instance_;
class SLVRFGetStatsMsgRes;
class SLVRFGetStatsMsgResDefaultTypeInternal;
extern SLVRFGetStatsMsgResDefaultTypeInternal _SLVRFGetStatsMsgRes_default_instance_;
class SLVRFGetStatsMsgRsp;
class SLVRFGetStatsMsgRspDefaultTypeInternal;
extern SLVRFGetStatsMsgRspDefaultTypeInternal _SLVRFGetStatsMsgRsp_default_instance_;
class SLVrfReg;
class SLVrfRegDefaultTypeInternal;
extern SLVrfRegDefaultTypeInternal _SLVrfReg_default_instance_;
class SLVrfRegGetMsg;
class SLVrfRegGetMsgDefaultTypeInternal;
extern SLVrfRegGetMsgDefaultTypeInternal _SLVrfRegGetMsg_default_instance_;
class SLVrfRegGetMsgRsp;
class SLVrfRegGetMsgRspDefaultTypeInternal;
extern SLVrfRegGetMsgRspDefaultTypeInternal _SLVrfRegGetMsgRsp_default_instance_;
class SLVrfRegMsg;
class SLVrfRegMsgDefaultTypeInternal;
extern SLVrfRegMsgDefaultTypeInternal _SLVrfRegMsg_default_instance_;
class SLVrfRegMsgRes;
class SLVrfRegMsgResDefaultTypeInternal;
extern SLVrfRegMsgResDefaultTypeInternal _SLVrfRegMsgRes_default_instance_;
class SLVrfRegMsgRsp;
class SLVrfRegMsgRspDefaultTypeInternal;
extern SLVrfRegMsgRspDefaultTypeInternal _SLVrfRegMsgRsp_default_instance_;
}  // namespace service_layer
namespace service_layer {

// ===================================================================

class SLRouteGlobalsGetMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRouteGlobalsGetMsg) */ {
 public:
  SLRouteGlobalsGetMsg();
  virtual ~SLRouteGlobalsGetMsg();

  SLRouteGlobalsGetMsg(const SLRouteGlobalsGetMsg& from);

  inline SLRouteGlobalsGetMsg& operator=(const SLRouteGlobalsGetMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRouteGlobalsGetMsg(SLRouteGlobalsGetMsg&& from) noexcept
    : SLRouteGlobalsGetMsg() {
    *this = ::std::move(from);
  }

  inline SLRouteGlobalsGetMsg& operator=(SLRouteGlobalsGetMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRouteGlobalsGetMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRouteGlobalsGetMsg* internal_default_instance() {
    return reinterpret_cast<const SLRouteGlobalsGetMsg*>(
               &_SLRouteGlobalsGetMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SLRouteGlobalsGetMsg* other);
  friend void swap(SLRouteGlobalsGetMsg& a, SLRouteGlobalsGetMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRouteGlobalsGetMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRouteGlobalsGetMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRouteGlobalsGetMsg& from);
  void MergeFrom(const SLRouteGlobalsGetMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRouteGlobalsGetMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:service_layer.SLRouteGlobalsGetMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalsGetMsgImpl();
};
// -------------------------------------------------------------------

class SLRouteGlobalsGetMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRouteGlobalsGetMsgRsp) */ {
 public:
  SLRouteGlobalsGetMsgRsp();
  virtual ~SLRouteGlobalsGetMsgRsp();

  SLRouteGlobalsGetMsgRsp(const SLRouteGlobalsGetMsgRsp& from);

  inline SLRouteGlobalsGetMsgRsp& operator=(const SLRouteGlobalsGetMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRouteGlobalsGetMsgRsp(SLRouteGlobalsGetMsgRsp&& from) noexcept
    : SLRouteGlobalsGetMsgRsp() {
    *this = ::std::move(from);
  }

  inline SLRouteGlobalsGetMsgRsp& operator=(SLRouteGlobalsGetMsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRouteGlobalsGetMsgRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRouteGlobalsGetMsgRsp* internal_default_instance() {
    return reinterpret_cast<const SLRouteGlobalsGetMsgRsp*>(
               &_SLRouteGlobalsGetMsgRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SLRouteGlobalsGetMsgRsp* other);
  friend void swap(SLRouteGlobalsGetMsgRsp& a, SLRouteGlobalsGetMsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRouteGlobalsGetMsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRouteGlobalsGetMsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRouteGlobalsGetMsgRsp& from);
  void MergeFrom(const SLRouteGlobalsGetMsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRouteGlobalsGetMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* release_errstatus();
  ::service_layer::SLErrorStatus* mutable_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // uint32 MaxVrfregPerVrfregmsg = 2;
  void clear_maxvrfregpervrfregmsg();
  static const int kMaxVrfregPerVrfregmsgFieldNumber = 2;
  ::google::protobuf::uint32 maxvrfregpervrfregmsg() const;
  void set_maxvrfregpervrfregmsg(::google::protobuf::uint32 value);

  // uint32 MaxRoutePerRoutemsg = 3;
  void clear_maxrouteperroutemsg();
  static const int kMaxRoutePerRoutemsgFieldNumber = 3;
  ::google::protobuf::uint32 maxrouteperroutemsg() const;
  void set_maxrouteperroutemsg(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRouteGlobalsGetMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::uint32 maxvrfregpervrfregmsg_;
  ::google::protobuf::uint32 maxrouteperroutemsg_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalsGetMsgRspImpl();
};
// -------------------------------------------------------------------

class SLRouteGlobalStatsGetMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRouteGlobalStatsGetMsg) */ {
 public:
  SLRouteGlobalStatsGetMsg();
  virtual ~SLRouteGlobalStatsGetMsg();

  SLRouteGlobalStatsGetMsg(const SLRouteGlobalStatsGetMsg& from);

  inline SLRouteGlobalStatsGetMsg& operator=(const SLRouteGlobalStatsGetMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRouteGlobalStatsGetMsg(SLRouteGlobalStatsGetMsg&& from) noexcept
    : SLRouteGlobalStatsGetMsg() {
    *this = ::std::move(from);
  }

  inline SLRouteGlobalStatsGetMsg& operator=(SLRouteGlobalStatsGetMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRouteGlobalStatsGetMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRouteGlobalStatsGetMsg* internal_default_instance() {
    return reinterpret_cast<const SLRouteGlobalStatsGetMsg*>(
               &_SLRouteGlobalStatsGetMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SLRouteGlobalStatsGetMsg* other);
  friend void swap(SLRouteGlobalStatsGetMsg& a, SLRouteGlobalStatsGetMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRouteGlobalStatsGetMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRouteGlobalStatsGetMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRouteGlobalStatsGetMsg& from);
  void MergeFrom(const SLRouteGlobalStatsGetMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRouteGlobalStatsGetMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:service_layer.SLRouteGlobalStatsGetMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalStatsGetMsgImpl();
};
// -------------------------------------------------------------------

class SLRouteGlobalStatsGetMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRouteGlobalStatsGetMsgRsp) */ {
 public:
  SLRouteGlobalStatsGetMsgRsp();
  virtual ~SLRouteGlobalStatsGetMsgRsp();

  SLRouteGlobalStatsGetMsgRsp(const SLRouteGlobalStatsGetMsgRsp& from);

  inline SLRouteGlobalStatsGetMsgRsp& operator=(const SLRouteGlobalStatsGetMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRouteGlobalStatsGetMsgRsp(SLRouteGlobalStatsGetMsgRsp&& from) noexcept
    : SLRouteGlobalStatsGetMsgRsp() {
    *this = ::std::move(from);
  }

  inline SLRouteGlobalStatsGetMsgRsp& operator=(SLRouteGlobalStatsGetMsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRouteGlobalStatsGetMsgRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRouteGlobalStatsGetMsgRsp* internal_default_instance() {
    return reinterpret_cast<const SLRouteGlobalStatsGetMsgRsp*>(
               &_SLRouteGlobalStatsGetMsgRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SLRouteGlobalStatsGetMsgRsp* other);
  friend void swap(SLRouteGlobalStatsGetMsgRsp& a, SLRouteGlobalStatsGetMsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRouteGlobalStatsGetMsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRouteGlobalStatsGetMsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRouteGlobalStatsGetMsgRsp& from);
  void MergeFrom(const SLRouteGlobalStatsGetMsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRouteGlobalStatsGetMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* release_errstatus();
  ::service_layer::SLErrorStatus* mutable_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // uint32 VrfCount = 2;
  void clear_vrfcount();
  static const int kVrfCountFieldNumber = 2;
  ::google::protobuf::uint32 vrfcount() const;
  void set_vrfcount(::google::protobuf::uint32 value);

  // uint32 RouteCount = 3;
  void clear_routecount();
  static const int kRouteCountFieldNumber = 3;
  ::google::protobuf::uint32 routecount() const;
  void set_routecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRouteGlobalStatsGetMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::uint32 vrfcount_;
  ::google::protobuf::uint32 routecount_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteGlobalStatsGetMsgRspImpl();
};
// -------------------------------------------------------------------

class SLVrfReg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLVrfReg) */ {
 public:
  SLVrfReg();
  virtual ~SLVrfReg();

  SLVrfReg(const SLVrfReg& from);

  inline SLVrfReg& operator=(const SLVrfReg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLVrfReg(SLVrfReg&& from) noexcept
    : SLVrfReg() {
    *this = ::std::move(from);
  }

  inline SLVrfReg& operator=(SLVrfReg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLVrfReg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLVrfReg* internal_default_instance() {
    return reinterpret_cast<const SLVrfReg*>(
               &_SLVrfReg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SLVrfReg* other);
  friend void swap(SLVrfReg& a, SLVrfReg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLVrfReg* New() const PROTOBUF_FINAL { return New(NULL); }

  SLVrfReg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLVrfReg& from);
  void MergeFrom(const SLVrfReg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLVrfReg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string VrfName = 1;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 1;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // uint32 AdminDistance = 2;
  void clear_admindistance();
  static const int kAdminDistanceFieldNumber = 2;
  ::google::protobuf::uint32 admindistance() const;
  void set_admindistance(::google::protobuf::uint32 value);

  // uint32 VrfPurgeIntervalSeconds = 3;
  void clear_vrfpurgeintervalseconds();
  static const int kVrfPurgeIntervalSecondsFieldNumber = 3;
  ::google::protobuf::uint32 vrfpurgeintervalseconds() const;
  void set_vrfpurgeintervalseconds(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLVrfReg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::google::protobuf::uint32 admindistance_;
  ::google::protobuf::uint32 vrfpurgeintervalseconds_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegImpl();
};
// -------------------------------------------------------------------

class SLVrfRegMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLVrfRegMsg) */ {
 public:
  SLVrfRegMsg();
  virtual ~SLVrfRegMsg();

  SLVrfRegMsg(const SLVrfRegMsg& from);

  inline SLVrfRegMsg& operator=(const SLVrfRegMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLVrfRegMsg(SLVrfRegMsg&& from) noexcept
    : SLVrfRegMsg() {
    *this = ::std::move(from);
  }

  inline SLVrfRegMsg& operator=(SLVrfRegMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLVrfRegMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLVrfRegMsg* internal_default_instance() {
    return reinterpret_cast<const SLVrfRegMsg*>(
               &_SLVrfRegMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SLVrfRegMsg* other);
  friend void swap(SLVrfRegMsg& a, SLVrfRegMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLVrfRegMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  SLVrfRegMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLVrfRegMsg& from);
  void MergeFrom(const SLVrfRegMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLVrfRegMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
  int vrfregmsgs_size() const;
  void clear_vrfregmsgs();
  static const int kVrfRegMsgsFieldNumber = 2;
  const ::service_layer::SLVrfReg& vrfregmsgs(int index) const;
  ::service_layer::SLVrfReg* mutable_vrfregmsgs(int index);
  ::service_layer::SLVrfReg* add_vrfregmsgs();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >*
      mutable_vrfregmsgs();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >&
      vrfregmsgs() const;

  // .service_layer.SLRegOp Oper = 1;
  void clear_oper();
  static const int kOperFieldNumber = 1;
  ::service_layer::SLRegOp oper() const;
  void set_oper(::service_layer::SLRegOp value);

  // @@protoc_insertion_point(class_scope:service_layer.SLVrfRegMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg > vrfregmsgs_;
  int oper_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegMsgImpl();
};
// -------------------------------------------------------------------

class SLVrfRegMsgRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLVrfRegMsgRes) */ {
 public:
  SLVrfRegMsgRes();
  virtual ~SLVrfRegMsgRes();

  SLVrfRegMsgRes(const SLVrfRegMsgRes& from);

  inline SLVrfRegMsgRes& operator=(const SLVrfRegMsgRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLVrfRegMsgRes(SLVrfRegMsgRes&& from) noexcept
    : SLVrfRegMsgRes() {
    *this = ::std::move(from);
  }

  inline SLVrfRegMsgRes& operator=(SLVrfRegMsgRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLVrfRegMsgRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLVrfRegMsgRes* internal_default_instance() {
    return reinterpret_cast<const SLVrfRegMsgRes*>(
               &_SLVrfRegMsgRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SLVrfRegMsgRes* other);
  friend void swap(SLVrfRegMsgRes& a, SLVrfRegMsgRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLVrfRegMsgRes* New() const PROTOBUF_FINAL { return New(NULL); }

  SLVrfRegMsgRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLVrfRegMsgRes& from);
  void MergeFrom(const SLVrfRegMsgRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLVrfRegMsgRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string VrfName = 2;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 2;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* release_errstatus();
  ::service_layer::SLErrorStatus* mutable_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // @@protoc_insertion_point(class_scope:service_layer.SLVrfRegMsgRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::service_layer::SLErrorStatus* errstatus_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegMsgResImpl();
};
// -------------------------------------------------------------------

class SLVrfRegMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLVrfRegMsgRsp) */ {
 public:
  SLVrfRegMsgRsp();
  virtual ~SLVrfRegMsgRsp();

  SLVrfRegMsgRsp(const SLVrfRegMsgRsp& from);

  inline SLVrfRegMsgRsp& operator=(const SLVrfRegMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLVrfRegMsgRsp(SLVrfRegMsgRsp&& from) noexcept
    : SLVrfRegMsgRsp() {
    *this = ::std::move(from);
  }

  inline SLVrfRegMsgRsp& operator=(SLVrfRegMsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLVrfRegMsgRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLVrfRegMsgRsp* internal_default_instance() {
    return reinterpret_cast<const SLVrfRegMsgRsp*>(
               &_SLVrfRegMsgRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SLVrfRegMsgRsp* other);
  friend void swap(SLVrfRegMsgRsp& a, SLVrfRegMsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLVrfRegMsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SLVrfRegMsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLVrfRegMsgRsp& from);
  void MergeFrom(const SLVrfRegMsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLVrfRegMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLVrfRegMsgRes Results = 2;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 2;
  const ::service_layer::SLVrfRegMsgRes& results(int index) const;
  ::service_layer::SLVrfRegMsgRes* mutable_results(int index);
  ::service_layer::SLVrfRegMsgRes* add_results();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfRegMsgRes >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfRegMsgRes >&
      results() const;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  bool has_statussummary() const;
  void clear_statussummary();
  static const int kStatusSummaryFieldNumber = 1;
  const ::service_layer::SLErrorStatus& statussummary() const;
  ::service_layer::SLErrorStatus* release_statussummary();
  ::service_layer::SLErrorStatus* mutable_statussummary();
  void set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary);

  // @@protoc_insertion_point(class_scope:service_layer.SLVrfRegMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfRegMsgRes > results_;
  ::service_layer::SLErrorStatus* statussummary_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegMsgRspImpl();
};
// -------------------------------------------------------------------

class SLVrfRegGetMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLVrfRegGetMsg) */ {
 public:
  SLVrfRegGetMsg();
  virtual ~SLVrfRegGetMsg();

  SLVrfRegGetMsg(const SLVrfRegGetMsg& from);

  inline SLVrfRegGetMsg& operator=(const SLVrfRegGetMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLVrfRegGetMsg(SLVrfRegGetMsg&& from) noexcept
    : SLVrfRegGetMsg() {
    *this = ::std::move(from);
  }

  inline SLVrfRegGetMsg& operator=(SLVrfRegGetMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLVrfRegGetMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLVrfRegGetMsg* internal_default_instance() {
    return reinterpret_cast<const SLVrfRegGetMsg*>(
               &_SLVrfRegGetMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SLVrfRegGetMsg* other);
  friend void swap(SLVrfRegGetMsg& a, SLVrfRegGetMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLVrfRegGetMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  SLVrfRegGetMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLVrfRegGetMsg& from);
  void MergeFrom(const SLVrfRegGetMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLVrfRegGetMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string VrfName = 1;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 1;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // uint32 EntriesCount = 2;
  void clear_entriescount();
  static const int kEntriesCountFieldNumber = 2;
  ::google::protobuf::uint32 entriescount() const;
  void set_entriescount(::google::protobuf::uint32 value);

  // bool GetNext = 3;
  void clear_getnext();
  static const int kGetNextFieldNumber = 3;
  bool getnext() const;
  void set_getnext(bool value);

  // @@protoc_insertion_point(class_scope:service_layer.SLVrfRegGetMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::google::protobuf::uint32 entriescount_;
  bool getnext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegGetMsgImpl();
};
// -------------------------------------------------------------------

class SLVrfRegGetMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLVrfRegGetMsgRsp) */ {
 public:
  SLVrfRegGetMsgRsp();
  virtual ~SLVrfRegGetMsgRsp();

  SLVrfRegGetMsgRsp(const SLVrfRegGetMsgRsp& from);

  inline SLVrfRegGetMsgRsp& operator=(const SLVrfRegGetMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLVrfRegGetMsgRsp(SLVrfRegGetMsgRsp&& from) noexcept
    : SLVrfRegGetMsgRsp() {
    *this = ::std::move(from);
  }

  inline SLVrfRegGetMsgRsp& operator=(SLVrfRegGetMsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLVrfRegGetMsgRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLVrfRegGetMsgRsp* internal_default_instance() {
    return reinterpret_cast<const SLVrfRegGetMsgRsp*>(
               &_SLVrfRegGetMsgRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SLVrfRegGetMsgRsp* other);
  friend void swap(SLVrfRegGetMsgRsp& a, SLVrfRegGetMsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLVrfRegGetMsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SLVrfRegGetMsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLVrfRegGetMsgRsp& from);
  void MergeFrom(const SLVrfRegGetMsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLVrfRegGetMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLVrfReg Entries = 3;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 3;
  const ::service_layer::SLVrfReg& entries(int index) const;
  ::service_layer::SLVrfReg* mutable_entries(int index);
  ::service_layer::SLVrfReg* add_entries();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >&
      entries() const;

  // .service_layer.SLErrorStatus ErrStatus = 2;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 2;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* release_errstatus();
  ::service_layer::SLErrorStatus* mutable_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // bool Eof = 1;
  void clear_eof();
  static const int kEofFieldNumber = 1;
  bool eof() const;
  void set_eof(bool value);

  // @@protoc_insertion_point(class_scope:service_layer.SLVrfRegGetMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg > entries_;
  ::service_layer::SLErrorStatus* errstatus_;
  bool eof_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfRegGetMsgRspImpl();
};
// -------------------------------------------------------------------

class SLVRFGetStatsMsgRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLVRFGetStatsMsgRes) */ {
 public:
  SLVRFGetStatsMsgRes();
  virtual ~SLVRFGetStatsMsgRes();

  SLVRFGetStatsMsgRes(const SLVRFGetStatsMsgRes& from);

  inline SLVRFGetStatsMsgRes& operator=(const SLVRFGetStatsMsgRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLVRFGetStatsMsgRes(SLVRFGetStatsMsgRes&& from) noexcept
    : SLVRFGetStatsMsgRes() {
    *this = ::std::move(from);
  }

  inline SLVRFGetStatsMsgRes& operator=(SLVRFGetStatsMsgRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLVRFGetStatsMsgRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLVRFGetStatsMsgRes* internal_default_instance() {
    return reinterpret_cast<const SLVRFGetStatsMsgRes*>(
               &_SLVRFGetStatsMsgRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(SLVRFGetStatsMsgRes* other);
  friend void swap(SLVRFGetStatsMsgRes& a, SLVRFGetStatsMsgRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLVRFGetStatsMsgRes* New() const PROTOBUF_FINAL { return New(NULL); }

  SLVRFGetStatsMsgRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLVRFGetStatsMsgRes& from);
  void MergeFrom(const SLVRFGetStatsMsgRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLVRFGetStatsMsgRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string VrfName = 1;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 1;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // uint32 RouteCount = 2;
  void clear_routecount();
  static const int kRouteCountFieldNumber = 2;
  ::google::protobuf::uint32 routecount() const;
  void set_routecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLVRFGetStatsMsgRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::google::protobuf::uint32 routecount_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVRFGetStatsMsgResImpl();
};
// -------------------------------------------------------------------

class SLVRFGetStatsMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLVRFGetStatsMsgRsp) */ {
 public:
  SLVRFGetStatsMsgRsp();
  virtual ~SLVRFGetStatsMsgRsp();

  SLVRFGetStatsMsgRsp(const SLVRFGetStatsMsgRsp& from);

  inline SLVRFGetStatsMsgRsp& operator=(const SLVRFGetStatsMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLVRFGetStatsMsgRsp(SLVRFGetStatsMsgRsp&& from) noexcept
    : SLVRFGetStatsMsgRsp() {
    *this = ::std::move(from);
  }

  inline SLVRFGetStatsMsgRsp& operator=(SLVRFGetStatsMsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLVRFGetStatsMsgRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLVRFGetStatsMsgRsp* internal_default_instance() {
    return reinterpret_cast<const SLVRFGetStatsMsgRsp*>(
               &_SLVRFGetStatsMsgRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SLVRFGetStatsMsgRsp* other);
  friend void swap(SLVRFGetStatsMsgRsp& a, SLVRFGetStatsMsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLVRFGetStatsMsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SLVRFGetStatsMsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLVRFGetStatsMsgRsp& from);
  void MergeFrom(const SLVRFGetStatsMsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLVRFGetStatsMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 3;
  const ::service_layer::SLVRFGetStatsMsgRes& entries(int index) const;
  ::service_layer::SLVRFGetStatsMsgRes* mutable_entries(int index);
  ::service_layer::SLVRFGetStatsMsgRes* add_entries();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLVRFGetStatsMsgRes >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVRFGetStatsMsgRes >&
      entries() const;

  // .service_layer.SLErrorStatus ErrStatus = 2;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 2;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* release_errstatus();
  ::service_layer::SLErrorStatus* mutable_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // bool Eof = 1;
  void clear_eof();
  static const int kEofFieldNumber = 1;
  bool eof() const;
  void set_eof(bool value);

  // @@protoc_insertion_point(class_scope:service_layer.SLVRFGetStatsMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLVRFGetStatsMsgRes > entries_;
  ::service_layer::SLErrorStatus* errstatus_;
  bool eof_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVRFGetStatsMsgRspImpl();
};
// -------------------------------------------------------------------

class SLRouteCommon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRouteCommon) */ {
 public:
  SLRouteCommon();
  virtual ~SLRouteCommon();

  SLRouteCommon(const SLRouteCommon& from);

  inline SLRouteCommon& operator=(const SLRouteCommon& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRouteCommon(SLRouteCommon&& from) noexcept
    : SLRouteCommon() {
    *this = ::std::move(from);
  }

  inline SLRouteCommon& operator=(SLRouteCommon&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRouteCommon& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRouteCommon* internal_default_instance() {
    return reinterpret_cast<const SLRouteCommon*>(
               &_SLRouteCommon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SLRouteCommon* other);
  friend void swap(SLRouteCommon& a, SLRouteCommon& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRouteCommon* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRouteCommon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRouteCommon& from);
  void MergeFrom(const SLRouteCommon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRouteCommon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 AdminDistance = 1;
  void clear_admindistance();
  static const int kAdminDistanceFieldNumber = 1;
  ::google::protobuf::uint32 admindistance() const;
  void set_admindistance(::google::protobuf::uint32 value);

  // uint32 LocalLabel = 2;
  void clear_locallabel();
  static const int kLocalLabelFieldNumber = 2;
  ::google::protobuf::uint32 locallabel() const;
  void set_locallabel(::google::protobuf::uint32 value);

  // uint32 Tag = 3;
  void clear_tag();
  static const int kTagFieldNumber = 3;
  ::google::protobuf::uint32 tag() const;
  void set_tag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRouteCommon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 admindistance_;
  ::google::protobuf::uint32 locallabel_;
  ::google::protobuf::uint32 tag_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteCommonImpl();
};
// -------------------------------------------------------------------

class SLRoutePath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutePath) */ {
 public:
  SLRoutePath();
  virtual ~SLRoutePath();

  SLRoutePath(const SLRoutePath& from);

  inline SLRoutePath& operator=(const SLRoutePath& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRoutePath(SLRoutePath&& from) noexcept
    : SLRoutePath() {
    *this = ::std::move(from);
  }

  inline SLRoutePath& operator=(SLRoutePath&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutePath& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRoutePath* internal_default_instance() {
    return reinterpret_cast<const SLRoutePath*>(
               &_SLRoutePath_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SLRoutePath* other);
  friend void swap(SLRoutePath& a, SLRoutePath& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRoutePath* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutePath* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutePath& from);
  void MergeFrom(const SLRoutePath& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutePath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 ProtectedPathBitmap = 7;
  int protectedpathbitmap_size() const;
  void clear_protectedpathbitmap();
  static const int kProtectedPathBitmapFieldNumber = 7;
  ::google::protobuf::uint64 protectedpathbitmap(int index) const;
  void set_protectedpathbitmap(int index, ::google::protobuf::uint64 value);
  void add_protectedpathbitmap(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      protectedpathbitmap() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_protectedpathbitmap();

  // repeated uint32 LabelStack = 8;
  int labelstack_size() const;
  void clear_labelstack();
  static const int kLabelStackFieldNumber = 8;
  ::google::protobuf::uint32 labelstack(int index) const;
  void set_labelstack(int index, ::google::protobuf::uint32 value);
  void add_labelstack(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      labelstack() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_labelstack();

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  int remoteaddress_size() const;
  void clear_remoteaddress();
  static const int kRemoteAddressFieldNumber = 9;
  const ::service_layer::SLIpAddress& remoteaddress(int index) const;
  ::service_layer::SLIpAddress* mutable_remoteaddress(int index);
  ::service_layer::SLIpAddress* add_remoteaddress();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >*
      mutable_remoteaddress();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >&
      remoteaddress() const;

  // string VrfName = 4;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 4;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // .service_layer.SLIpAddress NexthopAddress = 1;
  bool has_nexthopaddress() const;
  void clear_nexthopaddress();
  static const int kNexthopAddressFieldNumber = 1;
  const ::service_layer::SLIpAddress& nexthopaddress() const;
  ::service_layer::SLIpAddress* release_nexthopaddress();
  ::service_layer::SLIpAddress* mutable_nexthopaddress();
  void set_allocated_nexthopaddress(::service_layer::SLIpAddress* nexthopaddress);

  // .service_layer.SLInterface NexthopInterface = 2;
  bool has_nexthopinterface() const;
  void clear_nexthopinterface();
  static const int kNexthopInterfaceFieldNumber = 2;
  const ::service_layer::SLInterface& nexthopinterface() const;
  ::service_layer::SLInterface* release_nexthopinterface();
  ::service_layer::SLInterface* mutable_nexthopinterface();
  void set_allocated_nexthopinterface(::service_layer::SLInterface* nexthopinterface);

  // uint32 LoadMetric = 3;
  void clear_loadmetric();
  static const int kLoadMetricFieldNumber = 3;
  ::google::protobuf::uint32 loadmetric() const;
  void set_loadmetric(::google::protobuf::uint32 value);

  // uint32 Metric = 5;
  void clear_metric();
  static const int kMetricFieldNumber = 5;
  ::google::protobuf::uint32 metric() const;
  void set_metric(::google::protobuf::uint32 value);

  // uint32 PathId = 6;
  void clear_pathid();
  static const int kPathIdFieldNumber = 6;
  ::google::protobuf::uint32 pathid() const;
  void set_pathid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutePath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > protectedpathbitmap_;
  mutable int _protectedpathbitmap_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > labelstack_;
  mutable int _labelstack_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress > remoteaddress_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::service_layer::SLIpAddress* nexthopaddress_;
  ::service_layer::SLInterface* nexthopinterface_;
  ::google::protobuf::uint32 loadmetric_;
  ::google::protobuf::uint32 metric_;
  ::google::protobuf::uint32 pathid_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRoutePathImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SLRouteGlobalsGetMsg

// -------------------------------------------------------------------

// SLRouteGlobalsGetMsgRsp

// .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLRouteGlobalsGetMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
inline const ::service_layer::SLErrorStatus& SLRouteGlobalsGetMsgRsp::errstatus() const {
  const ::service_layer::SLErrorStatus* p = errstatus_;
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalsGetMsgRsp.ErrStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLErrorStatus*>(
      &::service_layer::_SLErrorStatus_default_instance_);
}
inline ::service_layer::SLErrorStatus* SLRouteGlobalsGetMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteGlobalsGetMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline ::service_layer::SLErrorStatus* SLRouteGlobalsGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteGlobalsGetMsgRsp.ErrStatus)
  return errstatus_;
}
inline void SLRouteGlobalsGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(errstatus_);
  }
  if (errstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    
  } else {
    
  }
  errstatus_ = errstatus;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteGlobalsGetMsgRsp.ErrStatus)
}

// uint32 MaxVrfregPerVrfregmsg = 2;
inline void SLRouteGlobalsGetMsgRsp::clear_maxvrfregpervrfregmsg() {
  maxvrfregpervrfregmsg_ = 0u;
}
inline ::google::protobuf::uint32 SLRouteGlobalsGetMsgRsp::maxvrfregpervrfregmsg() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalsGetMsgRsp.MaxVrfregPerVrfregmsg)
  return maxvrfregpervrfregmsg_;
}
inline void SLRouteGlobalsGetMsgRsp::set_maxvrfregpervrfregmsg(::google::protobuf::uint32 value) {
  
  maxvrfregpervrfregmsg_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalsGetMsgRsp.MaxVrfregPerVrfregmsg)
}

// uint32 MaxRoutePerRoutemsg = 3;
inline void SLRouteGlobalsGetMsgRsp::clear_maxrouteperroutemsg() {
  maxrouteperroutemsg_ = 0u;
}
inline ::google::protobuf::uint32 SLRouteGlobalsGetMsgRsp::maxrouteperroutemsg() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalsGetMsgRsp.MaxRoutePerRoutemsg)
  return maxrouteperroutemsg_;
}
inline void SLRouteGlobalsGetMsgRsp::set_maxrouteperroutemsg(::google::protobuf::uint32 value) {
  
  maxrouteperroutemsg_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalsGetMsgRsp.MaxRoutePerRoutemsg)
}

// -------------------------------------------------------------------

// SLRouteGlobalStatsGetMsg

// -------------------------------------------------------------------

// SLRouteGlobalStatsGetMsgRsp

// .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLRouteGlobalStatsGetMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
inline const ::service_layer::SLErrorStatus& SLRouteGlobalStatsGetMsgRsp::errstatus() const {
  const ::service_layer::SLErrorStatus* p = errstatus_;
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalStatsGetMsgRsp.ErrStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLErrorStatus*>(
      &::service_layer::_SLErrorStatus_default_instance_);
}
inline ::service_layer::SLErrorStatus* SLRouteGlobalStatsGetMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteGlobalStatsGetMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline ::service_layer::SLErrorStatus* SLRouteGlobalStatsGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteGlobalStatsGetMsgRsp.ErrStatus)
  return errstatus_;
}
inline void SLRouteGlobalStatsGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(errstatus_);
  }
  if (errstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    
  } else {
    
  }
  errstatus_ = errstatus;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteGlobalStatsGetMsgRsp.ErrStatus)
}

// uint32 VrfCount = 2;
inline void SLRouteGlobalStatsGetMsgRsp::clear_vrfcount() {
  vrfcount_ = 0u;
}
inline ::google::protobuf::uint32 SLRouteGlobalStatsGetMsgRsp::vrfcount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalStatsGetMsgRsp.VrfCount)
  return vrfcount_;
}
inline void SLRouteGlobalStatsGetMsgRsp::set_vrfcount(::google::protobuf::uint32 value) {
  
  vrfcount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalStatsGetMsgRsp.VrfCount)
}

// uint32 RouteCount = 3;
inline void SLRouteGlobalStatsGetMsgRsp::clear_routecount() {
  routecount_ = 0u;
}
inline ::google::protobuf::uint32 SLRouteGlobalStatsGetMsgRsp::routecount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalStatsGetMsgRsp.RouteCount)
  return routecount_;
}
inline void SLRouteGlobalStatsGetMsgRsp::set_routecount(::google::protobuf::uint32 value) {
  
  routecount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalStatsGetMsgRsp.RouteCount)
}

// -------------------------------------------------------------------

// SLVrfReg

// string VrfName = 1;
inline void SLVrfReg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLVrfReg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfReg.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLVrfReg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVrfReg.VrfName)
}
#if LANG_CXX11
inline void SLVrfReg::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLVrfReg.VrfName)
}
#endif
inline void SLVrfReg::set_vrfname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVrfReg.VrfName)
}
inline void SLVrfReg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVrfReg.VrfName)
}
inline ::std::string* SLVrfReg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfReg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLVrfReg::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfReg.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLVrfReg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfReg.VrfName)
}

// uint32 AdminDistance = 2;
inline void SLVrfReg::clear_admindistance() {
  admindistance_ = 0u;
}
inline ::google::protobuf::uint32 SLVrfReg::admindistance() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfReg.AdminDistance)
  return admindistance_;
}
inline void SLVrfReg::set_admindistance(::google::protobuf::uint32 value) {
  
  admindistance_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfReg.AdminDistance)
}

// uint32 VrfPurgeIntervalSeconds = 3;
inline void SLVrfReg::clear_vrfpurgeintervalseconds() {
  vrfpurgeintervalseconds_ = 0u;
}
inline ::google::protobuf::uint32 SLVrfReg::vrfpurgeintervalseconds() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfReg.VrfPurgeIntervalSeconds)
  return vrfpurgeintervalseconds_;
}
inline void SLVrfReg::set_vrfpurgeintervalseconds(::google::protobuf::uint32 value) {
  
  vrfpurgeintervalseconds_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfReg.VrfPurgeIntervalSeconds)
}

// -------------------------------------------------------------------

// SLVrfRegMsg

// .service_layer.SLRegOp Oper = 1;
inline void SLVrfRegMsg::clear_oper() {
  oper_ = 0;
}
inline ::service_layer::SLRegOp SLVrfRegMsg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsg.Oper)
  return static_cast< ::service_layer::SLRegOp >(oper_);
}
inline void SLVrfRegMsg::set_oper(::service_layer::SLRegOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegMsg.Oper)
}

// repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
inline int SLVrfRegMsg::vrfregmsgs_size() const {
  return vrfregmsgs_.size();
}
inline void SLVrfRegMsg::clear_vrfregmsgs() {
  vrfregmsgs_.Clear();
}
inline const ::service_layer::SLVrfReg& SLVrfRegMsg::vrfregmsgs(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_.Get(index);
}
inline ::service_layer::SLVrfReg* SLVrfRegMsg::mutable_vrfregmsgs(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_.Mutable(index);
}
inline ::service_layer::SLVrfReg* SLVrfRegMsg::add_vrfregmsgs() {
  // @@protoc_insertion_point(field_add:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >*
SLVrfRegMsg::mutable_vrfregmsgs() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return &vrfregmsgs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >&
SLVrfRegMsg::vrfregmsgs() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_;
}

// -------------------------------------------------------------------

// SLVrfRegMsgRes

// .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLVrfRegMsgRes::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
inline const ::service_layer::SLErrorStatus& SLVrfRegMsgRes::errstatus() const {
  const ::service_layer::SLErrorStatus* p = errstatus_;
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRes.ErrStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLErrorStatus*>(
      &::service_layer::_SLErrorStatus_default_instance_);
}
inline ::service_layer::SLErrorStatus* SLVrfRegMsgRes::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfRegMsgRes.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline ::service_layer::SLErrorStatus* SLVrfRegMsgRes::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRes.ErrStatus)
  return errstatus_;
}
inline void SLVrfRegMsgRes::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(errstatus_);
  }
  if (errstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    
  } else {
    
  }
  errstatus_ = errstatus;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegMsgRes.ErrStatus)
}

// string VrfName = 2;
inline void SLVrfRegMsgRes::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLVrfRegMsgRes::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRes.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLVrfRegMsgRes::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegMsgRes.VrfName)
}
#if LANG_CXX11
inline void SLVrfRegMsgRes::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLVrfRegMsgRes.VrfName)
}
#endif
inline void SLVrfRegMsgRes::set_vrfname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVrfRegMsgRes.VrfName)
}
inline void SLVrfRegMsgRes::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVrfRegMsgRes.VrfName)
}
inline ::std::string* SLVrfRegMsgRes::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRes.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLVrfRegMsgRes::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfRegMsgRes.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLVrfRegMsgRes::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegMsgRes.VrfName)
}

// -------------------------------------------------------------------

// SLVrfRegMsgRsp

// .service_layer.SLErrorStatus StatusSummary = 1;
inline bool SLVrfRegMsgRsp::has_statussummary() const {
  return this != internal_default_instance() && statussummary_ != NULL;
}
inline const ::service_layer::SLErrorStatus& SLVrfRegMsgRsp::statussummary() const {
  const ::service_layer::SLErrorStatus* p = statussummary_;
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRsp.StatusSummary)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLErrorStatus*>(
      &::service_layer::_SLErrorStatus_default_instance_);
}
inline ::service_layer::SLErrorStatus* SLVrfRegMsgRsp::release_statussummary() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfRegMsgRsp.StatusSummary)
  
  ::service_layer::SLErrorStatus* temp = statussummary_;
  statussummary_ = NULL;
  return temp;
}
inline ::service_layer::SLErrorStatus* SLVrfRegMsgRsp::mutable_statussummary() {
  
  if (statussummary_ == NULL) {
    statussummary_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRsp.StatusSummary)
  return statussummary_;
}
inline void SLVrfRegMsgRsp::set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(statussummary_);
  }
  if (statussummary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      statussummary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, statussummary, submessage_arena);
    }
    
  } else {
    
  }
  statussummary_ = statussummary;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegMsgRsp.StatusSummary)
}

// repeated .service_layer.SLVrfRegMsgRes Results = 2;
inline int SLVrfRegMsgRsp::results_size() const {
  return results_.size();
}
inline void SLVrfRegMsgRsp::clear_results() {
  results_.Clear();
}
inline const ::service_layer::SLVrfRegMsgRes& SLVrfRegMsgRsp::results(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRsp.Results)
  return results_.Get(index);
}
inline ::service_layer::SLVrfRegMsgRes* SLVrfRegMsgRsp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRsp.Results)
  return results_.Mutable(index);
}
inline ::service_layer::SLVrfRegMsgRes* SLVrfRegMsgRsp::add_results() {
  // @@protoc_insertion_point(field_add:service_layer.SLVrfRegMsgRsp.Results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfRegMsgRes >*
SLVrfRegMsgRsp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVrfRegMsgRsp.Results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfRegMsgRes >&
SLVrfRegMsgRsp::results() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVrfRegMsgRsp.Results)
  return results_;
}

// -------------------------------------------------------------------

// SLVrfRegGetMsg

// string VrfName = 1;
inline void SLVrfRegGetMsg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLVrfRegGetMsg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsg.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLVrfRegGetMsg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsg.VrfName)
}
#if LANG_CXX11
inline void SLVrfRegGetMsg::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLVrfRegGetMsg.VrfName)
}
#endif
inline void SLVrfRegGetMsg::set_vrfname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVrfRegGetMsg.VrfName)
}
inline void SLVrfRegGetMsg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVrfRegGetMsg.VrfName)
}
inline ::std::string* SLVrfRegGetMsg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegGetMsg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLVrfRegGetMsg::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfRegGetMsg.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLVrfRegGetMsg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegGetMsg.VrfName)
}

// uint32 EntriesCount = 2;
inline void SLVrfRegGetMsg::clear_entriescount() {
  entriescount_ = 0u;
}
inline ::google::protobuf::uint32 SLVrfRegGetMsg::entriescount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsg.EntriesCount)
  return entriescount_;
}
inline void SLVrfRegGetMsg::set_entriescount(::google::protobuf::uint32 value) {
  
  entriescount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsg.EntriesCount)
}

// bool GetNext = 3;
inline void SLVrfRegGetMsg::clear_getnext() {
  getnext_ = false;
}
inline bool SLVrfRegGetMsg::getnext() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsg.GetNext)
  return getnext_;
}
inline void SLVrfRegGetMsg::set_getnext(bool value) {
  
  getnext_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsg.GetNext)
}

// -------------------------------------------------------------------

// SLVrfRegGetMsgRsp

// bool Eof = 1;
inline void SLVrfRegGetMsgRsp::clear_eof() {
  eof_ = false;
}
inline bool SLVrfRegGetMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsgRsp.Eof)
  return eof_;
}
inline void SLVrfRegGetMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsgRsp.Eof)
}

// .service_layer.SLErrorStatus ErrStatus = 2;
inline bool SLVrfRegGetMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
inline const ::service_layer::SLErrorStatus& SLVrfRegGetMsgRsp::errstatus() const {
  const ::service_layer::SLErrorStatus* p = errstatus_;
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsgRsp.ErrStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLErrorStatus*>(
      &::service_layer::_SLErrorStatus_default_instance_);
}
inline ::service_layer::SLErrorStatus* SLVrfRegGetMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfRegGetMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline ::service_layer::SLErrorStatus* SLVrfRegGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegGetMsgRsp.ErrStatus)
  return errstatus_;
}
inline void SLVrfRegGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(errstatus_);
  }
  if (errstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    
  } else {
    
  }
  errstatus_ = errstatus;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegGetMsgRsp.ErrStatus)
}

// repeated .service_layer.SLVrfReg Entries = 3;
inline int SLVrfRegGetMsgRsp::entries_size() const {
  return entries_.size();
}
inline void SLVrfRegGetMsgRsp::clear_entries() {
  entries_.Clear();
}
inline const ::service_layer::SLVrfReg& SLVrfRegGetMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_.Get(index);
}
inline ::service_layer::SLVrfReg* SLVrfRegGetMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_.Mutable(index);
}
inline ::service_layer::SLVrfReg* SLVrfRegGetMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >*
SLVrfRegGetMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVrfRegGetMsgRsp.Entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >&
SLVrfRegGetMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_;
}

// -------------------------------------------------------------------

// SLVRFGetStatsMsgRes

// string VrfName = 1;
inline void SLVRFGetStatsMsgRes::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLVRFGetStatsMsgRes::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRes.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLVRFGetStatsMsgRes::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVRFGetStatsMsgRes.VrfName)
}
#if LANG_CXX11
inline void SLVRFGetStatsMsgRes::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLVRFGetStatsMsgRes.VrfName)
}
#endif
inline void SLVRFGetStatsMsgRes::set_vrfname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVRFGetStatsMsgRes.VrfName)
}
inline void SLVRFGetStatsMsgRes::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVRFGetStatsMsgRes.VrfName)
}
inline ::std::string* SLVRFGetStatsMsgRes::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVRFGetStatsMsgRes.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLVRFGetStatsMsgRes::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLVRFGetStatsMsgRes.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLVRFGetStatsMsgRes::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVRFGetStatsMsgRes.VrfName)
}

// uint32 RouteCount = 2;
inline void SLVRFGetStatsMsgRes::clear_routecount() {
  routecount_ = 0u;
}
inline ::google::protobuf::uint32 SLVRFGetStatsMsgRes::routecount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRes.RouteCount)
  return routecount_;
}
inline void SLVRFGetStatsMsgRes::set_routecount(::google::protobuf::uint32 value) {
  
  routecount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVRFGetStatsMsgRes.RouteCount)
}

// -------------------------------------------------------------------

// SLVRFGetStatsMsgRsp

// bool Eof = 1;
inline void SLVRFGetStatsMsgRsp::clear_eof() {
  eof_ = false;
}
inline bool SLVRFGetStatsMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRsp.Eof)
  return eof_;
}
inline void SLVRFGetStatsMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVRFGetStatsMsgRsp.Eof)
}

// .service_layer.SLErrorStatus ErrStatus = 2;
inline bool SLVRFGetStatsMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
inline const ::service_layer::SLErrorStatus& SLVRFGetStatsMsgRsp::errstatus() const {
  const ::service_layer::SLErrorStatus* p = errstatus_;
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRsp.ErrStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLErrorStatus*>(
      &::service_layer::_SLErrorStatus_default_instance_);
}
inline ::service_layer::SLErrorStatus* SLVRFGetStatsMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLVRFGetStatsMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline ::service_layer::SLErrorStatus* SLVRFGetStatsMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVRFGetStatsMsgRsp.ErrStatus)
  return errstatus_;
}
inline void SLVRFGetStatsMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(errstatus_);
  }
  if (errstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    
  } else {
    
  }
  errstatus_ = errstatus;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVRFGetStatsMsgRsp.ErrStatus)
}

// repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
inline int SLVRFGetStatsMsgRsp::entries_size() const {
  return entries_.size();
}
inline void SLVRFGetStatsMsgRsp::clear_entries() {
  entries_.Clear();
}
inline const ::service_layer::SLVRFGetStatsMsgRes& SLVRFGetStatsMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_.Get(index);
}
inline ::service_layer::SLVRFGetStatsMsgRes* SLVRFGetStatsMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_.Mutable(index);
}
inline ::service_layer::SLVRFGetStatsMsgRes* SLVRFGetStatsMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLVRFGetStatsMsgRes >*
SLVRFGetStatsMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVRFGetStatsMsgRes >&
SLVRFGetStatsMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_;
}

// -------------------------------------------------------------------

// SLRouteCommon

// uint32 AdminDistance = 1;
inline void SLRouteCommon::clear_admindistance() {
  admindistance_ = 0u;
}
inline ::google::protobuf::uint32 SLRouteCommon::admindistance() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteCommon.AdminDistance)
  return admindistance_;
}
inline void SLRouteCommon::set_admindistance(::google::protobuf::uint32 value) {
  
  admindistance_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteCommon.AdminDistance)
}

// uint32 LocalLabel = 2;
inline void SLRouteCommon::clear_locallabel() {
  locallabel_ = 0u;
}
inline ::google::protobuf::uint32 SLRouteCommon::locallabel() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteCommon.LocalLabel)
  return locallabel_;
}
inline void SLRouteCommon::set_locallabel(::google::protobuf::uint32 value) {
  
  locallabel_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteCommon.LocalLabel)
}

// uint32 Tag = 3;
inline void SLRouteCommon::clear_tag() {
  tag_ = 0u;
}
inline ::google::protobuf::uint32 SLRouteCommon::tag() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteCommon.Tag)
  return tag_;
}
inline void SLRouteCommon::set_tag(::google::protobuf::uint32 value) {
  
  tag_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteCommon.Tag)
}

// -------------------------------------------------------------------

// SLRoutePath

// .service_layer.SLIpAddress NexthopAddress = 1;
inline bool SLRoutePath::has_nexthopaddress() const {
  return this != internal_default_instance() && nexthopaddress_ != NULL;
}
inline const ::service_layer::SLIpAddress& SLRoutePath::nexthopaddress() const {
  const ::service_layer::SLIpAddress* p = nexthopaddress_;
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.NexthopAddress)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLIpAddress*>(
      &::service_layer::_SLIpAddress_default_instance_);
}
inline ::service_layer::SLIpAddress* SLRoutePath::release_nexthopaddress() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutePath.NexthopAddress)
  
  ::service_layer::SLIpAddress* temp = nexthopaddress_;
  nexthopaddress_ = NULL;
  return temp;
}
inline ::service_layer::SLIpAddress* SLRoutePath::mutable_nexthopaddress() {
  
  if (nexthopaddress_ == NULL) {
    nexthopaddress_ = new ::service_layer::SLIpAddress;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.NexthopAddress)
  return nexthopaddress_;
}
inline void SLRoutePath::set_allocated_nexthopaddress(::service_layer::SLIpAddress* nexthopaddress) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(nexthopaddress_);
  }
  if (nexthopaddress) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nexthopaddress = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nexthopaddress, submessage_arena);
    }
    
  } else {
    
  }
  nexthopaddress_ = nexthopaddress;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutePath.NexthopAddress)
}

// .service_layer.SLInterface NexthopInterface = 2;
inline bool SLRoutePath::has_nexthopinterface() const {
  return this != internal_default_instance() && nexthopinterface_ != NULL;
}
inline const ::service_layer::SLInterface& SLRoutePath::nexthopinterface() const {
  const ::service_layer::SLInterface* p = nexthopinterface_;
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.NexthopInterface)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLInterface*>(
      &::service_layer::_SLInterface_default_instance_);
}
inline ::service_layer::SLInterface* SLRoutePath::release_nexthopinterface() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutePath.NexthopInterface)
  
  ::service_layer::SLInterface* temp = nexthopinterface_;
  nexthopinterface_ = NULL;
  return temp;
}
inline ::service_layer::SLInterface* SLRoutePath::mutable_nexthopinterface() {
  
  if (nexthopinterface_ == NULL) {
    nexthopinterface_ = new ::service_layer::SLInterface;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.NexthopInterface)
  return nexthopinterface_;
}
inline void SLRoutePath::set_allocated_nexthopinterface(::service_layer::SLInterface* nexthopinterface) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(nexthopinterface_);
  }
  if (nexthopinterface) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nexthopinterface = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nexthopinterface, submessage_arena);
    }
    
  } else {
    
  }
  nexthopinterface_ = nexthopinterface;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutePath.NexthopInterface)
}

// uint32 LoadMetric = 3;
inline void SLRoutePath::clear_loadmetric() {
  loadmetric_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutePath::loadmetric() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.LoadMetric)
  return loadmetric_;
}
inline void SLRoutePath::set_loadmetric(::google::protobuf::uint32 value) {
  
  loadmetric_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.LoadMetric)
}

// string VrfName = 4;
inline void SLRoutePath::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutePath::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLRoutePath::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.VrfName)
}
#if LANG_CXX11
inline void SLRoutePath::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutePath.VrfName)
}
#endif
inline void SLRoutePath::set_vrfname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutePath.VrfName)
}
inline void SLRoutePath::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutePath.VrfName)
}
inline ::std::string* SLRoutePath::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutePath::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutePath.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutePath::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutePath.VrfName)
}

// uint32 Metric = 5;
inline void SLRoutePath::clear_metric() {
  metric_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutePath::metric() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.Metric)
  return metric_;
}
inline void SLRoutePath::set_metric(::google::protobuf::uint32 value) {
  
  metric_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.Metric)
}

// uint32 PathId = 6;
inline void SLRoutePath::clear_pathid() {
  pathid_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutePath::pathid() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.PathId)
  return pathid_;
}
inline void SLRoutePath::set_pathid(::google::protobuf::uint32 value) {
  
  pathid_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.PathId)
}

// repeated uint64 ProtectedPathBitmap = 7;
inline int SLRoutePath::protectedpathbitmap_size() const {
  return protectedpathbitmap_.size();
}
inline void SLRoutePath::clear_protectedpathbitmap() {
  protectedpathbitmap_.Clear();
}
inline ::google::protobuf::uint64 SLRoutePath::protectedpathbitmap(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.ProtectedPathBitmap)
  return protectedpathbitmap_.Get(index);
}
inline void SLRoutePath::set_protectedpathbitmap(int index, ::google::protobuf::uint64 value) {
  protectedpathbitmap_.Set(index, value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.ProtectedPathBitmap)
}
inline void SLRoutePath::add_protectedpathbitmap(::google::protobuf::uint64 value) {
  protectedpathbitmap_.Add(value);
  // @@protoc_insertion_point(field_add:service_layer.SLRoutePath.ProtectedPathBitmap)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SLRoutePath::protectedpathbitmap() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutePath.ProtectedPathBitmap)
  return protectedpathbitmap_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SLRoutePath::mutable_protectedpathbitmap() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutePath.ProtectedPathBitmap)
  return &protectedpathbitmap_;
}

// repeated uint32 LabelStack = 8;
inline int SLRoutePath::labelstack_size() const {
  return labelstack_.size();
}
inline void SLRoutePath::clear_labelstack() {
  labelstack_.Clear();
}
inline ::google::protobuf::uint32 SLRoutePath::labelstack(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.LabelStack)
  return labelstack_.Get(index);
}
inline void SLRoutePath::set_labelstack(int index, ::google::protobuf::uint32 value) {
  labelstack_.Set(index, value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.LabelStack)
}
inline void SLRoutePath::add_labelstack(::google::protobuf::uint32 value) {
  labelstack_.Add(value);
  // @@protoc_insertion_point(field_add:service_layer.SLRoutePath.LabelStack)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SLRoutePath::labelstack() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutePath.LabelStack)
  return labelstack_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SLRoutePath::mutable_labelstack() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutePath.LabelStack)
  return &labelstack_;
}

// repeated .service_layer.SLIpAddress RemoteAddress = 9;
inline int SLRoutePath::remoteaddress_size() const {
  return remoteaddress_.size();
}
inline const ::service_layer::SLIpAddress& SLRoutePath::remoteaddress(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_.Get(index);
}
inline ::service_layer::SLIpAddress* SLRoutePath::mutable_remoteaddress(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_.Mutable(index);
}
inline ::service_layer::SLIpAddress* SLRoutePath::add_remoteaddress() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >*
SLRoutePath::mutable_remoteaddress() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutePath.RemoteAddress)
  return &remoteaddress_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >&
SLRoutePath::remoteaddress() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service_layer

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sl_5froute_5fcommon_2eproto__INCLUDED
