// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_route_ipv4.proto

#ifndef PROTOBUF_sl_5froute_5fipv4_2eproto__INCLUDED
#define PROTOBUF_sl_5froute_5fipv4_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "sl_common_types.pb.h"
#include "sl_route_common.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_sl_5froute_5fipv4_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSLRoutev4Impl();
void InitDefaultsSLRoutev4();
void InitDefaultsSLRoutev4MsgImpl();
void InitDefaultsSLRoutev4Msg();
void InitDefaultsSLRoutev4ResImpl();
void InitDefaultsSLRoutev4Res();
void InitDefaultsSLRoutev4MsgRspImpl();
void InitDefaultsSLRoutev4MsgRsp();
void InitDefaultsSLRoutev4GetMsgImpl();
void InitDefaultsSLRoutev4GetMsg();
void InitDefaultsSLRoutev4GetMsgRspImpl();
void InitDefaultsSLRoutev4GetMsgRsp();
inline void InitDefaults() {
  InitDefaultsSLRoutev4();
  InitDefaultsSLRoutev4Msg();
  InitDefaultsSLRoutev4Res();
  InitDefaultsSLRoutev4MsgRsp();
  InitDefaultsSLRoutev4GetMsg();
  InitDefaultsSLRoutev4GetMsgRsp();
}
}  // namespace protobuf_sl_5froute_5fipv4_2eproto
namespace service_layer {
class SLRoutev4;
class SLRoutev4DefaultTypeInternal;
extern SLRoutev4DefaultTypeInternal _SLRoutev4_default_instance_;
class SLRoutev4GetMsg;
class SLRoutev4GetMsgDefaultTypeInternal;
extern SLRoutev4GetMsgDefaultTypeInternal _SLRoutev4GetMsg_default_instance_;
class SLRoutev4GetMsgRsp;
class SLRoutev4GetMsgRspDefaultTypeInternal;
extern SLRoutev4GetMsgRspDefaultTypeInternal _SLRoutev4GetMsgRsp_default_instance_;
class SLRoutev4Msg;
class SLRoutev4MsgDefaultTypeInternal;
extern SLRoutev4MsgDefaultTypeInternal _SLRoutev4Msg_default_instance_;
class SLRoutev4MsgRsp;
class SLRoutev4MsgRspDefaultTypeInternal;
extern SLRoutev4MsgRspDefaultTypeInternal _SLRoutev4MsgRsp_default_instance_;
class SLRoutev4Res;
class SLRoutev4ResDefaultTypeInternal;
extern SLRoutev4ResDefaultTypeInternal _SLRoutev4Res_default_instance_;
}  // namespace service_layer
namespace service_layer {

// ===================================================================

class SLRoutev4 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev4) */ {
 public:
  SLRoutev4();
  virtual ~SLRoutev4();

  SLRoutev4(const SLRoutev4& from);

  inline SLRoutev4& operator=(const SLRoutev4& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRoutev4(SLRoutev4&& from) noexcept
    : SLRoutev4() {
    *this = ::std::move(from);
  }

  inline SLRoutev4& operator=(SLRoutev4&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev4& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRoutev4* internal_default_instance() {
    return reinterpret_cast<const SLRoutev4*>(
               &_SLRoutev4_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SLRoutev4* other);
  friend void swap(SLRoutev4& a, SLRoutev4& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRoutev4* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev4* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev4& from);
  void MergeFrom(const SLRoutev4& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev4* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLRoutePath PathList = 4;
  int pathlist_size() const;
  void clear_pathlist();
  static const int kPathListFieldNumber = 4;
  const ::service_layer::SLRoutePath& pathlist(int index) const;
  ::service_layer::SLRoutePath* mutable_pathlist(int index);
  ::service_layer::SLRoutePath* add_pathlist();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >*
      mutable_pathlist();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >&
      pathlist() const;

  // .service_layer.SLRouteCommon RouteCommon = 3;
  bool has_routecommon() const;
  void clear_routecommon();
  static const int kRouteCommonFieldNumber = 3;
  const ::service_layer::SLRouteCommon& routecommon() const;
  ::service_layer::SLRouteCommon* release_routecommon();
  ::service_layer::SLRouteCommon* mutable_routecommon();
  void set_allocated_routecommon(::service_layer::SLRouteCommon* routecommon);

  // uint32 Prefix = 1;
  void clear_prefix();
  static const int kPrefixFieldNumber = 1;
  ::google::protobuf::uint32 prefix() const;
  void set_prefix(::google::protobuf::uint32 value);

  // uint32 PrefixLen = 2;
  void clear_prefixlen();
  static const int kPrefixLenFieldNumber = 2;
  ::google::protobuf::uint32 prefixlen() const;
  void set_prefixlen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev4)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath > pathlist_;
  ::service_layer::SLRouteCommon* routecommon_;
  ::google::protobuf::uint32 prefix_;
  ::google::protobuf::uint32 prefixlen_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fipv4_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4Impl();
};
// -------------------------------------------------------------------

class SLRoutev4Msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev4Msg) */ {
 public:
  SLRoutev4Msg();
  virtual ~SLRoutev4Msg();

  SLRoutev4Msg(const SLRoutev4Msg& from);

  inline SLRoutev4Msg& operator=(const SLRoutev4Msg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRoutev4Msg(SLRoutev4Msg&& from) noexcept
    : SLRoutev4Msg() {
    *this = ::std::move(from);
  }

  inline SLRoutev4Msg& operator=(SLRoutev4Msg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev4Msg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRoutev4Msg* internal_default_instance() {
    return reinterpret_cast<const SLRoutev4Msg*>(
               &_SLRoutev4Msg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SLRoutev4Msg* other);
  friend void swap(SLRoutev4Msg& a, SLRoutev4Msg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRoutev4Msg* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev4Msg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev4Msg& from);
  void MergeFrom(const SLRoutev4Msg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev4Msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLRoutev4 Routes = 4;
  int routes_size() const;
  void clear_routes();
  static const int kRoutesFieldNumber = 4;
  const ::service_layer::SLRoutev4& routes(int index) const;
  ::service_layer::SLRoutev4* mutable_routes(int index);
  ::service_layer::SLRoutev4* add_routes();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >*
      mutable_routes();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >&
      routes() const;

  // string VrfName = 3;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 3;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // uint64 Correlator = 2;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 2;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // .service_layer.SLObjectOp Oper = 1;
  void clear_oper();
  static const int kOperFieldNumber = 1;
  ::service_layer::SLObjectOp oper() const;
  void set_oper(::service_layer::SLObjectOp value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev4Msg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 > routes_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::google::protobuf::uint64 correlator_;
  int oper_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fipv4_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4MsgImpl();
};
// -------------------------------------------------------------------

class SLRoutev4Res : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev4Res) */ {
 public:
  SLRoutev4Res();
  virtual ~SLRoutev4Res();

  SLRoutev4Res(const SLRoutev4Res& from);

  inline SLRoutev4Res& operator=(const SLRoutev4Res& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRoutev4Res(SLRoutev4Res&& from) noexcept
    : SLRoutev4Res() {
    *this = ::std::move(from);
  }

  inline SLRoutev4Res& operator=(SLRoutev4Res&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev4Res& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRoutev4Res* internal_default_instance() {
    return reinterpret_cast<const SLRoutev4Res*>(
               &_SLRoutev4Res_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SLRoutev4Res* other);
  friend void swap(SLRoutev4Res& a, SLRoutev4Res& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRoutev4Res* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev4Res* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev4Res& from);
  void MergeFrom(const SLRoutev4Res& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev4Res* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* release_errstatus();
  ::service_layer::SLErrorStatus* mutable_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // uint32 Prefix = 2;
  void clear_prefix();
  static const int kPrefixFieldNumber = 2;
  ::google::protobuf::uint32 prefix() const;
  void set_prefix(::google::protobuf::uint32 value);

  // uint32 PrefixLen = 3;
  void clear_prefixlen();
  static const int kPrefixLenFieldNumber = 3;
  ::google::protobuf::uint32 prefixlen() const;
  void set_prefixlen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev4Res)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::uint32 prefix_;
  ::google::protobuf::uint32 prefixlen_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fipv4_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4ResImpl();
};
// -------------------------------------------------------------------

class SLRoutev4MsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev4MsgRsp) */ {
 public:
  SLRoutev4MsgRsp();
  virtual ~SLRoutev4MsgRsp();

  SLRoutev4MsgRsp(const SLRoutev4MsgRsp& from);

  inline SLRoutev4MsgRsp& operator=(const SLRoutev4MsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRoutev4MsgRsp(SLRoutev4MsgRsp&& from) noexcept
    : SLRoutev4MsgRsp() {
    *this = ::std::move(from);
  }

  inline SLRoutev4MsgRsp& operator=(SLRoutev4MsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev4MsgRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRoutev4MsgRsp* internal_default_instance() {
    return reinterpret_cast<const SLRoutev4MsgRsp*>(
               &_SLRoutev4MsgRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SLRoutev4MsgRsp* other);
  friend void swap(SLRoutev4MsgRsp& a, SLRoutev4MsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRoutev4MsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev4MsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev4MsgRsp& from);
  void MergeFrom(const SLRoutev4MsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev4MsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLRoutev4Res Results = 4;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 4;
  const ::service_layer::SLRoutev4Res& results(int index) const;
  ::service_layer::SLRoutev4Res* mutable_results(int index);
  ::service_layer::SLRoutev4Res* add_results();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4Res >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4Res >&
      results() const;

  // string VrfName = 2;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 2;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // .service_layer.SLErrorStatus StatusSummary = 3;
  bool has_statussummary() const;
  void clear_statussummary();
  static const int kStatusSummaryFieldNumber = 3;
  const ::service_layer::SLErrorStatus& statussummary() const;
  ::service_layer::SLErrorStatus* release_statussummary();
  ::service_layer::SLErrorStatus* mutable_statussummary();
  void set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary);

  // uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev4MsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4Res > results_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::service_layer::SLErrorStatus* statussummary_;
  ::google::protobuf::uint64 correlator_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fipv4_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4MsgRspImpl();
};
// -------------------------------------------------------------------

class SLRoutev4GetMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev4GetMsg) */ {
 public:
  SLRoutev4GetMsg();
  virtual ~SLRoutev4GetMsg();

  SLRoutev4GetMsg(const SLRoutev4GetMsg& from);

  inline SLRoutev4GetMsg& operator=(const SLRoutev4GetMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRoutev4GetMsg(SLRoutev4GetMsg&& from) noexcept
    : SLRoutev4GetMsg() {
    *this = ::std::move(from);
  }

  inline SLRoutev4GetMsg& operator=(SLRoutev4GetMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev4GetMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRoutev4GetMsg* internal_default_instance() {
    return reinterpret_cast<const SLRoutev4GetMsg*>(
               &_SLRoutev4GetMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SLRoutev4GetMsg* other);
  friend void swap(SLRoutev4GetMsg& a, SLRoutev4GetMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRoutev4GetMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev4GetMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev4GetMsg& from);
  void MergeFrom(const SLRoutev4GetMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev4GetMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string VrfName = 2;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 2;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // uint32 Prefix = 3;
  void clear_prefix();
  static const int kPrefixFieldNumber = 3;
  ::google::protobuf::uint32 prefix() const;
  void set_prefix(::google::protobuf::uint32 value);

  // uint32 PrefixLen = 4;
  void clear_prefixlen();
  static const int kPrefixLenFieldNumber = 4;
  ::google::protobuf::uint32 prefixlen() const;
  void set_prefixlen(::google::protobuf::uint32 value);

  // uint32 EntriesCount = 5;
  void clear_entriescount();
  static const int kEntriesCountFieldNumber = 5;
  ::google::protobuf::uint32 entriescount() const;
  void set_entriescount(::google::protobuf::uint32 value);

  // bool GetNext = 6;
  void clear_getnext();
  static const int kGetNextFieldNumber = 6;
  bool getnext() const;
  void set_getnext(bool value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev4GetMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::google::protobuf::uint64 correlator_;
  ::google::protobuf::uint32 prefix_;
  ::google::protobuf::uint32 prefixlen_;
  ::google::protobuf::uint32 entriescount_;
  bool getnext_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fipv4_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4GetMsgImpl();
};
// -------------------------------------------------------------------

class SLRoutev4GetMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev4GetMsgRsp) */ {
 public:
  SLRoutev4GetMsgRsp();
  virtual ~SLRoutev4GetMsgRsp();

  SLRoutev4GetMsgRsp(const SLRoutev4GetMsgRsp& from);

  inline SLRoutev4GetMsgRsp& operator=(const SLRoutev4GetMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SLRoutev4GetMsgRsp(SLRoutev4GetMsgRsp&& from) noexcept
    : SLRoutev4GetMsgRsp() {
    *this = ::std::move(from);
  }

  inline SLRoutev4GetMsgRsp& operator=(SLRoutev4GetMsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev4GetMsgRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLRoutev4GetMsgRsp* internal_default_instance() {
    return reinterpret_cast<const SLRoutev4GetMsgRsp*>(
               &_SLRoutev4GetMsgRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SLRoutev4GetMsgRsp* other);
  friend void swap(SLRoutev4GetMsgRsp& a, SLRoutev4GetMsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SLRoutev4GetMsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev4GetMsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev4GetMsgRsp& from);
  void MergeFrom(const SLRoutev4GetMsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev4GetMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLRoutev4 Entries = 5;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 5;
  const ::service_layer::SLRoutev4& entries(int index) const;
  ::service_layer::SLRoutev4* mutable_entries(int index);
  ::service_layer::SLRoutev4* add_entries();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >&
      entries() const;

  // string VrfName = 3;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 3;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // .service_layer.SLErrorStatus ErrStatus = 4;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 4;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* release_errstatus();
  ::service_layer::SLErrorStatus* mutable_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // bool Eof = 2;
  void clear_eof();
  static const int kEofFieldNumber = 2;
  bool eof() const;
  void set_eof(bool value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev4GetMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 > entries_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::uint64 correlator_;
  bool eof_;
  mutable int _cached_size_;
  friend struct ::protobuf_sl_5froute_5fipv4_2eproto::TableStruct;
  friend void ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4GetMsgRspImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SLRoutev4

// uint32 Prefix = 1;
inline void SLRoutev4::clear_prefix() {
  prefix_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev4::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4.Prefix)
  return prefix_;
}
inline void SLRoutev4::set_prefix(::google::protobuf::uint32 value) {
  
  prefix_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4.Prefix)
}

// uint32 PrefixLen = 2;
inline void SLRoutev4::clear_prefixlen() {
  prefixlen_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev4::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4.PrefixLen)
  return prefixlen_;
}
inline void SLRoutev4::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4.PrefixLen)
}

// .service_layer.SLRouteCommon RouteCommon = 3;
inline bool SLRoutev4::has_routecommon() const {
  return this != internal_default_instance() && routecommon_ != NULL;
}
inline const ::service_layer::SLRouteCommon& SLRoutev4::routecommon() const {
  const ::service_layer::SLRouteCommon* p = routecommon_;
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4.RouteCommon)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLRouteCommon*>(
      &::service_layer::_SLRouteCommon_default_instance_);
}
inline ::service_layer::SLRouteCommon* SLRoutev4::release_routecommon() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev4.RouteCommon)
  
  ::service_layer::SLRouteCommon* temp = routecommon_;
  routecommon_ = NULL;
  return temp;
}
inline ::service_layer::SLRouteCommon* SLRoutev4::mutable_routecommon() {
  
  if (routecommon_ == NULL) {
    routecommon_ = new ::service_layer::SLRouteCommon;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4.RouteCommon)
  return routecommon_;
}
inline void SLRoutev4::set_allocated_routecommon(::service_layer::SLRouteCommon* routecommon) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(routecommon_);
  }
  if (routecommon) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      routecommon = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, routecommon, submessage_arena);
    }
    
  } else {
    
  }
  routecommon_ = routecommon;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4.RouteCommon)
}

// repeated .service_layer.SLRoutePath PathList = 4;
inline int SLRoutev4::pathlist_size() const {
  return pathlist_.size();
}
inline const ::service_layer::SLRoutePath& SLRoutev4::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4.PathList)
  return pathlist_.Get(index);
}
inline ::service_layer::SLRoutePath* SLRoutev4::mutable_pathlist(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4.PathList)
  return pathlist_.Mutable(index);
}
inline ::service_layer::SLRoutePath* SLRoutev4::add_pathlist() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev4.PathList)
  return pathlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >*
SLRoutev4::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev4.PathList)
  return &pathlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >&
SLRoutev4::pathlist() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev4.PathList)
  return pathlist_;
}

// -------------------------------------------------------------------

// SLRoutev4Msg

// .service_layer.SLObjectOp Oper = 1;
inline void SLRoutev4Msg::clear_oper() {
  oper_ = 0;
}
inline ::service_layer::SLObjectOp SLRoutev4Msg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Msg.Oper)
  return static_cast< ::service_layer::SLObjectOp >(oper_);
}
inline void SLRoutev4Msg::set_oper(::service_layer::SLObjectOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4Msg.Oper)
}

// uint64 Correlator = 2;
inline void SLRoutev4Msg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev4Msg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Msg.Correlator)
  return correlator_;
}
inline void SLRoutev4Msg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4Msg.Correlator)
}

// string VrfName = 3;
inline void SLRoutev4Msg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev4Msg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Msg.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLRoutev4Msg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4Msg.VrfName)
}
#if LANG_CXX11
inline void SLRoutev4Msg::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev4Msg.VrfName)
}
#endif
inline void SLRoutev4Msg::set_vrfname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev4Msg.VrfName)
}
inline void SLRoutev4Msg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev4Msg.VrfName)
}
inline ::std::string* SLRoutev4Msg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4Msg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev4Msg::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev4Msg.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev4Msg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4Msg.VrfName)
}

// repeated .service_layer.SLRoutev4 Routes = 4;
inline int SLRoutev4Msg::routes_size() const {
  return routes_.size();
}
inline void SLRoutev4Msg::clear_routes() {
  routes_.Clear();
}
inline const ::service_layer::SLRoutev4& SLRoutev4Msg::routes(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Msg.Routes)
  return routes_.Get(index);
}
inline ::service_layer::SLRoutev4* SLRoutev4Msg::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4Msg.Routes)
  return routes_.Mutable(index);
}
inline ::service_layer::SLRoutev4* SLRoutev4Msg::add_routes() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev4Msg.Routes)
  return routes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >*
SLRoutev4Msg::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev4Msg.Routes)
  return &routes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >&
SLRoutev4Msg::routes() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev4Msg.Routes)
  return routes_;
}

// -------------------------------------------------------------------

// SLRoutev4Res

// .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLRoutev4Res::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
inline const ::service_layer::SLErrorStatus& SLRoutev4Res::errstatus() const {
  const ::service_layer::SLErrorStatus* p = errstatus_;
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Res.ErrStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLErrorStatus*>(
      &::service_layer::_SLErrorStatus_default_instance_);
}
inline ::service_layer::SLErrorStatus* SLRoutev4Res::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev4Res.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline ::service_layer::SLErrorStatus* SLRoutev4Res::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4Res.ErrStatus)
  return errstatus_;
}
inline void SLRoutev4Res::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(errstatus_);
  }
  if (errstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    
  } else {
    
  }
  errstatus_ = errstatus;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4Res.ErrStatus)
}

// uint32 Prefix = 2;
inline void SLRoutev4Res::clear_prefix() {
  prefix_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev4Res::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Res.Prefix)
  return prefix_;
}
inline void SLRoutev4Res::set_prefix(::google::protobuf::uint32 value) {
  
  prefix_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4Res.Prefix)
}

// uint32 PrefixLen = 3;
inline void SLRoutev4Res::clear_prefixlen() {
  prefixlen_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev4Res::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Res.PrefixLen)
  return prefixlen_;
}
inline void SLRoutev4Res::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4Res.PrefixLen)
}

// -------------------------------------------------------------------

// SLRoutev4MsgRsp

// uint64 Correlator = 1;
inline void SLRoutev4MsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev4MsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4MsgRsp.Correlator)
  return correlator_;
}
inline void SLRoutev4MsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4MsgRsp.Correlator)
}

// string VrfName = 2;
inline void SLRoutev4MsgRsp::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev4MsgRsp::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4MsgRsp.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLRoutev4MsgRsp::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4MsgRsp.VrfName)
}
#if LANG_CXX11
inline void SLRoutev4MsgRsp::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev4MsgRsp.VrfName)
}
#endif
inline void SLRoutev4MsgRsp::set_vrfname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev4MsgRsp.VrfName)
}
inline void SLRoutev4MsgRsp::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev4MsgRsp.VrfName)
}
inline ::std::string* SLRoutev4MsgRsp::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4MsgRsp.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev4MsgRsp::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev4MsgRsp.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev4MsgRsp::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4MsgRsp.VrfName)
}

// .service_layer.SLErrorStatus StatusSummary = 3;
inline bool SLRoutev4MsgRsp::has_statussummary() const {
  return this != internal_default_instance() && statussummary_ != NULL;
}
inline const ::service_layer::SLErrorStatus& SLRoutev4MsgRsp::statussummary() const {
  const ::service_layer::SLErrorStatus* p = statussummary_;
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4MsgRsp.StatusSummary)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLErrorStatus*>(
      &::service_layer::_SLErrorStatus_default_instance_);
}
inline ::service_layer::SLErrorStatus* SLRoutev4MsgRsp::release_statussummary() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev4MsgRsp.StatusSummary)
  
  ::service_layer::SLErrorStatus* temp = statussummary_;
  statussummary_ = NULL;
  return temp;
}
inline ::service_layer::SLErrorStatus* SLRoutev4MsgRsp::mutable_statussummary() {
  
  if (statussummary_ == NULL) {
    statussummary_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4MsgRsp.StatusSummary)
  return statussummary_;
}
inline void SLRoutev4MsgRsp::set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(statussummary_);
  }
  if (statussummary) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      statussummary = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, statussummary, submessage_arena);
    }
    
  } else {
    
  }
  statussummary_ = statussummary;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4MsgRsp.StatusSummary)
}

// repeated .service_layer.SLRoutev4Res Results = 4;
inline int SLRoutev4MsgRsp::results_size() const {
  return results_.size();
}
inline void SLRoutev4MsgRsp::clear_results() {
  results_.Clear();
}
inline const ::service_layer::SLRoutev4Res& SLRoutev4MsgRsp::results(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4MsgRsp.Results)
  return results_.Get(index);
}
inline ::service_layer::SLRoutev4Res* SLRoutev4MsgRsp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4MsgRsp.Results)
  return results_.Mutable(index);
}
inline ::service_layer::SLRoutev4Res* SLRoutev4MsgRsp::add_results() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev4MsgRsp.Results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4Res >*
SLRoutev4MsgRsp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev4MsgRsp.Results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4Res >&
SLRoutev4MsgRsp::results() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev4MsgRsp.Results)
  return results_;
}

// -------------------------------------------------------------------

// SLRoutev4GetMsg

// uint64 Correlator = 1;
inline void SLRoutev4GetMsg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev4GetMsg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.Correlator)
  return correlator_;
}
inline void SLRoutev4GetMsg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.Correlator)
}

// string VrfName = 2;
inline void SLRoutev4GetMsg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev4GetMsg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLRoutev4GetMsg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.VrfName)
}
#if LANG_CXX11
inline void SLRoutev4GetMsg::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev4GetMsg.VrfName)
}
#endif
inline void SLRoutev4GetMsg::set_vrfname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev4GetMsg.VrfName)
}
inline void SLRoutev4GetMsg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev4GetMsg.VrfName)
}
inline ::std::string* SLRoutev4GetMsg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4GetMsg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev4GetMsg::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev4GetMsg.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev4GetMsg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4GetMsg.VrfName)
}

// uint32 Prefix = 3;
inline void SLRoutev4GetMsg::clear_prefix() {
  prefix_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev4GetMsg::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.Prefix)
  return prefix_;
}
inline void SLRoutev4GetMsg::set_prefix(::google::protobuf::uint32 value) {
  
  prefix_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.Prefix)
}

// uint32 PrefixLen = 4;
inline void SLRoutev4GetMsg::clear_prefixlen() {
  prefixlen_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev4GetMsg::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.PrefixLen)
  return prefixlen_;
}
inline void SLRoutev4GetMsg::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.PrefixLen)
}

// uint32 EntriesCount = 5;
inline void SLRoutev4GetMsg::clear_entriescount() {
  entriescount_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev4GetMsg::entriescount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.EntriesCount)
  return entriescount_;
}
inline void SLRoutev4GetMsg::set_entriescount(::google::protobuf::uint32 value) {
  
  entriescount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.EntriesCount)
}

// bool GetNext = 6;
inline void SLRoutev4GetMsg::clear_getnext() {
  getnext_ = false;
}
inline bool SLRoutev4GetMsg::getnext() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.GetNext)
  return getnext_;
}
inline void SLRoutev4GetMsg::set_getnext(bool value) {
  
  getnext_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.GetNext)
}

// -------------------------------------------------------------------

// SLRoutev4GetMsgRsp

// uint64 Correlator = 1;
inline void SLRoutev4GetMsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev4GetMsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsgRsp.Correlator)
  return correlator_;
}
inline void SLRoutev4GetMsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsgRsp.Correlator)
}

// bool Eof = 2;
inline void SLRoutev4GetMsgRsp::clear_eof() {
  eof_ = false;
}
inline bool SLRoutev4GetMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsgRsp.Eof)
  return eof_;
}
inline void SLRoutev4GetMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsgRsp.Eof)
}

// string VrfName = 3;
inline void SLRoutev4GetMsgRsp::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev4GetMsgRsp::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsgRsp.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLRoutev4GetMsgRsp::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsgRsp.VrfName)
}
#if LANG_CXX11
inline void SLRoutev4GetMsgRsp::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev4GetMsgRsp.VrfName)
}
#endif
inline void SLRoutev4GetMsgRsp::set_vrfname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev4GetMsgRsp.VrfName)
}
inline void SLRoutev4GetMsgRsp::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev4GetMsgRsp.VrfName)
}
inline ::std::string* SLRoutev4GetMsgRsp::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4GetMsgRsp.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev4GetMsgRsp::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev4GetMsgRsp.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev4GetMsgRsp::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4GetMsgRsp.VrfName)
}

// .service_layer.SLErrorStatus ErrStatus = 4;
inline bool SLRoutev4GetMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
inline const ::service_layer::SLErrorStatus& SLRoutev4GetMsgRsp::errstatus() const {
  const ::service_layer::SLErrorStatus* p = errstatus_;
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsgRsp.ErrStatus)
  return p != NULL ? *p : *reinterpret_cast<const ::service_layer::SLErrorStatus*>(
      &::service_layer::_SLErrorStatus_default_instance_);
}
inline ::service_layer::SLErrorStatus* SLRoutev4GetMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev4GetMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline ::service_layer::SLErrorStatus* SLRoutev4GetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4GetMsgRsp.ErrStatus)
  return errstatus_;
}
inline void SLRoutev4GetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(errstatus_);
  }
  if (errstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    
  } else {
    
  }
  errstatus_ = errstatus;
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4GetMsgRsp.ErrStatus)
}

// repeated .service_layer.SLRoutev4 Entries = 5;
inline int SLRoutev4GetMsgRsp::entries_size() const {
  return entries_.size();
}
inline void SLRoutev4GetMsgRsp::clear_entries() {
  entries_.Clear();
}
inline const ::service_layer::SLRoutev4& SLRoutev4GetMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsgRsp.Entries)
  return entries_.Get(index);
}
inline ::service_layer::SLRoutev4* SLRoutev4GetMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4GetMsgRsp.Entries)
  return entries_.Mutable(index);
}
inline ::service_layer::SLRoutev4* SLRoutev4GetMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev4GetMsgRsp.Entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >*
SLRoutev4GetMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev4GetMsgRsp.Entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >&
SLRoutev4GetMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev4GetMsgRsp.Entries)
  return entries_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service_layer

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sl_5froute_5fipv4_2eproto__INCLUDED
