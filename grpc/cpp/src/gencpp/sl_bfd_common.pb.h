// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_bfd_common.proto

#ifndef PROTOBUF_sl_5fbfd_5fcommon_2eproto__INCLUDED
#define PROTOBUF_sl_5fbfd_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "sl_common_types.pb.h"
// @@protoc_insertion_point(includes)

namespace service_layer {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_sl_5fbfd_5fcommon_2eproto();
void protobuf_AssignDesc_sl_5fbfd_5fcommon_2eproto();
void protobuf_ShutdownFile_sl_5fbfd_5fcommon_2eproto();

class SLBfdCommonState;
class SLBfdConfigCommon;
class SLBfdGetMsg;
class SLBfdGetMsgRsp;
class SLBfdGetNotifMsg;
class SLBfdGetStatsMsgRsp;
class SLBfdRegMsg;
class SLBfdRegMsgRsp;

enum SLBfdCommonState_SLBfdStateEnum {
  SLBfdCommonState_SLBfdStateEnum_SL_BFD_SESSION_STATE_UNKNOWN = 0,
  SLBfdCommonState_SLBfdStateEnum_SL_BFD_SESSION_UP = 1,
  SLBfdCommonState_SLBfdStateEnum_SL_BFD_SESSION_DOWN = 2,
  SLBfdCommonState_SLBfdStateEnum_SL_BFD_NEIGHBOR_UNCONFIG = 3,
  SLBfdCommonState_SLBfdStateEnum_SLBfdCommonState_SLBfdStateEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SLBfdCommonState_SLBfdStateEnum_SLBfdCommonState_SLBfdStateEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SLBfdCommonState_SLBfdStateEnum_IsValid(int value);
const SLBfdCommonState_SLBfdStateEnum SLBfdCommonState_SLBfdStateEnum_SLBfdStateEnum_MIN = SLBfdCommonState_SLBfdStateEnum_SL_BFD_SESSION_STATE_UNKNOWN;
const SLBfdCommonState_SLBfdStateEnum SLBfdCommonState_SLBfdStateEnum_SLBfdStateEnum_MAX = SLBfdCommonState_SLBfdStateEnum_SL_BFD_NEIGHBOR_UNCONFIG;
const int SLBfdCommonState_SLBfdStateEnum_SLBfdStateEnum_ARRAYSIZE = SLBfdCommonState_SLBfdStateEnum_SLBfdStateEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* SLBfdCommonState_SLBfdStateEnum_descriptor();
inline const ::std::string& SLBfdCommonState_SLBfdStateEnum_Name(SLBfdCommonState_SLBfdStateEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    SLBfdCommonState_SLBfdStateEnum_descriptor(), value);
}
inline bool SLBfdCommonState_SLBfdStateEnum_Parse(
    const ::std::string& name, SLBfdCommonState_SLBfdStateEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SLBfdCommonState_SLBfdStateEnum>(
    SLBfdCommonState_SLBfdStateEnum_descriptor(), name, value);
}
enum SLBfdCommonState_SLBfdDiagStateEnum {
  SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_NONE = 0,
  SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_DETECT_EXPIRED = 1,
  SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_NBR_DOWN = 2,
  SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_PATH_DOWN = 3,
  SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_FWDING_PLANE_RESET = 4,
  SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_ADMIN_DOWN = 5,
  SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_REV_CONC_PATH_DOWN = 6,
  SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_ECHO_FUNCTION_FAILED = 7,
  SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_CONC_PATH_DOWN = 8,
  SLBfdCommonState_SLBfdDiagStateEnum_SLBfdCommonState_SLBfdDiagStateEnum_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SLBfdCommonState_SLBfdDiagStateEnum_SLBfdCommonState_SLBfdDiagStateEnum_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SLBfdCommonState_SLBfdDiagStateEnum_IsValid(int value);
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState_SLBfdDiagStateEnum_SLBfdDiagStateEnum_MIN = SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_NONE;
const SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState_SLBfdDiagStateEnum_SLBfdDiagStateEnum_MAX = SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_CONC_PATH_DOWN;
const int SLBfdCommonState_SLBfdDiagStateEnum_SLBfdDiagStateEnum_ARRAYSIZE = SLBfdCommonState_SLBfdDiagStateEnum_SLBfdDiagStateEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* SLBfdCommonState_SLBfdDiagStateEnum_descriptor();
inline const ::std::string& SLBfdCommonState_SLBfdDiagStateEnum_Name(SLBfdCommonState_SLBfdDiagStateEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    SLBfdCommonState_SLBfdDiagStateEnum_descriptor(), value);
}
inline bool SLBfdCommonState_SLBfdDiagStateEnum_Parse(
    const ::std::string& name, SLBfdCommonState_SLBfdDiagStateEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SLBfdCommonState_SLBfdDiagStateEnum>(
    SLBfdCommonState_SLBfdDiagStateEnum_descriptor(), name, value);
}
enum SLBfdType {
  SL_BFD_RESERVED = 0,
  SL_BFD_SINGLE_HOP = 1,
  SL_BFD_MULTI_HOP = 2,
  SLBfdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SLBfdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SLBfdType_IsValid(int value);
const SLBfdType SLBfdType_MIN = SL_BFD_RESERVED;
const SLBfdType SLBfdType_MAX = SL_BFD_MULTI_HOP;
const int SLBfdType_ARRAYSIZE = SLBfdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SLBfdType_descriptor();
inline const ::std::string& SLBfdType_Name(SLBfdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SLBfdType_descriptor(), value);
}
inline bool SLBfdType_Parse(
    const ::std::string& name, SLBfdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SLBfdType>(
    SLBfdType_descriptor(), name, value);
}
enum SLBfdNotifType {
  SL_BFD_EVENT_TYPE_RESERVED = 0,
  SL_BFD_EVENT_TYPE_ERROR = 1,
  SL_BFD_EVENT_TYPE_SESSION_STATE = 2,
  SLBfdNotifType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SLBfdNotifType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SLBfdNotifType_IsValid(int value);
const SLBfdNotifType SLBfdNotifType_MIN = SL_BFD_EVENT_TYPE_RESERVED;
const SLBfdNotifType SLBfdNotifType_MAX = SL_BFD_EVENT_TYPE_SESSION_STATE;
const int SLBfdNotifType_ARRAYSIZE = SLBfdNotifType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SLBfdNotifType_descriptor();
inline const ::std::string& SLBfdNotifType_Name(SLBfdNotifType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SLBfdNotifType_descriptor(), value);
}
inline bool SLBfdNotifType_Parse(
    const ::std::string& name, SLBfdNotifType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SLBfdNotifType>(
    SLBfdNotifType_descriptor(), name, value);
}
// ===================================================================

class SLBfdRegMsg : public ::google::protobuf::Message {
 public:
  SLBfdRegMsg();
  virtual ~SLBfdRegMsg();

  SLBfdRegMsg(const SLBfdRegMsg& from);

  inline SLBfdRegMsg& operator=(const SLBfdRegMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLBfdRegMsg& default_instance();

  void Swap(SLBfdRegMsg* other);

  // implements Message ----------------------------------------------

  inline SLBfdRegMsg* New() const { return New(NULL); }

  SLBfdRegMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLBfdRegMsg& from);
  void MergeFrom(const SLBfdRegMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLBfdRegMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLRegOp Oper = 1;
  void clear_oper();
  static const int kOperFieldNumber = 1;
  ::service_layer::SLRegOp oper() const;
  void set_oper(::service_layer::SLRegOp value);

  // @@protoc_insertion_point(class_scope:service_layer.SLBfdRegMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int oper_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_AssignDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_sl_5fbfd_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static SLBfdRegMsg* default_instance_;
};
// -------------------------------------------------------------------

class SLBfdRegMsgRsp : public ::google::protobuf::Message {
 public:
  SLBfdRegMsgRsp();
  virtual ~SLBfdRegMsgRsp();

  SLBfdRegMsgRsp(const SLBfdRegMsgRsp& from);

  inline SLBfdRegMsgRsp& operator=(const SLBfdRegMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLBfdRegMsgRsp& default_instance();

  void Swap(SLBfdRegMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLBfdRegMsgRsp* New() const { return New(NULL); }

  SLBfdRegMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLBfdRegMsgRsp& from);
  void MergeFrom(const SLBfdRegMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLBfdRegMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // @@protoc_insertion_point(class_scope:service_layer.SLBfdRegMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLErrorStatus* errstatus_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_AssignDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_sl_5fbfd_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static SLBfdRegMsgRsp* default_instance_;
};
// -------------------------------------------------------------------

class SLBfdGetMsg : public ::google::protobuf::Message {
 public:
  SLBfdGetMsg();
  virtual ~SLBfdGetMsg();

  SLBfdGetMsg(const SLBfdGetMsg& from);

  inline SLBfdGetMsg& operator=(const SLBfdGetMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLBfdGetMsg& default_instance();

  void Swap(SLBfdGetMsg* other);

  // implements Message ----------------------------------------------

  inline SLBfdGetMsg* New() const { return New(NULL); }

  SLBfdGetMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLBfdGetMsg& from);
  void MergeFrom(const SLBfdGetMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLBfdGetMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:service_layer.SLBfdGetMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_AssignDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_sl_5fbfd_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static SLBfdGetMsg* default_instance_;
};
// -------------------------------------------------------------------

class SLBfdGetMsgRsp : public ::google::protobuf::Message {
 public:
  SLBfdGetMsgRsp();
  virtual ~SLBfdGetMsgRsp();

  SLBfdGetMsgRsp(const SLBfdGetMsgRsp& from);

  inline SLBfdGetMsgRsp& operator=(const SLBfdGetMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLBfdGetMsgRsp& default_instance();

  void Swap(SLBfdGetMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLBfdGetMsgRsp* New() const { return New(NULL); }

  SLBfdGetMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLBfdGetMsgRsp& from);
  void MergeFrom(const SLBfdGetMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLBfdGetMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // optional uint32 MaxBfdSessionCfgPerSLBfdMsg = 2;
  void clear_maxbfdsessioncfgperslbfdmsg();
  static const int kMaxBfdSessionCfgPerSLBfdMsgFieldNumber = 2;
  ::google::protobuf::uint32 maxbfdsessioncfgperslbfdmsg() const;
  void set_maxbfdsessioncfgperslbfdmsg(::google::protobuf::uint32 value);

  // optional uint32 MinBfdTxIntervalSingleHop = 3;
  void clear_minbfdtxintervalsinglehop();
  static const int kMinBfdTxIntervalSingleHopFieldNumber = 3;
  ::google::protobuf::uint32 minbfdtxintervalsinglehop() const;
  void set_minbfdtxintervalsinglehop(::google::protobuf::uint32 value);

  // optional uint32 MinBfdTxIntervalMultiHop = 4;
  void clear_minbfdtxintervalmultihop();
  static const int kMinBfdTxIntervalMultiHopFieldNumber = 4;
  ::google::protobuf::uint32 minbfdtxintervalmultihop() const;
  void set_minbfdtxintervalmultihop(::google::protobuf::uint32 value);

  // optional uint32 MinBfdDetectMultiplierSingleHop = 5;
  void clear_minbfddetectmultipliersinglehop();
  static const int kMinBfdDetectMultiplierSingleHopFieldNumber = 5;
  ::google::protobuf::uint32 minbfddetectmultipliersinglehop() const;
  void set_minbfddetectmultipliersinglehop(::google::protobuf::uint32 value);

  // optional uint32 MinBfdDetectMultiplierMultiHop = 6;
  void clear_minbfddetectmultipliermultihop();
  static const int kMinBfdDetectMultiplierMultiHopFieldNumber = 6;
  ::google::protobuf::uint32 minbfddetectmultipliermultihop() const;
  void set_minbfddetectmultipliermultihop(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLBfdGetMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::uint32 maxbfdsessioncfgperslbfdmsg_;
  ::google::protobuf::uint32 minbfdtxintervalsinglehop_;
  ::google::protobuf::uint32 minbfdtxintervalmultihop_;
  ::google::protobuf::uint32 minbfddetectmultipliersinglehop_;
  ::google::protobuf::uint32 minbfddetectmultipliermultihop_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_AssignDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_sl_5fbfd_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static SLBfdGetMsgRsp* default_instance_;
};
// -------------------------------------------------------------------

class SLBfdGetStatsMsgRsp : public ::google::protobuf::Message {
 public:
  SLBfdGetStatsMsgRsp();
  virtual ~SLBfdGetStatsMsgRsp();

  SLBfdGetStatsMsgRsp(const SLBfdGetStatsMsgRsp& from);

  inline SLBfdGetStatsMsgRsp& operator=(const SLBfdGetStatsMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLBfdGetStatsMsgRsp& default_instance();

  void Swap(SLBfdGetStatsMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLBfdGetStatsMsgRsp* New() const { return New(NULL); }

  SLBfdGetStatsMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLBfdGetStatsMsgRsp& from);
  void MergeFrom(const SLBfdGetStatsMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLBfdGetStatsMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // optional uint64 SeqNum = 2;
  void clear_seqnum();
  static const int kSeqNumFieldNumber = 2;
  ::google::protobuf::uint64 seqnum() const;
  void set_seqnum(::google::protobuf::uint64 value);

  // optional uint32 BfdCount = 3;
  void clear_bfdcount();
  static const int kBfdCountFieldNumber = 3;
  ::google::protobuf::uint32 bfdcount() const;
  void set_bfdcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLBfdGetStatsMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::uint64 seqnum_;
  ::google::protobuf::uint32 bfdcount_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_AssignDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_sl_5fbfd_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static SLBfdGetStatsMsgRsp* default_instance_;
};
// -------------------------------------------------------------------

class SLBfdGetNotifMsg : public ::google::protobuf::Message {
 public:
  SLBfdGetNotifMsg();
  virtual ~SLBfdGetNotifMsg();

  SLBfdGetNotifMsg(const SLBfdGetNotifMsg& from);

  inline SLBfdGetNotifMsg& operator=(const SLBfdGetNotifMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLBfdGetNotifMsg& default_instance();

  void Swap(SLBfdGetNotifMsg* other);

  // implements Message ----------------------------------------------

  inline SLBfdGetNotifMsg* New() const { return New(NULL); }

  SLBfdGetNotifMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLBfdGetNotifMsg& from);
  void MergeFrom(const SLBfdGetNotifMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLBfdGetNotifMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:service_layer.SLBfdGetNotifMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_AssignDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_sl_5fbfd_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static SLBfdGetNotifMsg* default_instance_;
};
// -------------------------------------------------------------------

class SLBfdConfigCommon : public ::google::protobuf::Message {
 public:
  SLBfdConfigCommon();
  virtual ~SLBfdConfigCommon();

  SLBfdConfigCommon(const SLBfdConfigCommon& from);

  inline SLBfdConfigCommon& operator=(const SLBfdConfigCommon& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLBfdConfigCommon& default_instance();

  void Swap(SLBfdConfigCommon* other);

  // implements Message ----------------------------------------------

  inline SLBfdConfigCommon* New() const { return New(NULL); }

  SLBfdConfigCommon* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLBfdConfigCommon& from);
  void MergeFrom(const SLBfdConfigCommon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLBfdConfigCommon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 DesiredTxIntUsec = 1;
  void clear_desiredtxintusec();
  static const int kDesiredTxIntUsecFieldNumber = 1;
  ::google::protobuf::uint32 desiredtxintusec() const;
  void set_desiredtxintusec(::google::protobuf::uint32 value);

  // optional uint32 DetectMultiplier = 2;
  void clear_detectmultiplier();
  static const int kDetectMultiplierFieldNumber = 2;
  ::google::protobuf::uint32 detectmultiplier() const;
  void set_detectmultiplier(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLBfdConfigCommon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 desiredtxintusec_;
  ::google::protobuf::uint32 detectmultiplier_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_AssignDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_sl_5fbfd_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static SLBfdConfigCommon* default_instance_;
};
// -------------------------------------------------------------------

class SLBfdCommonState : public ::google::protobuf::Message {
 public:
  SLBfdCommonState();
  virtual ~SLBfdCommonState();

  SLBfdCommonState(const SLBfdCommonState& from);

  inline SLBfdCommonState& operator=(const SLBfdCommonState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLBfdCommonState& default_instance();

  void Swap(SLBfdCommonState* other);

  // implements Message ----------------------------------------------

  inline SLBfdCommonState* New() const { return New(NULL); }

  SLBfdCommonState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLBfdCommonState& from);
  void MergeFrom(const SLBfdCommonState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLBfdCommonState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SLBfdCommonState_SLBfdStateEnum SLBfdStateEnum;
  static const SLBfdStateEnum SL_BFD_SESSION_STATE_UNKNOWN = SLBfdCommonState_SLBfdStateEnum_SL_BFD_SESSION_STATE_UNKNOWN;
  static const SLBfdStateEnum SL_BFD_SESSION_UP = SLBfdCommonState_SLBfdStateEnum_SL_BFD_SESSION_UP;
  static const SLBfdStateEnum SL_BFD_SESSION_DOWN = SLBfdCommonState_SLBfdStateEnum_SL_BFD_SESSION_DOWN;
  static const SLBfdStateEnum SL_BFD_NEIGHBOR_UNCONFIG = SLBfdCommonState_SLBfdStateEnum_SL_BFD_NEIGHBOR_UNCONFIG;
  static inline bool SLBfdStateEnum_IsValid(int value) {
    return SLBfdCommonState_SLBfdStateEnum_IsValid(value);
  }
  static const SLBfdStateEnum SLBfdStateEnum_MIN =
    SLBfdCommonState_SLBfdStateEnum_SLBfdStateEnum_MIN;
  static const SLBfdStateEnum SLBfdStateEnum_MAX =
    SLBfdCommonState_SLBfdStateEnum_SLBfdStateEnum_MAX;
  static const int SLBfdStateEnum_ARRAYSIZE =
    SLBfdCommonState_SLBfdStateEnum_SLBfdStateEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SLBfdStateEnum_descriptor() {
    return SLBfdCommonState_SLBfdStateEnum_descriptor();
  }
  static inline const ::std::string& SLBfdStateEnum_Name(SLBfdStateEnum value) {
    return SLBfdCommonState_SLBfdStateEnum_Name(value);
  }
  static inline bool SLBfdStateEnum_Parse(const ::std::string& name,
      SLBfdStateEnum* value) {
    return SLBfdCommonState_SLBfdStateEnum_Parse(name, value);
  }

  typedef SLBfdCommonState_SLBfdDiagStateEnum SLBfdDiagStateEnum;
  static const SLBfdDiagStateEnum SL_BFD_DIAG_NONE = SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_NONE;
  static const SLBfdDiagStateEnum SL_BFD_DIAG_DETECT_EXPIRED = SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_DETECT_EXPIRED;
  static const SLBfdDiagStateEnum SL_BFD_DIAG_NBR_DOWN = SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_NBR_DOWN;
  static const SLBfdDiagStateEnum SL_BFD_DIAG_PATH_DOWN = SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_PATH_DOWN;
  static const SLBfdDiagStateEnum SL_BFD_DIAG_FWDING_PLANE_RESET = SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_FWDING_PLANE_RESET;
  static const SLBfdDiagStateEnum SL_BFD_DIAG_ADMIN_DOWN = SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_ADMIN_DOWN;
  static const SLBfdDiagStateEnum SL_BFD_DIAG_REV_CONC_PATH_DOWN = SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_REV_CONC_PATH_DOWN;
  static const SLBfdDiagStateEnum SL_BFD_DIAG_ECHO_FUNCTION_FAILED = SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_ECHO_FUNCTION_FAILED;
  static const SLBfdDiagStateEnum SL_BFD_DIAG_CONC_PATH_DOWN = SLBfdCommonState_SLBfdDiagStateEnum_SL_BFD_DIAG_CONC_PATH_DOWN;
  static inline bool SLBfdDiagStateEnum_IsValid(int value) {
    return SLBfdCommonState_SLBfdDiagStateEnum_IsValid(value);
  }
  static const SLBfdDiagStateEnum SLBfdDiagStateEnum_MIN =
    SLBfdCommonState_SLBfdDiagStateEnum_SLBfdDiagStateEnum_MIN;
  static const SLBfdDiagStateEnum SLBfdDiagStateEnum_MAX =
    SLBfdCommonState_SLBfdDiagStateEnum_SLBfdDiagStateEnum_MAX;
  static const int SLBfdDiagStateEnum_ARRAYSIZE =
    SLBfdCommonState_SLBfdDiagStateEnum_SLBfdDiagStateEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SLBfdDiagStateEnum_descriptor() {
    return SLBfdCommonState_SLBfdDiagStateEnum_descriptor();
  }
  static inline const ::std::string& SLBfdDiagStateEnum_Name(SLBfdDiagStateEnum value) {
    return SLBfdCommonState_SLBfdDiagStateEnum_Name(value);
  }
  static inline bool SLBfdDiagStateEnum_Parse(const ::std::string& name,
      SLBfdDiagStateEnum* value) {
    return SLBfdCommonState_SLBfdDiagStateEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 SeqNum = 1;
  void clear_seqnum();
  static const int kSeqNumFieldNumber = 1;
  ::google::protobuf::uint64 seqnum() const;
  void set_seqnum(::google::protobuf::uint64 value);

  // optional .service_layer.SLBfdCommonState.SLBfdStateEnum Status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::service_layer::SLBfdCommonState_SLBfdStateEnum status() const;
  void set_status(::service_layer::SLBfdCommonState_SLBfdStateEnum value);

  // optional .service_layer.SLBfdCommonState.SLBfdDiagStateEnum Diag = 3;
  void clear_diag();
  static const int kDiagFieldNumber = 3;
  ::service_layer::SLBfdCommonState_SLBfdDiagStateEnum diag() const;
  void set_diag(::service_layer::SLBfdCommonState_SLBfdDiagStateEnum value);

  // @@protoc_insertion_point(class_scope:service_layer.SLBfdCommonState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 seqnum_;
  int status_;
  int diag_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_AssignDesc_sl_5fbfd_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_sl_5fbfd_5fcommon_2eproto();

  void InitAsDefaultInstance();
  static SLBfdCommonState* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SLBfdRegMsg

// optional .service_layer.SLRegOp Oper = 1;
inline void SLBfdRegMsg::clear_oper() {
  oper_ = 0;
}
inline ::service_layer::SLRegOp SLBfdRegMsg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdRegMsg.Oper)
  return static_cast< ::service_layer::SLRegOp >(oper_);
}
inline void SLBfdRegMsg::set_oper(::service_layer::SLRegOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdRegMsg.Oper)
}

// -------------------------------------------------------------------

// SLBfdRegMsgRsp

// optional .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLBfdRegMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLBfdRegMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLBfdRegMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdRegMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLBfdRegMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLBfdRegMsgRsp.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLBfdRegMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLBfdRegMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLBfdRegMsgRsp.ErrStatus)
}

// -------------------------------------------------------------------

// SLBfdGetMsg

// -------------------------------------------------------------------

// SLBfdGetMsgRsp

// optional .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLBfdGetMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLBfdGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLBfdGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLBfdGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLBfdGetMsgRsp.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLBfdGetMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLBfdGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLBfdGetMsgRsp.ErrStatus)
}

// optional uint32 MaxBfdSessionCfgPerSLBfdMsg = 2;
inline void SLBfdGetMsgRsp::clear_maxbfdsessioncfgperslbfdmsg() {
  maxbfdsessioncfgperslbfdmsg_ = 0u;
}
inline ::google::protobuf::uint32 SLBfdGetMsgRsp::maxbfdsessioncfgperslbfdmsg() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdGetMsgRsp.MaxBfdSessionCfgPerSLBfdMsg)
  return maxbfdsessioncfgperslbfdmsg_;
}
inline void SLBfdGetMsgRsp::set_maxbfdsessioncfgperslbfdmsg(::google::protobuf::uint32 value) {
  
  maxbfdsessioncfgperslbfdmsg_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdGetMsgRsp.MaxBfdSessionCfgPerSLBfdMsg)
}

// optional uint32 MinBfdTxIntervalSingleHop = 3;
inline void SLBfdGetMsgRsp::clear_minbfdtxintervalsinglehop() {
  minbfdtxintervalsinglehop_ = 0u;
}
inline ::google::protobuf::uint32 SLBfdGetMsgRsp::minbfdtxintervalsinglehop() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdGetMsgRsp.MinBfdTxIntervalSingleHop)
  return minbfdtxintervalsinglehop_;
}
inline void SLBfdGetMsgRsp::set_minbfdtxintervalsinglehop(::google::protobuf::uint32 value) {
  
  minbfdtxintervalsinglehop_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdGetMsgRsp.MinBfdTxIntervalSingleHop)
}

// optional uint32 MinBfdTxIntervalMultiHop = 4;
inline void SLBfdGetMsgRsp::clear_minbfdtxintervalmultihop() {
  minbfdtxintervalmultihop_ = 0u;
}
inline ::google::protobuf::uint32 SLBfdGetMsgRsp::minbfdtxintervalmultihop() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdGetMsgRsp.MinBfdTxIntervalMultiHop)
  return minbfdtxintervalmultihop_;
}
inline void SLBfdGetMsgRsp::set_minbfdtxintervalmultihop(::google::protobuf::uint32 value) {
  
  minbfdtxintervalmultihop_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdGetMsgRsp.MinBfdTxIntervalMultiHop)
}

// optional uint32 MinBfdDetectMultiplierSingleHop = 5;
inline void SLBfdGetMsgRsp::clear_minbfddetectmultipliersinglehop() {
  minbfddetectmultipliersinglehop_ = 0u;
}
inline ::google::protobuf::uint32 SLBfdGetMsgRsp::minbfddetectmultipliersinglehop() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdGetMsgRsp.MinBfdDetectMultiplierSingleHop)
  return minbfddetectmultipliersinglehop_;
}
inline void SLBfdGetMsgRsp::set_minbfddetectmultipliersinglehop(::google::protobuf::uint32 value) {
  
  minbfddetectmultipliersinglehop_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdGetMsgRsp.MinBfdDetectMultiplierSingleHop)
}

// optional uint32 MinBfdDetectMultiplierMultiHop = 6;
inline void SLBfdGetMsgRsp::clear_minbfddetectmultipliermultihop() {
  minbfddetectmultipliermultihop_ = 0u;
}
inline ::google::protobuf::uint32 SLBfdGetMsgRsp::minbfddetectmultipliermultihop() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdGetMsgRsp.MinBfdDetectMultiplierMultiHop)
  return minbfddetectmultipliermultihop_;
}
inline void SLBfdGetMsgRsp::set_minbfddetectmultipliermultihop(::google::protobuf::uint32 value) {
  
  minbfddetectmultipliermultihop_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdGetMsgRsp.MinBfdDetectMultiplierMultiHop)
}

// -------------------------------------------------------------------

// SLBfdGetStatsMsgRsp

// optional .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLBfdGetStatsMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLBfdGetStatsMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLBfdGetStatsMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdGetStatsMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLBfdGetStatsMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLBfdGetStatsMsgRsp.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLBfdGetStatsMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLBfdGetStatsMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLBfdGetStatsMsgRsp.ErrStatus)
}

// optional uint64 SeqNum = 2;
inline void SLBfdGetStatsMsgRsp::clear_seqnum() {
  seqnum_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLBfdGetStatsMsgRsp::seqnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdGetStatsMsgRsp.SeqNum)
  return seqnum_;
}
inline void SLBfdGetStatsMsgRsp::set_seqnum(::google::protobuf::uint64 value) {
  
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdGetStatsMsgRsp.SeqNum)
}

// optional uint32 BfdCount = 3;
inline void SLBfdGetStatsMsgRsp::clear_bfdcount() {
  bfdcount_ = 0u;
}
inline ::google::protobuf::uint32 SLBfdGetStatsMsgRsp::bfdcount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdGetStatsMsgRsp.BfdCount)
  return bfdcount_;
}
inline void SLBfdGetStatsMsgRsp::set_bfdcount(::google::protobuf::uint32 value) {
  
  bfdcount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdGetStatsMsgRsp.BfdCount)
}

// -------------------------------------------------------------------

// SLBfdGetNotifMsg

// -------------------------------------------------------------------

// SLBfdConfigCommon

// optional uint32 DesiredTxIntUsec = 1;
inline void SLBfdConfigCommon::clear_desiredtxintusec() {
  desiredtxintusec_ = 0u;
}
inline ::google::protobuf::uint32 SLBfdConfigCommon::desiredtxintusec() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdConfigCommon.DesiredTxIntUsec)
  return desiredtxintusec_;
}
inline void SLBfdConfigCommon::set_desiredtxintusec(::google::protobuf::uint32 value) {
  
  desiredtxintusec_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdConfigCommon.DesiredTxIntUsec)
}

// optional uint32 DetectMultiplier = 2;
inline void SLBfdConfigCommon::clear_detectmultiplier() {
  detectmultiplier_ = 0u;
}
inline ::google::protobuf::uint32 SLBfdConfigCommon::detectmultiplier() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdConfigCommon.DetectMultiplier)
  return detectmultiplier_;
}
inline void SLBfdConfigCommon::set_detectmultiplier(::google::protobuf::uint32 value) {
  
  detectmultiplier_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdConfigCommon.DetectMultiplier)
}

// -------------------------------------------------------------------

// SLBfdCommonState

// optional uint64 SeqNum = 1;
inline void SLBfdCommonState::clear_seqnum() {
  seqnum_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLBfdCommonState::seqnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdCommonState.SeqNum)
  return seqnum_;
}
inline void SLBfdCommonState::set_seqnum(::google::protobuf::uint64 value) {
  
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdCommonState.SeqNum)
}

// optional .service_layer.SLBfdCommonState.SLBfdStateEnum Status = 2;
inline void SLBfdCommonState::clear_status() {
  status_ = 0;
}
inline ::service_layer::SLBfdCommonState_SLBfdStateEnum SLBfdCommonState::status() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdCommonState.Status)
  return static_cast< ::service_layer::SLBfdCommonState_SLBfdStateEnum >(status_);
}
inline void SLBfdCommonState::set_status(::service_layer::SLBfdCommonState_SLBfdStateEnum value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdCommonState.Status)
}

// optional .service_layer.SLBfdCommonState.SLBfdDiagStateEnum Diag = 3;
inline void SLBfdCommonState::clear_diag() {
  diag_ = 0;
}
inline ::service_layer::SLBfdCommonState_SLBfdDiagStateEnum SLBfdCommonState::diag() const {
  // @@protoc_insertion_point(field_get:service_layer.SLBfdCommonState.Diag)
  return static_cast< ::service_layer::SLBfdCommonState_SLBfdDiagStateEnum >(diag_);
}
inline void SLBfdCommonState::set_diag(::service_layer::SLBfdCommonState_SLBfdDiagStateEnum value) {
  
  diag_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLBfdCommonState.Diag)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service_layer

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::service_layer::SLBfdCommonState_SLBfdStateEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::service_layer::SLBfdCommonState_SLBfdStateEnum>() {
  return ::service_layer::SLBfdCommonState_SLBfdStateEnum_descriptor();
}
template <> struct is_proto_enum< ::service_layer::SLBfdCommonState_SLBfdDiagStateEnum> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::service_layer::SLBfdCommonState_SLBfdDiagStateEnum>() {
  return ::service_layer::SLBfdCommonState_SLBfdDiagStateEnum_descriptor();
}
template <> struct is_proto_enum< ::service_layer::SLBfdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::service_layer::SLBfdType>() {
  return ::service_layer::SLBfdType_descriptor();
}
template <> struct is_proto_enum< ::service_layer::SLBfdNotifType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::service_layer::SLBfdNotifType>() {
  return ::service_layer::SLBfdNotifType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sl_5fbfd_5fcommon_2eproto__INCLUDED
