// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_global.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sl_global.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace service_layer {

namespace {

const ::google::protobuf::Descriptor* SLInitMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLInitMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLInitMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLInitMsgRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLGlobalNotif_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLGlobalNotif_reflection_ = NULL;
struct SLGlobalNotifOneofInstance {
  const ::service_layer::SLInitMsgRsp* initrspmsg_;
}* SLGlobalNotif_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* SLGlobalsGetMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLGlobalsGetMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLGlobalsGetMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLGlobalsGetMsgRsp_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SLGlobalNotifType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_sl_5fglobal_2eproto() {
  protobuf_AddDesc_sl_5fglobal_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sl_global.proto");
  GOOGLE_CHECK(file != NULL);
  SLInitMsg_descriptor_ = file->message_type(0);
  static const int SLInitMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsg, majorver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsg, minorver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsg, subver_),
  };
  SLInitMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLInitMsg_descriptor_,
      SLInitMsg::default_instance_,
      SLInitMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLInitMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsg, _is_default_instance_));
  SLInitMsgRsp_descriptor_ = file->message_type(1);
  static const int SLInitMsgRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsgRsp, majorver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsgRsp, minorver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsgRsp, subver_),
  };
  SLInitMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLInitMsgRsp_descriptor_,
      SLInitMsgRsp::default_instance_,
      SLInitMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLInitMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsgRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsgRsp, _is_default_instance_));
  SLGlobalNotif_descriptor_ = file->message_type(2);
  static const int SLGlobalNotif_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalNotif, eventtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalNotif, errstatus_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(SLGlobalNotif_default_oneof_instance_, initrspmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalNotif, Event_),
  };
  SLGlobalNotif_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLGlobalNotif_descriptor_,
      SLGlobalNotif::default_instance_,
      SLGlobalNotif_offsets_,
      -1,
      -1,
      -1,
      SLGlobalNotif_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalNotif, _oneof_case_[0]),
      sizeof(SLGlobalNotif),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalNotif, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalNotif, _is_default_instance_));
  SLGlobalsGetMsg_descriptor_ = file->message_type(3);
  static const int SLGlobalsGetMsg_offsets_[1] = {
  };
  SLGlobalsGetMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLGlobalsGetMsg_descriptor_,
      SLGlobalsGetMsg::default_instance_,
      SLGlobalsGetMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLGlobalsGetMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsg, _is_default_instance_));
  SLGlobalsGetMsgRsp_descriptor_ = file->message_type(4);
  static const int SLGlobalsGetMsgRsp_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, errstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxvrfnamelength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxinterfacenamelength_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxpathsperentry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxprimarypathperentry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxbackuppathperentry_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxmplslabelsperpath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, minprimarypathidnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxprimarypathidnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, minbackuppathidnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxbackuppathidnum_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxremoteaddressnum_),
  };
  SLGlobalsGetMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLGlobalsGetMsgRsp_descriptor_,
      SLGlobalsGetMsgRsp::default_instance_,
      SLGlobalsGetMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLGlobalsGetMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, _is_default_instance_));
  SLGlobalNotifType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sl_5fglobal_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLInitMsg_descriptor_, &SLInitMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLInitMsgRsp_descriptor_, &SLInitMsgRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLGlobalNotif_descriptor_, &SLGlobalNotif::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLGlobalsGetMsg_descriptor_, &SLGlobalsGetMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLGlobalsGetMsgRsp_descriptor_, &SLGlobalsGetMsgRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sl_5fglobal_2eproto() {
  delete SLInitMsg::default_instance_;
  delete SLInitMsg_reflection_;
  delete SLInitMsgRsp::default_instance_;
  delete SLInitMsgRsp_reflection_;
  delete SLGlobalNotif::default_instance_;
  delete SLGlobalNotif_default_oneof_instance_;
  delete SLGlobalNotif_reflection_;
  delete SLGlobalsGetMsg::default_instance_;
  delete SLGlobalsGetMsg_reflection_;
  delete SLGlobalsGetMsgRsp::default_instance_;
  delete SLGlobalsGetMsgRsp_reflection_;
}

void protobuf_AddDesc_sl_5fglobal_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::service_layer::protobuf_AddDesc_sl_5fcommon_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017sl_global.proto\022\rservice_layer\032\025sl_com"
    "mon_types.proto\"\?\n\tSLInitMsg\022\020\n\010MajorVer"
    "\030\001 \001(\r\022\020\n\010MinorVer\030\002 \001(\r\022\016\n\006SubVer\030\003 \001(\r"
    "\"B\n\014SLInitMsgRsp\022\020\n\010MajorVer\030\001 \001(\r\022\020\n\010Mi"
    "norVer\030\002 \001(\r\022\016\n\006SubVer\030\003 \001(\r\"\261\001\n\rSLGloba"
    "lNotif\0223\n\tEventType\030\001 \001(\0162 .service_laye"
    "r.SLGlobalNotifType\022/\n\tErrStatus\030\002 \001(\0132\034"
    ".service_layer.SLErrorStatus\0221\n\nInitRspM"
    "sg\030\003 \001(\0132\033.service_layer.SLInitMsgRspH\000B"
    "\007\n\005Event\"\021\n\017SLGlobalsGetMsg\"\205\003\n\022SLGlobal"
    "sGetMsgRsp\022/\n\tErrStatus\030\001 \001(\0132\034.service_"
    "layer.SLErrorStatus\022\030\n\020MaxVrfNameLength\030"
    "\002 \001(\r\022\036\n\026MaxInterfaceNameLength\030\003 \001(\r\022\030\n"
    "\020MaxPathsPerEntry\030\004 \001(\r\022\036\n\026MaxPrimaryPat"
    "hPerEntry\030\005 \001(\r\022\035\n\025MaxBackupPathPerEntry"
    "\030\006 \001(\r\022\034\n\024MaxMplsLabelsPerPath\030\007 \001(\r\022\033\n\023"
    "MinPrimaryPathIdNum\030\010 \001(\r\022\033\n\023MaxPrimaryP"
    "athIdNum\030\t \001(\r\022\032\n\022MinBackupPathIdNum\030\n \001"
    "(\r\022\032\n\022MaxBackupPathIdNum\030\013 \001(\r\022\033\n\023MaxRem"
    "oteAddressNum\030\014 \001(\r*\234\001\n\021SLGlobalNotifTyp"
    "e\022!\n\035SL_GLOBAL_EVENT_TYPE_RESERVED\020\000\022\036\n\032"
    "SL_GLOBAL_EVENT_TYPE_ERROR\020\001\022\"\n\036SL_GLOBA"
    "L_EVENT_TYPE_HEARTBEAT\020\002\022 \n\034SL_GLOBAL_EV"
    "ENT_TYPE_VERSION\020\0032\254\001\n\010SLGlobal\022M\n\021SLGlo"
    "balInitNotif\022\030.service_layer.SLInitMsg\032\034"
    ".service_layer.SLGlobalNotif0\001\022Q\n\014SLGlob"
    "alsGet\022\036.service_layer.SLGlobalsGetMsg\032!"
    ".service_layer.SLGlobalsGetMsgRspb\006proto"
    "3", 1121);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_global.proto", &protobuf_RegisterTypes);
  SLInitMsg::default_instance_ = new SLInitMsg();
  SLInitMsgRsp::default_instance_ = new SLInitMsgRsp();
  SLGlobalNotif::default_instance_ = new SLGlobalNotif();
  SLGlobalNotif_default_oneof_instance_ = new SLGlobalNotifOneofInstance();
  SLGlobalsGetMsg::default_instance_ = new SLGlobalsGetMsg();
  SLGlobalsGetMsgRsp::default_instance_ = new SLGlobalsGetMsgRsp();
  SLInitMsg::default_instance_->InitAsDefaultInstance();
  SLInitMsgRsp::default_instance_->InitAsDefaultInstance();
  SLGlobalNotif::default_instance_->InitAsDefaultInstance();
  SLGlobalsGetMsg::default_instance_->InitAsDefaultInstance();
  SLGlobalsGetMsgRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sl_5fglobal_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sl_5fglobal_2eproto {
  StaticDescriptorInitializer_sl_5fglobal_2eproto() {
    protobuf_AddDesc_sl_5fglobal_2eproto();
  }
} static_descriptor_initializer_sl_5fglobal_2eproto_;
const ::google::protobuf::EnumDescriptor* SLGlobalNotifType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLGlobalNotifType_descriptor_;
}
bool SLGlobalNotifType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInitMsg::kMajorVerFieldNumber;
const int SLInitMsg::kMinorVerFieldNumber;
const int SLInitMsg::kSubVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInitMsg::SLInitMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInitMsg)
}

void SLInitMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLInitMsg::SLInitMsg(const SLInitMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInitMsg)
}

void SLInitMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  majorver_ = 0u;
  minorver_ = 0u;
  subver_ = 0u;
}

SLInitMsg::~SLInitMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInitMsg)
  SharedDtor();
}

void SLInitMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SLInitMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInitMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLInitMsg_descriptor_;
}

const SLInitMsg& SLInitMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5fglobal_2eproto();
  return *default_instance_;
}

SLInitMsg* SLInitMsg::default_instance_ = NULL;

SLInitMsg* SLInitMsg::New(::google::protobuf::Arena* arena) const {
  SLInitMsg* n = new SLInitMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInitMsg::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLInitMsg*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(majorver_, subver_);

#undef ZR_HELPER_
#undef ZR_

}

bool SLInitMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInitMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MajorVer = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &majorver_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MinorVer;
        break;
      }

      // optional uint32 MinorVer = 2;
      case 2: {
        if (tag == 16) {
         parse_MinorVer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minorver_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SubVer;
        break;
      }

      // optional uint32 SubVer = 3;
      case 3: {
        if (tag == 24) {
         parse_SubVer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subver_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInitMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInitMsg)
  return false;
#undef DO_
}

void SLInitMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInitMsg)
  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->majorver(), output);
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minorver(), output);
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->subver(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLInitMsg)
}

::google::protobuf::uint8* SLInitMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInitMsg)
  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->majorver(), target);
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minorver(), target);
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->subver(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInitMsg)
  return target;
}

int SLInitMsg::ByteSize() const {
  int total_size = 0;

  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->majorver());
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minorver());
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subver());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInitMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLInitMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInitMsg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLInitMsg::MergeFrom(const SLInitMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.majorver() != 0) {
    set_majorver(from.majorver());
  }
  if (from.minorver() != 0) {
    set_minorver(from.minorver());
  }
  if (from.subver() != 0) {
    set_subver(from.subver());
  }
}

void SLInitMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInitMsg::CopyFrom(const SLInitMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInitMsg::IsInitialized() const {

  return true;
}

void SLInitMsg::Swap(SLInitMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInitMsg::InternalSwap(SLInitMsg* other) {
  std::swap(majorver_, other->majorver_);
  std::swap(minorver_, other->minorver_);
  std::swap(subver_, other->subver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInitMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLInitMsg_descriptor_;
  metadata.reflection = SLInitMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLInitMsg

// optional uint32 MajorVer = 1;
void SLInitMsg::clear_majorver() {
  majorver_ = 0u;
}
 ::google::protobuf::uint32 SLInitMsg::majorver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsg.MajorVer)
  return majorver_;
}
 void SLInitMsg::set_majorver(::google::protobuf::uint32 value) {
  
  majorver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsg.MajorVer)
}

// optional uint32 MinorVer = 2;
void SLInitMsg::clear_minorver() {
  minorver_ = 0u;
}
 ::google::protobuf::uint32 SLInitMsg::minorver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsg.MinorVer)
  return minorver_;
}
 void SLInitMsg::set_minorver(::google::protobuf::uint32 value) {
  
  minorver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsg.MinorVer)
}

// optional uint32 SubVer = 3;
void SLInitMsg::clear_subver() {
  subver_ = 0u;
}
 ::google::protobuf::uint32 SLInitMsg::subver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsg.SubVer)
  return subver_;
}
 void SLInitMsg::set_subver(::google::protobuf::uint32 value) {
  
  subver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsg.SubVer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInitMsgRsp::kMajorVerFieldNumber;
const int SLInitMsgRsp::kMinorVerFieldNumber;
const int SLInitMsgRsp::kSubVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInitMsgRsp::SLInitMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInitMsgRsp)
}

void SLInitMsgRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLInitMsgRsp::SLInitMsgRsp(const SLInitMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInitMsgRsp)
}

void SLInitMsgRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  majorver_ = 0u;
  minorver_ = 0u;
  subver_ = 0u;
}

SLInitMsgRsp::~SLInitMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInitMsgRsp)
  SharedDtor();
}

void SLInitMsgRsp::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SLInitMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInitMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLInitMsgRsp_descriptor_;
}

const SLInitMsgRsp& SLInitMsgRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5fglobal_2eproto();
  return *default_instance_;
}

SLInitMsgRsp* SLInitMsgRsp::default_instance_ = NULL;

SLInitMsgRsp* SLInitMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLInitMsgRsp* n = new SLInitMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInitMsgRsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLInitMsgRsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(majorver_, subver_);

#undef ZR_HELPER_
#undef ZR_

}

bool SLInitMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInitMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 MajorVer = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &majorver_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MinorVer;
        break;
      }

      // optional uint32 MinorVer = 2;
      case 2: {
        if (tag == 16) {
         parse_MinorVer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minorver_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_SubVer;
        break;
      }

      // optional uint32 SubVer = 3;
      case 3: {
        if (tag == 24) {
         parse_SubVer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subver_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInitMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInitMsgRsp)
  return false;
#undef DO_
}

void SLInitMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInitMsgRsp)
  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->majorver(), output);
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minorver(), output);
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->subver(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLInitMsgRsp)
}

::google::protobuf::uint8* SLInitMsgRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInitMsgRsp)
  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->majorver(), target);
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minorver(), target);
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->subver(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInitMsgRsp)
  return target;
}

int SLInitMsgRsp::ByteSize() const {
  int total_size = 0;

  // optional uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->majorver());
  }

  // optional uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minorver());
  }

  // optional uint32 SubVer = 3;
  if (this->subver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subver());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInitMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLInitMsgRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInitMsgRsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLInitMsgRsp::MergeFrom(const SLInitMsgRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.majorver() != 0) {
    set_majorver(from.majorver());
  }
  if (from.minorver() != 0) {
    set_minorver(from.minorver());
  }
  if (from.subver() != 0) {
    set_subver(from.subver());
  }
}

void SLInitMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInitMsgRsp::CopyFrom(const SLInitMsgRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInitMsgRsp::IsInitialized() const {

  return true;
}

void SLInitMsgRsp::Swap(SLInitMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInitMsgRsp::InternalSwap(SLInitMsgRsp* other) {
  std::swap(majorver_, other->majorver_);
  std::swap(minorver_, other->minorver_);
  std::swap(subver_, other->subver_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInitMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLInitMsgRsp_descriptor_;
  metadata.reflection = SLInitMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLInitMsgRsp

// optional uint32 MajorVer = 1;
void SLInitMsgRsp::clear_majorver() {
  majorver_ = 0u;
}
 ::google::protobuf::uint32 SLInitMsgRsp::majorver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsgRsp.MajorVer)
  return majorver_;
}
 void SLInitMsgRsp::set_majorver(::google::protobuf::uint32 value) {
  
  majorver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsgRsp.MajorVer)
}

// optional uint32 MinorVer = 2;
void SLInitMsgRsp::clear_minorver() {
  minorver_ = 0u;
}
 ::google::protobuf::uint32 SLInitMsgRsp::minorver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsgRsp.MinorVer)
  return minorver_;
}
 void SLInitMsgRsp::set_minorver(::google::protobuf::uint32 value) {
  
  minorver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsgRsp.MinorVer)
}

// optional uint32 SubVer = 3;
void SLInitMsgRsp::clear_subver() {
  subver_ = 0u;
}
 ::google::protobuf::uint32 SLInitMsgRsp::subver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsgRsp.SubVer)
  return subver_;
}
 void SLInitMsgRsp::set_subver(::google::protobuf::uint32 value) {
  
  subver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsgRsp.SubVer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLGlobalNotif::kEventTypeFieldNumber;
const int SLGlobalNotif::kErrStatusFieldNumber;
const int SLGlobalNotif::kInitRspMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLGlobalNotif::SLGlobalNotif()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLGlobalNotif)
}

void SLGlobalNotif::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(&::service_layer::SLErrorStatus::default_instance());
  SLGlobalNotif_default_oneof_instance_->initrspmsg_ = const_cast< ::service_layer::SLInitMsgRsp*>(&::service_layer::SLInitMsgRsp::default_instance());
}

SLGlobalNotif::SLGlobalNotif(const SLGlobalNotif& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLGlobalNotif)
}

void SLGlobalNotif::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  eventtype_ = 0;
  errstatus_ = NULL;
  clear_has_Event();
}

SLGlobalNotif::~SLGlobalNotif() {
  // @@protoc_insertion_point(destructor:service_layer.SLGlobalNotif)
  SharedDtor();
}

void SLGlobalNotif::SharedDtor() {
  if (has_Event()) {
    clear_Event();
  }
  if (this != default_instance_) {
    delete errstatus_;
  }
}

void SLGlobalNotif::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLGlobalNotif::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLGlobalNotif_descriptor_;
}

const SLGlobalNotif& SLGlobalNotif::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5fglobal_2eproto();
  return *default_instance_;
}

SLGlobalNotif* SLGlobalNotif::default_instance_ = NULL;

SLGlobalNotif* SLGlobalNotif::New(::google::protobuf::Arena* arena) const {
  SLGlobalNotif* n = new SLGlobalNotif;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLGlobalNotif::clear_Event() {
  switch(Event_case()) {
    case kInitRspMsg: {
      delete Event_.initrspmsg_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void SLGlobalNotif::Clear() {
  eventtype_ = 0;
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
  clear_Event();
}

bool SLGlobalNotif::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLGlobalNotif)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .service_layer.SLGlobalNotifType EventType = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_eventtype(static_cast< ::service_layer::SLGlobalNotifType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ErrStatus;
        break;
      }

      // optional .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (tag == 18) {
         parse_ErrStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_InitRspMsg;
        break;
      }

      // optional .service_layer.SLInitMsgRsp InitRspMsg = 3;
      case 3: {
        if (tag == 26) {
         parse_InitRspMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initrspmsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLGlobalNotif)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLGlobalNotif)
  return false;
#undef DO_
}

void SLGlobalNotif::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLGlobalNotif)
  // optional .service_layer.SLGlobalNotifType EventType = 1;
  if (this->eventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eventtype(), output);
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // optional .service_layer.SLInitMsgRsp InitRspMsg = 3;
  if (has_initrspmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *Event_.initrspmsg_, output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLGlobalNotif)
}

::google::protobuf::uint8* SLGlobalNotif::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLGlobalNotif)
  // optional .service_layer.SLGlobalNotifType EventType = 1;
  if (this->eventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eventtype(), target);
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->errstatus_, target);
  }

  // optional .service_layer.SLInitMsgRsp InitRspMsg = 3;
  if (has_initrspmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *Event_.initrspmsg_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLGlobalNotif)
  return target;
}

int SLGlobalNotif::ByteSize() const {
  int total_size = 0;

  // optional .service_layer.SLGlobalNotifType EventType = 1;
  if (this->eventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->eventtype());
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  switch (Event_case()) {
    // optional .service_layer.SLInitMsgRsp InitRspMsg = 3;
    case kInitRspMsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *Event_.initrspmsg_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLGlobalNotif::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLGlobalNotif* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLGlobalNotif>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLGlobalNotif::MergeFrom(const SLGlobalNotif& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  switch (from.Event_case()) {
    case kInitRspMsg: {
      mutable_initrspmsg()->::service_layer::SLInitMsgRsp::MergeFrom(from.initrspmsg());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  if (from.eventtype() != 0) {
    set_eventtype(from.eventtype());
  }
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
}

void SLGlobalNotif::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLGlobalNotif::CopyFrom(const SLGlobalNotif& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLGlobalNotif::IsInitialized() const {

  return true;
}

void SLGlobalNotif::Swap(SLGlobalNotif* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLGlobalNotif::InternalSwap(SLGlobalNotif* other) {
  std::swap(eventtype_, other->eventtype_);
  std::swap(errstatus_, other->errstatus_);
  std::swap(Event_, other->Event_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLGlobalNotif::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLGlobalNotif_descriptor_;
  metadata.reflection = SLGlobalNotif_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLGlobalNotif

// optional .service_layer.SLGlobalNotifType EventType = 1;
void SLGlobalNotif::clear_eventtype() {
  eventtype_ = 0;
}
 ::service_layer::SLGlobalNotifType SLGlobalNotif::eventtype() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalNotif.EventType)
  return static_cast< ::service_layer::SLGlobalNotifType >(eventtype_);
}
 void SLGlobalNotif::set_eventtype(::service_layer::SLGlobalNotifType value) {
  
  eventtype_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalNotif.EventType)
}

// optional .service_layer.SLErrorStatus ErrStatus = 2;
bool SLGlobalNotif::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
void SLGlobalNotif::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLGlobalNotif::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalNotif.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
::service_layer::SLErrorStatus* SLGlobalNotif::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLGlobalNotif.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLGlobalNotif::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLGlobalNotif::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLGlobalNotif.ErrStatus)
}

// optional .service_layer.SLInitMsgRsp InitRspMsg = 3;
bool SLGlobalNotif::has_initrspmsg() const {
  return Event_case() == kInitRspMsg;
}
void SLGlobalNotif::set_has_initrspmsg() {
  _oneof_case_[0] = kInitRspMsg;
}
void SLGlobalNotif::clear_initrspmsg() {
  if (has_initrspmsg()) {
    delete Event_.initrspmsg_;
    clear_has_Event();
  }
}
 const ::service_layer::SLInitMsgRsp& SLGlobalNotif::initrspmsg() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalNotif.InitRspMsg)
  return has_initrspmsg()
      ? *Event_.initrspmsg_
      : ::service_layer::SLInitMsgRsp::default_instance();
}
::service_layer::SLInitMsgRsp* SLGlobalNotif::mutable_initrspmsg() {
  if (!has_initrspmsg()) {
    clear_Event();
    set_has_initrspmsg();
    Event_.initrspmsg_ = new ::service_layer::SLInitMsgRsp;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLGlobalNotif.InitRspMsg)
  return Event_.initrspmsg_;
}
::service_layer::SLInitMsgRsp* SLGlobalNotif::release_initrspmsg() {
  if (has_initrspmsg()) {
    clear_has_Event();
    ::service_layer::SLInitMsgRsp* temp = Event_.initrspmsg_;
    Event_.initrspmsg_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SLGlobalNotif::set_allocated_initrspmsg(::service_layer::SLInitMsgRsp* initrspmsg) {
  clear_Event();
  if (initrspmsg) {
    set_has_initrspmsg();
    Event_.initrspmsg_ = initrspmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLGlobalNotif.InitRspMsg)
}

bool SLGlobalNotif::has_Event() const {
  return Event_case() != EVENT_NOT_SET;
}
void SLGlobalNotif::clear_has_Event() {
  _oneof_case_[0] = EVENT_NOT_SET;
}
SLGlobalNotif::EventCase SLGlobalNotif::Event_case() const {
  return SLGlobalNotif::EventCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLGlobalsGetMsg::SLGlobalsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLGlobalsGetMsg)
}

void SLGlobalsGetMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLGlobalsGetMsg::SLGlobalsGetMsg(const SLGlobalsGetMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLGlobalsGetMsg)
}

void SLGlobalsGetMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

SLGlobalsGetMsg::~SLGlobalsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLGlobalsGetMsg)
  SharedDtor();
}

void SLGlobalsGetMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SLGlobalsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLGlobalsGetMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLGlobalsGetMsg_descriptor_;
}

const SLGlobalsGetMsg& SLGlobalsGetMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5fglobal_2eproto();
  return *default_instance_;
}

SLGlobalsGetMsg* SLGlobalsGetMsg::default_instance_ = NULL;

SLGlobalsGetMsg* SLGlobalsGetMsg::New(::google::protobuf::Arena* arena) const {
  SLGlobalsGetMsg* n = new SLGlobalsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLGlobalsGetMsg::Clear() {
}

bool SLGlobalsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLGlobalsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLGlobalsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLGlobalsGetMsg)
  return false;
#undef DO_
}

void SLGlobalsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLGlobalsGetMsg)
  // @@protoc_insertion_point(serialize_end:service_layer.SLGlobalsGetMsg)
}

::google::protobuf::uint8* SLGlobalsGetMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLGlobalsGetMsg)
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLGlobalsGetMsg)
  return target;
}

int SLGlobalsGetMsg::ByteSize() const {
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLGlobalsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLGlobalsGetMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLGlobalsGetMsg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLGlobalsGetMsg::MergeFrom(const SLGlobalsGetMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void SLGlobalsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLGlobalsGetMsg::CopyFrom(const SLGlobalsGetMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLGlobalsGetMsg::IsInitialized() const {

  return true;
}

void SLGlobalsGetMsg::Swap(SLGlobalsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLGlobalsGetMsg::InternalSwap(SLGlobalsGetMsg* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLGlobalsGetMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLGlobalsGetMsg_descriptor_;
  metadata.reflection = SLGlobalsGetMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLGlobalsGetMsg

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLGlobalsGetMsgRsp::kErrStatusFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxVrfNameLengthFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxInterfaceNameLengthFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxPathsPerEntryFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxPrimaryPathPerEntryFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxBackupPathPerEntryFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxMplsLabelsPerPathFieldNumber;
const int SLGlobalsGetMsgRsp::kMinPrimaryPathIdNumFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxPrimaryPathIdNumFieldNumber;
const int SLGlobalsGetMsgRsp::kMinBackupPathIdNumFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxBackupPathIdNumFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxRemoteAddressNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLGlobalsGetMsgRsp::SLGlobalsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLGlobalsGetMsgRsp)
}

void SLGlobalsGetMsgRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(&::service_layer::SLErrorStatus::default_instance());
}

SLGlobalsGetMsgRsp::SLGlobalsGetMsgRsp(const SLGlobalsGetMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLGlobalsGetMsgRsp)
}

void SLGlobalsGetMsgRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errstatus_ = NULL;
  maxvrfnamelength_ = 0u;
  maxinterfacenamelength_ = 0u;
  maxpathsperentry_ = 0u;
  maxprimarypathperentry_ = 0u;
  maxbackuppathperentry_ = 0u;
  maxmplslabelsperpath_ = 0u;
  minprimarypathidnum_ = 0u;
  maxprimarypathidnum_ = 0u;
  minbackuppathidnum_ = 0u;
  maxbackuppathidnum_ = 0u;
  maxremoteaddressnum_ = 0u;
}

SLGlobalsGetMsgRsp::~SLGlobalsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLGlobalsGetMsgRsp)
  SharedDtor();
}

void SLGlobalsGetMsgRsp::SharedDtor() {
  if (this != default_instance_) {
    delete errstatus_;
  }
}

void SLGlobalsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLGlobalsGetMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLGlobalsGetMsgRsp_descriptor_;
}

const SLGlobalsGetMsgRsp& SLGlobalsGetMsgRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5fglobal_2eproto();
  return *default_instance_;
}

SLGlobalsGetMsgRsp* SLGlobalsGetMsgRsp::default_instance_ = NULL;

SLGlobalsGetMsgRsp* SLGlobalsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLGlobalsGetMsgRsp* n = new SLGlobalsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLGlobalsGetMsgRsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLGlobalsGetMsgRsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(maxvrfnamelength_, minprimarypathidnum_);
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
  ZR_(maxprimarypathidnum_, maxremoteaddressnum_);

#undef ZR_HELPER_
#undef ZR_

}

bool SLGlobalsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLGlobalsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MaxVrfNameLength;
        break;
      }

      // optional uint32 MaxVrfNameLength = 2;
      case 2: {
        if (tag == 16) {
         parse_MaxVrfNameLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxvrfnamelength_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MaxInterfaceNameLength;
        break;
      }

      // optional uint32 MaxInterfaceNameLength = 3;
      case 3: {
        if (tag == 24) {
         parse_MaxInterfaceNameLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxinterfacenamelength_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_MaxPathsPerEntry;
        break;
      }

      // optional uint32 MaxPathsPerEntry = 4;
      case 4: {
        if (tag == 32) {
         parse_MaxPathsPerEntry:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxpathsperentry_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_MaxPrimaryPathPerEntry;
        break;
      }

      // optional uint32 MaxPrimaryPathPerEntry = 5;
      case 5: {
        if (tag == 40) {
         parse_MaxPrimaryPathPerEntry:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxprimarypathperentry_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_MaxBackupPathPerEntry;
        break;
      }

      // optional uint32 MaxBackupPathPerEntry = 6;
      case 6: {
        if (tag == 48) {
         parse_MaxBackupPathPerEntry:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxbackuppathperentry_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_MaxMplsLabelsPerPath;
        break;
      }

      // optional uint32 MaxMplsLabelsPerPath = 7;
      case 7: {
        if (tag == 56) {
         parse_MaxMplsLabelsPerPath:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxmplslabelsperpath_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_MinPrimaryPathIdNum;
        break;
      }

      // optional uint32 MinPrimaryPathIdNum = 8;
      case 8: {
        if (tag == 64) {
         parse_MinPrimaryPathIdNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minprimarypathidnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_MaxPrimaryPathIdNum;
        break;
      }

      // optional uint32 MaxPrimaryPathIdNum = 9;
      case 9: {
        if (tag == 72) {
         parse_MaxPrimaryPathIdNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxprimarypathidnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_MinBackupPathIdNum;
        break;
      }

      // optional uint32 MinBackupPathIdNum = 10;
      case 10: {
        if (tag == 80) {
         parse_MinBackupPathIdNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minbackuppathidnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_MaxBackupPathIdNum;
        break;
      }

      // optional uint32 MaxBackupPathIdNum = 11;
      case 11: {
        if (tag == 88) {
         parse_MaxBackupPathIdNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxbackuppathidnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(96)) goto parse_MaxRemoteAddressNum;
        break;
      }

      // optional uint32 MaxRemoteAddressNum = 12;
      case 12: {
        if (tag == 96) {
         parse_MaxRemoteAddressNum:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxremoteaddressnum_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLGlobalsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLGlobalsGetMsgRsp)
  return false;
#undef DO_
}

void SLGlobalsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLGlobalsGetMsgRsp)
  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // optional uint32 MaxVrfNameLength = 2;
  if (this->maxvrfnamelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxvrfnamelength(), output);
  }

  // optional uint32 MaxInterfaceNameLength = 3;
  if (this->maxinterfacenamelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxinterfacenamelength(), output);
  }

  // optional uint32 MaxPathsPerEntry = 4;
  if (this->maxpathsperentry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->maxpathsperentry(), output);
  }

  // optional uint32 MaxPrimaryPathPerEntry = 5;
  if (this->maxprimarypathperentry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->maxprimarypathperentry(), output);
  }

  // optional uint32 MaxBackupPathPerEntry = 6;
  if (this->maxbackuppathperentry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->maxbackuppathperentry(), output);
  }

  // optional uint32 MaxMplsLabelsPerPath = 7;
  if (this->maxmplslabelsperpath() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->maxmplslabelsperpath(), output);
  }

  // optional uint32 MinPrimaryPathIdNum = 8;
  if (this->minprimarypathidnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->minprimarypathidnum(), output);
  }

  // optional uint32 MaxPrimaryPathIdNum = 9;
  if (this->maxprimarypathidnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->maxprimarypathidnum(), output);
  }

  // optional uint32 MinBackupPathIdNum = 10;
  if (this->minbackuppathidnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->minbackuppathidnum(), output);
  }

  // optional uint32 MaxBackupPathIdNum = 11;
  if (this->maxbackuppathidnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->maxbackuppathidnum(), output);
  }

  // optional uint32 MaxRemoteAddressNum = 12;
  if (this->maxremoteaddressnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->maxremoteaddressnum(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLGlobalsGetMsgRsp)
}

::google::protobuf::uint8* SLGlobalsGetMsgRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLGlobalsGetMsgRsp)
  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->errstatus_, target);
  }

  // optional uint32 MaxVrfNameLength = 2;
  if (this->maxvrfnamelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxvrfnamelength(), target);
  }

  // optional uint32 MaxInterfaceNameLength = 3;
  if (this->maxinterfacenamelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxinterfacenamelength(), target);
  }

  // optional uint32 MaxPathsPerEntry = 4;
  if (this->maxpathsperentry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->maxpathsperentry(), target);
  }

  // optional uint32 MaxPrimaryPathPerEntry = 5;
  if (this->maxprimarypathperentry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->maxprimarypathperentry(), target);
  }

  // optional uint32 MaxBackupPathPerEntry = 6;
  if (this->maxbackuppathperentry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->maxbackuppathperentry(), target);
  }

  // optional uint32 MaxMplsLabelsPerPath = 7;
  if (this->maxmplslabelsperpath() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->maxmplslabelsperpath(), target);
  }

  // optional uint32 MinPrimaryPathIdNum = 8;
  if (this->minprimarypathidnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->minprimarypathidnum(), target);
  }

  // optional uint32 MaxPrimaryPathIdNum = 9;
  if (this->maxprimarypathidnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->maxprimarypathidnum(), target);
  }

  // optional uint32 MinBackupPathIdNum = 10;
  if (this->minbackuppathidnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->minbackuppathidnum(), target);
  }

  // optional uint32 MaxBackupPathIdNum = 11;
  if (this->maxbackuppathidnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->maxbackuppathidnum(), target);
  }

  // optional uint32 MaxRemoteAddressNum = 12;
  if (this->maxremoteaddressnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->maxremoteaddressnum(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLGlobalsGetMsgRsp)
  return target;
}

int SLGlobalsGetMsgRsp::ByteSize() const {
  int total_size = 0;

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // optional uint32 MaxVrfNameLength = 2;
  if (this->maxvrfnamelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxvrfnamelength());
  }

  // optional uint32 MaxInterfaceNameLength = 3;
  if (this->maxinterfacenamelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxinterfacenamelength());
  }

  // optional uint32 MaxPathsPerEntry = 4;
  if (this->maxpathsperentry() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxpathsperentry());
  }

  // optional uint32 MaxPrimaryPathPerEntry = 5;
  if (this->maxprimarypathperentry() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxprimarypathperentry());
  }

  // optional uint32 MaxBackupPathPerEntry = 6;
  if (this->maxbackuppathperentry() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxbackuppathperentry());
  }

  // optional uint32 MaxMplsLabelsPerPath = 7;
  if (this->maxmplslabelsperpath() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxmplslabelsperpath());
  }

  // optional uint32 MinPrimaryPathIdNum = 8;
  if (this->minprimarypathidnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minprimarypathidnum());
  }

  // optional uint32 MaxPrimaryPathIdNum = 9;
  if (this->maxprimarypathidnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxprimarypathidnum());
  }

  // optional uint32 MinBackupPathIdNum = 10;
  if (this->minbackuppathidnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minbackuppathidnum());
  }

  // optional uint32 MaxBackupPathIdNum = 11;
  if (this->maxbackuppathidnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxbackuppathidnum());
  }

  // optional uint32 MaxRemoteAddressNum = 12;
  if (this->maxremoteaddressnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxremoteaddressnum());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLGlobalsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLGlobalsGetMsgRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLGlobalsGetMsgRsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLGlobalsGetMsgRsp::MergeFrom(const SLGlobalsGetMsgRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.maxvrfnamelength() != 0) {
    set_maxvrfnamelength(from.maxvrfnamelength());
  }
  if (from.maxinterfacenamelength() != 0) {
    set_maxinterfacenamelength(from.maxinterfacenamelength());
  }
  if (from.maxpathsperentry() != 0) {
    set_maxpathsperentry(from.maxpathsperentry());
  }
  if (from.maxprimarypathperentry() != 0) {
    set_maxprimarypathperentry(from.maxprimarypathperentry());
  }
  if (from.maxbackuppathperentry() != 0) {
    set_maxbackuppathperentry(from.maxbackuppathperentry());
  }
  if (from.maxmplslabelsperpath() != 0) {
    set_maxmplslabelsperpath(from.maxmplslabelsperpath());
  }
  if (from.minprimarypathidnum() != 0) {
    set_minprimarypathidnum(from.minprimarypathidnum());
  }
  if (from.maxprimarypathidnum() != 0) {
    set_maxprimarypathidnum(from.maxprimarypathidnum());
  }
  if (from.minbackuppathidnum() != 0) {
    set_minbackuppathidnum(from.minbackuppathidnum());
  }
  if (from.maxbackuppathidnum() != 0) {
    set_maxbackuppathidnum(from.maxbackuppathidnum());
  }
  if (from.maxremoteaddressnum() != 0) {
    set_maxremoteaddressnum(from.maxremoteaddressnum());
  }
}

void SLGlobalsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLGlobalsGetMsgRsp::CopyFrom(const SLGlobalsGetMsgRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLGlobalsGetMsgRsp::IsInitialized() const {

  return true;
}

void SLGlobalsGetMsgRsp::Swap(SLGlobalsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLGlobalsGetMsgRsp::InternalSwap(SLGlobalsGetMsgRsp* other) {
  std::swap(errstatus_, other->errstatus_);
  std::swap(maxvrfnamelength_, other->maxvrfnamelength_);
  std::swap(maxinterfacenamelength_, other->maxinterfacenamelength_);
  std::swap(maxpathsperentry_, other->maxpathsperentry_);
  std::swap(maxprimarypathperentry_, other->maxprimarypathperentry_);
  std::swap(maxbackuppathperentry_, other->maxbackuppathperentry_);
  std::swap(maxmplslabelsperpath_, other->maxmplslabelsperpath_);
  std::swap(minprimarypathidnum_, other->minprimarypathidnum_);
  std::swap(maxprimarypathidnum_, other->maxprimarypathidnum_);
  std::swap(minbackuppathidnum_, other->minbackuppathidnum_);
  std::swap(maxbackuppathidnum_, other->maxbackuppathidnum_);
  std::swap(maxremoteaddressnum_, other->maxremoteaddressnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLGlobalsGetMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLGlobalsGetMsgRsp_descriptor_;
  metadata.reflection = SLGlobalsGetMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLGlobalsGetMsgRsp

// optional .service_layer.SLErrorStatus ErrStatus = 1;
bool SLGlobalsGetMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
void SLGlobalsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLGlobalsGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
::service_layer::SLErrorStatus* SLGlobalsGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLGlobalsGetMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLGlobalsGetMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLGlobalsGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLGlobalsGetMsgRsp.ErrStatus)
}

// optional uint32 MaxVrfNameLength = 2;
void SLGlobalsGetMsgRsp::clear_maxvrfnamelength() {
  maxvrfnamelength_ = 0u;
}
 ::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxvrfnamelength() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxVrfNameLength)
  return maxvrfnamelength_;
}
 void SLGlobalsGetMsgRsp::set_maxvrfnamelength(::google::protobuf::uint32 value) {
  
  maxvrfnamelength_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxVrfNameLength)
}

// optional uint32 MaxInterfaceNameLength = 3;
void SLGlobalsGetMsgRsp::clear_maxinterfacenamelength() {
  maxinterfacenamelength_ = 0u;
}
 ::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxinterfacenamelength() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxInterfaceNameLength)
  return maxinterfacenamelength_;
}
 void SLGlobalsGetMsgRsp::set_maxinterfacenamelength(::google::protobuf::uint32 value) {
  
  maxinterfacenamelength_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxInterfaceNameLength)
}

// optional uint32 MaxPathsPerEntry = 4;
void SLGlobalsGetMsgRsp::clear_maxpathsperentry() {
  maxpathsperentry_ = 0u;
}
 ::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxpathsperentry() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxPathsPerEntry)
  return maxpathsperentry_;
}
 void SLGlobalsGetMsgRsp::set_maxpathsperentry(::google::protobuf::uint32 value) {
  
  maxpathsperentry_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxPathsPerEntry)
}

// optional uint32 MaxPrimaryPathPerEntry = 5;
void SLGlobalsGetMsgRsp::clear_maxprimarypathperentry() {
  maxprimarypathperentry_ = 0u;
}
 ::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxprimarypathperentry() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxPrimaryPathPerEntry)
  return maxprimarypathperentry_;
}
 void SLGlobalsGetMsgRsp::set_maxprimarypathperentry(::google::protobuf::uint32 value) {
  
  maxprimarypathperentry_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxPrimaryPathPerEntry)
}

// optional uint32 MaxBackupPathPerEntry = 6;
void SLGlobalsGetMsgRsp::clear_maxbackuppathperentry() {
  maxbackuppathperentry_ = 0u;
}
 ::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxbackuppathperentry() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxBackupPathPerEntry)
  return maxbackuppathperentry_;
}
 void SLGlobalsGetMsgRsp::set_maxbackuppathperentry(::google::protobuf::uint32 value) {
  
  maxbackuppathperentry_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxBackupPathPerEntry)
}

// optional uint32 MaxMplsLabelsPerPath = 7;
void SLGlobalsGetMsgRsp::clear_maxmplslabelsperpath() {
  maxmplslabelsperpath_ = 0u;
}
 ::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxmplslabelsperpath() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxMplsLabelsPerPath)
  return maxmplslabelsperpath_;
}
 void SLGlobalsGetMsgRsp::set_maxmplslabelsperpath(::google::protobuf::uint32 value) {
  
  maxmplslabelsperpath_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxMplsLabelsPerPath)
}

// optional uint32 MinPrimaryPathIdNum = 8;
void SLGlobalsGetMsgRsp::clear_minprimarypathidnum() {
  minprimarypathidnum_ = 0u;
}
 ::google::protobuf::uint32 SLGlobalsGetMsgRsp::minprimarypathidnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MinPrimaryPathIdNum)
  return minprimarypathidnum_;
}
 void SLGlobalsGetMsgRsp::set_minprimarypathidnum(::google::protobuf::uint32 value) {
  
  minprimarypathidnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MinPrimaryPathIdNum)
}

// optional uint32 MaxPrimaryPathIdNum = 9;
void SLGlobalsGetMsgRsp::clear_maxprimarypathidnum() {
  maxprimarypathidnum_ = 0u;
}
 ::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxprimarypathidnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxPrimaryPathIdNum)
  return maxprimarypathidnum_;
}
 void SLGlobalsGetMsgRsp::set_maxprimarypathidnum(::google::protobuf::uint32 value) {
  
  maxprimarypathidnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxPrimaryPathIdNum)
}

// optional uint32 MinBackupPathIdNum = 10;
void SLGlobalsGetMsgRsp::clear_minbackuppathidnum() {
  minbackuppathidnum_ = 0u;
}
 ::google::protobuf::uint32 SLGlobalsGetMsgRsp::minbackuppathidnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MinBackupPathIdNum)
  return minbackuppathidnum_;
}
 void SLGlobalsGetMsgRsp::set_minbackuppathidnum(::google::protobuf::uint32 value) {
  
  minbackuppathidnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MinBackupPathIdNum)
}

// optional uint32 MaxBackupPathIdNum = 11;
void SLGlobalsGetMsgRsp::clear_maxbackuppathidnum() {
  maxbackuppathidnum_ = 0u;
}
 ::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxbackuppathidnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxBackupPathIdNum)
  return maxbackuppathidnum_;
}
 void SLGlobalsGetMsgRsp::set_maxbackuppathidnum(::google::protobuf::uint32 value) {
  
  maxbackuppathidnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxBackupPathIdNum)
}

// optional uint32 MaxRemoteAddressNum = 12;
void SLGlobalsGetMsgRsp::clear_maxremoteaddressnum() {
  maxremoteaddressnum_ = 0u;
}
 ::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxremoteaddressnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxRemoteAddressNum)
  return maxremoteaddressnum_;
}
 void SLGlobalsGetMsgRsp::set_maxremoteaddressnum(::google::protobuf::uint32 value) {
  
  maxremoteaddressnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxRemoteAddressNum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
