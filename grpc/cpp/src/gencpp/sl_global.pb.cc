// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_global.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sl_global.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace service_layer {
class SLInitMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLInitMsg> {
} _SLInitMsg_default_instance_;
class SLInitMsgRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLInitMsgRsp> {
} _SLInitMsgRsp_default_instance_;
class SLGlobalNotifDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLGlobalNotif> {
  public:
  const ::service_layer::SLInitMsgRsp* initrspmsg_;
} _SLGlobalNotif_default_instance_;
class SLGlobalsGetMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLGlobalsGetMsg> {
} _SLGlobalsGetMsg_default_instance_;
class SLGlobalsGetMsgRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLGlobalsGetMsgRsp> {
} _SLGlobalsGetMsgRsp_default_instance_;

namespace protobuf_sl_5fglobal_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsg, majorver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsg, minorver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsg, subver_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsgRsp, majorver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsgRsp, minorver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLInitMsgRsp, subver_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalNotif, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalNotif, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalNotif, eventtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalNotif, errstatus_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SLGlobalNotif_default_instance_), initrspmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalNotif, Event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxvrfnamelength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxinterfacenamelength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxpathsperentry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxprimarypathperentry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxbackuppathperentry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxmplslabelsperpath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, minprimarypathidnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxprimarypathidnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, minbackuppathidnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxbackuppathidnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxremoteaddressnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxl2bdnamelength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxl2pmsitunnelidlength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLGlobalsGetMsgRsp, maxlabelblockclientnamelength_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(SLInitMsg)},
  { 7, -1, sizeof(SLInitMsgRsp)},
  { 14, -1, sizeof(SLGlobalNotif)},
  { 22, -1, sizeof(SLGlobalsGetMsg)},
  { 26, -1, sizeof(SLGlobalsGetMsgRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLInitMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLInitMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLGlobalNotif_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLGlobalsGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLGlobalsGetMsgRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sl_global.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _SLInitMsg_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SLInitMsgRsp_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SLGlobalNotif_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SLGlobalsGetMsg_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _SLGlobalsGetMsgRsp_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::service_layer::protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaults();
  _SLInitMsg_default_instance_.DefaultConstruct();
  _SLInitMsgRsp_default_instance_.DefaultConstruct();
  _SLGlobalNotif_default_instance_.DefaultConstruct();
  _SLGlobalsGetMsg_default_instance_.DefaultConstruct();
  _SLGlobalsGetMsgRsp_default_instance_.DefaultConstruct();
  _SLGlobalNotif_default_instance_.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLGlobalNotif_default_instance_.initrspmsg_ = const_cast< ::service_layer::SLInitMsgRsp*>(
      ::service_layer::SLInitMsgRsp::internal_default_instance());
  _SLGlobalsGetMsgRsp_default_instance_.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017sl_global.proto\022\rservice_layer\032\025sl_com"
      "mon_types.proto\"\?\n\tSLInitMsg\022\020\n\010MajorVer"
      "\030\001 \001(\r\022\020\n\010MinorVer\030\002 \001(\r\022\016\n\006SubVer\030\003 \001(\r"
      "\"B\n\014SLInitMsgRsp\022\020\n\010MajorVer\030\001 \001(\r\022\020\n\010Mi"
      "norVer\030\002 \001(\r\022\016\n\006SubVer\030\003 \001(\r\"\261\001\n\rSLGloba"
      "lNotif\0223\n\tEventType\030\001 \001(\0162 .service_laye"
      "r.SLGlobalNotifType\022/\n\tErrStatus\030\002 \001(\0132\034"
      ".service_layer.SLErrorStatus\0221\n\nInitRspM"
      "sg\030\003 \001(\0132\033.service_layer.SLInitMsgRspH\000B"
      "\007\n\005Event\"\021\n\017SLGlobalsGetMsg\"\350\003\n\022SLGlobal"
      "sGetMsgRsp\022/\n\tErrStatus\030\001 \001(\0132\034.service_"
      "layer.SLErrorStatus\022\030\n\020MaxVrfNameLength\030"
      "\002 \001(\r\022\036\n\026MaxInterfaceNameLength\030\003 \001(\r\022\030\n"
      "\020MaxPathsPerEntry\030\004 \001(\r\022\036\n\026MaxPrimaryPat"
      "hPerEntry\030\005 \001(\r\022\035\n\025MaxBackupPathPerEntry"
      "\030\006 \001(\r\022\034\n\024MaxMplsLabelsPerPath\030\007 \001(\r\022\033\n\023"
      "MinPrimaryPathIdNum\030\010 \001(\r\022\033\n\023MaxPrimaryP"
      "athIdNum\030\t \001(\r\022\032\n\022MinBackupPathIdNum\030\n \001"
      "(\r\022\032\n\022MaxBackupPathIdNum\030\013 \001(\r\022\033\n\023MaxRem"
      "oteAddressNum\030\014 \001(\r\022\031\n\021MaxL2BdNameLength"
      "\030\r \001(\r\022\037\n\027MaxL2PmsiTunnelIdLength\030\016 \001(\r\022"
      "%\n\035MaxLabelBlockClientNameLength\030\017 \001(\r*\234"
      "\001\n\021SLGlobalNotifType\022!\n\035SL_GLOBAL_EVENT_"
      "TYPE_RESERVED\020\000\022\036\n\032SL_GLOBAL_EVENT_TYPE_"
      "ERROR\020\001\022\"\n\036SL_GLOBAL_EVENT_TYPE_HEARTBEA"
      "T\020\002\022 \n\034SL_GLOBAL_EVENT_TYPE_VERSION\020\0032\254\001"
      "\n\010SLGlobal\022M\n\021SLGlobalInitNotif\022\030.servic"
      "e_layer.SLInitMsg\032\034.service_layer.SLGlob"
      "alNotif0\001\022Q\n\014SLGlobalsGet\022\036.service_laye"
      "r.SLGlobalsGetMsg\032!.service_layer.SLGlob"
      "alsGetMsgRspb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1220);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_global.proto", &protobuf_RegisterTypes);
  ::service_layer::protobuf_sl_5fcommon_5ftypes_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_sl_5fglobal_2eproto

const ::google::protobuf::EnumDescriptor* SLGlobalNotifType_descriptor() {
  protobuf_sl_5fglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fglobal_2eproto::file_level_enum_descriptors[0];
}
bool SLGlobalNotifType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInitMsg::kMajorVerFieldNumber;
const int SLInitMsg::kMinorVerFieldNumber;
const int SLInitMsg::kSubVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInitMsg::SLInitMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5fglobal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInitMsg)
}
SLInitMsg::SLInitMsg(const SLInitMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&majorver_, &from.majorver_,
    reinterpret_cast<char*>(&subver_) -
    reinterpret_cast<char*>(&majorver_) + sizeof(subver_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInitMsg)
}

void SLInitMsg::SharedCtor() {
  ::memset(&majorver_, 0, reinterpret_cast<char*>(&subver_) -
    reinterpret_cast<char*>(&majorver_) + sizeof(subver_));
  _cached_size_ = 0;
}

SLInitMsg::~SLInitMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInitMsg)
  SharedDtor();
}

void SLInitMsg::SharedDtor() {
}

void SLInitMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInitMsg::descriptor() {
  protobuf_sl_5fglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fglobal_2eproto::file_level_metadata[0].descriptor;
}

const SLInitMsg& SLInitMsg::default_instance() {
  protobuf_sl_5fglobal_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLInitMsg* SLInitMsg::New(::google::protobuf::Arena* arena) const {
  SLInitMsg* n = new SLInitMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInitMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInitMsg)
  ::memset(&majorver_, 0, reinterpret_cast<char*>(&subver_) -
    reinterpret_cast<char*>(&majorver_) + sizeof(subver_));
}

bool SLInitMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInitMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 MajorVer = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &majorver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinorVer = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minorver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SubVer = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInitMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInitMsg)
  return false;
#undef DO_
}

void SLInitMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInitMsg)
  // uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->majorver(), output);
  }

  // uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minorver(), output);
  }

  // uint32 SubVer = 3;
  if (this->subver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->subver(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLInitMsg)
}

::google::protobuf::uint8* SLInitMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInitMsg)
  // uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->majorver(), target);
  }

  // uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minorver(), target);
  }

  // uint32 SubVer = 3;
  if (this->subver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->subver(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInitMsg)
  return target;
}

size_t SLInitMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInitMsg)
  size_t total_size = 0;

  // uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->majorver());
  }

  // uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minorver());
  }

  // uint32 SubVer = 3;
  if (this->subver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInitMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInitMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInitMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInitMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInitMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInitMsg)
    MergeFrom(*source);
  }
}

void SLInitMsg::MergeFrom(const SLInitMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInitMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.majorver() != 0) {
    set_majorver(from.majorver());
  }
  if (from.minorver() != 0) {
    set_minorver(from.minorver());
  }
  if (from.subver() != 0) {
    set_subver(from.subver());
  }
}

void SLInitMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInitMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInitMsg::CopyFrom(const SLInitMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInitMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInitMsg::IsInitialized() const {
  return true;
}

void SLInitMsg::Swap(SLInitMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInitMsg::InternalSwap(SLInitMsg* other) {
  std::swap(majorver_, other->majorver_);
  std::swap(minorver_, other->minorver_);
  std::swap(subver_, other->subver_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInitMsg::GetMetadata() const {
  protobuf_sl_5fglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fglobal_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLInitMsg

// uint32 MajorVer = 1;
void SLInitMsg::clear_majorver() {
  majorver_ = 0u;
}
::google::protobuf::uint32 SLInitMsg::majorver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsg.MajorVer)
  return majorver_;
}
void SLInitMsg::set_majorver(::google::protobuf::uint32 value) {
  
  majorver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsg.MajorVer)
}

// uint32 MinorVer = 2;
void SLInitMsg::clear_minorver() {
  minorver_ = 0u;
}
::google::protobuf::uint32 SLInitMsg::minorver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsg.MinorVer)
  return minorver_;
}
void SLInitMsg::set_minorver(::google::protobuf::uint32 value) {
  
  minorver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsg.MinorVer)
}

// uint32 SubVer = 3;
void SLInitMsg::clear_subver() {
  subver_ = 0u;
}
::google::protobuf::uint32 SLInitMsg::subver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsg.SubVer)
  return subver_;
}
void SLInitMsg::set_subver(::google::protobuf::uint32 value) {
  
  subver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsg.SubVer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLInitMsgRsp::kMajorVerFieldNumber;
const int SLInitMsgRsp::kMinorVerFieldNumber;
const int SLInitMsgRsp::kSubVerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLInitMsgRsp::SLInitMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5fglobal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLInitMsgRsp)
}
SLInitMsgRsp::SLInitMsgRsp(const SLInitMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&majorver_, &from.majorver_,
    reinterpret_cast<char*>(&subver_) -
    reinterpret_cast<char*>(&majorver_) + sizeof(subver_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInitMsgRsp)
}

void SLInitMsgRsp::SharedCtor() {
  ::memset(&majorver_, 0, reinterpret_cast<char*>(&subver_) -
    reinterpret_cast<char*>(&majorver_) + sizeof(subver_));
  _cached_size_ = 0;
}

SLInitMsgRsp::~SLInitMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInitMsgRsp)
  SharedDtor();
}

void SLInitMsgRsp::SharedDtor() {
}

void SLInitMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLInitMsgRsp::descriptor() {
  protobuf_sl_5fglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fglobal_2eproto::file_level_metadata[1].descriptor;
}

const SLInitMsgRsp& SLInitMsgRsp::default_instance() {
  protobuf_sl_5fglobal_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLInitMsgRsp* SLInitMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLInitMsgRsp* n = new SLInitMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLInitMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInitMsgRsp)
  ::memset(&majorver_, 0, reinterpret_cast<char*>(&subver_) -
    reinterpret_cast<char*>(&majorver_) + sizeof(subver_));
}

bool SLInitMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLInitMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 MajorVer = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &majorver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinorVer = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minorver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SubVer = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLInitMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLInitMsgRsp)
  return false;
#undef DO_
}

void SLInitMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLInitMsgRsp)
  // uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->majorver(), output);
  }

  // uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minorver(), output);
  }

  // uint32 SubVer = 3;
  if (this->subver() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->subver(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLInitMsgRsp)
}

::google::protobuf::uint8* SLInitMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInitMsgRsp)
  // uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->majorver(), target);
  }

  // uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minorver(), target);
  }

  // uint32 SubVer = 3;
  if (this->subver() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->subver(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInitMsgRsp)
  return target;
}

size_t SLInitMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInitMsgRsp)
  size_t total_size = 0;

  // uint32 MajorVer = 1;
  if (this->majorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->majorver());
  }

  // uint32 MinorVer = 2;
  if (this->minorver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minorver());
  }

  // uint32 SubVer = 3;
  if (this->subver() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->subver());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLInitMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInitMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInitMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLInitMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInitMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInitMsgRsp)
    MergeFrom(*source);
  }
}

void SLInitMsgRsp::MergeFrom(const SLInitMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInitMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.majorver() != 0) {
    set_majorver(from.majorver());
  }
  if (from.minorver() != 0) {
    set_minorver(from.minorver());
  }
  if (from.subver() != 0) {
    set_subver(from.subver());
  }
}

void SLInitMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInitMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInitMsgRsp::CopyFrom(const SLInitMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInitMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInitMsgRsp::IsInitialized() const {
  return true;
}

void SLInitMsgRsp::Swap(SLInitMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLInitMsgRsp::InternalSwap(SLInitMsgRsp* other) {
  std::swap(majorver_, other->majorver_);
  std::swap(minorver_, other->minorver_);
  std::swap(subver_, other->subver_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLInitMsgRsp::GetMetadata() const {
  protobuf_sl_5fglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fglobal_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLInitMsgRsp

// uint32 MajorVer = 1;
void SLInitMsgRsp::clear_majorver() {
  majorver_ = 0u;
}
::google::protobuf::uint32 SLInitMsgRsp::majorver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsgRsp.MajorVer)
  return majorver_;
}
void SLInitMsgRsp::set_majorver(::google::protobuf::uint32 value) {
  
  majorver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsgRsp.MajorVer)
}

// uint32 MinorVer = 2;
void SLInitMsgRsp::clear_minorver() {
  minorver_ = 0u;
}
::google::protobuf::uint32 SLInitMsgRsp::minorver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsgRsp.MinorVer)
  return minorver_;
}
void SLInitMsgRsp::set_minorver(::google::protobuf::uint32 value) {
  
  minorver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsgRsp.MinorVer)
}

// uint32 SubVer = 3;
void SLInitMsgRsp::clear_subver() {
  subver_ = 0u;
}
::google::protobuf::uint32 SLInitMsgRsp::subver() const {
  // @@protoc_insertion_point(field_get:service_layer.SLInitMsgRsp.SubVer)
  return subver_;
}
void SLInitMsgRsp::set_subver(::google::protobuf::uint32 value) {
  
  subver_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLInitMsgRsp.SubVer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLGlobalNotif::kEventTypeFieldNumber;
const int SLGlobalNotif::kErrStatusFieldNumber;
const int SLGlobalNotif::kInitRspMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLGlobalNotif::SLGlobalNotif()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5fglobal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLGlobalNotif)
}
SLGlobalNotif::SLGlobalNotif(const SLGlobalNotif& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  eventtype_ = from.eventtype_;
  clear_has_Event();
  switch (from.Event_case()) {
    case kInitRspMsg: {
      mutable_initrspmsg()->::service_layer::SLInitMsgRsp::MergeFrom(from.initrspmsg());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLGlobalNotif)
}

void SLGlobalNotif::SharedCtor() {
  ::memset(&errstatus_, 0, reinterpret_cast<char*>(&eventtype_) -
    reinterpret_cast<char*>(&errstatus_) + sizeof(eventtype_));
  clear_has_Event();
  _cached_size_ = 0;
}

SLGlobalNotif::~SLGlobalNotif() {
  // @@protoc_insertion_point(destructor:service_layer.SLGlobalNotif)
  SharedDtor();
}

void SLGlobalNotif::SharedDtor() {
  if (this != internal_default_instance()) {
    delete errstatus_;
  }
  if (has_Event()) {
    clear_Event();
  }
}

void SLGlobalNotif::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLGlobalNotif::descriptor() {
  protobuf_sl_5fglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fglobal_2eproto::file_level_metadata[2].descriptor;
}

const SLGlobalNotif& SLGlobalNotif::default_instance() {
  protobuf_sl_5fglobal_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLGlobalNotif* SLGlobalNotif::New(::google::protobuf::Arena* arena) const {
  SLGlobalNotif* n = new SLGlobalNotif;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLGlobalNotif::clear_Event() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLGlobalNotif)
  switch (Event_case()) {
    case kInitRspMsg: {
      delete Event_.initrspmsg_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void SLGlobalNotif::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLGlobalNotif)
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  eventtype_ = 0;
  clear_Event();
}

bool SLGlobalNotif::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLGlobalNotif)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLGlobalNotifType EventType = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_eventtype(static_cast< ::service_layer::SLGlobalNotifType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLInitMsgRsp InitRspMsg = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_initrspmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLGlobalNotif)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLGlobalNotif)
  return false;
#undef DO_
}

void SLGlobalNotif::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLGlobalNotif)
  // .service_layer.SLGlobalNotifType EventType = 1;
  if (this->eventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eventtype(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // .service_layer.SLInitMsgRsp InitRspMsg = 3;
  if (has_initrspmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *Event_.initrspmsg_, output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLGlobalNotif)
}

::google::protobuf::uint8* SLGlobalNotif::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLGlobalNotif)
  // .service_layer.SLGlobalNotifType EventType = 1;
  if (this->eventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eventtype(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->errstatus_, false, target);
  }

  // .service_layer.SLInitMsgRsp InitRspMsg = 3;
  if (has_initrspmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *Event_.initrspmsg_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLGlobalNotif)
  return target;
}

size_t SLGlobalNotif::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLGlobalNotif)
  size_t total_size = 0;

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // .service_layer.SLGlobalNotifType EventType = 1;
  if (this->eventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->eventtype());
  }

  switch (Event_case()) {
    // .service_layer.SLInitMsgRsp InitRspMsg = 3;
    case kInitRspMsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *Event_.initrspmsg_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLGlobalNotif::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLGlobalNotif)
  GOOGLE_DCHECK_NE(&from, this);
  const SLGlobalNotif* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLGlobalNotif>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLGlobalNotif)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLGlobalNotif)
    MergeFrom(*source);
  }
}

void SLGlobalNotif::MergeFrom(const SLGlobalNotif& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLGlobalNotif)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.eventtype() != 0) {
    set_eventtype(from.eventtype());
  }
  switch (from.Event_case()) {
    case kInitRspMsg: {
      mutable_initrspmsg()->::service_layer::SLInitMsgRsp::MergeFrom(from.initrspmsg());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void SLGlobalNotif::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLGlobalNotif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLGlobalNotif::CopyFrom(const SLGlobalNotif& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLGlobalNotif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLGlobalNotif::IsInitialized() const {
  return true;
}

void SLGlobalNotif::Swap(SLGlobalNotif* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLGlobalNotif::InternalSwap(SLGlobalNotif* other) {
  std::swap(errstatus_, other->errstatus_);
  std::swap(eventtype_, other->eventtype_);
  std::swap(Event_, other->Event_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLGlobalNotif::GetMetadata() const {
  protobuf_sl_5fglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fglobal_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLGlobalNotif

// .service_layer.SLGlobalNotifType EventType = 1;
void SLGlobalNotif::clear_eventtype() {
  eventtype_ = 0;
}
::service_layer::SLGlobalNotifType SLGlobalNotif::eventtype() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalNotif.EventType)
  return static_cast< ::service_layer::SLGlobalNotifType >(eventtype_);
}
void SLGlobalNotif::set_eventtype(::service_layer::SLGlobalNotifType value) {
  
  eventtype_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalNotif.EventType)
}

// .service_layer.SLErrorStatus ErrStatus = 2;
bool SLGlobalNotif::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void SLGlobalNotif::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLGlobalNotif::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalNotif.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLGlobalNotif::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLGlobalNotif.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLGlobalNotif::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLGlobalNotif.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLGlobalNotif::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLGlobalNotif.ErrStatus)
}

// .service_layer.SLInitMsgRsp InitRspMsg = 3;
bool SLGlobalNotif::has_initrspmsg() const {
  return Event_case() == kInitRspMsg;
}
void SLGlobalNotif::set_has_initrspmsg() {
  _oneof_case_[0] = kInitRspMsg;
}
void SLGlobalNotif::clear_initrspmsg() {
  if (has_initrspmsg()) {
    delete Event_.initrspmsg_;
    clear_has_Event();
  }
}
 const ::service_layer::SLInitMsgRsp& SLGlobalNotif::initrspmsg() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalNotif.InitRspMsg)
  return has_initrspmsg()
      ? *Event_.initrspmsg_
      : ::service_layer::SLInitMsgRsp::default_instance();
}
::service_layer::SLInitMsgRsp* SLGlobalNotif::mutable_initrspmsg() {
  if (!has_initrspmsg()) {
    clear_Event();
    set_has_initrspmsg();
    Event_.initrspmsg_ = new ::service_layer::SLInitMsgRsp;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLGlobalNotif.InitRspMsg)
  return Event_.initrspmsg_;
}
::service_layer::SLInitMsgRsp* SLGlobalNotif::release_initrspmsg() {
  // @@protoc_insertion_point(field_release:service_layer.SLGlobalNotif.InitRspMsg)
  if (has_initrspmsg()) {
    clear_has_Event();
    ::service_layer::SLInitMsgRsp* temp = Event_.initrspmsg_;
    Event_.initrspmsg_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SLGlobalNotif::set_allocated_initrspmsg(::service_layer::SLInitMsgRsp* initrspmsg) {
  clear_Event();
  if (initrspmsg) {
    set_has_initrspmsg();
    Event_.initrspmsg_ = initrspmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLGlobalNotif.InitRspMsg)
}

bool SLGlobalNotif::has_Event() const {
  return Event_case() != EVENT_NOT_SET;
}
void SLGlobalNotif::clear_has_Event() {
  _oneof_case_[0] = EVENT_NOT_SET;
}
SLGlobalNotif::EventCase SLGlobalNotif::Event_case() const {
  return SLGlobalNotif::EventCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLGlobalsGetMsg::SLGlobalsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5fglobal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLGlobalsGetMsg)
}
SLGlobalsGetMsg::SLGlobalsGetMsg(const SLGlobalsGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLGlobalsGetMsg)
}

void SLGlobalsGetMsg::SharedCtor() {
  _cached_size_ = 0;
}

SLGlobalsGetMsg::~SLGlobalsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLGlobalsGetMsg)
  SharedDtor();
}

void SLGlobalsGetMsg::SharedDtor() {
}

void SLGlobalsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLGlobalsGetMsg::descriptor() {
  protobuf_sl_5fglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fglobal_2eproto::file_level_metadata[3].descriptor;
}

const SLGlobalsGetMsg& SLGlobalsGetMsg::default_instance() {
  protobuf_sl_5fglobal_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLGlobalsGetMsg* SLGlobalsGetMsg::New(::google::protobuf::Arena* arena) const {
  SLGlobalsGetMsg* n = new SLGlobalsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLGlobalsGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLGlobalsGetMsg)
}

bool SLGlobalsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLGlobalsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLGlobalsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLGlobalsGetMsg)
  return false;
#undef DO_
}

void SLGlobalsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLGlobalsGetMsg)
  // @@protoc_insertion_point(serialize_end:service_layer.SLGlobalsGetMsg)
}

::google::protobuf::uint8* SLGlobalsGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLGlobalsGetMsg)
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLGlobalsGetMsg)
  return target;
}

size_t SLGlobalsGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLGlobalsGetMsg)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLGlobalsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLGlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLGlobalsGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLGlobalsGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLGlobalsGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLGlobalsGetMsg)
    MergeFrom(*source);
  }
}

void SLGlobalsGetMsg::MergeFrom(const SLGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLGlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void SLGlobalsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLGlobalsGetMsg::CopyFrom(const SLGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLGlobalsGetMsg::IsInitialized() const {
  return true;
}

void SLGlobalsGetMsg::Swap(SLGlobalsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLGlobalsGetMsg::InternalSwap(SLGlobalsGetMsg* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLGlobalsGetMsg::GetMetadata() const {
  protobuf_sl_5fglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fglobal_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLGlobalsGetMsg

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLGlobalsGetMsgRsp::kErrStatusFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxVrfNameLengthFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxInterfaceNameLengthFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxPathsPerEntryFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxPrimaryPathPerEntryFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxBackupPathPerEntryFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxMplsLabelsPerPathFieldNumber;
const int SLGlobalsGetMsgRsp::kMinPrimaryPathIdNumFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxPrimaryPathIdNumFieldNumber;
const int SLGlobalsGetMsgRsp::kMinBackupPathIdNumFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxBackupPathIdNumFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxRemoteAddressNumFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxL2BdNameLengthFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxL2PmsiTunnelIdLengthFieldNumber;
const int SLGlobalsGetMsgRsp::kMaxLabelBlockClientNameLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLGlobalsGetMsgRsp::SLGlobalsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5fglobal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLGlobalsGetMsgRsp)
}
SLGlobalsGetMsgRsp::SLGlobalsGetMsgRsp(const SLGlobalsGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&maxvrfnamelength_, &from.maxvrfnamelength_,
    reinterpret_cast<char*>(&maxlabelblockclientnamelength_) -
    reinterpret_cast<char*>(&maxvrfnamelength_) + sizeof(maxlabelblockclientnamelength_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLGlobalsGetMsgRsp)
}

void SLGlobalsGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, reinterpret_cast<char*>(&maxlabelblockclientnamelength_) -
    reinterpret_cast<char*>(&errstatus_) + sizeof(maxlabelblockclientnamelength_));
  _cached_size_ = 0;
}

SLGlobalsGetMsgRsp::~SLGlobalsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLGlobalsGetMsgRsp)
  SharedDtor();
}

void SLGlobalsGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete errstatus_;
  }
}

void SLGlobalsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLGlobalsGetMsgRsp::descriptor() {
  protobuf_sl_5fglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fglobal_2eproto::file_level_metadata[4].descriptor;
}

const SLGlobalsGetMsgRsp& SLGlobalsGetMsgRsp::default_instance() {
  protobuf_sl_5fglobal_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLGlobalsGetMsgRsp* SLGlobalsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLGlobalsGetMsgRsp* n = new SLGlobalsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLGlobalsGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLGlobalsGetMsgRsp)
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&maxvrfnamelength_, 0, reinterpret_cast<char*>(&maxlabelblockclientnamelength_) -
    reinterpret_cast<char*>(&maxvrfnamelength_) + sizeof(maxlabelblockclientnamelength_));
}

bool SLGlobalsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLGlobalsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxVrfNameLength = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxvrfnamelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxInterfaceNameLength = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxinterfacenamelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxPathsPerEntry = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxpathsperentry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxPrimaryPathPerEntry = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxprimarypathperentry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxBackupPathPerEntry = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxbackuppathperentry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxMplsLabelsPerPath = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxmplslabelsperpath_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinPrimaryPathIdNum = 8;
      case 8: {
        if (tag == 64u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minprimarypathidnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxPrimaryPathIdNum = 9;
      case 9: {
        if (tag == 72u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxprimarypathidnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinBackupPathIdNum = 10;
      case 10: {
        if (tag == 80u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minbackuppathidnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxBackupPathIdNum = 11;
      case 11: {
        if (tag == 88u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxbackuppathidnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxRemoteAddressNum = 12;
      case 12: {
        if (tag == 96u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxremoteaddressnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxL2BdNameLength = 13;
      case 13: {
        if (tag == 104u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxl2bdnamelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxL2PmsiTunnelIdLength = 14;
      case 14: {
        if (tag == 112u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxl2pmsitunnelidlength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxLabelBlockClientNameLength = 15;
      case 15: {
        if (tag == 120u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxlabelblockclientnamelength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLGlobalsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLGlobalsGetMsgRsp)
  return false;
#undef DO_
}

void SLGlobalsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLGlobalsGetMsgRsp)
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint32 MaxVrfNameLength = 2;
  if (this->maxvrfnamelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxvrfnamelength(), output);
  }

  // uint32 MaxInterfaceNameLength = 3;
  if (this->maxinterfacenamelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxinterfacenamelength(), output);
  }

  // uint32 MaxPathsPerEntry = 4;
  if (this->maxpathsperentry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->maxpathsperentry(), output);
  }

  // uint32 MaxPrimaryPathPerEntry = 5;
  if (this->maxprimarypathperentry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->maxprimarypathperentry(), output);
  }

  // uint32 MaxBackupPathPerEntry = 6;
  if (this->maxbackuppathperentry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->maxbackuppathperentry(), output);
  }

  // uint32 MaxMplsLabelsPerPath = 7;
  if (this->maxmplslabelsperpath() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->maxmplslabelsperpath(), output);
  }

  // uint32 MinPrimaryPathIdNum = 8;
  if (this->minprimarypathidnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->minprimarypathidnum(), output);
  }

  // uint32 MaxPrimaryPathIdNum = 9;
  if (this->maxprimarypathidnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->maxprimarypathidnum(), output);
  }

  // uint32 MinBackupPathIdNum = 10;
  if (this->minbackuppathidnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->minbackuppathidnum(), output);
  }

  // uint32 MaxBackupPathIdNum = 11;
  if (this->maxbackuppathidnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->maxbackuppathidnum(), output);
  }

  // uint32 MaxRemoteAddressNum = 12;
  if (this->maxremoteaddressnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->maxremoteaddressnum(), output);
  }

  // uint32 MaxL2BdNameLength = 13;
  if (this->maxl2bdnamelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->maxl2bdnamelength(), output);
  }

  // uint32 MaxL2PmsiTunnelIdLength = 14;
  if (this->maxl2pmsitunnelidlength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->maxl2pmsitunnelidlength(), output);
  }

  // uint32 MaxLabelBlockClientNameLength = 15;
  if (this->maxlabelblockclientnamelength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->maxlabelblockclientnamelength(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLGlobalsGetMsgRsp)
}

::google::protobuf::uint8* SLGlobalsGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLGlobalsGetMsgRsp)
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errstatus_, false, target);
  }

  // uint32 MaxVrfNameLength = 2;
  if (this->maxvrfnamelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxvrfnamelength(), target);
  }

  // uint32 MaxInterfaceNameLength = 3;
  if (this->maxinterfacenamelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxinterfacenamelength(), target);
  }

  // uint32 MaxPathsPerEntry = 4;
  if (this->maxpathsperentry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->maxpathsperentry(), target);
  }

  // uint32 MaxPrimaryPathPerEntry = 5;
  if (this->maxprimarypathperentry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->maxprimarypathperentry(), target);
  }

  // uint32 MaxBackupPathPerEntry = 6;
  if (this->maxbackuppathperentry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->maxbackuppathperentry(), target);
  }

  // uint32 MaxMplsLabelsPerPath = 7;
  if (this->maxmplslabelsperpath() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->maxmplslabelsperpath(), target);
  }

  // uint32 MinPrimaryPathIdNum = 8;
  if (this->minprimarypathidnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->minprimarypathidnum(), target);
  }

  // uint32 MaxPrimaryPathIdNum = 9;
  if (this->maxprimarypathidnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->maxprimarypathidnum(), target);
  }

  // uint32 MinBackupPathIdNum = 10;
  if (this->minbackuppathidnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->minbackuppathidnum(), target);
  }

  // uint32 MaxBackupPathIdNum = 11;
  if (this->maxbackuppathidnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->maxbackuppathidnum(), target);
  }

  // uint32 MaxRemoteAddressNum = 12;
  if (this->maxremoteaddressnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->maxremoteaddressnum(), target);
  }

  // uint32 MaxL2BdNameLength = 13;
  if (this->maxl2bdnamelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->maxl2bdnamelength(), target);
  }

  // uint32 MaxL2PmsiTunnelIdLength = 14;
  if (this->maxl2pmsitunnelidlength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->maxl2pmsitunnelidlength(), target);
  }

  // uint32 MaxLabelBlockClientNameLength = 15;
  if (this->maxlabelblockclientnamelength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->maxlabelblockclientnamelength(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLGlobalsGetMsgRsp)
  return target;
}

size_t SLGlobalsGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLGlobalsGetMsgRsp)
  size_t total_size = 0;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // uint32 MaxVrfNameLength = 2;
  if (this->maxvrfnamelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxvrfnamelength());
  }

  // uint32 MaxInterfaceNameLength = 3;
  if (this->maxinterfacenamelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxinterfacenamelength());
  }

  // uint32 MaxPathsPerEntry = 4;
  if (this->maxpathsperentry() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxpathsperentry());
  }

  // uint32 MaxPrimaryPathPerEntry = 5;
  if (this->maxprimarypathperentry() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxprimarypathperentry());
  }

  // uint32 MaxBackupPathPerEntry = 6;
  if (this->maxbackuppathperentry() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxbackuppathperentry());
  }

  // uint32 MaxMplsLabelsPerPath = 7;
  if (this->maxmplslabelsperpath() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxmplslabelsperpath());
  }

  // uint32 MinPrimaryPathIdNum = 8;
  if (this->minprimarypathidnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minprimarypathidnum());
  }

  // uint32 MaxPrimaryPathIdNum = 9;
  if (this->maxprimarypathidnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxprimarypathidnum());
  }

  // uint32 MinBackupPathIdNum = 10;
  if (this->minbackuppathidnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minbackuppathidnum());
  }

  // uint32 MaxBackupPathIdNum = 11;
  if (this->maxbackuppathidnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxbackuppathidnum());
  }

  // uint32 MaxRemoteAddressNum = 12;
  if (this->maxremoteaddressnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxremoteaddressnum());
  }

  // uint32 MaxL2BdNameLength = 13;
  if (this->maxl2bdnamelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxl2bdnamelength());
  }

  // uint32 MaxL2PmsiTunnelIdLength = 14;
  if (this->maxl2pmsitunnelidlength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxl2pmsitunnelidlength());
  }

  // uint32 MaxLabelBlockClientNameLength = 15;
  if (this->maxlabelblockclientnamelength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxlabelblockclientnamelength());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLGlobalsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLGlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLGlobalsGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLGlobalsGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLGlobalsGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLGlobalsGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLGlobalsGetMsgRsp::MergeFrom(const SLGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLGlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.maxvrfnamelength() != 0) {
    set_maxvrfnamelength(from.maxvrfnamelength());
  }
  if (from.maxinterfacenamelength() != 0) {
    set_maxinterfacenamelength(from.maxinterfacenamelength());
  }
  if (from.maxpathsperentry() != 0) {
    set_maxpathsperentry(from.maxpathsperentry());
  }
  if (from.maxprimarypathperentry() != 0) {
    set_maxprimarypathperentry(from.maxprimarypathperentry());
  }
  if (from.maxbackuppathperentry() != 0) {
    set_maxbackuppathperentry(from.maxbackuppathperentry());
  }
  if (from.maxmplslabelsperpath() != 0) {
    set_maxmplslabelsperpath(from.maxmplslabelsperpath());
  }
  if (from.minprimarypathidnum() != 0) {
    set_minprimarypathidnum(from.minprimarypathidnum());
  }
  if (from.maxprimarypathidnum() != 0) {
    set_maxprimarypathidnum(from.maxprimarypathidnum());
  }
  if (from.minbackuppathidnum() != 0) {
    set_minbackuppathidnum(from.minbackuppathidnum());
  }
  if (from.maxbackuppathidnum() != 0) {
    set_maxbackuppathidnum(from.maxbackuppathidnum());
  }
  if (from.maxremoteaddressnum() != 0) {
    set_maxremoteaddressnum(from.maxremoteaddressnum());
  }
  if (from.maxl2bdnamelength() != 0) {
    set_maxl2bdnamelength(from.maxl2bdnamelength());
  }
  if (from.maxl2pmsitunnelidlength() != 0) {
    set_maxl2pmsitunnelidlength(from.maxl2pmsitunnelidlength());
  }
  if (from.maxlabelblockclientnamelength() != 0) {
    set_maxlabelblockclientnamelength(from.maxlabelblockclientnamelength());
  }
}

void SLGlobalsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLGlobalsGetMsgRsp::CopyFrom(const SLGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLGlobalsGetMsgRsp::IsInitialized() const {
  return true;
}

void SLGlobalsGetMsgRsp::Swap(SLGlobalsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLGlobalsGetMsgRsp::InternalSwap(SLGlobalsGetMsgRsp* other) {
  std::swap(errstatus_, other->errstatus_);
  std::swap(maxvrfnamelength_, other->maxvrfnamelength_);
  std::swap(maxinterfacenamelength_, other->maxinterfacenamelength_);
  std::swap(maxpathsperentry_, other->maxpathsperentry_);
  std::swap(maxprimarypathperentry_, other->maxprimarypathperentry_);
  std::swap(maxbackuppathperentry_, other->maxbackuppathperentry_);
  std::swap(maxmplslabelsperpath_, other->maxmplslabelsperpath_);
  std::swap(minprimarypathidnum_, other->minprimarypathidnum_);
  std::swap(maxprimarypathidnum_, other->maxprimarypathidnum_);
  std::swap(minbackuppathidnum_, other->minbackuppathidnum_);
  std::swap(maxbackuppathidnum_, other->maxbackuppathidnum_);
  std::swap(maxremoteaddressnum_, other->maxremoteaddressnum_);
  std::swap(maxl2bdnamelength_, other->maxl2bdnamelength_);
  std::swap(maxl2pmsitunnelidlength_, other->maxl2pmsitunnelidlength_);
  std::swap(maxlabelblockclientnamelength_, other->maxlabelblockclientnamelength_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLGlobalsGetMsgRsp::GetMetadata() const {
  protobuf_sl_5fglobal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fglobal_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLGlobalsGetMsgRsp

// .service_layer.SLErrorStatus ErrStatus = 1;
bool SLGlobalsGetMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void SLGlobalsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLGlobalsGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLGlobalsGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLGlobalsGetMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLGlobalsGetMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLGlobalsGetMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLGlobalsGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLGlobalsGetMsgRsp.ErrStatus)
}

// uint32 MaxVrfNameLength = 2;
void SLGlobalsGetMsgRsp::clear_maxvrfnamelength() {
  maxvrfnamelength_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxvrfnamelength() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxVrfNameLength)
  return maxvrfnamelength_;
}
void SLGlobalsGetMsgRsp::set_maxvrfnamelength(::google::protobuf::uint32 value) {
  
  maxvrfnamelength_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxVrfNameLength)
}

// uint32 MaxInterfaceNameLength = 3;
void SLGlobalsGetMsgRsp::clear_maxinterfacenamelength() {
  maxinterfacenamelength_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxinterfacenamelength() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxInterfaceNameLength)
  return maxinterfacenamelength_;
}
void SLGlobalsGetMsgRsp::set_maxinterfacenamelength(::google::protobuf::uint32 value) {
  
  maxinterfacenamelength_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxInterfaceNameLength)
}

// uint32 MaxPathsPerEntry = 4;
void SLGlobalsGetMsgRsp::clear_maxpathsperentry() {
  maxpathsperentry_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxpathsperentry() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxPathsPerEntry)
  return maxpathsperentry_;
}
void SLGlobalsGetMsgRsp::set_maxpathsperentry(::google::protobuf::uint32 value) {
  
  maxpathsperentry_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxPathsPerEntry)
}

// uint32 MaxPrimaryPathPerEntry = 5;
void SLGlobalsGetMsgRsp::clear_maxprimarypathperentry() {
  maxprimarypathperentry_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxprimarypathperentry() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxPrimaryPathPerEntry)
  return maxprimarypathperentry_;
}
void SLGlobalsGetMsgRsp::set_maxprimarypathperentry(::google::protobuf::uint32 value) {
  
  maxprimarypathperentry_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxPrimaryPathPerEntry)
}

// uint32 MaxBackupPathPerEntry = 6;
void SLGlobalsGetMsgRsp::clear_maxbackuppathperentry() {
  maxbackuppathperentry_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxbackuppathperentry() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxBackupPathPerEntry)
  return maxbackuppathperentry_;
}
void SLGlobalsGetMsgRsp::set_maxbackuppathperentry(::google::protobuf::uint32 value) {
  
  maxbackuppathperentry_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxBackupPathPerEntry)
}

// uint32 MaxMplsLabelsPerPath = 7;
void SLGlobalsGetMsgRsp::clear_maxmplslabelsperpath() {
  maxmplslabelsperpath_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxmplslabelsperpath() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxMplsLabelsPerPath)
  return maxmplslabelsperpath_;
}
void SLGlobalsGetMsgRsp::set_maxmplslabelsperpath(::google::protobuf::uint32 value) {
  
  maxmplslabelsperpath_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxMplsLabelsPerPath)
}

// uint32 MinPrimaryPathIdNum = 8;
void SLGlobalsGetMsgRsp::clear_minprimarypathidnum() {
  minprimarypathidnum_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::minprimarypathidnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MinPrimaryPathIdNum)
  return minprimarypathidnum_;
}
void SLGlobalsGetMsgRsp::set_minprimarypathidnum(::google::protobuf::uint32 value) {
  
  minprimarypathidnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MinPrimaryPathIdNum)
}

// uint32 MaxPrimaryPathIdNum = 9;
void SLGlobalsGetMsgRsp::clear_maxprimarypathidnum() {
  maxprimarypathidnum_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxprimarypathidnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxPrimaryPathIdNum)
  return maxprimarypathidnum_;
}
void SLGlobalsGetMsgRsp::set_maxprimarypathidnum(::google::protobuf::uint32 value) {
  
  maxprimarypathidnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxPrimaryPathIdNum)
}

// uint32 MinBackupPathIdNum = 10;
void SLGlobalsGetMsgRsp::clear_minbackuppathidnum() {
  minbackuppathidnum_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::minbackuppathidnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MinBackupPathIdNum)
  return minbackuppathidnum_;
}
void SLGlobalsGetMsgRsp::set_minbackuppathidnum(::google::protobuf::uint32 value) {
  
  minbackuppathidnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MinBackupPathIdNum)
}

// uint32 MaxBackupPathIdNum = 11;
void SLGlobalsGetMsgRsp::clear_maxbackuppathidnum() {
  maxbackuppathidnum_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxbackuppathidnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxBackupPathIdNum)
  return maxbackuppathidnum_;
}
void SLGlobalsGetMsgRsp::set_maxbackuppathidnum(::google::protobuf::uint32 value) {
  
  maxbackuppathidnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxBackupPathIdNum)
}

// uint32 MaxRemoteAddressNum = 12;
void SLGlobalsGetMsgRsp::clear_maxremoteaddressnum() {
  maxremoteaddressnum_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxremoteaddressnum() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxRemoteAddressNum)
  return maxremoteaddressnum_;
}
void SLGlobalsGetMsgRsp::set_maxremoteaddressnum(::google::protobuf::uint32 value) {
  
  maxremoteaddressnum_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxRemoteAddressNum)
}

// uint32 MaxL2BdNameLength = 13;
void SLGlobalsGetMsgRsp::clear_maxl2bdnamelength() {
  maxl2bdnamelength_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxl2bdnamelength() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxL2BdNameLength)
  return maxl2bdnamelength_;
}
void SLGlobalsGetMsgRsp::set_maxl2bdnamelength(::google::protobuf::uint32 value) {
  
  maxl2bdnamelength_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxL2BdNameLength)
}

// uint32 MaxL2PmsiTunnelIdLength = 14;
void SLGlobalsGetMsgRsp::clear_maxl2pmsitunnelidlength() {
  maxl2pmsitunnelidlength_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxl2pmsitunnelidlength() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxL2PmsiTunnelIdLength)
  return maxl2pmsitunnelidlength_;
}
void SLGlobalsGetMsgRsp::set_maxl2pmsitunnelidlength(::google::protobuf::uint32 value) {
  
  maxl2pmsitunnelidlength_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxL2PmsiTunnelIdLength)
}

// uint32 MaxLabelBlockClientNameLength = 15;
void SLGlobalsGetMsgRsp::clear_maxlabelblockclientnamelength() {
  maxlabelblockclientnamelength_ = 0u;
}
::google::protobuf::uint32 SLGlobalsGetMsgRsp::maxlabelblockclientnamelength() const {
  // @@protoc_insertion_point(field_get:service_layer.SLGlobalsGetMsgRsp.MaxLabelBlockClientNameLength)
  return maxlabelblockclientnamelength_;
}
void SLGlobalsGetMsgRsp::set_maxlabelblockclientnamelength(::google::protobuf::uint32 value) {
  
  maxlabelblockclientnamelength_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLGlobalsGetMsgRsp.MaxLabelBlockClientNameLength)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
