// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_interface.proto

#include "sl_interface.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_sl_5fcommon_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SLErrorStatus_sl_5fcommon_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_sl_5fcommon_5ftypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SLInterface_sl_5fcommon_5ftypes_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_sl_5finterface_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SLInterfaceInfoMsg_sl_5finterface_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_sl_5finterface_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SLInterfaceNotifMsgRes_sl_5finterface_2eproto;
namespace service_layer {
class SLInterfaceGlobalsRegMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceGlobalsRegMsg> _instance;
} _SLInterfaceGlobalsRegMsg_default_instance_;
class SLInterfaceGlobalsRegMsgRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceGlobalsRegMsgRsp> _instance;
} _SLInterfaceGlobalsRegMsgRsp_default_instance_;
class SLInterfaceGlobalsGetMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceGlobalsGetMsg> _instance;
} _SLInterfaceGlobalsGetMsg_default_instance_;
class SLInterfaceGlobalsGetMsgRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceGlobalsGetMsgRsp> _instance;
} _SLInterfaceGlobalsGetMsgRsp_default_instance_;
class SLInterfaceGlobalsGetStatsMsgRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceGlobalsGetStatsMsgRsp> _instance;
} _SLInterfaceGlobalsGetStatsMsgRsp_default_instance_;
class SLInterfaceGetMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceGetMsg> _instance;
} _SLInterfaceGetMsg_default_instance_;
class SLInterfaceInfoMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceInfoMsg> _instance;
} _SLInterfaceInfoMsg_default_instance_;
class SLInterfaceGetMsgRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceGetMsgRsp> _instance;
} _SLInterfaceGetMsgRsp_default_instance_;
class SLInterfaceGetNotifMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceGetNotifMsg> _instance;
} _SLInterfaceGetNotifMsg_default_instance_;
class SLInterfaceNotifDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceNotif> _instance;
  const ::service_layer::SLErrorStatus* errstatus_;
  const ::service_layer::SLInterfaceInfoMsg* info_;
} _SLInterfaceNotif_default_instance_;
class SLInterfaceNotifMsgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceNotifMsg> _instance;
} _SLInterfaceNotifMsg_default_instance_;
class SLInterfaceNotifMsgResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceNotifMsgRes> _instance;
} _SLInterfaceNotifMsgRes_default_instance_;
class SLInterfaceNotifMsgRspDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SLInterfaceNotifMsgRsp> _instance;
} _SLInterfaceNotifMsgRsp_default_instance_;
}  // namespace service_layer
static void InitDefaultsscc_info_SLInterfaceGetMsg_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceGetMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGetMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGetMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SLInterfaceGetMsg_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SLInterfaceGetMsg_sl_5finterface_2eproto}, {
      &scc_info_SLInterface_sl_5fcommon_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_SLInterfaceGetMsgRsp_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGetMsgRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGetMsgRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SLInterfaceGetMsgRsp_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SLInterfaceGetMsgRsp_sl_5finterface_2eproto}, {
      &scc_info_SLErrorStatus_sl_5fcommon_5ftypes_2eproto.base,
      &scc_info_SLInterfaceInfoMsg_sl_5finterface_2eproto.base,}};

static void InitDefaultsscc_info_SLInterfaceGetNotifMsg_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceGetNotifMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGetNotifMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGetNotifMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SLInterfaceGetNotifMsg_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SLInterfaceGetNotifMsg_sl_5finterface_2eproto}, {}};

static void InitDefaultsscc_info_SLInterfaceGlobalsGetMsg_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceGlobalsGetMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGlobalsGetMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGlobalsGetMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SLInterfaceGlobalsGetMsg_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SLInterfaceGlobalsGetMsg_sl_5finterface_2eproto}, {}};

static void InitDefaultsscc_info_SLInterfaceGlobalsGetMsgRsp_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceGlobalsGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGlobalsGetMsgRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGlobalsGetMsgRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SLInterfaceGlobalsGetMsgRsp_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SLInterfaceGlobalsGetMsgRsp_sl_5finterface_2eproto}, {
      &scc_info_SLErrorStatus_sl_5fcommon_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_SLInterfaceGlobalsGetStatsMsgRsp_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceGlobalsGetStatsMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGlobalsGetStatsMsgRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGlobalsGetStatsMsgRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SLInterfaceGlobalsGetStatsMsgRsp_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SLInterfaceGlobalsGetStatsMsgRsp_sl_5finterface_2eproto}, {
      &scc_info_SLErrorStatus_sl_5fcommon_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_SLInterfaceGlobalsRegMsg_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceGlobalsRegMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGlobalsRegMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGlobalsRegMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SLInterfaceGlobalsRegMsg_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SLInterfaceGlobalsRegMsg_sl_5finterface_2eproto}, {}};

static void InitDefaultsscc_info_SLInterfaceGlobalsRegMsgRsp_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceGlobalsRegMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLInterfaceGlobalsRegMsgRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceGlobalsRegMsgRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SLInterfaceGlobalsRegMsgRsp_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SLInterfaceGlobalsRegMsgRsp_sl_5finterface_2eproto}, {
      &scc_info_SLErrorStatus_sl_5fcommon_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_SLInterfaceInfoMsg_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceInfoMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceInfoMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceInfoMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SLInterfaceInfoMsg_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SLInterfaceInfoMsg_sl_5finterface_2eproto}, {
      &scc_info_SLInterface_sl_5fcommon_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_SLInterfaceNotif_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceNotif_default_instance_;
    new (ptr) ::service_layer::SLInterfaceNotif();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceNotif::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SLInterfaceNotif_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SLInterfaceNotif_sl_5finterface_2eproto}, {
      &scc_info_SLErrorStatus_sl_5fcommon_5ftypes_2eproto.base,
      &scc_info_SLInterfaceInfoMsg_sl_5finterface_2eproto.base,}};

static void InitDefaultsscc_info_SLInterfaceNotifMsg_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceNotifMsg_default_instance_;
    new (ptr) ::service_layer::SLInterfaceNotifMsg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceNotifMsg::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_SLInterfaceNotifMsg_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_SLInterfaceNotifMsg_sl_5finterface_2eproto}, {
      &scc_info_SLInterface_sl_5fcommon_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_SLInterfaceNotifMsgRes_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceNotifMsgRes_default_instance_;
    new (ptr) ::service_layer::SLInterfaceNotifMsgRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceNotifMsgRes::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SLInterfaceNotifMsgRes_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SLInterfaceNotifMsgRes_sl_5finterface_2eproto}, {
      &scc_info_SLErrorStatus_sl_5fcommon_5ftypes_2eproto.base,
      &scc_info_SLInterface_sl_5fcommon_5ftypes_2eproto.base,}};

static void InitDefaultsscc_info_SLInterfaceNotifMsgRsp_sl_5finterface_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_layer::_SLInterfaceNotifMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLInterfaceNotifMsgRsp();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLInterfaceNotifMsgRsp::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_SLInterfaceNotifMsgRsp_sl_5finterface_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_SLInterfaceNotifMsgRsp_sl_5finterface_2eproto}, {
      &scc_info_SLErrorStatus_sl_5fcommon_5ftypes_2eproto.base,
      &scc_info_SLInterfaceNotifMsgRes_sl_5finterface_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_sl_5finterface_2eproto[13];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_sl_5finterface_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_sl_5finterface_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_sl_5finterface_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsRegMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsRegMsg, oper_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsRegMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsRegMsgRsp, errstatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetMsgRsp, errstatus_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetMsgRsp, maxinterfacesperbatch_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetStatsMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetStatsMsgRsp, errstatus_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetStatsMsgRsp, seqnum_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGlobalsGetStatsMsgRsp, interfacenotifcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGetMsg, key_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGetMsg, entriescount_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGetMsg, getnext_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceInfoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceInfoMsg, slifinfo_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceInfoMsg, ifstate_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceInfoMsg, seqnum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGetMsgRsp, eof_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGetMsgRsp, errstatus_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGetMsgRsp, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceGetNotifMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotif, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotif, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotif, eventtype_),
  offsetof(::service_layer::SLInterfaceNotifDefaultTypeInternal, errstatus_),
  offsetof(::service_layer::SLInterfaceNotifDefaultTypeInternal, info_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotif, Event_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsg, oper_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsg, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRes, errstatus_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRes, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRsp, statussummary_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLInterfaceNotifMsgRsp, results_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::service_layer::SLInterfaceGlobalsRegMsg)},
  { 6, -1, sizeof(::service_layer::SLInterfaceGlobalsRegMsgRsp)},
  { 12, -1, sizeof(::service_layer::SLInterfaceGlobalsGetMsg)},
  { 17, -1, sizeof(::service_layer::SLInterfaceGlobalsGetMsgRsp)},
  { 24, -1, sizeof(::service_layer::SLInterfaceGlobalsGetStatsMsgRsp)},
  { 32, -1, sizeof(::service_layer::SLInterfaceGetMsg)},
  { 40, -1, sizeof(::service_layer::SLInterfaceInfoMsg)},
  { 48, -1, sizeof(::service_layer::SLInterfaceGetMsgRsp)},
  { 56, -1, sizeof(::service_layer::SLInterfaceGetNotifMsg)},
  { 61, -1, sizeof(::service_layer::SLInterfaceNotif)},
  { 70, -1, sizeof(::service_layer::SLInterfaceNotifMsg)},
  { 77, -1, sizeof(::service_layer::SLInterfaceNotifMsgRes)},
  { 84, -1, sizeof(::service_layer::SLInterfaceNotifMsgRsp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceGlobalsRegMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceGlobalsRegMsgRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceGlobalsGetMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceGlobalsGetMsgRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceGlobalsGetStatsMsgRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceGetMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceInfoMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceGetMsgRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceGetNotifMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceNotif_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceNotifMsg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceNotifMsgRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLInterfaceNotifMsgRsp_default_instance_),
};

const char descriptor_table_protodef_sl_5finterface_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022sl_interface.proto\022\rservice_layer\032\025sl_"
  "common_types.proto\"@\n\030SLInterfaceGlobals"
  "RegMsg\022$\n\004Oper\030\001 \001(\0162\026.service_layer.SLR"
  "egOp\"N\n\033SLInterfaceGlobalsRegMsgRsp\022/\n\tE"
  "rrStatus\030\001 \001(\0132\034.service_layer.SLErrorSt"
  "atus\"\032\n\030SLInterfaceGlobalsGetMsg\"m\n\033SLIn"
  "terfaceGlobalsGetMsgRsp\022/\n\tErrStatus\030\001 \001"
  "(\0132\034.service_layer.SLErrorStatus\022\035\n\025MaxI"
  "nterfacesPerBatch\030\002 \001(\r\"\200\001\n SLInterfaceG"
  "lobalsGetStatsMsgRsp\022/\n\tErrStatus\030\001 \001(\0132"
  "\034.service_layer.SLErrorStatus\022\016\n\006SeqNum\030"
  "\002 \001(\004\022\033\n\023InterfaceNotifCount\030\003 \001(\r\"c\n\021SL"
  "InterfaceGetMsg\022\'\n\003Key\030\001 \001(\0132\032.service_l"
  "ayer.SLInterface\022\024\n\014EntriesCount\030\002 \001(\r\022\017"
  "\n\007GetNext\030\003 \001(\010\"\204\001\n\022SLInterfaceInfoMsg\022,"
  "\n\010SLIfInfo\030\001 \001(\0132\032.service_layer.SLInter"
  "face\0220\n\007IfState\030\002 \001(\0162\037.service_layer.SL"
  "InterfaceState\022\016\n\006SeqNum\030\003 \001(\004\"\210\001\n\024SLInt"
  "erfaceGetMsgRsp\022\013\n\003Eof\030\001 \001(\010\022/\n\tErrStatu"
  "s\030\002 \001(\0132\034.service_layer.SLErrorStatus\0222\n"
  "\007Entries\030\003 \003(\0132!.service_layer.SLInterfa"
  "ceInfoMsg\"\030\n\026SLInterfaceGetNotifMsg\"\271\001\n\020"
  "SLInterfaceNotif\0226\n\tEventType\030\001 \001(\0162#.se"
  "rvice_layer.SLInterfaceNotifType\0221\n\tErrS"
  "tatus\030\002 \001(\0132\034.service_layer.SLErrorStatu"
  "sH\000\0221\n\004Info\030\003 \001(\0132!.service_layer.SLInte"
  "rfaceInfoMsgH\000B\007\n\005Event\"j\n\023SLInterfaceNo"
  "tifMsg\022&\n\004Oper\030\001 \001(\0162\030.service_layer.SLN"
  "otifOp\022+\n\007Entries\030\002 \003(\0132\032.service_layer."
  "SLInterface\"r\n\026SLInterfaceNotifMsgRes\022/\n"
  "\tErrStatus\030\001 \001(\0132\034.service_layer.SLError"
  "Status\022\'\n\003Key\030\002 \001(\0132\032.service_layer.SLIn"
  "terface\"\205\001\n\026SLInterfaceNotifMsgRsp\0223\n\rSt"
  "atusSummary\030\001 \001(\0132\034.service_layer.SLErro"
  "rStatus\0226\n\007Results\030\002 \003(\0132%.service_layer"
  ".SLInterfaceNotifMsgRes*U\n\020SLInterfaceSt"
  "ate\022\027\n\023SL_IF_STATE_UNKNOWN\020\000\022\024\n\020SL_IF_ST"
  "ATE_DOWN\020\001\022\022\n\016SL_IF_STATE_UP\020\002*\213\001\n\024SLInt"
  "erfaceNotifType\022$\n SL_INTERFACE_EVENT_TY"
  "PE_RESERVED\020\000\022!\n\035SL_INTERFACE_EVENT_TYPE"
  "_ERROR\020\001\022*\n&SL_INTERFACE_EVENT_TYPE_INTE"
  "RFACE_INFO\020\0022\210\005\n\017SLInterfaceOper\022n\n\027SLIn"
  "terfaceGlobalsRegOp\022\'.service_layer.SLIn"
  "terfaceGlobalsRegMsg\032*.service_layer.SLI"
  "nterfaceGlobalsRegMsgRsp\022l\n\025SLInterfaceG"
  "lobalsGet\022\'.service_layer.SLInterfaceGlo"
  "balsGetMsg\032*.service_layer.SLInterfaceGl"
  "obalsGetMsgRsp\022v\n\032SLInterfaceGlobalsGetS"
  "tats\022\'.service_layer.SLInterfaceGlobalsG"
  "etMsg\032/.service_layer.SLInterfaceGlobals"
  "GetStatsMsgRsp\022W\n\016SLInterfaceGet\022 .servi"
  "ce_layer.SLInterfaceGetMsg\032#.service_lay"
  "er.SLInterfaceGetMsgRsp\022e\n\031SLInterfaceGe"
  "tNotifStream\022%.service_layer.SLInterface"
  "GetNotifMsg\032\037.service_layer.SLInterfaceN"
  "otif0\001\022_\n\022SLInterfaceNotifOp\022\".service_l"
  "ayer.SLInterfaceNotifMsg\032%.service_layer"
  ".SLInterfaceNotifMsgRspb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_sl_5finterface_2eproto_deps[1] = {
  &::descriptor_table_sl_5fcommon_5ftypes_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_sl_5finterface_2eproto_sccs[13] = {
  &scc_info_SLInterfaceGetMsg_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceGetMsgRsp_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceGetNotifMsg_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceGlobalsGetMsg_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceGlobalsGetMsgRsp_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceGlobalsGetStatsMsgRsp_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceGlobalsRegMsg_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceGlobalsRegMsgRsp_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceInfoMsg_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceNotif_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceNotifMsg_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceNotifMsgRes_sl_5finterface_2eproto.base,
  &scc_info_SLInterfaceNotifMsgRsp_sl_5finterface_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_sl_5finterface_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sl_5finterface_2eproto = {
  false, false, descriptor_table_protodef_sl_5finterface_2eproto, "sl_interface.proto", 2311,
  &descriptor_table_sl_5finterface_2eproto_once, descriptor_table_sl_5finterface_2eproto_sccs, descriptor_table_sl_5finterface_2eproto_deps, 13, 1,
  schemas, file_default_instances, TableStruct_sl_5finterface_2eproto::offsets,
  file_level_metadata_sl_5finterface_2eproto, 13, file_level_enum_descriptors_sl_5finterface_2eproto, file_level_service_descriptors_sl_5finterface_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_sl_5finterface_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_sl_5finterface_2eproto)), true);
namespace service_layer {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SLInterfaceState_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_sl_5finterface_2eproto);
  return file_level_enum_descriptors_sl_5finterface_2eproto[0];
}
bool SLInterfaceState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SLInterfaceNotifType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_sl_5finterface_2eproto);
  return file_level_enum_descriptors_sl_5finterface_2eproto[1];
}
bool SLInterfaceNotifType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SLInterfaceGlobalsRegMsg::InitAsDefaultInstance() {
}
class SLInterfaceGlobalsRegMsg::_Internal {
 public:
};

SLInterfaceGlobalsRegMsg::SLInterfaceGlobalsRegMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceGlobalsRegMsg)
}
SLInterfaceGlobalsRegMsg::SLInterfaceGlobalsRegMsg(const SLInterfaceGlobalsRegMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGlobalsRegMsg)
}

void SLInterfaceGlobalsRegMsg::SharedCtor() {
  oper_ = 0;
}

SLInterfaceGlobalsRegMsg::~SLInterfaceGlobalsRegMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGlobalsRegMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceGlobalsRegMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SLInterfaceGlobalsRegMsg::ArenaDtor(void* object) {
  SLInterfaceGlobalsRegMsg* _this = reinterpret_cast< SLInterfaceGlobalsRegMsg* >(object);
  (void)_this;
}
void SLInterfaceGlobalsRegMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceGlobalsRegMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceGlobalsRegMsg& SLInterfaceGlobalsRegMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceGlobalsRegMsg_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceGlobalsRegMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGlobalsRegMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oper_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceGlobalsRegMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_layer.SLRegOp Oper = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_oper(static_cast<::service_layer::SLRegOp>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceGlobalsRegMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGlobalsRegMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_oper(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGlobalsRegMsg)
  return target;
}

size_t SLInterfaceGlobalsRegMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGlobalsRegMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_oper());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceGlobalsRegMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGlobalsRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGlobalsRegMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceGlobalsRegMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGlobalsRegMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGlobalsRegMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceGlobalsRegMsg::MergeFrom(const SLInterfaceGlobalsRegMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGlobalsRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oper() != 0) {
    _internal_set_oper(from._internal_oper());
  }
}

void SLInterfaceGlobalsRegMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGlobalsRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGlobalsRegMsg::CopyFrom(const SLInterfaceGlobalsRegMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGlobalsRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGlobalsRegMsg::IsInitialized() const {
  return true;
}

void SLInterfaceGlobalsRegMsg::InternalSwap(SLInterfaceGlobalsRegMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(oper_, other->oper_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceGlobalsRegMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceGlobalsRegMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceGlobalsRegMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
class SLInterfaceGlobalsRegMsgRsp::_Internal {
 public:
  static const ::service_layer::SLErrorStatus& errstatus(const SLInterfaceGlobalsRegMsgRsp* msg);
};

const ::service_layer::SLErrorStatus&
SLInterfaceGlobalsRegMsgRsp::_Internal::errstatus(const SLInterfaceGlobalsRegMsgRsp* msg) {
  return *msg->errstatus_;
}
void SLInterfaceGlobalsRegMsgRsp::clear_errstatus() {
  if (GetArena() == nullptr && errstatus_ != nullptr) {
    delete errstatus_;
  }
  errstatus_ = nullptr;
}
SLInterfaceGlobalsRegMsgRsp::SLInterfaceGlobalsRegMsgRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceGlobalsRegMsgRsp)
}
SLInterfaceGlobalsRegMsgRsp::SLInterfaceGlobalsRegMsgRsp(const SLInterfaceGlobalsRegMsgRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGlobalsRegMsgRsp)
}

void SLInterfaceGlobalsRegMsgRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SLInterfaceGlobalsRegMsgRsp_sl_5finterface_2eproto.base);
  errstatus_ = nullptr;
}

SLInterfaceGlobalsRegMsgRsp::~SLInterfaceGlobalsRegMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGlobalsRegMsgRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceGlobalsRegMsgRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete errstatus_;
}

void SLInterfaceGlobalsRegMsgRsp::ArenaDtor(void* object) {
  SLInterfaceGlobalsRegMsgRsp* _this = reinterpret_cast< SLInterfaceGlobalsRegMsgRsp* >(object);
  (void)_this;
}
void SLInterfaceGlobalsRegMsgRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceGlobalsRegMsgRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceGlobalsRegMsgRsp& SLInterfaceGlobalsRegMsgRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceGlobalsRegMsgRsp_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceGlobalsRegMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && errstatus_ != nullptr) {
    delete errstatus_;
  }
  errstatus_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceGlobalsRegMsgRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_errstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceGlobalsRegMsgRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::errstatus(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGlobalsRegMsgRsp)
  return target;
}

size_t SLInterfaceGlobalsRegMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *errstatus_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceGlobalsRegMsgRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGlobalsRegMsgRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceGlobalsRegMsgRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGlobalsRegMsgRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGlobalsRegMsgRsp)
    MergeFrom(*source);
  }
}

void SLInterfaceGlobalsRegMsgRsp::MergeFrom(const SLInterfaceGlobalsRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    _internal_mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from._internal_errstatus());
  }
}

void SLInterfaceGlobalsRegMsgRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGlobalsRegMsgRsp::CopyFrom(const SLInterfaceGlobalsRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGlobalsRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGlobalsRegMsgRsp::IsInitialized() const {
  return true;
}

void SLInterfaceGlobalsRegMsgRsp::InternalSwap(SLInterfaceGlobalsRegMsgRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(errstatus_, other->errstatus_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceGlobalsRegMsgRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceGlobalsGetMsg::InitAsDefaultInstance() {
}
class SLInterfaceGlobalsGetMsg::_Internal {
 public:
};

SLInterfaceGlobalsGetMsg::SLInterfaceGlobalsGetMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceGlobalsGetMsg)
}
SLInterfaceGlobalsGetMsg::SLInterfaceGlobalsGetMsg(const SLInterfaceGlobalsGetMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGlobalsGetMsg)
}

void SLInterfaceGlobalsGetMsg::SharedCtor() {
}

SLInterfaceGlobalsGetMsg::~SLInterfaceGlobalsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGlobalsGetMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceGlobalsGetMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SLInterfaceGlobalsGetMsg::ArenaDtor(void* object) {
  SLInterfaceGlobalsGetMsg* _this = reinterpret_cast< SLInterfaceGlobalsGetMsg* >(object);
  (void)_this;
}
void SLInterfaceGlobalsGetMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceGlobalsGetMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceGlobalsGetMsg& SLInterfaceGlobalsGetMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceGlobalsGetMsg_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceGlobalsGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGlobalsGetMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceGlobalsGetMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceGlobalsGetMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGlobalsGetMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGlobalsGetMsg)
  return target;
}

size_t SLInterfaceGlobalsGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGlobalsGetMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceGlobalsGetMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGlobalsGetMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceGlobalsGetMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGlobalsGetMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGlobalsGetMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceGlobalsGetMsg::MergeFrom(const SLInterfaceGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SLInterfaceGlobalsGetMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGlobalsGetMsg::CopyFrom(const SLInterfaceGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGlobalsGetMsg::IsInitialized() const {
  return true;
}

void SLInterfaceGlobalsGetMsg::InternalSwap(SLInterfaceGlobalsGetMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceGlobalsGetMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceGlobalsGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceGlobalsGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
class SLInterfaceGlobalsGetMsgRsp::_Internal {
 public:
  static const ::service_layer::SLErrorStatus& errstatus(const SLInterfaceGlobalsGetMsgRsp* msg);
};

const ::service_layer::SLErrorStatus&
SLInterfaceGlobalsGetMsgRsp::_Internal::errstatus(const SLInterfaceGlobalsGetMsgRsp* msg) {
  return *msg->errstatus_;
}
void SLInterfaceGlobalsGetMsgRsp::clear_errstatus() {
  if (GetArena() == nullptr && errstatus_ != nullptr) {
    delete errstatus_;
  }
  errstatus_ = nullptr;
}
SLInterfaceGlobalsGetMsgRsp::SLInterfaceGlobalsGetMsgRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceGlobalsGetMsgRsp)
}
SLInterfaceGlobalsGetMsgRsp::SLInterfaceGlobalsGetMsgRsp(const SLInterfaceGlobalsGetMsgRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = nullptr;
  }
  maxinterfacesperbatch_ = from.maxinterfacesperbatch_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGlobalsGetMsgRsp)
}

void SLInterfaceGlobalsGetMsgRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SLInterfaceGlobalsGetMsgRsp_sl_5finterface_2eproto.base);
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxinterfacesperbatch_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(maxinterfacesperbatch_));
}

SLInterfaceGlobalsGetMsgRsp::~SLInterfaceGlobalsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGlobalsGetMsgRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceGlobalsGetMsgRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete errstatus_;
}

void SLInterfaceGlobalsGetMsgRsp::ArenaDtor(void* object) {
  SLInterfaceGlobalsGetMsgRsp* _this = reinterpret_cast< SLInterfaceGlobalsGetMsgRsp* >(object);
  (void)_this;
}
void SLInterfaceGlobalsGetMsgRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceGlobalsGetMsgRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceGlobalsGetMsgRsp& SLInterfaceGlobalsGetMsgRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceGlobalsGetMsgRsp_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceGlobalsGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && errstatus_ != nullptr) {
    delete errstatus_;
  }
  errstatus_ = nullptr;
  maxinterfacesperbatch_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceGlobalsGetMsgRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_errstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 MaxInterfacesPerBatch = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          maxinterfacesperbatch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceGlobalsGetMsgRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::errstatus(this), target, stream);
  }

  // uint32 MaxInterfacesPerBatch = 2;
  if (this->maxinterfacesperbatch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_maxinterfacesperbatch(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGlobalsGetMsgRsp)
  return target;
}

size_t SLInterfaceGlobalsGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *errstatus_);
  }

  // uint32 MaxInterfacesPerBatch = 2;
  if (this->maxinterfacesperbatch() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_maxinterfacesperbatch());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceGlobalsGetMsgRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGlobalsGetMsgRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceGlobalsGetMsgRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGlobalsGetMsgRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGlobalsGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLInterfaceGlobalsGetMsgRsp::MergeFrom(const SLInterfaceGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    _internal_mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from._internal_errstatus());
  }
  if (from.maxinterfacesperbatch() != 0) {
    _internal_set_maxinterfacesperbatch(from._internal_maxinterfacesperbatch());
  }
}

void SLInterfaceGlobalsGetMsgRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGlobalsGetMsgRsp::CopyFrom(const SLInterfaceGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGlobalsGetMsgRsp::IsInitialized() const {
  return true;
}

void SLInterfaceGlobalsGetMsgRsp::InternalSwap(SLInterfaceGlobalsGetMsgRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLInterfaceGlobalsGetMsgRsp, maxinterfacesperbatch_)
      + sizeof(SLInterfaceGlobalsGetMsgRsp::maxinterfacesperbatch_)
      - PROTOBUF_FIELD_OFFSET(SLInterfaceGlobalsGetMsgRsp, errstatus_)>(
          reinterpret_cast<char*>(&errstatus_),
          reinterpret_cast<char*>(&other->errstatus_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceGlobalsGetMsgRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceGlobalsGetStatsMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceGlobalsGetStatsMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
class SLInterfaceGlobalsGetStatsMsgRsp::_Internal {
 public:
  static const ::service_layer::SLErrorStatus& errstatus(const SLInterfaceGlobalsGetStatsMsgRsp* msg);
};

const ::service_layer::SLErrorStatus&
SLInterfaceGlobalsGetStatsMsgRsp::_Internal::errstatus(const SLInterfaceGlobalsGetStatsMsgRsp* msg) {
  return *msg->errstatus_;
}
void SLInterfaceGlobalsGetStatsMsgRsp::clear_errstatus() {
  if (GetArena() == nullptr && errstatus_ != nullptr) {
    delete errstatus_;
  }
  errstatus_ = nullptr;
}
SLInterfaceGlobalsGetStatsMsgRsp::SLInterfaceGlobalsGetStatsMsgRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
}
SLInterfaceGlobalsGetStatsMsgRsp::SLInterfaceGlobalsGetStatsMsgRsp(const SLInterfaceGlobalsGetStatsMsgRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = nullptr;
  }
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&interfacenotifcount_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(interfacenotifcount_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
}

void SLInterfaceGlobalsGetStatsMsgRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SLInterfaceGlobalsGetStatsMsgRsp_sl_5finterface_2eproto.base);
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interfacenotifcount_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(interfacenotifcount_));
}

SLInterfaceGlobalsGetStatsMsgRsp::~SLInterfaceGlobalsGetStatsMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceGlobalsGetStatsMsgRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete errstatus_;
}

void SLInterfaceGlobalsGetStatsMsgRsp::ArenaDtor(void* object) {
  SLInterfaceGlobalsGetStatsMsgRsp* _this = reinterpret_cast< SLInterfaceGlobalsGetStatsMsgRsp* >(object);
  (void)_this;
}
void SLInterfaceGlobalsGetStatsMsgRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceGlobalsGetStatsMsgRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceGlobalsGetStatsMsgRsp& SLInterfaceGlobalsGetStatsMsgRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceGlobalsGetStatsMsgRsp_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceGlobalsGetStatsMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && errstatus_ != nullptr) {
    delete errstatus_;
  }
  errstatus_ = nullptr;
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interfacenotifcount_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(interfacenotifcount_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceGlobalsGetStatsMsgRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_errstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 SeqNum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          seqnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 InterfaceNotifCount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          interfacenotifcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceGlobalsGetStatsMsgRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::errstatus(this), target, stream);
  }

  // uint64 SeqNum = 2;
  if (this->seqnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_seqnum(), target);
  }

  // uint32 InterfaceNotifCount = 3;
  if (this->interfacenotifcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_interfacenotifcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  return target;
}

size_t SLInterfaceGlobalsGetStatsMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *errstatus_);
  }

  // uint64 SeqNum = 2;
  if (this->seqnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_seqnum());
  }

  // uint32 InterfaceNotifCount = 3;
  if (this->interfacenotifcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_interfacenotifcount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceGlobalsGetStatsMsgRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGlobalsGetStatsMsgRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceGlobalsGetStatsMsgRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
    MergeFrom(*source);
  }
}

void SLInterfaceGlobalsGetStatsMsgRsp::MergeFrom(const SLInterfaceGlobalsGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    _internal_mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from._internal_errstatus());
  }
  if (from.seqnum() != 0) {
    _internal_set_seqnum(from._internal_seqnum());
  }
  if (from.interfacenotifcount() != 0) {
    _internal_set_interfacenotifcount(from._internal_interfacenotifcount());
  }
}

void SLInterfaceGlobalsGetStatsMsgRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGlobalsGetStatsMsgRsp::CopyFrom(const SLInterfaceGlobalsGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGlobalsGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGlobalsGetStatsMsgRsp::IsInitialized() const {
  return true;
}

void SLInterfaceGlobalsGetStatsMsgRsp::InternalSwap(SLInterfaceGlobalsGetStatsMsgRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLInterfaceGlobalsGetStatsMsgRsp, interfacenotifcount_)
      + sizeof(SLInterfaceGlobalsGetStatsMsgRsp::interfacenotifcount_)
      - PROTOBUF_FIELD_OFFSET(SLInterfaceGlobalsGetStatsMsgRsp, errstatus_)>(
          reinterpret_cast<char*>(&errstatus_),
          reinterpret_cast<char*>(&other->errstatus_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceGlobalsGetStatsMsgRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceGetMsg::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceGetMsg_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLInterface*>(
      ::service_layer::SLInterface::internal_default_instance());
}
class SLInterfaceGetMsg::_Internal {
 public:
  static const ::service_layer::SLInterface& key(const SLInterfaceGetMsg* msg);
};

const ::service_layer::SLInterface&
SLInterfaceGetMsg::_Internal::key(const SLInterfaceGetMsg* msg) {
  return *msg->key_;
}
void SLInterfaceGetMsg::clear_key() {
  if (GetArena() == nullptr && key_ != nullptr) {
    delete key_;
  }
  key_ = nullptr;
}
SLInterfaceGetMsg::SLInterfaceGetMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceGetMsg)
}
SLInterfaceGetMsg::SLInterfaceGetMsg(const SLInterfaceGetMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_key()) {
    key_ = new ::service_layer::SLInterface(*from.key_);
  } else {
    key_ = nullptr;
  }
  ::memcpy(&entriescount_, &from.entriescount_,
    static_cast<size_t>(reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&entriescount_)) + sizeof(getnext_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGetMsg)
}

void SLInterfaceGetMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SLInterfaceGetMsg_sl_5finterface_2eproto.base);
  ::memset(&key_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&key_)) + sizeof(getnext_));
}

SLInterfaceGetMsg::~SLInterfaceGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGetMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceGetMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete key_;
}

void SLInterfaceGetMsg::ArenaDtor(void* object) {
  SLInterfaceGetMsg* _this = reinterpret_cast< SLInterfaceGetMsg* >(object);
  (void)_this;
}
void SLInterfaceGetMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceGetMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceGetMsg& SLInterfaceGetMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceGetMsg_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGetMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && key_ != nullptr) {
    delete key_;
  }
  key_ = nullptr;
  ::memset(&entriescount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&entriescount_)) + sizeof(getnext_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceGetMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_layer.SLInterface Key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 EntriesCount = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          entriescount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool GetNext = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          getnext_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceGetMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGetMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLInterface Key = 1;
  if (this->has_key()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::key(this), target, stream);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_entriescount(), target);
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_getnext(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGetMsg)
  return target;
}

size_t SLInterfaceGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGetMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.SLInterface Key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_entriescount());
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceGetMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGetMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceGetMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGetMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGetMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceGetMsg::MergeFrom(const SLInterfaceGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    _internal_mutable_key()->::service_layer::SLInterface::MergeFrom(from._internal_key());
  }
  if (from.entriescount() != 0) {
    _internal_set_entriescount(from._internal_entriescount());
  }
  if (from.getnext() != 0) {
    _internal_set_getnext(from._internal_getnext());
  }
}

void SLInterfaceGetMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGetMsg::CopyFrom(const SLInterfaceGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGetMsg::IsInitialized() const {
  return true;
}

void SLInterfaceGetMsg::InternalSwap(SLInterfaceGetMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLInterfaceGetMsg, getnext_)
      + sizeof(SLInterfaceGetMsg::getnext_)
      - PROTOBUF_FIELD_OFFSET(SLInterfaceGetMsg, key_)>(
          reinterpret_cast<char*>(&key_),
          reinterpret_cast<char*>(&other->key_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceGetMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceInfoMsg::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceInfoMsg_default_instance_._instance.get_mutable()->slifinfo_ = const_cast< ::service_layer::SLInterface*>(
      ::service_layer::SLInterface::internal_default_instance());
}
class SLInterfaceInfoMsg::_Internal {
 public:
  static const ::service_layer::SLInterface& slifinfo(const SLInterfaceInfoMsg* msg);
};

const ::service_layer::SLInterface&
SLInterfaceInfoMsg::_Internal::slifinfo(const SLInterfaceInfoMsg* msg) {
  return *msg->slifinfo_;
}
void SLInterfaceInfoMsg::clear_slifinfo() {
  if (GetArena() == nullptr && slifinfo_ != nullptr) {
    delete slifinfo_;
  }
  slifinfo_ = nullptr;
}
SLInterfaceInfoMsg::SLInterfaceInfoMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceInfoMsg)
}
SLInterfaceInfoMsg::SLInterfaceInfoMsg(const SLInterfaceInfoMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_slifinfo()) {
    slifinfo_ = new ::service_layer::SLInterface(*from.slifinfo_);
  } else {
    slifinfo_ = nullptr;
  }
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&ifstate_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(ifstate_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceInfoMsg)
}

void SLInterfaceInfoMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SLInterfaceInfoMsg_sl_5finterface_2eproto.base);
  ::memset(&slifinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ifstate_) -
      reinterpret_cast<char*>(&slifinfo_)) + sizeof(ifstate_));
}

SLInterfaceInfoMsg::~SLInterfaceInfoMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceInfoMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceInfoMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete slifinfo_;
}

void SLInterfaceInfoMsg::ArenaDtor(void* object) {
  SLInterfaceInfoMsg* _this = reinterpret_cast< SLInterfaceInfoMsg* >(object);
  (void)_this;
}
void SLInterfaceInfoMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceInfoMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceInfoMsg& SLInterfaceInfoMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceInfoMsg_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceInfoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceInfoMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && slifinfo_ != nullptr) {
    delete slifinfo_;
  }
  slifinfo_ = nullptr;
  ::memset(&seqnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ifstate_) -
      reinterpret_cast<char*>(&seqnum_)) + sizeof(ifstate_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceInfoMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_layer.SLInterface SLIfInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_slifinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .service_layer.SLInterfaceState IfState = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_ifstate(static_cast<::service_layer::SLInterfaceState>(val));
        } else goto handle_unusual;
        continue;
      // uint64 SeqNum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          seqnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceInfoMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceInfoMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLInterface SLIfInfo = 1;
  if (this->has_slifinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::slifinfo(this), target, stream);
  }

  // .service_layer.SLInterfaceState IfState = 2;
  if (this->ifstate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_ifstate(), target);
  }

  // uint64 SeqNum = 3;
  if (this->seqnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_seqnum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceInfoMsg)
  return target;
}

size_t SLInterfaceInfoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceInfoMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.SLInterface SLIfInfo = 1;
  if (this->has_slifinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *slifinfo_);
  }

  // uint64 SeqNum = 3;
  if (this->seqnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_seqnum());
  }

  // .service_layer.SLInterfaceState IfState = 2;
  if (this->ifstate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ifstate());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceInfoMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceInfoMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceInfoMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceInfoMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceInfoMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceInfoMsg::MergeFrom(const SLInterfaceInfoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slifinfo()) {
    _internal_mutable_slifinfo()->::service_layer::SLInterface::MergeFrom(from._internal_slifinfo());
  }
  if (from.seqnum() != 0) {
    _internal_set_seqnum(from._internal_seqnum());
  }
  if (from.ifstate() != 0) {
    _internal_set_ifstate(from._internal_ifstate());
  }
}

void SLInterfaceInfoMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceInfoMsg::CopyFrom(const SLInterfaceInfoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceInfoMsg::IsInitialized() const {
  return true;
}

void SLInterfaceInfoMsg::InternalSwap(SLInterfaceInfoMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLInterfaceInfoMsg, ifstate_)
      + sizeof(SLInterfaceInfoMsg::ifstate_)
      - PROTOBUF_FIELD_OFFSET(SLInterfaceInfoMsg, slifinfo_)>(
          reinterpret_cast<char*>(&slifinfo_),
          reinterpret_cast<char*>(&other->slifinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceInfoMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
class SLInterfaceGetMsgRsp::_Internal {
 public:
  static const ::service_layer::SLErrorStatus& errstatus(const SLInterfaceGetMsgRsp* msg);
};

const ::service_layer::SLErrorStatus&
SLInterfaceGetMsgRsp::_Internal::errstatus(const SLInterfaceGetMsgRsp* msg) {
  return *msg->errstatus_;
}
void SLInterfaceGetMsgRsp::clear_errstatus() {
  if (GetArena() == nullptr && errstatus_ != nullptr) {
    delete errstatus_;
  }
  errstatus_ = nullptr;
}
SLInterfaceGetMsgRsp::SLInterfaceGetMsgRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  entries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceGetMsgRsp)
}
SLInterfaceGetMsgRsp::SLInterfaceGetMsgRsp(const SLInterfaceGetMsgRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = nullptr;
  }
  eof_ = from.eof_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGetMsgRsp)
}

void SLInterfaceGetMsgRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SLInterfaceGetMsgRsp_sl_5finterface_2eproto.base);
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(eof_));
}

SLInterfaceGetMsgRsp::~SLInterfaceGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGetMsgRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceGetMsgRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete errstatus_;
}

void SLInterfaceGetMsgRsp::ArenaDtor(void* object) {
  SLInterfaceGetMsgRsp* _this = reinterpret_cast< SLInterfaceGetMsgRsp* >(object);
  (void)_this;
}
void SLInterfaceGetMsgRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceGetMsgRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceGetMsgRsp& SLInterfaceGetMsgRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceGetMsgRsp_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGetMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  if (GetArena() == nullptr && errstatus_ != nullptr) {
    delete errstatus_;
  }
  errstatus_ = nullptr;
  eof_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceGetMsgRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool Eof = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          eof_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_errstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .service_layer.SLInterfaceInfoMsg Entries = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceGetMsgRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGetMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Eof = 1;
  if (this->eof() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_eof(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::errstatus(this), target, stream);
  }

  // repeated .service_layer.SLInterfaceInfoMsg Entries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGetMsgRsp)
  return target;
}

size_t SLInterfaceGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGetMsgRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .service_layer.SLInterfaceInfoMsg Entries = 3;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *errstatus_);
  }

  // bool Eof = 1;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceGetMsgRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGetMsgRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceGetMsgRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGetMsgRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLInterfaceGetMsgRsp::MergeFrom(const SLInterfaceGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.has_errstatus()) {
    _internal_mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from._internal_errstatus());
  }
  if (from.eof() != 0) {
    _internal_set_eof(from._internal_eof());
  }
}

void SLInterfaceGetMsgRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGetMsgRsp::CopyFrom(const SLInterfaceGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGetMsgRsp::IsInitialized() const {
  return true;
}

void SLInterfaceGetMsgRsp::InternalSwap(SLInterfaceGetMsgRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLInterfaceGetMsgRsp, eof_)
      + sizeof(SLInterfaceGetMsgRsp::eof_)
      - PROTOBUF_FIELD_OFFSET(SLInterfaceGetMsgRsp, errstatus_)>(
          reinterpret_cast<char*>(&errstatus_),
          reinterpret_cast<char*>(&other->errstatus_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceGetMsgRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceGetNotifMsg::InitAsDefaultInstance() {
}
class SLInterfaceGetNotifMsg::_Internal {
 public:
};

SLInterfaceGetNotifMsg::SLInterfaceGetNotifMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceGetNotifMsg)
}
SLInterfaceGetNotifMsg::SLInterfaceGetNotifMsg(const SLInterfaceGetNotifMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceGetNotifMsg)
}

void SLInterfaceGetNotifMsg::SharedCtor() {
}

SLInterfaceGetNotifMsg::~SLInterfaceGetNotifMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceGetNotifMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceGetNotifMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SLInterfaceGetNotifMsg::ArenaDtor(void* object) {
  SLInterfaceGetNotifMsg* _this = reinterpret_cast< SLInterfaceGetNotifMsg* >(object);
  (void)_this;
}
void SLInterfaceGetNotifMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceGetNotifMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceGetNotifMsg& SLInterfaceGetNotifMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceGetNotifMsg_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceGetNotifMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceGetNotifMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceGetNotifMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceGetNotifMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceGetNotifMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceGetNotifMsg)
  return target;
}

size_t SLInterfaceGetNotifMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceGetNotifMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceGetNotifMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceGetNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceGetNotifMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceGetNotifMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceGetNotifMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceGetNotifMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceGetNotifMsg::MergeFrom(const SLInterfaceGetNotifMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceGetNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SLInterfaceGetNotifMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceGetNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceGetNotifMsg::CopyFrom(const SLInterfaceGetNotifMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceGetNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceGetNotifMsg::IsInitialized() const {
  return true;
}

void SLInterfaceGetNotifMsg::InternalSwap(SLInterfaceGetNotifMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceGetNotifMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceNotif::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceNotif_default_instance_.errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  ::service_layer::_SLInterfaceNotif_default_instance_.info_ = const_cast< ::service_layer::SLInterfaceInfoMsg*>(
      ::service_layer::SLInterfaceInfoMsg::internal_default_instance());
}
class SLInterfaceNotif::_Internal {
 public:
  static const ::service_layer::SLErrorStatus& errstatus(const SLInterfaceNotif* msg);
  static const ::service_layer::SLInterfaceInfoMsg& info(const SLInterfaceNotif* msg);
};

const ::service_layer::SLErrorStatus&
SLInterfaceNotif::_Internal::errstatus(const SLInterfaceNotif* msg) {
  return *msg->Event_.errstatus_;
}
const ::service_layer::SLInterfaceInfoMsg&
SLInterfaceNotif::_Internal::info(const SLInterfaceNotif* msg) {
  return *msg->Event_.info_;
}
void SLInterfaceNotif::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_Event();
  if (errstatus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(errstatus)->GetArena();
    if (message_arena != submessage_arena) {
      errstatus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    set_has_errstatus();
    Event_.errstatus_ = errstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLInterfaceNotif.ErrStatus)
}
void SLInterfaceNotif::clear_errstatus() {
  if (_internal_has_errstatus()) {
    if (GetArena() == nullptr) {
      delete Event_.errstatus_;
    }
    clear_has_Event();
  }
}
void SLInterfaceNotif::set_allocated_info(::service_layer::SLInterfaceInfoMsg* info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_Event();
  if (info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(info);
    if (message_arena != submessage_arena) {
      info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    set_has_info();
    Event_.info_ = info;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLInterfaceNotif.Info)
}
SLInterfaceNotif::SLInterfaceNotif(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceNotif)
}
SLInterfaceNotif::SLInterfaceNotif(const SLInterfaceNotif& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  eventtype_ = from.eventtype_;
  clear_has_Event();
  switch (from.Event_case()) {
    case kErrStatus: {
      _internal_mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from._internal_errstatus());
      break;
    }
    case kInfo: {
      _internal_mutable_info()->::service_layer::SLInterfaceInfoMsg::MergeFrom(from._internal_info());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceNotif)
}

void SLInterfaceNotif::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SLInterfaceNotif_sl_5finterface_2eproto.base);
  eventtype_ = 0;
  clear_has_Event();
}

SLInterfaceNotif::~SLInterfaceNotif() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceNotif)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceNotif::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_Event()) {
    clear_Event();
  }
}

void SLInterfaceNotif::ArenaDtor(void* object) {
  SLInterfaceNotif* _this = reinterpret_cast< SLInterfaceNotif* >(object);
  (void)_this;
}
void SLInterfaceNotif::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceNotif::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceNotif& SLInterfaceNotif::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceNotif_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceNotif::clear_Event() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLInterfaceNotif)
  switch (Event_case()) {
    case kErrStatus: {
      if (GetArena() == nullptr) {
        delete Event_.errstatus_;
      }
      break;
    }
    case kInfo: {
      if (GetArena() == nullptr) {
        delete Event_.info_;
      }
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void SLInterfaceNotif::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceNotif)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eventtype_ = 0;
  clear_Event();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceNotif::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_layer.SLInterfaceNotifType EventType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_eventtype(static_cast<::service_layer::SLInterfaceNotifType>(val));
        } else goto handle_unusual;
        continue;
      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_errstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .service_layer.SLInterfaceInfoMsg Info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceNotif::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceNotif)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLInterfaceNotifType EventType = 1;
  if (this->eventtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_eventtype(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (_internal_has_errstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::errstatus(this), target, stream);
  }

  // .service_layer.SLInterfaceInfoMsg Info = 3;
  if (_internal_has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceNotif)
  return target;
}

size_t SLInterfaceNotif::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceNotif)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.SLInterfaceNotifType EventType = 1;
  if (this->eventtype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_eventtype());
  }

  switch (Event_case()) {
    // .service_layer.SLErrorStatus ErrStatus = 2;
    case kErrStatus: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Event_.errstatus_);
      break;
    }
    // .service_layer.SLInterfaceInfoMsg Info = 3;
    case kInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Event_.info_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceNotif::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceNotif)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceNotif* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceNotif>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceNotif)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceNotif)
    MergeFrom(*source);
  }
}

void SLInterfaceNotif::MergeFrom(const SLInterfaceNotif& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceNotif)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eventtype() != 0) {
    _internal_set_eventtype(from._internal_eventtype());
  }
  switch (from.Event_case()) {
    case kErrStatus: {
      _internal_mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from._internal_errstatus());
      break;
    }
    case kInfo: {
      _internal_mutable_info()->::service_layer::SLInterfaceInfoMsg::MergeFrom(from._internal_info());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void SLInterfaceNotif::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceNotif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceNotif::CopyFrom(const SLInterfaceNotif& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceNotif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceNotif::IsInitialized() const {
  return true;
}

void SLInterfaceNotif::InternalSwap(SLInterfaceNotif* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(eventtype_, other->eventtype_);
  swap(Event_, other->Event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceNotif::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceNotifMsg::InitAsDefaultInstance() {
}
class SLInterfaceNotifMsg::_Internal {
 public:
};

void SLInterfaceNotifMsg::clear_entries() {
  entries_.Clear();
}
SLInterfaceNotifMsg::SLInterfaceNotifMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  entries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceNotifMsg)
}
SLInterfaceNotifMsg::SLInterfaceNotifMsg(const SLInterfaceNotifMsg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceNotifMsg)
}

void SLInterfaceNotifMsg::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SLInterfaceNotifMsg_sl_5finterface_2eproto.base);
  oper_ = 0;
}

SLInterfaceNotifMsg::~SLInterfaceNotifMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceNotifMsg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceNotifMsg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SLInterfaceNotifMsg::ArenaDtor(void* object) {
  SLInterfaceNotifMsg* _this = reinterpret_cast< SLInterfaceNotifMsg* >(object);
  (void)_this;
}
void SLInterfaceNotifMsg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceNotifMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceNotifMsg& SLInterfaceNotifMsg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceNotifMsg_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceNotifMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceNotifMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  oper_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceNotifMsg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_layer.SLNotifOp Oper = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_oper(static_cast<::service_layer::SLNotifOp>(val));
        } else goto handle_unusual;
        continue;
      // repeated .service_layer.SLInterface Entries = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceNotifMsg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceNotifMsg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_oper(), target);
  }

  // repeated .service_layer.SLInterface Entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceNotifMsg)
  return target;
}

size_t SLInterfaceNotifMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceNotifMsg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .service_layer.SLInterface Entries = 2;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_oper());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceNotifMsg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceNotifMsg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceNotifMsg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceNotifMsg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceNotifMsg)
    MergeFrom(*source);
  }
}

void SLInterfaceNotifMsg::MergeFrom(const SLInterfaceNotifMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.oper() != 0) {
    _internal_set_oper(from._internal_oper());
  }
}

void SLInterfaceNotifMsg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceNotifMsg::CopyFrom(const SLInterfaceNotifMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceNotifMsg::IsInitialized() const {
  return true;
}

void SLInterfaceNotifMsg::InternalSwap(SLInterfaceNotifMsg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
  swap(oper_, other->oper_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceNotifMsg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceNotifMsgRes::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceNotifMsgRes_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  ::service_layer::_SLInterfaceNotifMsgRes_default_instance_._instance.get_mutable()->key_ = const_cast< ::service_layer::SLInterface*>(
      ::service_layer::SLInterface::internal_default_instance());
}
class SLInterfaceNotifMsgRes::_Internal {
 public:
  static const ::service_layer::SLErrorStatus& errstatus(const SLInterfaceNotifMsgRes* msg);
  static const ::service_layer::SLInterface& key(const SLInterfaceNotifMsgRes* msg);
};

const ::service_layer::SLErrorStatus&
SLInterfaceNotifMsgRes::_Internal::errstatus(const SLInterfaceNotifMsgRes* msg) {
  return *msg->errstatus_;
}
const ::service_layer::SLInterface&
SLInterfaceNotifMsgRes::_Internal::key(const SLInterfaceNotifMsgRes* msg) {
  return *msg->key_;
}
void SLInterfaceNotifMsgRes::clear_errstatus() {
  if (GetArena() == nullptr && errstatus_ != nullptr) {
    delete errstatus_;
  }
  errstatus_ = nullptr;
}
void SLInterfaceNotifMsgRes::clear_key() {
  if (GetArena() == nullptr && key_ != nullptr) {
    delete key_;
  }
  key_ = nullptr;
}
SLInterfaceNotifMsgRes::SLInterfaceNotifMsgRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceNotifMsgRes)
}
SLInterfaceNotifMsgRes::SLInterfaceNotifMsgRes(const SLInterfaceNotifMsgRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = nullptr;
  }
  if (from._internal_has_key()) {
    key_ = new ::service_layer::SLInterface(*from.key_);
  } else {
    key_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceNotifMsgRes)
}

void SLInterfaceNotifMsgRes::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SLInterfaceNotifMsgRes_sl_5finterface_2eproto.base);
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(key_));
}

SLInterfaceNotifMsgRes::~SLInterfaceNotifMsgRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceNotifMsgRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceNotifMsgRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete errstatus_;
  if (this != internal_default_instance()) delete key_;
}

void SLInterfaceNotifMsgRes::ArenaDtor(void* object) {
  SLInterfaceNotifMsgRes* _this = reinterpret_cast< SLInterfaceNotifMsgRes* >(object);
  (void)_this;
}
void SLInterfaceNotifMsgRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceNotifMsgRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceNotifMsgRes& SLInterfaceNotifMsgRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceNotifMsgRes_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceNotifMsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceNotifMsgRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && errstatus_ != nullptr) {
    delete errstatus_;
  }
  errstatus_ = nullptr;
  if (GetArena() == nullptr && key_ != nullptr) {
    delete key_;
  }
  key_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceNotifMsgRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_errstatus(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .service_layer.SLInterface Key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceNotifMsgRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceNotifMsgRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::errstatus(this), target, stream);
  }

  // .service_layer.SLInterface Key = 2;
  if (this->has_key()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::key(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceNotifMsgRes)
  return target;
}

size_t SLInterfaceNotifMsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceNotifMsgRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *errstatus_);
  }

  // .service_layer.SLInterface Key = 2;
  if (this->has_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *key_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceNotifMsgRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceNotifMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceNotifMsgRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceNotifMsgRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceNotifMsgRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceNotifMsgRes)
    MergeFrom(*source);
  }
}

void SLInterfaceNotifMsgRes::MergeFrom(const SLInterfaceNotifMsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceNotifMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    _internal_mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from._internal_errstatus());
  }
  if (from.has_key()) {
    _internal_mutable_key()->::service_layer::SLInterface::MergeFrom(from._internal_key());
  }
}

void SLInterfaceNotifMsgRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceNotifMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceNotifMsgRes::CopyFrom(const SLInterfaceNotifMsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceNotifMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceNotifMsgRes::IsInitialized() const {
  return true;
}

void SLInterfaceNotifMsgRes::InternalSwap(SLInterfaceNotifMsgRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLInterfaceNotifMsgRes, key_)
      + sizeof(SLInterfaceNotifMsgRes::key_)
      - PROTOBUF_FIELD_OFFSET(SLInterfaceNotifMsgRes, errstatus_)>(
          reinterpret_cast<char*>(&errstatus_),
          reinterpret_cast<char*>(&other->errstatus_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceNotifMsgRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SLInterfaceNotifMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLInterfaceNotifMsgRsp_default_instance_._instance.get_mutable()->statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
class SLInterfaceNotifMsgRsp::_Internal {
 public:
  static const ::service_layer::SLErrorStatus& statussummary(const SLInterfaceNotifMsgRsp* msg);
};

const ::service_layer::SLErrorStatus&
SLInterfaceNotifMsgRsp::_Internal::statussummary(const SLInterfaceNotifMsgRsp* msg) {
  return *msg->statussummary_;
}
void SLInterfaceNotifMsgRsp::clear_statussummary() {
  if (GetArena() == nullptr && statussummary_ != nullptr) {
    delete statussummary_;
  }
  statussummary_ = nullptr;
}
SLInterfaceNotifMsgRsp::SLInterfaceNotifMsgRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  results_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service_layer.SLInterfaceNotifMsgRsp)
}
SLInterfaceNotifMsgRsp::SLInterfaceNotifMsgRsp(const SLInterfaceNotifMsgRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      results_(from.results_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_statussummary()) {
    statussummary_ = new ::service_layer::SLErrorStatus(*from.statussummary_);
  } else {
    statussummary_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLInterfaceNotifMsgRsp)
}

void SLInterfaceNotifMsgRsp::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SLInterfaceNotifMsgRsp_sl_5finterface_2eproto.base);
  statussummary_ = nullptr;
}

SLInterfaceNotifMsgRsp::~SLInterfaceNotifMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLInterfaceNotifMsgRsp)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SLInterfaceNotifMsgRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete statussummary_;
}

void SLInterfaceNotifMsgRsp::ArenaDtor(void* object) {
  SLInterfaceNotifMsgRsp* _this = reinterpret_cast< SLInterfaceNotifMsgRsp* >(object);
  (void)_this;
}
void SLInterfaceNotifMsgRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLInterfaceNotifMsgRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SLInterfaceNotifMsgRsp& SLInterfaceNotifMsgRsp::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SLInterfaceNotifMsgRsp_sl_5finterface_2eproto.base);
  return *internal_default_instance();
}


void SLInterfaceNotifMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLInterfaceNotifMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArena() == nullptr && statussummary_ != nullptr) {
    delete statussummary_;
  }
  statussummary_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLInterfaceNotifMsgRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_layer.SLErrorStatus StatusSummary = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_statussummary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .service_layer.SLInterfaceNotifMsgRes Results = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_results(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SLInterfaceNotifMsgRsp::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLInterfaceNotifMsgRsp)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::statussummary(this), target, stream);
  }

  // repeated .service_layer.SLInterfaceNotifMsgRes Results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_results_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_results(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLInterfaceNotifMsgRsp)
  return target;
}

size_t SLInterfaceNotifMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLInterfaceNotifMsgRsp)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .service_layer.SLInterfaceNotifMsgRes Results = 2;
  total_size += 1UL * this->_internal_results_size();
  for (const auto& msg : this->results_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *statussummary_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SLInterfaceNotifMsgRsp::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLInterfaceNotifMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLInterfaceNotifMsgRsp* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SLInterfaceNotifMsgRsp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLInterfaceNotifMsgRsp)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLInterfaceNotifMsgRsp)
    MergeFrom(*source);
  }
}

void SLInterfaceNotifMsgRsp::MergeFrom(const SLInterfaceNotifMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLInterfaceNotifMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_statussummary()) {
    _internal_mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from._internal_statussummary());
  }
}

void SLInterfaceNotifMsgRsp::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLInterfaceNotifMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLInterfaceNotifMsgRsp::CopyFrom(const SLInterfaceNotifMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLInterfaceNotifMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLInterfaceNotifMsgRsp::IsInitialized() const {
  return true;
}

void SLInterfaceNotifMsgRsp::InternalSwap(SLInterfaceNotifMsgRsp* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  results_.InternalSwap(&other->results_);
  swap(statussummary_, other->statussummary_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLInterfaceNotifMsgRsp::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service_layer
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceGlobalsRegMsg* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceGlobalsRegMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceGlobalsRegMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceGlobalsRegMsgRsp* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceGlobalsRegMsgRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceGlobalsRegMsgRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceGlobalsGetMsg* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceGlobalsGetMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceGlobalsGetMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceGlobalsGetMsgRsp* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceGlobalsGetMsgRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceGlobalsGetMsgRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceGlobalsGetStatsMsgRsp* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceGlobalsGetStatsMsgRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceGlobalsGetStatsMsgRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceGetMsg* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceGetMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceGetMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceInfoMsg* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceInfoMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceInfoMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceGetMsgRsp* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceGetMsgRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceGetMsgRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceGetNotifMsg* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceGetNotifMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceGetNotifMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceNotif* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceNotif >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceNotif >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceNotifMsg* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceNotifMsg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceNotifMsg >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceNotifMsgRes* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceNotifMsgRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceNotifMsgRes >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLInterfaceNotifMsgRsp* Arena::CreateMaybeMessage< ::service_layer::SLInterfaceNotifMsgRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLInterfaceNotifMsgRsp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
