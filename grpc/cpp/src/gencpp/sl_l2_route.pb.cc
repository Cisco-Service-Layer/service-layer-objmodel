// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_l2_route.proto

#include "sl_l2_route.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace service_layer {
class SLL2GlobalsGetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2GlobalsGetMsg>
      _instance;
} _SLL2GlobalsGetMsg_default_instance_;
class SLL2GlobalsGetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2GlobalsGetMsgRsp>
      _instance;
} _SLL2GlobalsGetMsgRsp_default_instance_;
class SLL2RegMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2RegMsg>
      _instance;
} _SLL2RegMsg_default_instance_;
class SLL2RegMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2RegMsgRsp>
      _instance;
} _SLL2RegMsgRsp_default_instance_;
class SLL2BdRegMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2BdRegMsg>
      _instance;
} _SLL2BdRegMsg_default_instance_;
class SLL2BdRegResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2BdRegRes>
      _instance;
} _SLL2BdRegRes_default_instance_;
class SLL2BdRegMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2BdRegMsgRsp>
      _instance;
} _SLL2BdRegMsgRsp_default_instance_;
class SLL2RouteEsiDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2RouteEsi>
      _instance;
} _SLL2RouteEsi_default_instance_;
class SLL2RouteNhDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2RouteNh>
      _instance;
  const ::service_layer::SLInterface* nhinterface_;
  const ::service_layer::SLL2OverlayNh* nhoverlay_;
} _SLL2RouteNh_default_instance_;
class SLL2OverlayNhDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2OverlayNh>
      _instance;
} _SLL2OverlayNh_default_instance_;
class SLL2MacRouteKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2MacRouteKey>
      _instance;
} _SLL2MacRouteKey_default_instance_;
class SLL2MacRouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2MacRoute>
      _instance;
} _SLL2MacRoute_default_instance_;
class SLL2ImetRouteKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2ImetRouteKey>
      _instance;
} _SLL2ImetRouteKey_default_instance_;
class SLL2ImetRouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2ImetRoute>
      _instance;
} _SLL2ImetRoute_default_instance_;
class SLL2RouteKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2RouteKey>
      _instance;
  const ::service_layer::SLL2MacRouteKey* mackey_;
  const ::service_layer::SLL2ImetRouteKey* imetkey_;
} _SLL2RouteKey_default_instance_;
class SLL2RouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2Route>
      _instance;
  const ::service_layer::SLL2MacRoute* macroute_;
  const ::service_layer::SLL2ImetRoute* imetroute_;
} _SLL2Route_default_instance_;
class SLL2RouteMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2RouteMsg>
      _instance;
} _SLL2RouteMsg_default_instance_;
class SLL2RouteResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2RouteRes>
      _instance;
} _SLL2RouteRes_default_instance_;
class SLL2RouteMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2RouteMsgRsp>
      _instance;
} _SLL2RouteMsgRsp_default_instance_;
class SLL2GetNotifMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2GetNotifMsg>
      _instance;
  bool bdall_;
  ::google::protobuf::internal::ArenaStringPtr bdname_;
} _SLL2GetNotifMsg_default_instance_;
class SLL2RouteNotifDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2RouteNotif>
      _instance;
} _SLL2RouteNotif_default_instance_;
class SLL2BdStateInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2BdStateInfo>
      _instance;
} _SLL2BdStateInfo_default_instance_;
class SLL2NotifStatusMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2NotifStatusMsg>
      _instance;
} _SLL2NotifStatusMsg_default_instance_;
class SLL2NotifDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLL2Notif>
      _instance;
  const ::service_layer::SLErrorStatus* errstatus_;
  const ::service_layer::SLL2NotifStatusMsg* notifstatus_;
  const ::service_layer::SLL2BdStateInfo* bdstateinfo_;
  const ::service_layer::SLL2RouteNotif* route_;
} _SLL2Notif_default_instance_;
}  // namespace service_layer
namespace protobuf_sl_5fl2_5froute_2eproto {
void InitDefaultsSLL2GlobalsGetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLL2GlobalsGetMsg_default_instance_;
    new (ptr) ::service_layer::SLL2GlobalsGetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2GlobalsGetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLL2GlobalsGetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2GlobalsGetMsgImpl);
}

void InitDefaultsSLL2GlobalsGetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLL2GlobalsGetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLL2GlobalsGetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2GlobalsGetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLL2GlobalsGetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2GlobalsGetMsgRspImpl);
}

void InitDefaultsSLL2RegMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLL2RegMsg_default_instance_;
    new (ptr) ::service_layer::SLL2RegMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2RegMsg::InitAsDefaultInstance();
}

void InitDefaultsSLL2RegMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2RegMsgImpl);
}

void InitDefaultsSLL2RegMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLL2RegMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLL2RegMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2RegMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLL2RegMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2RegMsgRspImpl);
}

void InitDefaultsSLL2BdRegMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLL2BdRegMsg_default_instance_;
    new (ptr) ::service_layer::SLL2BdRegMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2BdRegMsg::InitAsDefaultInstance();
}

void InitDefaultsSLL2BdRegMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2BdRegMsgImpl);
}

void InitDefaultsSLL2BdRegResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLL2BdRegRes_default_instance_;
    new (ptr) ::service_layer::SLL2BdRegRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2BdRegRes::InitAsDefaultInstance();
}

void InitDefaultsSLL2BdRegRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2BdRegResImpl);
}

void InitDefaultsSLL2BdRegMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2BdRegRes();
  {
    void* ptr = &::service_layer::_SLL2BdRegMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLL2BdRegMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2BdRegMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLL2BdRegMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2BdRegMsgRspImpl);
}

void InitDefaultsSLL2RouteEsiImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLL2RouteEsi_default_instance_;
    new (ptr) ::service_layer::SLL2RouteEsi();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2RouteEsi::InitAsDefaultInstance();
}

void InitDefaultsSLL2RouteEsi() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2RouteEsiImpl);
}

void InitDefaultsSLL2RouteNhImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLInterface();
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2OverlayNh();
  {
    void* ptr = &::service_layer::_SLL2RouteNh_default_instance_;
    new (ptr) ::service_layer::SLL2RouteNh();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2RouteNh::InitAsDefaultInstance();
}

void InitDefaultsSLL2RouteNh() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2RouteNhImpl);
}

void InitDefaultsSLL2OverlayNhImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLIpAddress();
  {
    void* ptr = &::service_layer::_SLL2OverlayNh_default_instance_;
    new (ptr) ::service_layer::SLL2OverlayNh();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2OverlayNh::InitAsDefaultInstance();
}

void InitDefaultsSLL2OverlayNh() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2OverlayNhImpl);
}

void InitDefaultsSLL2MacRouteKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLIpAddress();
  {
    void* ptr = &::service_layer::_SLL2MacRouteKey_default_instance_;
    new (ptr) ::service_layer::SLL2MacRouteKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2MacRouteKey::InitAsDefaultInstance();
}

void InitDefaultsSLL2MacRouteKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2MacRouteKeyImpl);
}

void InitDefaultsSLL2MacRouteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2MacRouteKey();
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteEsi();
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteNh();
  {
    void* ptr = &::service_layer::_SLL2MacRoute_default_instance_;
    new (ptr) ::service_layer::SLL2MacRoute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2MacRoute::InitAsDefaultInstance();
}

void InitDefaultsSLL2MacRoute() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2MacRouteImpl);
}

void InitDefaultsSLL2ImetRouteKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLIpAddress();
  {
    void* ptr = &::service_layer::_SLL2ImetRouteKey_default_instance_;
    new (ptr) ::service_layer::SLL2ImetRouteKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2ImetRouteKey::InitAsDefaultInstance();
}

void InitDefaultsSLL2ImetRouteKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2ImetRouteKeyImpl);
}

void InitDefaultsSLL2ImetRouteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2ImetRouteKey();
  {
    void* ptr = &::service_layer::_SLL2ImetRoute_default_instance_;
    new (ptr) ::service_layer::SLL2ImetRoute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2ImetRoute::InitAsDefaultInstance();
}

void InitDefaultsSLL2ImetRoute() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2ImetRouteImpl);
}

void InitDefaultsSLL2RouteKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2MacRouteKey();
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2ImetRouteKey();
  {
    void* ptr = &::service_layer::_SLL2RouteKey_default_instance_;
    new (ptr) ::service_layer::SLL2RouteKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2RouteKey::InitAsDefaultInstance();
}

void InitDefaultsSLL2RouteKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2RouteKeyImpl);
}

void InitDefaultsSLL2RouteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2MacRoute();
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2ImetRoute();
  {
    void* ptr = &::service_layer::_SLL2Route_default_instance_;
    new (ptr) ::service_layer::SLL2Route();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2Route::InitAsDefaultInstance();
}

void InitDefaultsSLL2Route() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2RouteImpl);
}

void InitDefaultsSLL2RouteMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2Route();
  {
    void* ptr = &::service_layer::_SLL2RouteMsg_default_instance_;
    new (ptr) ::service_layer::SLL2RouteMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2RouteMsg::InitAsDefaultInstance();
}

void InitDefaultsSLL2RouteMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2RouteMsgImpl);
}

void InitDefaultsSLL2RouteResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteKey();
  {
    void* ptr = &::service_layer::_SLL2RouteRes_default_instance_;
    new (ptr) ::service_layer::SLL2RouteRes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2RouteRes::InitAsDefaultInstance();
}

void InitDefaultsSLL2RouteRes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2RouteResImpl);
}

void InitDefaultsSLL2RouteMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteRes();
  {
    void* ptr = &::service_layer::_SLL2RouteMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLL2RouteMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2RouteMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLL2RouteMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2RouteMsgRspImpl);
}

void InitDefaultsSLL2GetNotifMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLL2GetNotifMsg_default_instance_;
    new (ptr) ::service_layer::SLL2GetNotifMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2GetNotifMsg::InitAsDefaultInstance();
}

void InitDefaultsSLL2GetNotifMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2GetNotifMsgImpl);
}

void InitDefaultsSLL2RouteNotifImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2Route();
  {
    void* ptr = &::service_layer::_SLL2RouteNotif_default_instance_;
    new (ptr) ::service_layer::SLL2RouteNotif();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2RouteNotif::InitAsDefaultInstance();
}

void InitDefaultsSLL2RouteNotif() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2RouteNotifImpl);
}

void InitDefaultsSLL2BdStateInfoImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLL2BdStateInfo_default_instance_;
    new (ptr) ::service_layer::SLL2BdStateInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2BdStateInfo::InitAsDefaultInstance();
}

void InitDefaultsSLL2BdStateInfo() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2BdStateInfoImpl);
}

void InitDefaultsSLL2NotifStatusMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLL2NotifStatusMsg_default_instance_;
    new (ptr) ::service_layer::SLL2NotifStatusMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2NotifStatusMsg::InitAsDefaultInstance();
}

void InitDefaultsSLL2NotifStatusMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2NotifStatusMsgImpl);
}

void InitDefaultsSLL2NotifImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2NotifStatusMsg();
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2BdStateInfo();
  protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteNotif();
  {
    void* ptr = &::service_layer::_SLL2Notif_default_instance_;
    new (ptr) ::service_layer::SLL2Notif();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLL2Notif::InitAsDefaultInstance();
}

void InitDefaultsSLL2Notif() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLL2NotifImpl);
}

::google::protobuf::Metadata file_level_metadata[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2GlobalsGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2GlobalsGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2GlobalsGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2GlobalsGetMsgRsp, maxbdregperbdregmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2GlobalsGetMsgRsp, maxrouteperroutemsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RegMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RegMsg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RegMsg, admindistance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RegMsg, purgeintervalseconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RegMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RegMsgRsp, regstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdRegMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdRegMsg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdRegMsg, bdregname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdRegRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdRegRes, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdRegRes, bdname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdRegMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdRegMsgRsp, statussummary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdRegMsgRsp, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteEsi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteEsi, esi_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteNh, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteNh, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteNh, nhtype_),
  offsetof(::service_layer::SLL2RouteNhDefaultTypeInternal, nhinterface_),
  offsetof(::service_layer::SLL2RouteNhDefaultTypeInternal, nhoverlay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteNh, NhData_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2OverlayNh, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2OverlayNh, overlaynhip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2OverlayNh, overlaynhencap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2OverlayNh, overlaynhlabel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2OverlayNh, overlaynhl3label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2OverlayNh, overlaynhroutermac_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2MacRouteKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2MacRouteKey, macaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2MacRouteKey, ipaddress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2MacRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2MacRoute, routekey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2MacRoute, sequencenum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2MacRoute, macesi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2MacRoute, nexthoplist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2ImetRouteKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2ImetRouteKey, ethtagid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2ImetRouteKey, ipaddress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2ImetRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2ImetRoute, routekey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2ImetRoute, encaptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2ImetRoute, label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2ImetRoute, tunneltype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2ImetRoute, tunnelidlength_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2ImetRoute, tunnelidvalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteKey, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteKey, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteKey, bdname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteKey, type_),
  offsetof(::service_layer::SLL2RouteKeyDefaultTypeInternal, mackey_),
  offsetof(::service_layer::SLL2RouteKeyDefaultTypeInternal, imetkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteKey, Event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2Route, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2Route, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2Route, bdname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2Route, type_),
  offsetof(::service_layer::SLL2RouteDefaultTypeInternal, macroute_),
  offsetof(::service_layer::SLL2RouteDefaultTypeInternal, imetroute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2Route, Event_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteMsg, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteMsg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteMsg, routes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteRes, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteRes, routekey_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteMsgRsp, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteMsgRsp, statussummary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteMsgRsp, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2GetNotifMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2GetNotifMsg, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2GetNotifMsg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2GetNotifMsg, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2GetNotifMsg, getnotifeof_),
  offsetof(::service_layer::SLL2GetNotifMsgDefaultTypeInternal, bdall_),
  offsetof(::service_layer::SLL2GetNotifMsgDefaultTypeInternal, bdname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2GetNotifMsg, Request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteNotif, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteNotif, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2RouteNotif, routes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdStateInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdStateInfo, bdname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2BdStateInfo, bdstate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2NotifStatusMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2NotifStatusMsg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2NotifStatusMsg, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2NotifStatusMsg, bdname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2NotifStatusMsg, notifstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2Notif, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2Notif, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2Notif, eventtype_),
  offsetof(::service_layer::SLL2NotifDefaultTypeInternal, errstatus_),
  offsetof(::service_layer::SLL2NotifDefaultTypeInternal, notifstatus_),
  offsetof(::service_layer::SLL2NotifDefaultTypeInternal, bdstateinfo_),
  offsetof(::service_layer::SLL2NotifDefaultTypeInternal, route_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLL2Notif, Event_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::service_layer::SLL2GlobalsGetMsg)},
  { 5, -1, sizeof(::service_layer::SLL2GlobalsGetMsgRsp)},
  { 13, -1, sizeof(::service_layer::SLL2RegMsg)},
  { 21, -1, sizeof(::service_layer::SLL2RegMsgRsp)},
  { 27, -1, sizeof(::service_layer::SLL2BdRegMsg)},
  { 34, -1, sizeof(::service_layer::SLL2BdRegRes)},
  { 41, -1, sizeof(::service_layer::SLL2BdRegMsgRsp)},
  { 48, -1, sizeof(::service_layer::SLL2RouteEsi)},
  { 54, -1, sizeof(::service_layer::SLL2RouteNh)},
  { 63, -1, sizeof(::service_layer::SLL2OverlayNh)},
  { 73, -1, sizeof(::service_layer::SLL2MacRouteKey)},
  { 80, -1, sizeof(::service_layer::SLL2MacRoute)},
  { 89, -1, sizeof(::service_layer::SLL2ImetRouteKey)},
  { 96, -1, sizeof(::service_layer::SLL2ImetRoute)},
  { 107, -1, sizeof(::service_layer::SLL2RouteKey)},
  { 117, -1, sizeof(::service_layer::SLL2Route)},
  { 127, -1, sizeof(::service_layer::SLL2RouteMsg)},
  { 135, -1, sizeof(::service_layer::SLL2RouteRes)},
  { 142, -1, sizeof(::service_layer::SLL2RouteMsgRsp)},
  { 150, -1, sizeof(::service_layer::SLL2GetNotifMsg)},
  { 161, -1, sizeof(::service_layer::SLL2RouteNotif)},
  { 168, -1, sizeof(::service_layer::SLL2BdStateInfo)},
  { 175, -1, sizeof(::service_layer::SLL2NotifStatusMsg)},
  { 184, -1, sizeof(::service_layer::SLL2Notif)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2GlobalsGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2GlobalsGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2RegMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2RegMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2BdRegMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2BdRegRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2BdRegMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2RouteEsi_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2RouteNh_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2OverlayNh_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2MacRouteKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2MacRoute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2ImetRouteKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2ImetRoute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2RouteKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2Route_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2RouteMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2RouteRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2RouteMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2GetNotifMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2RouteNotif_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2BdStateInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2NotifStatusMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLL2Notif_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sl_l2_route.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\021sl_l2_route.proto\022\rservice_layer\032\025sl_c"
      "ommon_types.proto\"\023\n\021SLL2GlobalsGetMsg\"\201"
      "\001\n\024SLL2GlobalsGetMsgRsp\022/\n\tErrStatus\030\001 \001"
      "(\0132\034.service_layer.SLErrorStatus\022\033\n\023MaxB"
      "dRegPerBdRegmsg\030\002 \001(\r\022\033\n\023MaxRoutePerRout"
      "emsg\030\003 \001(\r\"g\n\nSLL2RegMsg\022$\n\004Oper\030\001 \001(\0162\026"
      ".service_layer.SLRegOp\022\025\n\rAdminDistance\030"
      "\002 \001(\r\022\034\n\024PurgeIntervalSeconds\030\003 \001(\r\"@\n\rS"
      "LL2RegMsgRsp\022/\n\tRegStatus\030\001 \001(\0132\034.servic"
      "e_layer.SLErrorStatus\"G\n\014SLL2BdRegMsg\022$\n"
      "\004Oper\030\001 \001(\0162\026.service_layer.SLRegOp\022\021\n\tB"
      "dRegName\030\002 \003(\t\"O\n\014SLL2BdRegRes\022/\n\tErrSta"
      "tus\030\001 \001(\0132\034.service_layer.SLErrorStatus\022"
      "\016\n\006BdName\030\002 \001(\t\"t\n\017SLL2BdRegMsgRsp\0223\n\rSt"
      "atusSummary\030\001 \001(\0132\034.service_layer.SLErro"
      "rStatus\022,\n\007Results\030\002 \003(\0132\033.service_layer"
      ".SLL2BdRegRes\"\033\n\014SLL2RouteEsi\022\013\n\003Esi\030\001 \001"
      "(\014\"\221\002\n\013SLL2RouteNh\022:\n\006NhType\030\001 \001(\0162*.ser"
      "vice_layer.SLL2RouteNh.SLL2RouteNhType\0221"
      "\n\013NhInterface\030\002 \001(\0132\032.service_layer.SLIn"
      "terfaceH\000\0221\n\tNhOverlay\030\003 \001(\0132\034.service_l"
      "ayer.SLL2OverlayNhH\000\"V\n\017SLL2RouteNhType\022"
      "\025\n\021SL_L2_NH_RESERVED\020\000\022\026\n\022SL_L2_NH_INTER"
      "FACE\020\001\022\024\n\020SL_L2_NH_OVERLAY\020\002B\010\n\006NhData\"\302"
      "\001\n\rSLL2OverlayNh\022/\n\013OverlayNhIp\030\001 \001(\0132\032."
      "service_layer.SLIpAddress\0222\n\016OverlayNhEn"
      "cap\030\002 \001(\0162\032.service_layer.SLEncapType\022\026\n"
      "\016OverlayNhLabel\030\003 \001(\r\022\030\n\020OverlayNhL3Labe"
      "l\030\004 \003(\r\022\032\n\022OverlayNhRouterMac\030\005 \001(\014\"T\n\017S"
      "LL2MacRouteKey\022\022\n\nMacAddress\030\001 \001(\014\022-\n\tIp"
      "Address\030\002 \001(\0132\032.service_layer.SLIpAddres"
      "s\"\263\001\n\014SLL2MacRoute\0220\n\010RouteKey\030\001 \001(\0132\036.s"
      "ervice_layer.SLL2MacRouteKey\022\023\n\013Sequence"
      "Num\030\002 \001(\r\022+\n\006MacEsi\030\003 \001(\0132\033.service_laye"
      "r.SLL2RouteEsi\022/\n\013NextHopList\030\004 \003(\0132\032.se"
      "rvice_layer.SLL2RouteNh\"S\n\020SLL2ImetRoute"
      "Key\022\020\n\010EthTagId\030\001 \001(\r\022-\n\tIpAddress\030\002 \001(\013"
      "2\032.service_layer.SLIpAddress\"\307\003\n\rSLL2Ime"
      "tRoute\0221\n\010RouteKey\030\001 \001(\0132\037.service_layer"
      ".SLL2ImetRouteKey\022-\n\tEncapType\030\002 \001(\0162\032.s"
      "ervice_layer.SLEncapType\022\r\n\005Label\030\003 \001(\r\022"
      "\?\n\nTunnelType\030\004 \001(\0162+.service_layer.SLL2"
      "ImetRoute.PMSITunnelType\022\026\n\016TunnelIdLeng"
      "th\030\005 \001(\r\022\025\n\rTunnelIdValue\030\006 \001(\014\"\324\001\n\016PMSI"
      "TunnelType\022\022\n\016PMSI_NO_TUNNEL\020\000\022\030\n\024PMSI_R"
      "SVPP2MP_TUNNEL\020\001\022\030\n\024PMSI_MLDPP2MP_TUNNEL"
      "\020\002\022\026\n\022PMSI_PIMSSM_TUNNEL\020\003\022\025\n\021PMSI_PIMSM"
      "_TUNNEL\020\004\022\030\n\024PMSI_PIMBIDIR_TUNNEL\020\005\022\026\n\022P"
      "MSI_INGREP_TUNNEL\020\006\022\031\n\025PMSI_MLDPMP2MP_TU"
      "NNEL\020\007\"\271\001\n\014SLL2RouteKey\022\016\n\006BdName\030\001 \001(\t\022"
      "*\n\004Type\030\002 \001(\0162\034.service_layer.SLL2RouteT"
      "ype\0220\n\006MacKey\030\003 \001(\0132\036.service_layer.SLL2"
      "MacRouteKeyH\000\0222\n\007ImetKey\030\004 \001(\0132\037.service"
      "_layer.SLL2ImetRouteKeyH\000B\007\n\005Event\"\264\001\n\tS"
      "LL2Route\022\016\n\006BdName\030\001 \001(\t\022*\n\004Type\030\002 \001(\0162\034"
      ".service_layer.SLL2RouteType\022/\n\010MacRoute"
      "\030\003 \001(\0132\033.service_layer.SLL2MacRouteH\000\0221\n"
      "\tImetRoute\030\004 \001(\0132\034.service_layer.SLL2Ime"
      "tRouteH\000B\007\n\005Event\"u\n\014SLL2RouteMsg\022\022\n\nCor"
      "relator\030\001 \001(\004\022\'\n\004Oper\030\002 \001(\0162\031.service_la"
      "yer.SLObjectOp\022(\n\006Routes\030\003 \003(\0132\030.service"
      "_layer.SLL2Route\"n\n\014SLL2RouteRes\022/\n\tErrS"
      "tatus\030\001 \001(\0132\034.service_layer.SLErrorStatu"
      "s\022-\n\010RouteKey\030\002 \001(\0132\033.service_layer.SLL2"
      "RouteKey\"\210\001\n\017SLL2RouteMsgRsp\022\022\n\nCorrelat"
      "or\030\001 \001(\004\0223\n\rStatusSummary\030\002 \001(\0132\034.servic"
      "e_layer.SLErrorStatus\022,\n\007Results\030\003 \003(\0132\033"
      ".service_layer.SLL2RouteRes\"\220\001\n\017SLL2GetN"
      "otifMsg\022&\n\004Oper\030\001 \001(\0162\030.service_layer.SL"
      "NotifOp\022\022\n\nCorrelator\030\002 \001(\004\022\023\n\013GetNotifE"
      "of\030\003 \001(\010\022\017\n\005BdAll\030\004 \001(\010H\000\022\020\n\006BdName\030\005 \001("
      "\tH\000B\t\n\007Request\"c\n\016SLL2RouteNotif\022\'\n\004Oper"
      "\030\001 \001(\0162\031.service_layer.SLObjectOp\022(\n\006Rou"
      "tes\030\002 \001(\0132\030.service_layer.SLL2Route\"\343\001\n\017"
      "SLL2BdStateInfo\022\016\n\006BdName\030\001 \001(\t\022;\n\007BdSta"
      "te\030\002 \001(\0162*.service_layer.SLL2BdStateInfo"
      ".SLL2BdState\"\202\001\n\013SLL2BdState\022\033\n\027SL_L2_BD"
      "_STATE_RESERVED\020\000\022\030\n\024SL_L2_BD_STATE_ADDE"
      "D\020\001\022\032\n\026SL_L2_BD_STATE_DELETED\020\002\022 \n\034SL_L2"
      "_BD_STATE_REPLAY_NEEDED\020\003\"\223\001\n\022SLL2NotifS"
      "tatusMsg\022&\n\004Oper\030\001 \001(\0162\030.service_layer.S"
      "LNotifOp\022\022\n\nCorrelator\030\002 \001(\004\022\016\n\006BdName\030\003"
      " \001(\t\0221\n\013NotifStatus\030\004 \001(\0132\034.service_laye"
      "r.SLErrorStatus\"\231\002\n\tSLL2Notif\022/\n\tEventTy"
      "pe\030\001 \001(\0162\034.service_layer.SLL2NotifType\0221"
      "\n\tErrStatus\030\002 \001(\0132\034.service_layer.SLErro"
      "rStatusH\000\0228\n\013NotifStatus\030\003 \001(\0132!.service"
      "_layer.SLL2NotifStatusMsgH\000\0225\n\013BdStateIn"
      "fo\030\004 \001(\0132\036.service_layer.SLL2BdStateInfo"
      "H\000\022.\n\005Route\030\005 \001(\0132\035.service_layer.SLL2Ro"
      "uteNotifH\000B\007\n\005Event*T\n\rSLL2RouteType\022\030\n\024"
      "SL_L2_ROUTE_RESERVED\020\000\022\023\n\017SL_L2_ROUTE_MA"
      "C\020\001\022\024\n\020SL_L2_ROUTE_IMET\020\002*\226\002\n\rSLL2NotifT"
      "ype\022\035\n\031SL_L2_EVENT_TYPE_RESERVED\020\000\022\032\n\026SL"
      "_L2_EVENT_TYPE_ERROR\020\001\022\033\n\027SL_L2_EVENT_TY"
      "PE_STATUS\020\002\022!\n\035SL_L2_EVENT_TYPE_START_MA"
      "RKER\020\003\022\035\n\031SL_L2_EVENT_TYPE_BD_STATE\020\004\022(\n"
      "$SL_L2_EVENT_TYPE_BD_STATE_END_MARKER\020\005\022"
      "\032\n\026SL_L2_EVENT_TYPE_ROUTE\020\006\022%\n!SL_L2_EVE"
      "NT_TYPE_ROUTE_END_MARKER\020\0072\353\003\n\010SLL2Oper\022"
      "W\n\016SLL2GlobalsGet\022 .service_layer.SLL2Gl"
      "obalsGetMsg\032#.service_layer.SLL2GlobalsG"
      "etMsgRsp\022D\n\tSLL2RegOp\022\031.service_layer.SL"
      "L2RegMsg\032\034.service_layer.SLL2RegMsgRsp\022J"
      "\n\013SLL2BdRegOp\022\033.service_layer.SLL2BdRegM"
      "sg\032\036.service_layer.SLL2BdRegMsgRsp\022J\n\013SL"
      "L2RouteOp\022\033.service_layer.SLL2RouteMsg\032\036"
      ".service_layer.SLL2RouteMsgRsp\022T\n\021SLL2Ro"
      "uteOpStream\022\033.service_layer.SLL2RouteMsg"
      "\032\036.service_layer.SLL2RouteMsgRsp(\0010\001\022R\n\022"
      "SLL2GetNotifStream\022\036.service_layer.SLL2G"
      "etNotifMsg\032\030.service_layer.SLL2Notif(\0010\001"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4488);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_l2_route.proto", &protobuf_RegisterTypes);
  ::protobuf_sl_5fcommon_5ftypes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sl_5fl2_5froute_2eproto
namespace service_layer {
const ::google::protobuf::EnumDescriptor* SLL2RouteNh_SLL2RouteNhType_descriptor() {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fl2_5froute_2eproto::file_level_enum_descriptors[0];
}
bool SLL2RouteNh_SLL2RouteNhType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SLL2RouteNh_SLL2RouteNhType SLL2RouteNh::SL_L2_NH_RESERVED;
const SLL2RouteNh_SLL2RouteNhType SLL2RouteNh::SL_L2_NH_INTERFACE;
const SLL2RouteNh_SLL2RouteNhType SLL2RouteNh::SL_L2_NH_OVERLAY;
const SLL2RouteNh_SLL2RouteNhType SLL2RouteNh::SLL2RouteNhType_MIN;
const SLL2RouteNh_SLL2RouteNhType SLL2RouteNh::SLL2RouteNhType_MAX;
const int SLL2RouteNh::SLL2RouteNhType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SLL2ImetRoute_PMSITunnelType_descriptor() {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fl2_5froute_2eproto::file_level_enum_descriptors[1];
}
bool SLL2ImetRoute_PMSITunnelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SLL2ImetRoute_PMSITunnelType SLL2ImetRoute::PMSI_NO_TUNNEL;
const SLL2ImetRoute_PMSITunnelType SLL2ImetRoute::PMSI_RSVPP2MP_TUNNEL;
const SLL2ImetRoute_PMSITunnelType SLL2ImetRoute::PMSI_MLDPP2MP_TUNNEL;
const SLL2ImetRoute_PMSITunnelType SLL2ImetRoute::PMSI_PIMSSM_TUNNEL;
const SLL2ImetRoute_PMSITunnelType SLL2ImetRoute::PMSI_PIMSM_TUNNEL;
const SLL2ImetRoute_PMSITunnelType SLL2ImetRoute::PMSI_PIMBIDIR_TUNNEL;
const SLL2ImetRoute_PMSITunnelType SLL2ImetRoute::PMSI_INGREP_TUNNEL;
const SLL2ImetRoute_PMSITunnelType SLL2ImetRoute::PMSI_MLDPMP2MP_TUNNEL;
const SLL2ImetRoute_PMSITunnelType SLL2ImetRoute::PMSITunnelType_MIN;
const SLL2ImetRoute_PMSITunnelType SLL2ImetRoute::PMSITunnelType_MAX;
const int SLL2ImetRoute::PMSITunnelType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SLL2BdStateInfo_SLL2BdState_descriptor() {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fl2_5froute_2eproto::file_level_enum_descriptors[2];
}
bool SLL2BdStateInfo_SLL2BdState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SLL2BdStateInfo_SLL2BdState SLL2BdStateInfo::SL_L2_BD_STATE_RESERVED;
const SLL2BdStateInfo_SLL2BdState SLL2BdStateInfo::SL_L2_BD_STATE_ADDED;
const SLL2BdStateInfo_SLL2BdState SLL2BdStateInfo::SL_L2_BD_STATE_DELETED;
const SLL2BdStateInfo_SLL2BdState SLL2BdStateInfo::SL_L2_BD_STATE_REPLAY_NEEDED;
const SLL2BdStateInfo_SLL2BdState SLL2BdStateInfo::SLL2BdState_MIN;
const SLL2BdStateInfo_SLL2BdState SLL2BdStateInfo::SLL2BdState_MAX;
const int SLL2BdStateInfo::SLL2BdState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* SLL2RouteType_descriptor() {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fl2_5froute_2eproto::file_level_enum_descriptors[3];
}
bool SLL2RouteType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SLL2NotifType_descriptor() {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5fl2_5froute_2eproto::file_level_enum_descriptors[4];
}
bool SLL2NotifType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SLL2GlobalsGetMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2GlobalsGetMsg::SLL2GlobalsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2GlobalsGetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2GlobalsGetMsg)
}
SLL2GlobalsGetMsg::SLL2GlobalsGetMsg(const SLL2GlobalsGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2GlobalsGetMsg)
}

void SLL2GlobalsGetMsg::SharedCtor() {
  _cached_size_ = 0;
}

SLL2GlobalsGetMsg::~SLL2GlobalsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2GlobalsGetMsg)
  SharedDtor();
}

void SLL2GlobalsGetMsg::SharedDtor() {
}

void SLL2GlobalsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2GlobalsGetMsg::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2GlobalsGetMsg& SLL2GlobalsGetMsg::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2GlobalsGetMsg();
  return *internal_default_instance();
}

SLL2GlobalsGetMsg* SLL2GlobalsGetMsg::New(::google::protobuf::Arena* arena) const {
  SLL2GlobalsGetMsg* n = new SLL2GlobalsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2GlobalsGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2GlobalsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SLL2GlobalsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2GlobalsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2GlobalsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2GlobalsGetMsg)
  return false;
#undef DO_
}

void SLL2GlobalsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2GlobalsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2GlobalsGetMsg)
}

::google::protobuf::uint8* SLL2GlobalsGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2GlobalsGetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2GlobalsGetMsg)
  return target;
}

size_t SLL2GlobalsGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2GlobalsGetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2GlobalsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2GlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2GlobalsGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2GlobalsGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2GlobalsGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2GlobalsGetMsg)
    MergeFrom(*source);
  }
}

void SLL2GlobalsGetMsg::MergeFrom(const SLL2GlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2GlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SLL2GlobalsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2GlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2GlobalsGetMsg::CopyFrom(const SLL2GlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2GlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2GlobalsGetMsg::IsInitialized() const {
  return true;
}

void SLL2GlobalsGetMsg::Swap(SLL2GlobalsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2GlobalsGetMsg::InternalSwap(SLL2GlobalsGetMsg* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2GlobalsGetMsg::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2GlobalsGetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLL2GlobalsGetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLL2GlobalsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2GlobalsGetMsgRsp::kErrStatusFieldNumber;
const int SLL2GlobalsGetMsgRsp::kMaxBdRegPerBdRegmsgFieldNumber;
const int SLL2GlobalsGetMsgRsp::kMaxRoutePerRoutemsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2GlobalsGetMsgRsp::SLL2GlobalsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2GlobalsGetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2GlobalsGetMsgRsp)
}
SLL2GlobalsGetMsgRsp::SLL2GlobalsGetMsgRsp(const SLL2GlobalsGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&maxbdregperbdregmsg_, &from.maxbdregperbdregmsg_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxrouteperroutemsg_) -
    reinterpret_cast<char*>(&maxbdregperbdregmsg_)) + sizeof(maxrouteperroutemsg_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2GlobalsGetMsgRsp)
}

void SLL2GlobalsGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxrouteperroutemsg_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(maxrouteperroutemsg_));
  _cached_size_ = 0;
}

SLL2GlobalsGetMsgRsp::~SLL2GlobalsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2GlobalsGetMsgRsp)
  SharedDtor();
}

void SLL2GlobalsGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLL2GlobalsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2GlobalsGetMsgRsp::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2GlobalsGetMsgRsp& SLL2GlobalsGetMsgRsp::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2GlobalsGetMsgRsp();
  return *internal_default_instance();
}

SLL2GlobalsGetMsgRsp* SLL2GlobalsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLL2GlobalsGetMsgRsp* n = new SLL2GlobalsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2GlobalsGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2GlobalsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&maxbdregperbdregmsg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxrouteperroutemsg_) -
      reinterpret_cast<char*>(&maxbdregperbdregmsg_)) + sizeof(maxrouteperroutemsg_));
  _internal_metadata_.Clear();
}

bool SLL2GlobalsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2GlobalsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxBdRegPerBdRegmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxbdregperbdregmsg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxRoutePerRoutemsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxrouteperroutemsg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2GlobalsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2GlobalsGetMsgRsp)
  return false;
#undef DO_
}

void SLL2GlobalsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2GlobalsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint32 MaxBdRegPerBdRegmsg = 2;
  if (this->maxbdregperbdregmsg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxbdregperbdregmsg(), output);
  }

  // uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxrouteperroutemsg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2GlobalsGetMsgRsp)
}

::google::protobuf::uint8* SLL2GlobalsGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2GlobalsGetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // uint32 MaxBdRegPerBdRegmsg = 2;
  if (this->maxbdregperbdregmsg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxbdregperbdregmsg(), target);
  }

  // uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxrouteperroutemsg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2GlobalsGetMsgRsp)
  return target;
}

size_t SLL2GlobalsGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2GlobalsGetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint32 MaxBdRegPerBdRegmsg = 2;
  if (this->maxbdregperbdregmsg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxbdregperbdregmsg());
  }

  // uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxrouteperroutemsg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2GlobalsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2GlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2GlobalsGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2GlobalsGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2GlobalsGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2GlobalsGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLL2GlobalsGetMsgRsp::MergeFrom(const SLL2GlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2GlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.maxbdregperbdregmsg() != 0) {
    set_maxbdregperbdregmsg(from.maxbdregperbdregmsg());
  }
  if (from.maxrouteperroutemsg() != 0) {
    set_maxrouteperroutemsg(from.maxrouteperroutemsg());
  }
}

void SLL2GlobalsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2GlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2GlobalsGetMsgRsp::CopyFrom(const SLL2GlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2GlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2GlobalsGetMsgRsp::IsInitialized() const {
  return true;
}

void SLL2GlobalsGetMsgRsp::Swap(SLL2GlobalsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2GlobalsGetMsgRsp::InternalSwap(SLL2GlobalsGetMsgRsp* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(maxbdregperbdregmsg_, other->maxbdregperbdregmsg_);
  swap(maxrouteperroutemsg_, other->maxrouteperroutemsg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2GlobalsGetMsgRsp::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2RegMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2RegMsg::kOperFieldNumber;
const int SLL2RegMsg::kAdminDistanceFieldNumber;
const int SLL2RegMsg::kPurgeIntervalSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2RegMsg::SLL2RegMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RegMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2RegMsg)
}
SLL2RegMsg::SLL2RegMsg(const SLL2RegMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&oper_, &from.oper_,
    static_cast<size_t>(reinterpret_cast<char*>(&purgeintervalseconds_) -
    reinterpret_cast<char*>(&oper_)) + sizeof(purgeintervalseconds_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2RegMsg)
}

void SLL2RegMsg::SharedCtor() {
  ::memset(&oper_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&purgeintervalseconds_) -
      reinterpret_cast<char*>(&oper_)) + sizeof(purgeintervalseconds_));
  _cached_size_ = 0;
}

SLL2RegMsg::~SLL2RegMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2RegMsg)
  SharedDtor();
}

void SLL2RegMsg::SharedDtor() {
}

void SLL2RegMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2RegMsg::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2RegMsg& SLL2RegMsg::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RegMsg();
  return *internal_default_instance();
}

SLL2RegMsg* SLL2RegMsg::New(::google::protobuf::Arena* arena) const {
  SLL2RegMsg* n = new SLL2RegMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2RegMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2RegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&oper_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&purgeintervalseconds_) -
      reinterpret_cast<char*>(&oper_)) + sizeof(purgeintervalseconds_));
  _internal_metadata_.Clear();
}

bool SLL2RegMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2RegMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLRegOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLRegOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 AdminDistance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admindistance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PurgeIntervalSeconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &purgeintervalseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2RegMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2RegMsg)
  return false;
#undef DO_
}

void SLL2RegMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2RegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->admindistance(), output);
  }

  // uint32 PurgeIntervalSeconds = 3;
  if (this->purgeintervalseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->purgeintervalseconds(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2RegMsg)
}

::google::protobuf::uint8* SLL2RegMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2RegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->admindistance(), target);
  }

  // uint32 PurgeIntervalSeconds = 3;
  if (this->purgeintervalseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->purgeintervalseconds(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2RegMsg)
  return target;
}

size_t SLL2RegMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2RegMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  // uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->admindistance());
  }

  // uint32 PurgeIntervalSeconds = 3;
  if (this->purgeintervalseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->purgeintervalseconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2RegMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2RegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2RegMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2RegMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2RegMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2RegMsg)
    MergeFrom(*source);
  }
}

void SLL2RegMsg::MergeFrom(const SLL2RegMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2RegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oper() != 0) {
    set_oper(from.oper());
  }
  if (from.admindistance() != 0) {
    set_admindistance(from.admindistance());
  }
  if (from.purgeintervalseconds() != 0) {
    set_purgeintervalseconds(from.purgeintervalseconds());
  }
}

void SLL2RegMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2RegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2RegMsg::CopyFrom(const SLL2RegMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2RegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2RegMsg::IsInitialized() const {
  return true;
}

void SLL2RegMsg::Swap(SLL2RegMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2RegMsg::InternalSwap(SLL2RegMsg* other) {
  using std::swap;
  swap(oper_, other->oper_);
  swap(admindistance_, other->admindistance_);
  swap(purgeintervalseconds_, other->purgeintervalseconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2RegMsg::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2RegMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLL2RegMsgRsp_default_instance_._instance.get_mutable()->regstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLL2RegMsgRsp::clear_regstatus() {
  if (GetArenaNoVirtual() == NULL && regstatus_ != NULL) {
    delete regstatus_;
  }
  regstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2RegMsgRsp::kRegStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2RegMsgRsp::SLL2RegMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RegMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2RegMsgRsp)
}
SLL2RegMsgRsp::SLL2RegMsgRsp(const SLL2RegMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_regstatus()) {
    regstatus_ = new ::service_layer::SLErrorStatus(*from.regstatus_);
  } else {
    regstatus_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2RegMsgRsp)
}

void SLL2RegMsgRsp::SharedCtor() {
  regstatus_ = NULL;
  _cached_size_ = 0;
}

SLL2RegMsgRsp::~SLL2RegMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2RegMsgRsp)
  SharedDtor();
}

void SLL2RegMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete regstatus_;
}

void SLL2RegMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2RegMsgRsp::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2RegMsgRsp& SLL2RegMsgRsp::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RegMsgRsp();
  return *internal_default_instance();
}

SLL2RegMsgRsp* SLL2RegMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLL2RegMsgRsp* n = new SLL2RegMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2RegMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2RegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && regstatus_ != NULL) {
    delete regstatus_;
  }
  regstatus_ = NULL;
  _internal_metadata_.Clear();
}

bool SLL2RegMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2RegMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus RegStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_regstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2RegMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2RegMsgRsp)
  return false;
#undef DO_
}

void SLL2RegMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2RegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus RegStatus = 1;
  if (this->has_regstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->regstatus_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2RegMsgRsp)
}

::google::protobuf::uint8* SLL2RegMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2RegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus RegStatus = 1;
  if (this->has_regstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->regstatus_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2RegMsgRsp)
  return target;
}

size_t SLL2RegMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2RegMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus RegStatus = 1;
  if (this->has_regstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->regstatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2RegMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2RegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2RegMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2RegMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2RegMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2RegMsgRsp)
    MergeFrom(*source);
  }
}

void SLL2RegMsgRsp::MergeFrom(const SLL2RegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2RegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_regstatus()) {
    mutable_regstatus()->::service_layer::SLErrorStatus::MergeFrom(from.regstatus());
  }
}

void SLL2RegMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2RegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2RegMsgRsp::CopyFrom(const SLL2RegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2RegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2RegMsgRsp::IsInitialized() const {
  return true;
}

void SLL2RegMsgRsp::Swap(SLL2RegMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2RegMsgRsp::InternalSwap(SLL2RegMsgRsp* other) {
  using std::swap;
  swap(regstatus_, other->regstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2RegMsgRsp::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2BdRegMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2BdRegMsg::kOperFieldNumber;
const int SLL2BdRegMsg::kBdRegNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2BdRegMsg::SLL2BdRegMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2BdRegMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2BdRegMsg)
}
SLL2BdRegMsg::SLL2BdRegMsg(const SLL2BdRegMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bdregname_(from.bdregname_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2BdRegMsg)
}

void SLL2BdRegMsg::SharedCtor() {
  oper_ = 0;
  _cached_size_ = 0;
}

SLL2BdRegMsg::~SLL2BdRegMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2BdRegMsg)
  SharedDtor();
}

void SLL2BdRegMsg::SharedDtor() {
}

void SLL2BdRegMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2BdRegMsg::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2BdRegMsg& SLL2BdRegMsg::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2BdRegMsg();
  return *internal_default_instance();
}

SLL2BdRegMsg* SLL2BdRegMsg::New(::google::protobuf::Arena* arena) const {
  SLL2BdRegMsg* n = new SLL2BdRegMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2BdRegMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2BdRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdregname_.Clear();
  oper_ = 0;
  _internal_metadata_.Clear();
}

bool SLL2BdRegMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2BdRegMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLRegOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLRegOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string BdRegName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_bdregname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bdregname(this->bdregname_size() - 1).data(),
            static_cast<int>(this->bdregname(this->bdregname_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLL2BdRegMsg.BdRegName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2BdRegMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2BdRegMsg)
  return false;
#undef DO_
}

void SLL2BdRegMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2BdRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // repeated string BdRegName = 2;
  for (int i = 0, n = this->bdregname_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdregname(i).data(), static_cast<int>(this->bdregname(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2BdRegMsg.BdRegName");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->bdregname(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2BdRegMsg)
}

::google::protobuf::uint8* SLL2BdRegMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2BdRegMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // repeated string BdRegName = 2;
  for (int i = 0, n = this->bdregname_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdregname(i).data(), static_cast<int>(this->bdregname(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2BdRegMsg.BdRegName");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->bdregname(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2BdRegMsg)
  return target;
}

size_t SLL2BdRegMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2BdRegMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string BdRegName = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bdregname_size());
  for (int i = 0, n = this->bdregname_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->bdregname(i));
  }

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2BdRegMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2BdRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2BdRegMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2BdRegMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2BdRegMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2BdRegMsg)
    MergeFrom(*source);
  }
}

void SLL2BdRegMsg::MergeFrom(const SLL2BdRegMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2BdRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bdregname_.MergeFrom(from.bdregname_);
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLL2BdRegMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2BdRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2BdRegMsg::CopyFrom(const SLL2BdRegMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2BdRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2BdRegMsg::IsInitialized() const {
  return true;
}

void SLL2BdRegMsg::Swap(SLL2BdRegMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2BdRegMsg::InternalSwap(SLL2BdRegMsg* other) {
  using std::swap;
  bdregname_.InternalSwap(&other->bdregname_);
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2BdRegMsg::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2BdRegRes::InitAsDefaultInstance() {
  ::service_layer::_SLL2BdRegRes_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLL2BdRegRes::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2BdRegRes::kErrStatusFieldNumber;
const int SLL2BdRegRes::kBdNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2BdRegRes::SLL2BdRegRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2BdRegRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2BdRegRes)
}
SLL2BdRegRes::SLL2BdRegRes(const SLL2BdRegRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bdname().size() > 0) {
    bdname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bdname_);
  }
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2BdRegRes)
}

void SLL2BdRegRes::SharedCtor() {
  bdname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errstatus_ = NULL;
  _cached_size_ = 0;
}

SLL2BdRegRes::~SLL2BdRegRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2BdRegRes)
  SharedDtor();
}

void SLL2BdRegRes::SharedDtor() {
  bdname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete errstatus_;
}

void SLL2BdRegRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2BdRegRes::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2BdRegRes& SLL2BdRegRes::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2BdRegRes();
  return *internal_default_instance();
}

SLL2BdRegRes* SLL2BdRegRes::New(::google::protobuf::Arena* arena) const {
  SLL2BdRegRes* n = new SLL2BdRegRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2BdRegRes::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2BdRegRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  _internal_metadata_.Clear();
}

bool SLL2BdRegRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2BdRegRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BdName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bdname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bdname().data(), static_cast<int>(this->bdname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLL2BdRegRes.BdName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2BdRegRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2BdRegRes)
  return false;
#undef DO_
}

void SLL2BdRegRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2BdRegRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // string BdName = 2;
  if (this->bdname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2BdRegRes.BdName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bdname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2BdRegRes)
}

::google::protobuf::uint8* SLL2BdRegRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2BdRegRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // string BdName = 2;
  if (this->bdname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2BdRegRes.BdName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bdname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2BdRegRes)
  return target;
}

size_t SLL2BdRegRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2BdRegRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string BdName = 2;
  if (this->bdname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bdname());
  }

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2BdRegRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2BdRegRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2BdRegRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2BdRegRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2BdRegRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2BdRegRes)
    MergeFrom(*source);
  }
}

void SLL2BdRegRes::MergeFrom(const SLL2BdRegRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2BdRegRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bdname().size() > 0) {

    bdname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bdname_);
  }
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
}

void SLL2BdRegRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2BdRegRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2BdRegRes::CopyFrom(const SLL2BdRegRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2BdRegRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2BdRegRes::IsInitialized() const {
  return true;
}

void SLL2BdRegRes::Swap(SLL2BdRegRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2BdRegRes::InternalSwap(SLL2BdRegRes* other) {
  using std::swap;
  bdname_.Swap(&other->bdname_);
  swap(errstatus_, other->errstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2BdRegRes::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2BdRegMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLL2BdRegMsgRsp_default_instance_._instance.get_mutable()->statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLL2BdRegMsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2BdRegMsgRsp::kStatusSummaryFieldNumber;
const int SLL2BdRegMsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2BdRegMsgRsp::SLL2BdRegMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2BdRegMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2BdRegMsgRsp)
}
SLL2BdRegMsgRsp::SLL2BdRegMsgRsp(const SLL2BdRegMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statussummary()) {
    statussummary_ = new ::service_layer::SLErrorStatus(*from.statussummary_);
  } else {
    statussummary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2BdRegMsgRsp)
}

void SLL2BdRegMsgRsp::SharedCtor() {
  statussummary_ = NULL;
  _cached_size_ = 0;
}

SLL2BdRegMsgRsp::~SLL2BdRegMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2BdRegMsgRsp)
  SharedDtor();
}

void SLL2BdRegMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete statussummary_;
}

void SLL2BdRegMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2BdRegMsgRsp::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2BdRegMsgRsp& SLL2BdRegMsgRsp::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2BdRegMsgRsp();
  return *internal_default_instance();
}

SLL2BdRegMsgRsp* SLL2BdRegMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLL2BdRegMsgRsp* n = new SLL2BdRegMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2BdRegMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2BdRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
  _internal_metadata_.Clear();
}

bool SLL2BdRegMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2BdRegMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus StatusSummary = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLL2BdRegRes Results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2BdRegMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2BdRegMsgRsp)
  return false;
#undef DO_
}

void SLL2BdRegMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2BdRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->statussummary_, output);
  }

  // repeated .service_layer.SLL2BdRegRes Results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2BdRegMsgRsp)
}

::google::protobuf::uint8* SLL2BdRegMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2BdRegMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->statussummary_, deterministic, target);
  }

  // repeated .service_layer.SLL2BdRegRes Results = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2BdRegMsgRsp)
  return target;
}

size_t SLL2BdRegMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2BdRegMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLL2BdRegRes Results = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->statussummary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2BdRegMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2BdRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2BdRegMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2BdRegMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2BdRegMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2BdRegMsgRsp)
    MergeFrom(*source);
  }
}

void SLL2BdRegMsgRsp::MergeFrom(const SLL2BdRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2BdRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
}

void SLL2BdRegMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2BdRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2BdRegMsgRsp::CopyFrom(const SLL2BdRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2BdRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2BdRegMsgRsp::IsInitialized() const {
  return true;
}

void SLL2BdRegMsgRsp::Swap(SLL2BdRegMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2BdRegMsgRsp::InternalSwap(SLL2BdRegMsgRsp* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  swap(statussummary_, other->statussummary_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2BdRegMsgRsp::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2RouteEsi::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2RouteEsi::kEsiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2RouteEsi::SLL2RouteEsi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteEsi();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2RouteEsi)
}
SLL2RouteEsi::SLL2RouteEsi(const SLL2RouteEsi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  esi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.esi().size() > 0) {
    esi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.esi_);
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2RouteEsi)
}

void SLL2RouteEsi::SharedCtor() {
  esi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SLL2RouteEsi::~SLL2RouteEsi() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2RouteEsi)
  SharedDtor();
}

void SLL2RouteEsi::SharedDtor() {
  esi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLL2RouteEsi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2RouteEsi::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2RouteEsi& SLL2RouteEsi::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteEsi();
  return *internal_default_instance();
}

SLL2RouteEsi* SLL2RouteEsi::New(::google::protobuf::Arena* arena) const {
  SLL2RouteEsi* n = new SLL2RouteEsi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2RouteEsi::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2RouteEsi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  esi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SLL2RouteEsi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2RouteEsi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Esi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_esi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2RouteEsi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2RouteEsi)
  return false;
#undef DO_
}

void SLL2RouteEsi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2RouteEsi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Esi = 1;
  if (this->esi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->esi(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2RouteEsi)
}

::google::protobuf::uint8* SLL2RouteEsi::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2RouteEsi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Esi = 1;
  if (this->esi().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->esi(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2RouteEsi)
  return target;
}

size_t SLL2RouteEsi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2RouteEsi)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes Esi = 1;
  if (this->esi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->esi());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2RouteEsi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2RouteEsi)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2RouteEsi* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2RouteEsi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2RouteEsi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2RouteEsi)
    MergeFrom(*source);
  }
}

void SLL2RouteEsi::MergeFrom(const SLL2RouteEsi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2RouteEsi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.esi().size() > 0) {

    esi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.esi_);
  }
}

void SLL2RouteEsi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2RouteEsi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2RouteEsi::CopyFrom(const SLL2RouteEsi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2RouteEsi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2RouteEsi::IsInitialized() const {
  return true;
}

void SLL2RouteEsi::Swap(SLL2RouteEsi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2RouteEsi::InternalSwap(SLL2RouteEsi* other) {
  using std::swap;
  esi_.Swap(&other->esi_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2RouteEsi::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2RouteNh::InitAsDefaultInstance() {
  ::service_layer::_SLL2RouteNh_default_instance_.nhinterface_ = const_cast< ::service_layer::SLInterface*>(
      ::service_layer::SLInterface::internal_default_instance());
  ::service_layer::_SLL2RouteNh_default_instance_.nhoverlay_ = const_cast< ::service_layer::SLL2OverlayNh*>(
      ::service_layer::SLL2OverlayNh::internal_default_instance());
}
void SLL2RouteNh::set_allocated_nhinterface(::service_layer::SLInterface* nhinterface) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_NhData();
  if (nhinterface) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nhinterface = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nhinterface, submessage_arena);
    }
    set_has_nhinterface();
    NhData_.nhinterface_ = nhinterface;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLL2RouteNh.NhInterface)
}
void SLL2RouteNh::clear_nhinterface() {
  if (has_nhinterface()) {
    delete NhData_.nhinterface_;
    clear_has_NhData();
  }
}
void SLL2RouteNh::set_allocated_nhoverlay(::service_layer::SLL2OverlayNh* nhoverlay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_NhData();
  if (nhoverlay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nhoverlay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nhoverlay, submessage_arena);
    }
    set_has_nhoverlay();
    NhData_.nhoverlay_ = nhoverlay;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLL2RouteNh.NhOverlay)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2RouteNh::kNhTypeFieldNumber;
const int SLL2RouteNh::kNhInterfaceFieldNumber;
const int SLL2RouteNh::kNhOverlayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2RouteNh::SLL2RouteNh()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteNh();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2RouteNh)
}
SLL2RouteNh::SLL2RouteNh(const SLL2RouteNh& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nhtype_ = from.nhtype_;
  clear_has_NhData();
  switch (from.NhData_case()) {
    case kNhInterface: {
      mutable_nhinterface()->::service_layer::SLInterface::MergeFrom(from.nhinterface());
      break;
    }
    case kNhOverlay: {
      mutable_nhoverlay()->::service_layer::SLL2OverlayNh::MergeFrom(from.nhoverlay());
      break;
    }
    case NHDATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2RouteNh)
}

void SLL2RouteNh::SharedCtor() {
  nhtype_ = 0;
  clear_has_NhData();
  _cached_size_ = 0;
}

SLL2RouteNh::~SLL2RouteNh() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2RouteNh)
  SharedDtor();
}

void SLL2RouteNh::SharedDtor() {
  if (has_NhData()) {
    clear_NhData();
  }
}

void SLL2RouteNh::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2RouteNh::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2RouteNh& SLL2RouteNh::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteNh();
  return *internal_default_instance();
}

SLL2RouteNh* SLL2RouteNh::New(::google::protobuf::Arena* arena) const {
  SLL2RouteNh* n = new SLL2RouteNh;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2RouteNh::clear_NhData() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLL2RouteNh)
  switch (NhData_case()) {
    case kNhInterface: {
      delete NhData_.nhinterface_;
      break;
    }
    case kNhOverlay: {
      delete NhData_.nhoverlay_;
      break;
    }
    case NHDATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NHDATA_NOT_SET;
}


void SLL2RouteNh::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2RouteNh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nhtype_ = 0;
  clear_NhData();
  _internal_metadata_.Clear();
}

bool SLL2RouteNh::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2RouteNh)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLL2RouteNh.SLL2RouteNhType NhType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_nhtype(static_cast< ::service_layer::SLL2RouteNh_SLL2RouteNhType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLInterface NhInterface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nhinterface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2OverlayNh NhOverlay = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nhoverlay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2RouteNh)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2RouteNh)
  return false;
#undef DO_
}

void SLL2RouteNh::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2RouteNh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLL2RouteNh.SLL2RouteNhType NhType = 1;
  if (this->nhtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->nhtype(), output);
  }

  // .service_layer.SLInterface NhInterface = 2;
  if (has_nhinterface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *NhData_.nhinterface_, output);
  }

  // .service_layer.SLL2OverlayNh NhOverlay = 3;
  if (has_nhoverlay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *NhData_.nhoverlay_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2RouteNh)
}

::google::protobuf::uint8* SLL2RouteNh::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2RouteNh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLL2RouteNh.SLL2RouteNhType NhType = 1;
  if (this->nhtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->nhtype(), target);
  }

  // .service_layer.SLInterface NhInterface = 2;
  if (has_nhinterface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *NhData_.nhinterface_, deterministic, target);
  }

  // .service_layer.SLL2OverlayNh NhOverlay = 3;
  if (has_nhoverlay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *NhData_.nhoverlay_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2RouteNh)
  return target;
}

size_t SLL2RouteNh::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2RouteNh)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLL2RouteNh.SLL2RouteNhType NhType = 1;
  if (this->nhtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->nhtype());
  }

  switch (NhData_case()) {
    // .service_layer.SLInterface NhInterface = 2;
    case kNhInterface: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *NhData_.nhinterface_);
      break;
    }
    // .service_layer.SLL2OverlayNh NhOverlay = 3;
    case kNhOverlay: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *NhData_.nhoverlay_);
      break;
    }
    case NHDATA_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2RouteNh::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2RouteNh)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2RouteNh* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2RouteNh>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2RouteNh)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2RouteNh)
    MergeFrom(*source);
  }
}

void SLL2RouteNh::MergeFrom(const SLL2RouteNh& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2RouteNh)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nhtype() != 0) {
    set_nhtype(from.nhtype());
  }
  switch (from.NhData_case()) {
    case kNhInterface: {
      mutable_nhinterface()->::service_layer::SLInterface::MergeFrom(from.nhinterface());
      break;
    }
    case kNhOverlay: {
      mutable_nhoverlay()->::service_layer::SLL2OverlayNh::MergeFrom(from.nhoverlay());
      break;
    }
    case NHDATA_NOT_SET: {
      break;
    }
  }
}

void SLL2RouteNh::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2RouteNh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2RouteNh::CopyFrom(const SLL2RouteNh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2RouteNh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2RouteNh::IsInitialized() const {
  return true;
}

void SLL2RouteNh::Swap(SLL2RouteNh* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2RouteNh::InternalSwap(SLL2RouteNh* other) {
  using std::swap;
  swap(nhtype_, other->nhtype_);
  swap(NhData_, other->NhData_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2RouteNh::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2OverlayNh::InitAsDefaultInstance() {
  ::service_layer::_SLL2OverlayNh_default_instance_._instance.get_mutable()->overlaynhip_ = const_cast< ::service_layer::SLIpAddress*>(
      ::service_layer::SLIpAddress::internal_default_instance());
}
void SLL2OverlayNh::clear_overlaynhip() {
  if (GetArenaNoVirtual() == NULL && overlaynhip_ != NULL) {
    delete overlaynhip_;
  }
  overlaynhip_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2OverlayNh::kOverlayNhIpFieldNumber;
const int SLL2OverlayNh::kOverlayNhEncapFieldNumber;
const int SLL2OverlayNh::kOverlayNhLabelFieldNumber;
const int SLL2OverlayNh::kOverlayNhL3LabelFieldNumber;
const int SLL2OverlayNh::kOverlayNhRouterMacFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2OverlayNh::SLL2OverlayNh()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2OverlayNh();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2OverlayNh)
}
SLL2OverlayNh::SLL2OverlayNh(const SLL2OverlayNh& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      overlaynhl3label_(from.overlaynhl3label_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  overlaynhroutermac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.overlaynhroutermac().size() > 0) {
    overlaynhroutermac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.overlaynhroutermac_);
  }
  if (from.has_overlaynhip()) {
    overlaynhip_ = new ::service_layer::SLIpAddress(*from.overlaynhip_);
  } else {
    overlaynhip_ = NULL;
  }
  ::memcpy(&overlaynhencap_, &from.overlaynhencap_,
    static_cast<size_t>(reinterpret_cast<char*>(&overlaynhlabel_) -
    reinterpret_cast<char*>(&overlaynhencap_)) + sizeof(overlaynhlabel_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2OverlayNh)
}

void SLL2OverlayNh::SharedCtor() {
  overlaynhroutermac_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&overlaynhip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&overlaynhlabel_) -
      reinterpret_cast<char*>(&overlaynhip_)) + sizeof(overlaynhlabel_));
  _cached_size_ = 0;
}

SLL2OverlayNh::~SLL2OverlayNh() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2OverlayNh)
  SharedDtor();
}

void SLL2OverlayNh::SharedDtor() {
  overlaynhroutermac_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete overlaynhip_;
}

void SLL2OverlayNh::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2OverlayNh::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2OverlayNh& SLL2OverlayNh::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2OverlayNh();
  return *internal_default_instance();
}

SLL2OverlayNh* SLL2OverlayNh::New(::google::protobuf::Arena* arena) const {
  SLL2OverlayNh* n = new SLL2OverlayNh;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2OverlayNh::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2OverlayNh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  overlaynhl3label_.Clear();
  overlaynhroutermac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && overlaynhip_ != NULL) {
    delete overlaynhip_;
  }
  overlaynhip_ = NULL;
  ::memset(&overlaynhencap_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&overlaynhlabel_) -
      reinterpret_cast<char*>(&overlaynhencap_)) + sizeof(overlaynhlabel_));
  _internal_metadata_.Clear();
}

bool SLL2OverlayNh::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2OverlayNh)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLIpAddress OverlayNhIp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_overlaynhip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLEncapType OverlayNhEncap = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_overlaynhencap(static_cast< ::service_layer::SLEncapType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 OverlayNhLabel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &overlaynhlabel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 OverlayNhL3Label = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_overlaynhl3label())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_overlaynhl3label())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes OverlayNhRouterMac = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_overlaynhroutermac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2OverlayNh)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2OverlayNh)
  return false;
#undef DO_
}

void SLL2OverlayNh::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2OverlayNh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLIpAddress OverlayNhIp = 1;
  if (this->has_overlaynhip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->overlaynhip_, output);
  }

  // .service_layer.SLEncapType OverlayNhEncap = 2;
  if (this->overlaynhencap() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->overlaynhencap(), output);
  }

  // uint32 OverlayNhLabel = 3;
  if (this->overlaynhlabel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->overlaynhlabel(), output);
  }

  // repeated uint32 OverlayNhL3Label = 4;
  if (this->overlaynhl3label_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _overlaynhl3label_cached_byte_size_));
  }
  for (int i = 0, n = this->overlaynhl3label_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->overlaynhl3label(i), output);
  }

  // bytes OverlayNhRouterMac = 5;
  if (this->overlaynhroutermac().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->overlaynhroutermac(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2OverlayNh)
}

::google::protobuf::uint8* SLL2OverlayNh::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2OverlayNh)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLIpAddress OverlayNhIp = 1;
  if (this->has_overlaynhip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->overlaynhip_, deterministic, target);
  }

  // .service_layer.SLEncapType OverlayNhEncap = 2;
  if (this->overlaynhencap() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->overlaynhencap(), target);
  }

  // uint32 OverlayNhLabel = 3;
  if (this->overlaynhlabel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->overlaynhlabel(), target);
  }

  // repeated uint32 OverlayNhL3Label = 4;
  if (this->overlaynhl3label_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _overlaynhl3label_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->overlaynhl3label_, target);
  }

  // bytes OverlayNhRouterMac = 5;
  if (this->overlaynhroutermac().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->overlaynhroutermac(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2OverlayNh)
  return target;
}

size_t SLL2OverlayNh::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2OverlayNh)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 OverlayNhL3Label = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->overlaynhl3label_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _overlaynhl3label_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes OverlayNhRouterMac = 5;
  if (this->overlaynhroutermac().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->overlaynhroutermac());
  }

  // .service_layer.SLIpAddress OverlayNhIp = 1;
  if (this->has_overlaynhip()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->overlaynhip_);
  }

  // .service_layer.SLEncapType OverlayNhEncap = 2;
  if (this->overlaynhencap() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->overlaynhencap());
  }

  // uint32 OverlayNhLabel = 3;
  if (this->overlaynhlabel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->overlaynhlabel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2OverlayNh::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2OverlayNh)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2OverlayNh* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2OverlayNh>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2OverlayNh)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2OverlayNh)
    MergeFrom(*source);
  }
}

void SLL2OverlayNh::MergeFrom(const SLL2OverlayNh& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2OverlayNh)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  overlaynhl3label_.MergeFrom(from.overlaynhl3label_);
  if (from.overlaynhroutermac().size() > 0) {

    overlaynhroutermac_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.overlaynhroutermac_);
  }
  if (from.has_overlaynhip()) {
    mutable_overlaynhip()->::service_layer::SLIpAddress::MergeFrom(from.overlaynhip());
  }
  if (from.overlaynhencap() != 0) {
    set_overlaynhencap(from.overlaynhencap());
  }
  if (from.overlaynhlabel() != 0) {
    set_overlaynhlabel(from.overlaynhlabel());
  }
}

void SLL2OverlayNh::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2OverlayNh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2OverlayNh::CopyFrom(const SLL2OverlayNh& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2OverlayNh)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2OverlayNh::IsInitialized() const {
  return true;
}

void SLL2OverlayNh::Swap(SLL2OverlayNh* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2OverlayNh::InternalSwap(SLL2OverlayNh* other) {
  using std::swap;
  overlaynhl3label_.InternalSwap(&other->overlaynhl3label_);
  overlaynhroutermac_.Swap(&other->overlaynhroutermac_);
  swap(overlaynhip_, other->overlaynhip_);
  swap(overlaynhencap_, other->overlaynhencap_);
  swap(overlaynhlabel_, other->overlaynhlabel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2OverlayNh::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2MacRouteKey::InitAsDefaultInstance() {
  ::service_layer::_SLL2MacRouteKey_default_instance_._instance.get_mutable()->ipaddress_ = const_cast< ::service_layer::SLIpAddress*>(
      ::service_layer::SLIpAddress::internal_default_instance());
}
void SLL2MacRouteKey::clear_ipaddress() {
  if (GetArenaNoVirtual() == NULL && ipaddress_ != NULL) {
    delete ipaddress_;
  }
  ipaddress_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2MacRouteKey::kMacAddressFieldNumber;
const int SLL2MacRouteKey::kIpAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2MacRouteKey::SLL2MacRouteKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2MacRouteKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2MacRouteKey)
}
SLL2MacRouteKey::SLL2MacRouteKey(const SLL2MacRouteKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  macaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.macaddress().size() > 0) {
    macaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddress_);
  }
  if (from.has_ipaddress()) {
    ipaddress_ = new ::service_layer::SLIpAddress(*from.ipaddress_);
  } else {
    ipaddress_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2MacRouteKey)
}

void SLL2MacRouteKey::SharedCtor() {
  macaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ipaddress_ = NULL;
  _cached_size_ = 0;
}

SLL2MacRouteKey::~SLL2MacRouteKey() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2MacRouteKey)
  SharedDtor();
}

void SLL2MacRouteKey::SharedDtor() {
  macaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ipaddress_;
}

void SLL2MacRouteKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2MacRouteKey::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2MacRouteKey& SLL2MacRouteKey::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2MacRouteKey();
  return *internal_default_instance();
}

SLL2MacRouteKey* SLL2MacRouteKey::New(::google::protobuf::Arena* arena) const {
  SLL2MacRouteKey* n = new SLL2MacRouteKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2MacRouteKey::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2MacRouteKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  macaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ipaddress_ != NULL) {
    delete ipaddress_;
  }
  ipaddress_ = NULL;
  _internal_metadata_.Clear();
}

bool SLL2MacRouteKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2MacRouteKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes MacAddress = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_macaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLIpAddress IpAddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ipaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2MacRouteKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2MacRouteKey)
  return false;
#undef DO_
}

void SLL2MacRouteKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2MacRouteKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes MacAddress = 1;
  if (this->macaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->macaddress(), output);
  }

  // .service_layer.SLIpAddress IpAddress = 2;
  if (this->has_ipaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->ipaddress_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2MacRouteKey)
}

::google::protobuf::uint8* SLL2MacRouteKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2MacRouteKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes MacAddress = 1;
  if (this->macaddress().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->macaddress(), target);
  }

  // .service_layer.SLIpAddress IpAddress = 2;
  if (this->has_ipaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->ipaddress_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2MacRouteKey)
  return target;
}

size_t SLL2MacRouteKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2MacRouteKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes MacAddress = 1;
  if (this->macaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->macaddress());
  }

  // .service_layer.SLIpAddress IpAddress = 2;
  if (this->has_ipaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ipaddress_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2MacRouteKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2MacRouteKey)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2MacRouteKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2MacRouteKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2MacRouteKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2MacRouteKey)
    MergeFrom(*source);
  }
}

void SLL2MacRouteKey::MergeFrom(const SLL2MacRouteKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2MacRouteKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.macaddress().size() > 0) {

    macaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddress_);
  }
  if (from.has_ipaddress()) {
    mutable_ipaddress()->::service_layer::SLIpAddress::MergeFrom(from.ipaddress());
  }
}

void SLL2MacRouteKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2MacRouteKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2MacRouteKey::CopyFrom(const SLL2MacRouteKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2MacRouteKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2MacRouteKey::IsInitialized() const {
  return true;
}

void SLL2MacRouteKey::Swap(SLL2MacRouteKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2MacRouteKey::InternalSwap(SLL2MacRouteKey* other) {
  using std::swap;
  macaddress_.Swap(&other->macaddress_);
  swap(ipaddress_, other->ipaddress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2MacRouteKey::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2MacRoute::InitAsDefaultInstance() {
  ::service_layer::_SLL2MacRoute_default_instance_._instance.get_mutable()->routekey_ = const_cast< ::service_layer::SLL2MacRouteKey*>(
      ::service_layer::SLL2MacRouteKey::internal_default_instance());
  ::service_layer::_SLL2MacRoute_default_instance_._instance.get_mutable()->macesi_ = const_cast< ::service_layer::SLL2RouteEsi*>(
      ::service_layer::SLL2RouteEsi::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2MacRoute::kRouteKeyFieldNumber;
const int SLL2MacRoute::kSequenceNumFieldNumber;
const int SLL2MacRoute::kMacEsiFieldNumber;
const int SLL2MacRoute::kNextHopListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2MacRoute::SLL2MacRoute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2MacRoute();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2MacRoute)
}
SLL2MacRoute::SLL2MacRoute(const SLL2MacRoute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      nexthoplist_(from.nexthoplist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_routekey()) {
    routekey_ = new ::service_layer::SLL2MacRouteKey(*from.routekey_);
  } else {
    routekey_ = NULL;
  }
  if (from.has_macesi()) {
    macesi_ = new ::service_layer::SLL2RouteEsi(*from.macesi_);
  } else {
    macesi_ = NULL;
  }
  sequencenum_ = from.sequencenum_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2MacRoute)
}

void SLL2MacRoute::SharedCtor() {
  ::memset(&routekey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequencenum_) -
      reinterpret_cast<char*>(&routekey_)) + sizeof(sequencenum_));
  _cached_size_ = 0;
}

SLL2MacRoute::~SLL2MacRoute() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2MacRoute)
  SharedDtor();
}

void SLL2MacRoute::SharedDtor() {
  if (this != internal_default_instance()) delete routekey_;
  if (this != internal_default_instance()) delete macesi_;
}

void SLL2MacRoute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2MacRoute::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2MacRoute& SLL2MacRoute::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2MacRoute();
  return *internal_default_instance();
}

SLL2MacRoute* SLL2MacRoute::New(::google::protobuf::Arena* arena) const {
  SLL2MacRoute* n = new SLL2MacRoute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2MacRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2MacRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nexthoplist_.Clear();
  if (GetArenaNoVirtual() == NULL && routekey_ != NULL) {
    delete routekey_;
  }
  routekey_ = NULL;
  if (GetArenaNoVirtual() == NULL && macesi_ != NULL) {
    delete macesi_;
  }
  macesi_ = NULL;
  sequencenum_ = 0u;
  _internal_metadata_.Clear();
}

bool SLL2MacRoute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2MacRoute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLL2MacRouteKey RouteKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_routekey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 SequenceNum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sequencenum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2RouteEsi MacEsi = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_macesi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLL2RouteNh NextHopList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_nexthoplist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2MacRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2MacRoute)
  return false;
#undef DO_
}

void SLL2MacRoute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2MacRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLL2MacRouteKey RouteKey = 1;
  if (this->has_routekey()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->routekey_, output);
  }

  // uint32 SequenceNum = 2;
  if (this->sequencenum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sequencenum(), output);
  }

  // .service_layer.SLL2RouteEsi MacEsi = 3;
  if (this->has_macesi()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->macesi_, output);
  }

  // repeated .service_layer.SLL2RouteNh NextHopList = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nexthoplist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->nexthoplist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2MacRoute)
}

::google::protobuf::uint8* SLL2MacRoute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2MacRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLL2MacRouteKey RouteKey = 1;
  if (this->has_routekey()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->routekey_, deterministic, target);
  }

  // uint32 SequenceNum = 2;
  if (this->sequencenum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sequencenum(), target);
  }

  // .service_layer.SLL2RouteEsi MacEsi = 3;
  if (this->has_macesi()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->macesi_, deterministic, target);
  }

  // repeated .service_layer.SLL2RouteNh NextHopList = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->nexthoplist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->nexthoplist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2MacRoute)
  return target;
}

size_t SLL2MacRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2MacRoute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLL2RouteNh NextHopList = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->nexthoplist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->nexthoplist(static_cast<int>(i)));
    }
  }

  // .service_layer.SLL2MacRouteKey RouteKey = 1;
  if (this->has_routekey()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->routekey_);
  }

  // .service_layer.SLL2RouteEsi MacEsi = 3;
  if (this->has_macesi()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->macesi_);
  }

  // uint32 SequenceNum = 2;
  if (this->sequencenum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sequencenum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2MacRoute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2MacRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2MacRoute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2MacRoute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2MacRoute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2MacRoute)
    MergeFrom(*source);
  }
}

void SLL2MacRoute::MergeFrom(const SLL2MacRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2MacRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  nexthoplist_.MergeFrom(from.nexthoplist_);
  if (from.has_routekey()) {
    mutable_routekey()->::service_layer::SLL2MacRouteKey::MergeFrom(from.routekey());
  }
  if (from.has_macesi()) {
    mutable_macesi()->::service_layer::SLL2RouteEsi::MergeFrom(from.macesi());
  }
  if (from.sequencenum() != 0) {
    set_sequencenum(from.sequencenum());
  }
}

void SLL2MacRoute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2MacRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2MacRoute::CopyFrom(const SLL2MacRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2MacRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2MacRoute::IsInitialized() const {
  return true;
}

void SLL2MacRoute::Swap(SLL2MacRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2MacRoute::InternalSwap(SLL2MacRoute* other) {
  using std::swap;
  nexthoplist_.InternalSwap(&other->nexthoplist_);
  swap(routekey_, other->routekey_);
  swap(macesi_, other->macesi_);
  swap(sequencenum_, other->sequencenum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2MacRoute::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2ImetRouteKey::InitAsDefaultInstance() {
  ::service_layer::_SLL2ImetRouteKey_default_instance_._instance.get_mutable()->ipaddress_ = const_cast< ::service_layer::SLIpAddress*>(
      ::service_layer::SLIpAddress::internal_default_instance());
}
void SLL2ImetRouteKey::clear_ipaddress() {
  if (GetArenaNoVirtual() == NULL && ipaddress_ != NULL) {
    delete ipaddress_;
  }
  ipaddress_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2ImetRouteKey::kEthTagIdFieldNumber;
const int SLL2ImetRouteKey::kIpAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2ImetRouteKey::SLL2ImetRouteKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2ImetRouteKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2ImetRouteKey)
}
SLL2ImetRouteKey::SLL2ImetRouteKey(const SLL2ImetRouteKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ipaddress()) {
    ipaddress_ = new ::service_layer::SLIpAddress(*from.ipaddress_);
  } else {
    ipaddress_ = NULL;
  }
  ethtagid_ = from.ethtagid_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2ImetRouteKey)
}

void SLL2ImetRouteKey::SharedCtor() {
  ::memset(&ipaddress_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ethtagid_) -
      reinterpret_cast<char*>(&ipaddress_)) + sizeof(ethtagid_));
  _cached_size_ = 0;
}

SLL2ImetRouteKey::~SLL2ImetRouteKey() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2ImetRouteKey)
  SharedDtor();
}

void SLL2ImetRouteKey::SharedDtor() {
  if (this != internal_default_instance()) delete ipaddress_;
}

void SLL2ImetRouteKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2ImetRouteKey::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2ImetRouteKey& SLL2ImetRouteKey::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2ImetRouteKey();
  return *internal_default_instance();
}

SLL2ImetRouteKey* SLL2ImetRouteKey::New(::google::protobuf::Arena* arena) const {
  SLL2ImetRouteKey* n = new SLL2ImetRouteKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2ImetRouteKey::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2ImetRouteKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ipaddress_ != NULL) {
    delete ipaddress_;
  }
  ipaddress_ = NULL;
  ethtagid_ = 0u;
  _internal_metadata_.Clear();
}

bool SLL2ImetRouteKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2ImetRouteKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 EthTagId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ethtagid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLIpAddress IpAddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ipaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2ImetRouteKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2ImetRouteKey)
  return false;
#undef DO_
}

void SLL2ImetRouteKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2ImetRouteKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EthTagId = 1;
  if (this->ethtagid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ethtagid(), output);
  }

  // .service_layer.SLIpAddress IpAddress = 2;
  if (this->has_ipaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->ipaddress_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2ImetRouteKey)
}

::google::protobuf::uint8* SLL2ImetRouteKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2ImetRouteKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EthTagId = 1;
  if (this->ethtagid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ethtagid(), target);
  }

  // .service_layer.SLIpAddress IpAddress = 2;
  if (this->has_ipaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->ipaddress_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2ImetRouteKey)
  return target;
}

size_t SLL2ImetRouteKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2ImetRouteKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLIpAddress IpAddress = 2;
  if (this->has_ipaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ipaddress_);
  }

  // uint32 EthTagId = 1;
  if (this->ethtagid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ethtagid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2ImetRouteKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2ImetRouteKey)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2ImetRouteKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2ImetRouteKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2ImetRouteKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2ImetRouteKey)
    MergeFrom(*source);
  }
}

void SLL2ImetRouteKey::MergeFrom(const SLL2ImetRouteKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2ImetRouteKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ipaddress()) {
    mutable_ipaddress()->::service_layer::SLIpAddress::MergeFrom(from.ipaddress());
  }
  if (from.ethtagid() != 0) {
    set_ethtagid(from.ethtagid());
  }
}

void SLL2ImetRouteKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2ImetRouteKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2ImetRouteKey::CopyFrom(const SLL2ImetRouteKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2ImetRouteKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2ImetRouteKey::IsInitialized() const {
  return true;
}

void SLL2ImetRouteKey::Swap(SLL2ImetRouteKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2ImetRouteKey::InternalSwap(SLL2ImetRouteKey* other) {
  using std::swap;
  swap(ipaddress_, other->ipaddress_);
  swap(ethtagid_, other->ethtagid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2ImetRouteKey::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2ImetRoute::InitAsDefaultInstance() {
  ::service_layer::_SLL2ImetRoute_default_instance_._instance.get_mutable()->routekey_ = const_cast< ::service_layer::SLL2ImetRouteKey*>(
      ::service_layer::SLL2ImetRouteKey::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2ImetRoute::kRouteKeyFieldNumber;
const int SLL2ImetRoute::kEncapTypeFieldNumber;
const int SLL2ImetRoute::kLabelFieldNumber;
const int SLL2ImetRoute::kTunnelTypeFieldNumber;
const int SLL2ImetRoute::kTunnelIdLengthFieldNumber;
const int SLL2ImetRoute::kTunnelIdValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2ImetRoute::SLL2ImetRoute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2ImetRoute();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2ImetRoute)
}
SLL2ImetRoute::SLL2ImetRoute(const SLL2ImetRoute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tunnelidvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tunnelidvalue().size() > 0) {
    tunnelidvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tunnelidvalue_);
  }
  if (from.has_routekey()) {
    routekey_ = new ::service_layer::SLL2ImetRouteKey(*from.routekey_);
  } else {
    routekey_ = NULL;
  }
  ::memcpy(&encaptype_, &from.encaptype_,
    static_cast<size_t>(reinterpret_cast<char*>(&tunnelidlength_) -
    reinterpret_cast<char*>(&encaptype_)) + sizeof(tunnelidlength_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2ImetRoute)
}

void SLL2ImetRoute::SharedCtor() {
  tunnelidvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&routekey_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tunnelidlength_) -
      reinterpret_cast<char*>(&routekey_)) + sizeof(tunnelidlength_));
  _cached_size_ = 0;
}

SLL2ImetRoute::~SLL2ImetRoute() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2ImetRoute)
  SharedDtor();
}

void SLL2ImetRoute::SharedDtor() {
  tunnelidvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete routekey_;
}

void SLL2ImetRoute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2ImetRoute::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2ImetRoute& SLL2ImetRoute::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2ImetRoute();
  return *internal_default_instance();
}

SLL2ImetRoute* SLL2ImetRoute::New(::google::protobuf::Arena* arena) const {
  SLL2ImetRoute* n = new SLL2ImetRoute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2ImetRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2ImetRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tunnelidvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && routekey_ != NULL) {
    delete routekey_;
  }
  routekey_ = NULL;
  ::memset(&encaptype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tunnelidlength_) -
      reinterpret_cast<char*>(&encaptype_)) + sizeof(tunnelidlength_));
  _internal_metadata_.Clear();
}

bool SLL2ImetRoute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2ImetRoute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLL2ImetRouteKey RouteKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_routekey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLEncapType EncapType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encaptype(static_cast< ::service_layer::SLEncapType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Label = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &label_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2ImetRoute.PMSITunnelType TunnelType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tunneltype(static_cast< ::service_layer::SLL2ImetRoute_PMSITunnelType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TunnelIdLength = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tunnelidlength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes TunnelIdValue = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_tunnelidvalue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2ImetRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2ImetRoute)
  return false;
#undef DO_
}

void SLL2ImetRoute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2ImetRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLL2ImetRouteKey RouteKey = 1;
  if (this->has_routekey()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->routekey_, output);
  }

  // .service_layer.SLEncapType EncapType = 2;
  if (this->encaptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->encaptype(), output);
  }

  // uint32 Label = 3;
  if (this->label() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->label(), output);
  }

  // .service_layer.SLL2ImetRoute.PMSITunnelType TunnelType = 4;
  if (this->tunneltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->tunneltype(), output);
  }

  // uint32 TunnelIdLength = 5;
  if (this->tunnelidlength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->tunnelidlength(), output);
  }

  // bytes TunnelIdValue = 6;
  if (this->tunnelidvalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->tunnelidvalue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2ImetRoute)
}

::google::protobuf::uint8* SLL2ImetRoute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2ImetRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLL2ImetRouteKey RouteKey = 1;
  if (this->has_routekey()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->routekey_, deterministic, target);
  }

  // .service_layer.SLEncapType EncapType = 2;
  if (this->encaptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->encaptype(), target);
  }

  // uint32 Label = 3;
  if (this->label() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->label(), target);
  }

  // .service_layer.SLL2ImetRoute.PMSITunnelType TunnelType = 4;
  if (this->tunneltype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->tunneltype(), target);
  }

  // uint32 TunnelIdLength = 5;
  if (this->tunnelidlength() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->tunnelidlength(), target);
  }

  // bytes TunnelIdValue = 6;
  if (this->tunnelidvalue().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->tunnelidvalue(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2ImetRoute)
  return target;
}

size_t SLL2ImetRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2ImetRoute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes TunnelIdValue = 6;
  if (this->tunnelidvalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->tunnelidvalue());
  }

  // .service_layer.SLL2ImetRouteKey RouteKey = 1;
  if (this->has_routekey()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->routekey_);
  }

  // .service_layer.SLEncapType EncapType = 2;
  if (this->encaptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encaptype());
  }

  // uint32 Label = 3;
  if (this->label() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->label());
  }

  // .service_layer.SLL2ImetRoute.PMSITunnelType TunnelType = 4;
  if (this->tunneltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tunneltype());
  }

  // uint32 TunnelIdLength = 5;
  if (this->tunnelidlength() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tunnelidlength());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2ImetRoute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2ImetRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2ImetRoute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2ImetRoute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2ImetRoute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2ImetRoute)
    MergeFrom(*source);
  }
}

void SLL2ImetRoute::MergeFrom(const SLL2ImetRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2ImetRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tunnelidvalue().size() > 0) {

    tunnelidvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tunnelidvalue_);
  }
  if (from.has_routekey()) {
    mutable_routekey()->::service_layer::SLL2ImetRouteKey::MergeFrom(from.routekey());
  }
  if (from.encaptype() != 0) {
    set_encaptype(from.encaptype());
  }
  if (from.label() != 0) {
    set_label(from.label());
  }
  if (from.tunneltype() != 0) {
    set_tunneltype(from.tunneltype());
  }
  if (from.tunnelidlength() != 0) {
    set_tunnelidlength(from.tunnelidlength());
  }
}

void SLL2ImetRoute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2ImetRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2ImetRoute::CopyFrom(const SLL2ImetRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2ImetRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2ImetRoute::IsInitialized() const {
  return true;
}

void SLL2ImetRoute::Swap(SLL2ImetRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2ImetRoute::InternalSwap(SLL2ImetRoute* other) {
  using std::swap;
  tunnelidvalue_.Swap(&other->tunnelidvalue_);
  swap(routekey_, other->routekey_);
  swap(encaptype_, other->encaptype_);
  swap(label_, other->label_);
  swap(tunneltype_, other->tunneltype_);
  swap(tunnelidlength_, other->tunnelidlength_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2ImetRoute::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2RouteKey::InitAsDefaultInstance() {
  ::service_layer::_SLL2RouteKey_default_instance_.mackey_ = const_cast< ::service_layer::SLL2MacRouteKey*>(
      ::service_layer::SLL2MacRouteKey::internal_default_instance());
  ::service_layer::_SLL2RouteKey_default_instance_.imetkey_ = const_cast< ::service_layer::SLL2ImetRouteKey*>(
      ::service_layer::SLL2ImetRouteKey::internal_default_instance());
}
void SLL2RouteKey::set_allocated_mackey(::service_layer::SLL2MacRouteKey* mackey) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (mackey) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mackey = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mackey, submessage_arena);
    }
    set_has_mackey();
    Event_.mackey_ = mackey;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLL2RouteKey.MacKey)
}
void SLL2RouteKey::set_allocated_imetkey(::service_layer::SLL2ImetRouteKey* imetkey) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (imetkey) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      imetkey = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, imetkey, submessage_arena);
    }
    set_has_imetkey();
    Event_.imetkey_ = imetkey;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLL2RouteKey.ImetKey)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2RouteKey::kBdNameFieldNumber;
const int SLL2RouteKey::kTypeFieldNumber;
const int SLL2RouteKey::kMacKeyFieldNumber;
const int SLL2RouteKey::kImetKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2RouteKey::SLL2RouteKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2RouteKey)
}
SLL2RouteKey::SLL2RouteKey(const SLL2RouteKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bdname().size() > 0) {
    bdname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bdname_);
  }
  type_ = from.type_;
  clear_has_Event();
  switch (from.Event_case()) {
    case kMacKey: {
      mutable_mackey()->::service_layer::SLL2MacRouteKey::MergeFrom(from.mackey());
      break;
    }
    case kImetKey: {
      mutable_imetkey()->::service_layer::SLL2ImetRouteKey::MergeFrom(from.imetkey());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2RouteKey)
}

void SLL2RouteKey::SharedCtor() {
  bdname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  clear_has_Event();
  _cached_size_ = 0;
}

SLL2RouteKey::~SLL2RouteKey() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2RouteKey)
  SharedDtor();
}

void SLL2RouteKey::SharedDtor() {
  bdname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_Event()) {
    clear_Event();
  }
}

void SLL2RouteKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2RouteKey::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2RouteKey& SLL2RouteKey::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteKey();
  return *internal_default_instance();
}

SLL2RouteKey* SLL2RouteKey::New(::google::protobuf::Arena* arena) const {
  SLL2RouteKey* n = new SLL2RouteKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2RouteKey::clear_Event() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLL2RouteKey)
  switch (Event_case()) {
    case kMacKey: {
      delete Event_.mackey_;
      break;
    }
    case kImetKey: {
      delete Event_.imetkey_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void SLL2RouteKey::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2RouteKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  clear_Event();
  _internal_metadata_.Clear();
}

bool SLL2RouteKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2RouteKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string BdName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bdname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bdname().data(), static_cast<int>(this->bdname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLL2RouteKey.BdName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2RouteType Type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::service_layer::SLL2RouteType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2MacRouteKey MacKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mackey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2ImetRouteKey ImetKey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_imetkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2RouteKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2RouteKey)
  return false;
#undef DO_
}

void SLL2RouteKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2RouteKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string BdName = 1;
  if (this->bdname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2RouteKey.BdName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bdname(), output);
  }

  // .service_layer.SLL2RouteType Type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .service_layer.SLL2MacRouteKey MacKey = 3;
  if (has_mackey()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *Event_.mackey_, output);
  }

  // .service_layer.SLL2ImetRouteKey ImetKey = 4;
  if (has_imetkey()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *Event_.imetkey_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2RouteKey)
}

::google::protobuf::uint8* SLL2RouteKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2RouteKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string BdName = 1;
  if (this->bdname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2RouteKey.BdName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bdname(), target);
  }

  // .service_layer.SLL2RouteType Type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .service_layer.SLL2MacRouteKey MacKey = 3;
  if (has_mackey()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *Event_.mackey_, deterministic, target);
  }

  // .service_layer.SLL2ImetRouteKey ImetKey = 4;
  if (has_imetkey()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *Event_.imetkey_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2RouteKey)
  return target;
}

size_t SLL2RouteKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2RouteKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string BdName = 1;
  if (this->bdname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bdname());
  }

  // .service_layer.SLL2RouteType Type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  switch (Event_case()) {
    // .service_layer.SLL2MacRouteKey MacKey = 3;
    case kMacKey: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.mackey_);
      break;
    }
    // .service_layer.SLL2ImetRouteKey ImetKey = 4;
    case kImetKey: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.imetkey_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2RouteKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2RouteKey)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2RouteKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2RouteKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2RouteKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2RouteKey)
    MergeFrom(*source);
  }
}

void SLL2RouteKey::MergeFrom(const SLL2RouteKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2RouteKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bdname().size() > 0) {

    bdname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bdname_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  switch (from.Event_case()) {
    case kMacKey: {
      mutable_mackey()->::service_layer::SLL2MacRouteKey::MergeFrom(from.mackey());
      break;
    }
    case kImetKey: {
      mutable_imetkey()->::service_layer::SLL2ImetRouteKey::MergeFrom(from.imetkey());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void SLL2RouteKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2RouteKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2RouteKey::CopyFrom(const SLL2RouteKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2RouteKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2RouteKey::IsInitialized() const {
  return true;
}

void SLL2RouteKey::Swap(SLL2RouteKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2RouteKey::InternalSwap(SLL2RouteKey* other) {
  using std::swap;
  bdname_.Swap(&other->bdname_);
  swap(type_, other->type_);
  swap(Event_, other->Event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2RouteKey::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2Route::InitAsDefaultInstance() {
  ::service_layer::_SLL2Route_default_instance_.macroute_ = const_cast< ::service_layer::SLL2MacRoute*>(
      ::service_layer::SLL2MacRoute::internal_default_instance());
  ::service_layer::_SLL2Route_default_instance_.imetroute_ = const_cast< ::service_layer::SLL2ImetRoute*>(
      ::service_layer::SLL2ImetRoute::internal_default_instance());
}
void SLL2Route::set_allocated_macroute(::service_layer::SLL2MacRoute* macroute) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (macroute) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      macroute = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, macroute, submessage_arena);
    }
    set_has_macroute();
    Event_.macroute_ = macroute;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLL2Route.MacRoute)
}
void SLL2Route::set_allocated_imetroute(::service_layer::SLL2ImetRoute* imetroute) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (imetroute) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      imetroute = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, imetroute, submessage_arena);
    }
    set_has_imetroute();
    Event_.imetroute_ = imetroute;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLL2Route.ImetRoute)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2Route::kBdNameFieldNumber;
const int SLL2Route::kTypeFieldNumber;
const int SLL2Route::kMacRouteFieldNumber;
const int SLL2Route::kImetRouteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2Route::SLL2Route()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2Route();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2Route)
}
SLL2Route::SLL2Route(const SLL2Route& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bdname().size() > 0) {
    bdname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bdname_);
  }
  type_ = from.type_;
  clear_has_Event();
  switch (from.Event_case()) {
    case kMacRoute: {
      mutable_macroute()->::service_layer::SLL2MacRoute::MergeFrom(from.macroute());
      break;
    }
    case kImetRoute: {
      mutable_imetroute()->::service_layer::SLL2ImetRoute::MergeFrom(from.imetroute());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2Route)
}

void SLL2Route::SharedCtor() {
  bdname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  clear_has_Event();
  _cached_size_ = 0;
}

SLL2Route::~SLL2Route() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2Route)
  SharedDtor();
}

void SLL2Route::SharedDtor() {
  bdname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_Event()) {
    clear_Event();
  }
}

void SLL2Route::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2Route::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2Route& SLL2Route::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2Route();
  return *internal_default_instance();
}

SLL2Route* SLL2Route::New(::google::protobuf::Arena* arena) const {
  SLL2Route* n = new SLL2Route;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2Route::clear_Event() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLL2Route)
  switch (Event_case()) {
    case kMacRoute: {
      delete Event_.macroute_;
      break;
    }
    case kImetRoute: {
      delete Event_.imetroute_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void SLL2Route::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  clear_Event();
  _internal_metadata_.Clear();
}

bool SLL2Route::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2Route)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string BdName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bdname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bdname().data(), static_cast<int>(this->bdname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLL2Route.BdName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2RouteType Type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::service_layer::SLL2RouteType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2MacRoute MacRoute = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_macroute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2ImetRoute ImetRoute = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_imetroute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2Route)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2Route)
  return false;
#undef DO_
}

void SLL2Route::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string BdName = 1;
  if (this->bdname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2Route.BdName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bdname(), output);
  }

  // .service_layer.SLL2RouteType Type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .service_layer.SLL2MacRoute MacRoute = 3;
  if (has_macroute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *Event_.macroute_, output);
  }

  // .service_layer.SLL2ImetRoute ImetRoute = 4;
  if (has_imetroute()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *Event_.imetroute_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2Route)
}

::google::protobuf::uint8* SLL2Route::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2Route)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string BdName = 1;
  if (this->bdname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2Route.BdName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bdname(), target);
  }

  // .service_layer.SLL2RouteType Type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .service_layer.SLL2MacRoute MacRoute = 3;
  if (has_macroute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *Event_.macroute_, deterministic, target);
  }

  // .service_layer.SLL2ImetRoute ImetRoute = 4;
  if (has_imetroute()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *Event_.imetroute_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2Route)
  return target;
}

size_t SLL2Route::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2Route)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string BdName = 1;
  if (this->bdname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bdname());
  }

  // .service_layer.SLL2RouteType Type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  switch (Event_case()) {
    // .service_layer.SLL2MacRoute MacRoute = 3;
    case kMacRoute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.macroute_);
      break;
    }
    // .service_layer.SLL2ImetRoute ImetRoute = 4;
    case kImetRoute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.imetroute_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2Route::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2Route)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2Route* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2Route>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2Route)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2Route)
    MergeFrom(*source);
  }
}

void SLL2Route::MergeFrom(const SLL2Route& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2Route)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bdname().size() > 0) {

    bdname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bdname_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  switch (from.Event_case()) {
    case kMacRoute: {
      mutable_macroute()->::service_layer::SLL2MacRoute::MergeFrom(from.macroute());
      break;
    }
    case kImetRoute: {
      mutable_imetroute()->::service_layer::SLL2ImetRoute::MergeFrom(from.imetroute());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void SLL2Route::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2Route::CopyFrom(const SLL2Route& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2Route)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2Route::IsInitialized() const {
  return true;
}

void SLL2Route::Swap(SLL2Route* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2Route::InternalSwap(SLL2Route* other) {
  using std::swap;
  bdname_.Swap(&other->bdname_);
  swap(type_, other->type_);
  swap(Event_, other->Event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2Route::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2RouteMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2RouteMsg::kCorrelatorFieldNumber;
const int SLL2RouteMsg::kOperFieldNumber;
const int SLL2RouteMsg::kRoutesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2RouteMsg::SLL2RouteMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2RouteMsg)
}
SLL2RouteMsg::SLL2RouteMsg(const SLL2RouteMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      routes_(from.routes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&correlator_, &from.correlator_,
    static_cast<size_t>(reinterpret_cast<char*>(&oper_) -
    reinterpret_cast<char*>(&correlator_)) + sizeof(oper_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2RouteMsg)
}

void SLL2RouteMsg::SharedCtor() {
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(oper_));
  _cached_size_ = 0;
}

SLL2RouteMsg::~SLL2RouteMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2RouteMsg)
  SharedDtor();
}

void SLL2RouteMsg::SharedDtor() {
}

void SLL2RouteMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2RouteMsg::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2RouteMsg& SLL2RouteMsg::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteMsg();
  return *internal_default_instance();
}

SLL2RouteMsg* SLL2RouteMsg::New(::google::protobuf::Arena* arena) const {
  SLL2RouteMsg* n = new SLL2RouteMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2RouteMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2RouteMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(oper_));
  _internal_metadata_.Clear();
}

bool SLL2RouteMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2RouteMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLObjectOp Oper = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLObjectOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLL2Route Routes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2RouteMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2RouteMsg)
  return false;
#undef DO_
}

void SLL2RouteMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2RouteMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // .service_layer.SLObjectOp Oper = 2;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->oper(), output);
  }

  // repeated .service_layer.SLL2Route Routes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->routes(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2RouteMsg)
}

::google::protobuf::uint8* SLL2RouteMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2RouteMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // .service_layer.SLObjectOp Oper = 2;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->oper(), target);
  }

  // repeated .service_layer.SLL2Route Routes = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->routes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2RouteMsg)
  return target;
}

size_t SLL2RouteMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2RouteMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLL2Route Routes = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->routes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->routes(static_cast<int>(i)));
    }
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // .service_layer.SLObjectOp Oper = 2;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2RouteMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2RouteMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2RouteMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2RouteMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2RouteMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2RouteMsg)
    MergeFrom(*source);
  }
}

void SLL2RouteMsg::MergeFrom(const SLL2RouteMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2RouteMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLL2RouteMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2RouteMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2RouteMsg::CopyFrom(const SLL2RouteMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2RouteMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2RouteMsg::IsInitialized() const {
  return true;
}

void SLL2RouteMsg::Swap(SLL2RouteMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2RouteMsg::InternalSwap(SLL2RouteMsg* other) {
  using std::swap;
  routes_.InternalSwap(&other->routes_);
  swap(correlator_, other->correlator_);
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2RouteMsg::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2RouteRes::InitAsDefaultInstance() {
  ::service_layer::_SLL2RouteRes_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  ::service_layer::_SLL2RouteRes_default_instance_._instance.get_mutable()->routekey_ = const_cast< ::service_layer::SLL2RouteKey*>(
      ::service_layer::SLL2RouteKey::internal_default_instance());
}
void SLL2RouteRes::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2RouteRes::kErrStatusFieldNumber;
const int SLL2RouteRes::kRouteKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2RouteRes::SLL2RouteRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteRes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2RouteRes)
}
SLL2RouteRes::SLL2RouteRes(const SLL2RouteRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  if (from.has_routekey()) {
    routekey_ = new ::service_layer::SLL2RouteKey(*from.routekey_);
  } else {
    routekey_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2RouteRes)
}

void SLL2RouteRes::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&routekey_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(routekey_));
  _cached_size_ = 0;
}

SLL2RouteRes::~SLL2RouteRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2RouteRes)
  SharedDtor();
}

void SLL2RouteRes::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
  if (this != internal_default_instance()) delete routekey_;
}

void SLL2RouteRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2RouteRes::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2RouteRes& SLL2RouteRes::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteRes();
  return *internal_default_instance();
}

SLL2RouteRes* SLL2RouteRes::New(::google::protobuf::Arena* arena) const {
  SLL2RouteRes* n = new SLL2RouteRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2RouteRes::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2RouteRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  if (GetArenaNoVirtual() == NULL && routekey_ != NULL) {
    delete routekey_;
  }
  routekey_ = NULL;
  _internal_metadata_.Clear();
}

bool SLL2RouteRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2RouteRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2RouteKey RouteKey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_routekey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2RouteRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2RouteRes)
  return false;
#undef DO_
}

void SLL2RouteRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2RouteRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // .service_layer.SLL2RouteKey RouteKey = 2;
  if (this->has_routekey()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->routekey_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2RouteRes)
}

::google::protobuf::uint8* SLL2RouteRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2RouteRes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // .service_layer.SLL2RouteKey RouteKey = 2;
  if (this->has_routekey()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->routekey_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2RouteRes)
  return target;
}

size_t SLL2RouteRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2RouteRes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // .service_layer.SLL2RouteKey RouteKey = 2;
  if (this->has_routekey()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->routekey_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2RouteRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2RouteRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2RouteRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2RouteRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2RouteRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2RouteRes)
    MergeFrom(*source);
  }
}

void SLL2RouteRes::MergeFrom(const SLL2RouteRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2RouteRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.has_routekey()) {
    mutable_routekey()->::service_layer::SLL2RouteKey::MergeFrom(from.routekey());
  }
}

void SLL2RouteRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2RouteRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2RouteRes::CopyFrom(const SLL2RouteRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2RouteRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2RouteRes::IsInitialized() const {
  return true;
}

void SLL2RouteRes::Swap(SLL2RouteRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2RouteRes::InternalSwap(SLL2RouteRes* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(routekey_, other->routekey_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2RouteRes::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2RouteMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLL2RouteMsgRsp_default_instance_._instance.get_mutable()->statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLL2RouteMsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2RouteMsgRsp::kCorrelatorFieldNumber;
const int SLL2RouteMsgRsp::kStatusSummaryFieldNumber;
const int SLL2RouteMsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2RouteMsgRsp::SLL2RouteMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2RouteMsgRsp)
}
SLL2RouteMsgRsp::SLL2RouteMsgRsp(const SLL2RouteMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statussummary()) {
    statussummary_ = new ::service_layer::SLErrorStatus(*from.statussummary_);
  } else {
    statussummary_ = NULL;
  }
  correlator_ = from.correlator_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2RouteMsgRsp)
}

void SLL2RouteMsgRsp::SharedCtor() {
  ::memset(&statussummary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&correlator_) -
      reinterpret_cast<char*>(&statussummary_)) + sizeof(correlator_));
  _cached_size_ = 0;
}

SLL2RouteMsgRsp::~SLL2RouteMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2RouteMsgRsp)
  SharedDtor();
}

void SLL2RouteMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) delete statussummary_;
}

void SLL2RouteMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2RouteMsgRsp::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2RouteMsgRsp& SLL2RouteMsgRsp::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteMsgRsp();
  return *internal_default_instance();
}

SLL2RouteMsgRsp* SLL2RouteMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLL2RouteMsgRsp* n = new SLL2RouteMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2RouteMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2RouteMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
  correlator_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SLL2RouteMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2RouteMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus StatusSummary = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLL2RouteRes Results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2RouteMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2RouteMsgRsp)
  return false;
#undef DO_
}

void SLL2RouteMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2RouteMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // .service_layer.SLErrorStatus StatusSummary = 2;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->statussummary_, output);
  }

  // repeated .service_layer.SLL2RouteRes Results = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2RouteMsgRsp)
}

::google::protobuf::uint8* SLL2RouteMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2RouteMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // .service_layer.SLErrorStatus StatusSummary = 2;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->statussummary_, deterministic, target);
  }

  // repeated .service_layer.SLL2RouteRes Results = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2RouteMsgRsp)
  return target;
}

size_t SLL2RouteMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2RouteMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLL2RouteRes Results = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // .service_layer.SLErrorStatus StatusSummary = 2;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->statussummary_);
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2RouteMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2RouteMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2RouteMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2RouteMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2RouteMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2RouteMsgRsp)
    MergeFrom(*source);
  }
}

void SLL2RouteMsgRsp::MergeFrom(const SLL2RouteMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2RouteMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
}

void SLL2RouteMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2RouteMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2RouteMsgRsp::CopyFrom(const SLL2RouteMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2RouteMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2RouteMsgRsp::IsInitialized() const {
  return true;
}

void SLL2RouteMsgRsp::Swap(SLL2RouteMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2RouteMsgRsp::InternalSwap(SLL2RouteMsgRsp* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  swap(statussummary_, other->statussummary_);
  swap(correlator_, other->correlator_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2RouteMsgRsp::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2GetNotifMsg::InitAsDefaultInstance() {
  ::service_layer::_SLL2GetNotifMsg_default_instance_.bdall_ = false;
  ::service_layer::_SLL2GetNotifMsg_default_instance_.bdname_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2GetNotifMsg::kOperFieldNumber;
const int SLL2GetNotifMsg::kCorrelatorFieldNumber;
const int SLL2GetNotifMsg::kGetNotifEofFieldNumber;
const int SLL2GetNotifMsg::kBdAllFieldNumber;
const int SLL2GetNotifMsg::kBdNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2GetNotifMsg::SLL2GetNotifMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2GetNotifMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2GetNotifMsg)
}
SLL2GetNotifMsg::SLL2GetNotifMsg(const SLL2GetNotifMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&correlator_, &from.correlator_,
    static_cast<size_t>(reinterpret_cast<char*>(&getnotifeof_) -
    reinterpret_cast<char*>(&correlator_)) + sizeof(getnotifeof_));
  clear_has_Request();
  switch (from.Request_case()) {
    case kBdAll: {
      set_bdall(from.bdall());
      break;
    }
    case kBdName: {
      set_bdname(from.bdname());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2GetNotifMsg)
}

void SLL2GetNotifMsg::SharedCtor() {
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnotifeof_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(getnotifeof_));
  clear_has_Request();
  _cached_size_ = 0;
}

SLL2GetNotifMsg::~SLL2GetNotifMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2GetNotifMsg)
  SharedDtor();
}

void SLL2GetNotifMsg::SharedDtor() {
  if (has_Request()) {
    clear_Request();
  }
}

void SLL2GetNotifMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2GetNotifMsg::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2GetNotifMsg& SLL2GetNotifMsg::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2GetNotifMsg();
  return *internal_default_instance();
}

SLL2GetNotifMsg* SLL2GetNotifMsg::New(::google::protobuf::Arena* arena) const {
  SLL2GetNotifMsg* n = new SLL2GetNotifMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2GetNotifMsg::clear_Request() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLL2GetNotifMsg)
  switch (Request_case()) {
    case kBdAll: {
      // No need to clear
      break;
    }
    case kBdName: {
      Request_.bdname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_NOT_SET;
}


void SLL2GetNotifMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2GetNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnotifeof_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(getnotifeof_));
  clear_Request();
  _internal_metadata_.Clear();
}

bool SLL2GetNotifMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2GetNotifMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLNotifOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLNotifOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Correlator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool GetNotifEof = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getnotifeof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool BdAll = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          clear_Request();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &Request_.bdall_)));
          set_has_bdall();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BdName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bdname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bdname().data(), static_cast<int>(this->bdname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLL2GetNotifMsg.BdName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2GetNotifMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2GetNotifMsg)
  return false;
#undef DO_
}

void SLL2GetNotifMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2GetNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->correlator(), output);
  }

  // bool GetNotifEof = 3;
  if (this->getnotifeof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->getnotifeof(), output);
  }

  // bool BdAll = 4;
  if (has_bdall()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bdall(), output);
  }

  // string BdName = 5;
  if (has_bdname()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2GetNotifMsg.BdName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->bdname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2GetNotifMsg)
}

::google::protobuf::uint8* SLL2GetNotifMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2GetNotifMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->correlator(), target);
  }

  // bool GetNotifEof = 3;
  if (this->getnotifeof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->getnotifeof(), target);
  }

  // bool BdAll = 4;
  if (has_bdall()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bdall(), target);
  }

  // string BdName = 5;
  if (has_bdname()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2GetNotifMsg.BdName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->bdname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2GetNotifMsg)
  return target;
}

size_t SLL2GetNotifMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2GetNotifMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  // bool GetNotifEof = 3;
  if (this->getnotifeof() != 0) {
    total_size += 1 + 1;
  }

  switch (Request_case()) {
    // bool BdAll = 4;
    case kBdAll: {
      total_size += 1 + 1;
      break;
    }
    // string BdName = 5;
    case kBdName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bdname());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2GetNotifMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2GetNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2GetNotifMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2GetNotifMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2GetNotifMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2GetNotifMsg)
    MergeFrom(*source);
  }
}

void SLL2GetNotifMsg::MergeFrom(const SLL2GetNotifMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2GetNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
  if (from.getnotifeof() != 0) {
    set_getnotifeof(from.getnotifeof());
  }
  switch (from.Request_case()) {
    case kBdAll: {
      set_bdall(from.bdall());
      break;
    }
    case kBdName: {
      set_bdname(from.bdname());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
}

void SLL2GetNotifMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2GetNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2GetNotifMsg::CopyFrom(const SLL2GetNotifMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2GetNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2GetNotifMsg::IsInitialized() const {
  return true;
}

void SLL2GetNotifMsg::Swap(SLL2GetNotifMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2GetNotifMsg::InternalSwap(SLL2GetNotifMsg* other) {
  using std::swap;
  swap(correlator_, other->correlator_);
  swap(oper_, other->oper_);
  swap(getnotifeof_, other->getnotifeof_);
  swap(Request_, other->Request_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2GetNotifMsg::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2RouteNotif::InitAsDefaultInstance() {
  ::service_layer::_SLL2RouteNotif_default_instance_._instance.get_mutable()->routes_ = const_cast< ::service_layer::SLL2Route*>(
      ::service_layer::SLL2Route::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2RouteNotif::kOperFieldNumber;
const int SLL2RouteNotif::kRoutesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2RouteNotif::SLL2RouteNotif()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteNotif();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2RouteNotif)
}
SLL2RouteNotif::SLL2RouteNotif(const SLL2RouteNotif& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_routes()) {
    routes_ = new ::service_layer::SLL2Route(*from.routes_);
  } else {
    routes_ = NULL;
  }
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2RouteNotif)
}

void SLL2RouteNotif::SharedCtor() {
  ::memset(&routes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_) -
      reinterpret_cast<char*>(&routes_)) + sizeof(oper_));
  _cached_size_ = 0;
}

SLL2RouteNotif::~SLL2RouteNotif() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2RouteNotif)
  SharedDtor();
}

void SLL2RouteNotif::SharedDtor() {
  if (this != internal_default_instance()) delete routes_;
}

void SLL2RouteNotif::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2RouteNotif::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2RouteNotif& SLL2RouteNotif::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2RouteNotif();
  return *internal_default_instance();
}

SLL2RouteNotif* SLL2RouteNotif::New(::google::protobuf::Arena* arena) const {
  SLL2RouteNotif* n = new SLL2RouteNotif;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2RouteNotif::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2RouteNotif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && routes_ != NULL) {
    delete routes_;
  }
  routes_ = NULL;
  oper_ = 0;
  _internal_metadata_.Clear();
}

bool SLL2RouteNotif::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2RouteNotif)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLObjectOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLObjectOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2Route Routes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2RouteNotif)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2RouteNotif)
  return false;
#undef DO_
}

void SLL2RouteNotif::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2RouteNotif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // .service_layer.SLL2Route Routes = 2;
  if (this->has_routes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->routes_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2RouteNotif)
}

::google::protobuf::uint8* SLL2RouteNotif::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2RouteNotif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // .service_layer.SLL2Route Routes = 2;
  if (this->has_routes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->routes_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2RouteNotif)
  return target;
}

size_t SLL2RouteNotif::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2RouteNotif)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLL2Route Routes = 2;
  if (this->has_routes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->routes_);
  }

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2RouteNotif::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2RouteNotif)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2RouteNotif* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2RouteNotif>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2RouteNotif)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2RouteNotif)
    MergeFrom(*source);
  }
}

void SLL2RouteNotif::MergeFrom(const SLL2RouteNotif& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2RouteNotif)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_routes()) {
    mutable_routes()->::service_layer::SLL2Route::MergeFrom(from.routes());
  }
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLL2RouteNotif::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2RouteNotif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2RouteNotif::CopyFrom(const SLL2RouteNotif& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2RouteNotif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2RouteNotif::IsInitialized() const {
  return true;
}

void SLL2RouteNotif::Swap(SLL2RouteNotif* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2RouteNotif::InternalSwap(SLL2RouteNotif* other) {
  using std::swap;
  swap(routes_, other->routes_);
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2RouteNotif::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2BdStateInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2BdStateInfo::kBdNameFieldNumber;
const int SLL2BdStateInfo::kBdStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2BdStateInfo::SLL2BdStateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2BdStateInfo();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2BdStateInfo)
}
SLL2BdStateInfo::SLL2BdStateInfo(const SLL2BdStateInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bdname().size() > 0) {
    bdname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bdname_);
  }
  bdstate_ = from.bdstate_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2BdStateInfo)
}

void SLL2BdStateInfo::SharedCtor() {
  bdname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bdstate_ = 0;
  _cached_size_ = 0;
}

SLL2BdStateInfo::~SLL2BdStateInfo() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2BdStateInfo)
  SharedDtor();
}

void SLL2BdStateInfo::SharedDtor() {
  bdname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLL2BdStateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2BdStateInfo::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2BdStateInfo& SLL2BdStateInfo::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2BdStateInfo();
  return *internal_default_instance();
}

SLL2BdStateInfo* SLL2BdStateInfo::New(::google::protobuf::Arena* arena) const {
  SLL2BdStateInfo* n = new SLL2BdStateInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2BdStateInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2BdStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bdstate_ = 0;
  _internal_metadata_.Clear();
}

bool SLL2BdStateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2BdStateInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string BdName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bdname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bdname().data(), static_cast<int>(this->bdname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLL2BdStateInfo.BdName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2BdStateInfo.SLL2BdState BdState = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bdstate(static_cast< ::service_layer::SLL2BdStateInfo_SLL2BdState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2BdStateInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2BdStateInfo)
  return false;
#undef DO_
}

void SLL2BdStateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2BdStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string BdName = 1;
  if (this->bdname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2BdStateInfo.BdName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bdname(), output);
  }

  // .service_layer.SLL2BdStateInfo.SLL2BdState BdState = 2;
  if (this->bdstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->bdstate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2BdStateInfo)
}

::google::protobuf::uint8* SLL2BdStateInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2BdStateInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string BdName = 1;
  if (this->bdname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2BdStateInfo.BdName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bdname(), target);
  }

  // .service_layer.SLL2BdStateInfo.SLL2BdState BdState = 2;
  if (this->bdstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->bdstate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2BdStateInfo)
  return target;
}

size_t SLL2BdStateInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2BdStateInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string BdName = 1;
  if (this->bdname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bdname());
  }

  // .service_layer.SLL2BdStateInfo.SLL2BdState BdState = 2;
  if (this->bdstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bdstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2BdStateInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2BdStateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2BdStateInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2BdStateInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2BdStateInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2BdStateInfo)
    MergeFrom(*source);
  }
}

void SLL2BdStateInfo::MergeFrom(const SLL2BdStateInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2BdStateInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bdname().size() > 0) {

    bdname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bdname_);
  }
  if (from.bdstate() != 0) {
    set_bdstate(from.bdstate());
  }
}

void SLL2BdStateInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2BdStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2BdStateInfo::CopyFrom(const SLL2BdStateInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2BdStateInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2BdStateInfo::IsInitialized() const {
  return true;
}

void SLL2BdStateInfo::Swap(SLL2BdStateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2BdStateInfo::InternalSwap(SLL2BdStateInfo* other) {
  using std::swap;
  bdname_.Swap(&other->bdname_);
  swap(bdstate_, other->bdstate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2BdStateInfo::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2NotifStatusMsg::InitAsDefaultInstance() {
  ::service_layer::_SLL2NotifStatusMsg_default_instance_._instance.get_mutable()->notifstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLL2NotifStatusMsg::clear_notifstatus() {
  if (GetArenaNoVirtual() == NULL && notifstatus_ != NULL) {
    delete notifstatus_;
  }
  notifstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2NotifStatusMsg::kOperFieldNumber;
const int SLL2NotifStatusMsg::kCorrelatorFieldNumber;
const int SLL2NotifStatusMsg::kBdNameFieldNumber;
const int SLL2NotifStatusMsg::kNotifStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2NotifStatusMsg::SLL2NotifStatusMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2NotifStatusMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2NotifStatusMsg)
}
SLL2NotifStatusMsg::SLL2NotifStatusMsg(const SLL2NotifStatusMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bdname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bdname().size() > 0) {
    bdname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bdname_);
  }
  if (from.has_notifstatus()) {
    notifstatus_ = new ::service_layer::SLErrorStatus(*from.notifstatus_);
  } else {
    notifstatus_ = NULL;
  }
  ::memcpy(&correlator_, &from.correlator_,
    static_cast<size_t>(reinterpret_cast<char*>(&oper_) -
    reinterpret_cast<char*>(&correlator_)) + sizeof(oper_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2NotifStatusMsg)
}

void SLL2NotifStatusMsg::SharedCtor() {
  bdname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&notifstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_) -
      reinterpret_cast<char*>(&notifstatus_)) + sizeof(oper_));
  _cached_size_ = 0;
}

SLL2NotifStatusMsg::~SLL2NotifStatusMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2NotifStatusMsg)
  SharedDtor();
}

void SLL2NotifStatusMsg::SharedDtor() {
  bdname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete notifstatus_;
}

void SLL2NotifStatusMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2NotifStatusMsg::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2NotifStatusMsg& SLL2NotifStatusMsg::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2NotifStatusMsg();
  return *internal_default_instance();
}

SLL2NotifStatusMsg* SLL2NotifStatusMsg::New(::google::protobuf::Arena* arena) const {
  SLL2NotifStatusMsg* n = new SLL2NotifStatusMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2NotifStatusMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2NotifStatusMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bdname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && notifstatus_ != NULL) {
    delete notifstatus_;
  }
  notifstatus_ = NULL;
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(oper_));
  _internal_metadata_.Clear();
}

bool SLL2NotifStatusMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2NotifStatusMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLNotifOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLNotifOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Correlator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BdName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bdname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bdname().data(), static_cast<int>(this->bdname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLL2NotifStatusMsg.BdName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus NotifStatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_notifstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2NotifStatusMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2NotifStatusMsg)
  return false;
#undef DO_
}

void SLL2NotifStatusMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2NotifStatusMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->correlator(), output);
  }

  // string BdName = 3;
  if (this->bdname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2NotifStatusMsg.BdName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bdname(), output);
  }

  // .service_layer.SLErrorStatus NotifStatus = 4;
  if (this->has_notifstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->notifstatus_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2NotifStatusMsg)
}

::google::protobuf::uint8* SLL2NotifStatusMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2NotifStatusMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->correlator(), target);
  }

  // string BdName = 3;
  if (this->bdname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bdname().data(), static_cast<int>(this->bdname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLL2NotifStatusMsg.BdName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bdname(), target);
  }

  // .service_layer.SLErrorStatus NotifStatus = 4;
  if (this->has_notifstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->notifstatus_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2NotifStatusMsg)
  return target;
}

size_t SLL2NotifStatusMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2NotifStatusMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string BdName = 3;
  if (this->bdname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bdname());
  }

  // .service_layer.SLErrorStatus NotifStatus = 4;
  if (this->has_notifstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->notifstatus_);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2NotifStatusMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2NotifStatusMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2NotifStatusMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2NotifStatusMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2NotifStatusMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2NotifStatusMsg)
    MergeFrom(*source);
  }
}

void SLL2NotifStatusMsg::MergeFrom(const SLL2NotifStatusMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2NotifStatusMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bdname().size() > 0) {

    bdname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bdname_);
  }
  if (from.has_notifstatus()) {
    mutable_notifstatus()->::service_layer::SLErrorStatus::MergeFrom(from.notifstatus());
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLL2NotifStatusMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2NotifStatusMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2NotifStatusMsg::CopyFrom(const SLL2NotifStatusMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2NotifStatusMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2NotifStatusMsg::IsInitialized() const {
  return true;
}

void SLL2NotifStatusMsg::Swap(SLL2NotifStatusMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2NotifStatusMsg::InternalSwap(SLL2NotifStatusMsg* other) {
  using std::swap;
  bdname_.Swap(&other->bdname_);
  swap(notifstatus_, other->notifstatus_);
  swap(correlator_, other->correlator_);
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2NotifStatusMsg::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLL2Notif::InitAsDefaultInstance() {
  ::service_layer::_SLL2Notif_default_instance_.errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  ::service_layer::_SLL2Notif_default_instance_.notifstatus_ = const_cast< ::service_layer::SLL2NotifStatusMsg*>(
      ::service_layer::SLL2NotifStatusMsg::internal_default_instance());
  ::service_layer::_SLL2Notif_default_instance_.bdstateinfo_ = const_cast< ::service_layer::SLL2BdStateInfo*>(
      ::service_layer::SLL2BdStateInfo::internal_default_instance());
  ::service_layer::_SLL2Notif_default_instance_.route_ = const_cast< ::service_layer::SLL2RouteNotif*>(
      ::service_layer::SLL2RouteNotif::internal_default_instance());
}
void SLL2Notif::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (errstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    set_has_errstatus();
    Event_.errstatus_ = errstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLL2Notif.ErrStatus)
}
void SLL2Notif::clear_errstatus() {
  if (has_errstatus()) {
    delete Event_.errstatus_;
    clear_has_Event();
  }
}
void SLL2Notif::set_allocated_notifstatus(::service_layer::SLL2NotifStatusMsg* notifstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (notifstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      notifstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, notifstatus, submessage_arena);
    }
    set_has_notifstatus();
    Event_.notifstatus_ = notifstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLL2Notif.NotifStatus)
}
void SLL2Notif::set_allocated_bdstateinfo(::service_layer::SLL2BdStateInfo* bdstateinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (bdstateinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bdstateinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bdstateinfo, submessage_arena);
    }
    set_has_bdstateinfo();
    Event_.bdstateinfo_ = bdstateinfo;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLL2Notif.BdStateInfo)
}
void SLL2Notif::set_allocated_route(::service_layer::SLL2RouteNotif* route) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (route) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      route = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, route, submessage_arena);
    }
    set_has_route();
    Event_.route_ = route;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLL2Notif.Route)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLL2Notif::kEventTypeFieldNumber;
const int SLL2Notif::kErrStatusFieldNumber;
const int SLL2Notif::kNotifStatusFieldNumber;
const int SLL2Notif::kBdStateInfoFieldNumber;
const int SLL2Notif::kRouteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLL2Notif::SLL2Notif()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2Notif();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLL2Notif)
}
SLL2Notif::SLL2Notif(const SLL2Notif& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eventtype_ = from.eventtype_;
  clear_has_Event();
  switch (from.Event_case()) {
    case kErrStatus: {
      mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
      break;
    }
    case kNotifStatus: {
      mutable_notifstatus()->::service_layer::SLL2NotifStatusMsg::MergeFrom(from.notifstatus());
      break;
    }
    case kBdStateInfo: {
      mutable_bdstateinfo()->::service_layer::SLL2BdStateInfo::MergeFrom(from.bdstateinfo());
      break;
    }
    case kRoute: {
      mutable_route()->::service_layer::SLL2RouteNotif::MergeFrom(from.route());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLL2Notif)
}

void SLL2Notif::SharedCtor() {
  eventtype_ = 0;
  clear_has_Event();
  _cached_size_ = 0;
}

SLL2Notif::~SLL2Notif() {
  // @@protoc_insertion_point(destructor:service_layer.SLL2Notif)
  SharedDtor();
}

void SLL2Notif::SharedDtor() {
  if (has_Event()) {
    clear_Event();
  }
}

void SLL2Notif::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLL2Notif::descriptor() {
  ::protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLL2Notif& SLL2Notif::default_instance() {
  ::protobuf_sl_5fl2_5froute_2eproto::InitDefaultsSLL2Notif();
  return *internal_default_instance();
}

SLL2Notif* SLL2Notif::New(::google::protobuf::Arena* arena) const {
  SLL2Notif* n = new SLL2Notif;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLL2Notif::clear_Event() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLL2Notif)
  switch (Event_case()) {
    case kErrStatus: {
      delete Event_.errstatus_;
      break;
    }
    case kNotifStatus: {
      delete Event_.notifstatus_;
      break;
    }
    case kBdStateInfo: {
      delete Event_.bdstateinfo_;
      break;
    }
    case kRoute: {
      delete Event_.route_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void SLL2Notif::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLL2Notif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eventtype_ = 0;
  clear_Event();
  _internal_metadata_.Clear();
}

bool SLL2Notif::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLL2Notif)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLL2NotifType EventType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_eventtype(static_cast< ::service_layer::SLL2NotifType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2NotifStatusMsg NotifStatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_notifstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2BdStateInfo BdStateInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bdstateinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLL2RouteNotif Route = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLL2Notif)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLL2Notif)
  return false;
#undef DO_
}

void SLL2Notif::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLL2Notif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLL2NotifType EventType = 1;
  if (this->eventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eventtype(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *Event_.errstatus_, output);
  }

  // .service_layer.SLL2NotifStatusMsg NotifStatus = 3;
  if (has_notifstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *Event_.notifstatus_, output);
  }

  // .service_layer.SLL2BdStateInfo BdStateInfo = 4;
  if (has_bdstateinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *Event_.bdstateinfo_, output);
  }

  // .service_layer.SLL2RouteNotif Route = 5;
  if (has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *Event_.route_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLL2Notif)
}

::google::protobuf::uint8* SLL2Notif::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLL2Notif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLL2NotifType EventType = 1;
  if (this->eventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eventtype(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *Event_.errstatus_, deterministic, target);
  }

  // .service_layer.SLL2NotifStatusMsg NotifStatus = 3;
  if (has_notifstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *Event_.notifstatus_, deterministic, target);
  }

  // .service_layer.SLL2BdStateInfo BdStateInfo = 4;
  if (has_bdstateinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *Event_.bdstateinfo_, deterministic, target);
  }

  // .service_layer.SLL2RouteNotif Route = 5;
  if (has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *Event_.route_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLL2Notif)
  return target;
}

size_t SLL2Notif::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLL2Notif)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLL2NotifType EventType = 1;
  if (this->eventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->eventtype());
  }

  switch (Event_case()) {
    // .service_layer.SLErrorStatus ErrStatus = 2;
    case kErrStatus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.errstatus_);
      break;
    }
    // .service_layer.SLL2NotifStatusMsg NotifStatus = 3;
    case kNotifStatus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.notifstatus_);
      break;
    }
    // .service_layer.SLL2BdStateInfo BdStateInfo = 4;
    case kBdStateInfo: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.bdstateinfo_);
      break;
    }
    // .service_layer.SLL2RouteNotif Route = 5;
    case kRoute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.route_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLL2Notif::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLL2Notif)
  GOOGLE_DCHECK_NE(&from, this);
  const SLL2Notif* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLL2Notif>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLL2Notif)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLL2Notif)
    MergeFrom(*source);
  }
}

void SLL2Notif::MergeFrom(const SLL2Notif& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLL2Notif)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eventtype() != 0) {
    set_eventtype(from.eventtype());
  }
  switch (from.Event_case()) {
    case kErrStatus: {
      mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
      break;
    }
    case kNotifStatus: {
      mutable_notifstatus()->::service_layer::SLL2NotifStatusMsg::MergeFrom(from.notifstatus());
      break;
    }
    case kBdStateInfo: {
      mutable_bdstateinfo()->::service_layer::SLL2BdStateInfo::MergeFrom(from.bdstateinfo());
      break;
    }
    case kRoute: {
      mutable_route()->::service_layer::SLL2RouteNotif::MergeFrom(from.route());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void SLL2Notif::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLL2Notif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLL2Notif::CopyFrom(const SLL2Notif& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLL2Notif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLL2Notif::IsInitialized() const {
  return true;
}

void SLL2Notif::Swap(SLL2Notif* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLL2Notif::InternalSwap(SLL2Notif* other) {
  using std::swap;
  swap(eventtype_, other->eventtype_);
  swap(Event_, other->Event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLL2Notif::GetMetadata() const {
  protobuf_sl_5fl2_5froute_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5fl2_5froute_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
