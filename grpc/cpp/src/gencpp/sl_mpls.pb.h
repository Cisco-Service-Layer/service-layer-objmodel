// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_mpls.proto

#ifndef PROTOBUF_sl_5fmpls_2eproto__INCLUDED
#define PROTOBUF_sl_5fmpls_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "sl_common_types.pb.h"
// @@protoc_insertion_point(includes)

namespace service_layer {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_sl_5fmpls_2eproto();
void protobuf_AssignDesc_sl_5fmpls_2eproto();
void protobuf_ShutdownFile_sl_5fmpls_2eproto();

class SLMplsGetMsg;
class SLMplsGetMsgRsp;
class SLMplsGetStatsMsgRsp;
class SLMplsIlmEntry;
class SLMplsIlmGetMsg;
class SLMplsIlmGetMsgRsp;
class SLMplsIlmKey;
class SLMplsIlmMsg;
class SLMplsIlmMsgRsp;
class SLMplsIlmRes;
class SLMplsLabelBlockGetMsg;
class SLMplsLabelBlockGetMsgRsp;
class SLMplsLabelBlockKey;
class SLMplsLabelBlockMsg;
class SLMplsLabelBlockMsgRes;
class SLMplsLabelBlockMsgRsp;
class SLMplsPath;
class SLMplsRegMsg;
class SLMplsRegMsgRsp;

enum SlLabelAction {
  SL_LABEL_ACTION_RESERVED = 0,
  SL_LABEL_ACTION_SWAP = 1,
  SL_LABEL_ACTION_POP_AND_FORWARD = 2,
  SL_LABEL_ACTION_POP_AND_LOOKUP_IPV4 = 3,
  SL_LABEL_ACTION_POP_AND_LOOKUP_IPV6 = 4,
  SlLabelAction_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SlLabelAction_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SlLabelAction_IsValid(int value);
const SlLabelAction SlLabelAction_MIN = SL_LABEL_ACTION_RESERVED;
const SlLabelAction SlLabelAction_MAX = SL_LABEL_ACTION_POP_AND_LOOKUP_IPV6;
const int SlLabelAction_ARRAYSIZE = SlLabelAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* SlLabelAction_descriptor();
inline const ::std::string& SlLabelAction_Name(SlLabelAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    SlLabelAction_descriptor(), value);
}
inline bool SlLabelAction_Parse(
    const ::std::string& name, SlLabelAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SlLabelAction>(
    SlLabelAction_descriptor(), name, value);
}
// ===================================================================

class SLMplsLabelBlockKey : public ::google::protobuf::Message {
 public:
  SLMplsLabelBlockKey();
  virtual ~SLMplsLabelBlockKey();

  SLMplsLabelBlockKey(const SLMplsLabelBlockKey& from);

  inline SLMplsLabelBlockKey& operator=(const SLMplsLabelBlockKey& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsLabelBlockKey& default_instance();

  void Swap(SLMplsLabelBlockKey* other);

  // implements Message ----------------------------------------------

  inline SLMplsLabelBlockKey* New() const { return New(NULL); }

  SLMplsLabelBlockKey* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsLabelBlockKey& from);
  void MergeFrom(const SLMplsLabelBlockKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsLabelBlockKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 StartLabel = 1;
  void clear_startlabel();
  static const int kStartLabelFieldNumber = 1;
  ::google::protobuf::uint32 startlabel() const;
  void set_startlabel(::google::protobuf::uint32 value);

  // optional uint32 LabelBlockSize = 2;
  void clear_labelblocksize();
  static const int kLabelBlockSizeFieldNumber = 2;
  ::google::protobuf::uint32 labelblocksize() const;
  void set_labelblocksize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsLabelBlockKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 startlabel_;
  ::google::protobuf::uint32 labelblocksize_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsLabelBlockKey* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsLabelBlockMsg : public ::google::protobuf::Message {
 public:
  SLMplsLabelBlockMsg();
  virtual ~SLMplsLabelBlockMsg();

  SLMplsLabelBlockMsg(const SLMplsLabelBlockMsg& from);

  inline SLMplsLabelBlockMsg& operator=(const SLMplsLabelBlockMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsLabelBlockMsg& default_instance();

  void Swap(SLMplsLabelBlockMsg* other);

  // implements Message ----------------------------------------------

  inline SLMplsLabelBlockMsg* New() const { return New(NULL); }

  SLMplsLabelBlockMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsLabelBlockMsg& from);
  void MergeFrom(const SLMplsLabelBlockMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsLabelBlockMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLObjectOp Oper = 1;
  void clear_oper();
  static const int kOperFieldNumber = 1;
  ::service_layer::SLObjectOp oper() const;
  void set_oper(::service_layer::SLObjectOp value);

  // repeated .service_layer.SLMplsLabelBlockKey MplsBlocks = 2;
  int mplsblocks_size() const;
  void clear_mplsblocks();
  static const int kMplsBlocksFieldNumber = 2;
  const ::service_layer::SLMplsLabelBlockKey& mplsblocks(int index) const;
  ::service_layer::SLMplsLabelBlockKey* mutable_mplsblocks(int index);
  ::service_layer::SLMplsLabelBlockKey* add_mplsblocks();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockKey >*
      mutable_mplsblocks();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockKey >&
      mplsblocks() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsLabelBlockMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockKey > mplsblocks_;
  int oper_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsLabelBlockMsg* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsLabelBlockMsgRes : public ::google::protobuf::Message {
 public:
  SLMplsLabelBlockMsgRes();
  virtual ~SLMplsLabelBlockMsgRes();

  SLMplsLabelBlockMsgRes(const SLMplsLabelBlockMsgRes& from);

  inline SLMplsLabelBlockMsgRes& operator=(const SLMplsLabelBlockMsgRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsLabelBlockMsgRes& default_instance();

  void Swap(SLMplsLabelBlockMsgRes* other);

  // implements Message ----------------------------------------------

  inline SLMplsLabelBlockMsgRes* New() const { return New(NULL); }

  SLMplsLabelBlockMsgRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsLabelBlockMsgRes& from);
  void MergeFrom(const SLMplsLabelBlockMsgRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsLabelBlockMsgRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // optional .service_layer.SLMplsLabelBlockKey Key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::service_layer::SLMplsLabelBlockKey& key() const;
  ::service_layer::SLMplsLabelBlockKey* mutable_key();
  ::service_layer::SLMplsLabelBlockKey* release_key();
  void set_allocated_key(::service_layer::SLMplsLabelBlockKey* key);

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsLabelBlockMsgRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::service_layer::SLMplsLabelBlockKey* key_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsLabelBlockMsgRes* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsLabelBlockMsgRsp : public ::google::protobuf::Message {
 public:
  SLMplsLabelBlockMsgRsp();
  virtual ~SLMplsLabelBlockMsgRsp();

  SLMplsLabelBlockMsgRsp(const SLMplsLabelBlockMsgRsp& from);

  inline SLMplsLabelBlockMsgRsp& operator=(const SLMplsLabelBlockMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsLabelBlockMsgRsp& default_instance();

  void Swap(SLMplsLabelBlockMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLMplsLabelBlockMsgRsp* New() const { return New(NULL); }

  SLMplsLabelBlockMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsLabelBlockMsgRsp& from);
  void MergeFrom(const SLMplsLabelBlockMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsLabelBlockMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLErrorStatus StatusSummary = 1;
  bool has_statussummary() const;
  void clear_statussummary();
  static const int kStatusSummaryFieldNumber = 1;
  const ::service_layer::SLErrorStatus& statussummary() const;
  ::service_layer::SLErrorStatus* mutable_statussummary();
  ::service_layer::SLErrorStatus* release_statussummary();
  void set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary);

  // repeated .service_layer.SLMplsLabelBlockMsgRes Results = 2;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 2;
  const ::service_layer::SLMplsLabelBlockMsgRes& results(int index) const;
  ::service_layer::SLMplsLabelBlockMsgRes* mutable_results(int index);
  ::service_layer::SLMplsLabelBlockMsgRes* add_results();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockMsgRes >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockMsgRes >&
      results() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsLabelBlockMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLErrorStatus* statussummary_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockMsgRes > results_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsLabelBlockMsgRsp* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsLabelBlockGetMsg : public ::google::protobuf::Message {
 public:
  SLMplsLabelBlockGetMsg();
  virtual ~SLMplsLabelBlockGetMsg();

  SLMplsLabelBlockGetMsg(const SLMplsLabelBlockGetMsg& from);

  inline SLMplsLabelBlockGetMsg& operator=(const SLMplsLabelBlockGetMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsLabelBlockGetMsg& default_instance();

  void Swap(SLMplsLabelBlockGetMsg* other);

  // implements Message ----------------------------------------------

  inline SLMplsLabelBlockGetMsg* New() const { return New(NULL); }

  SLMplsLabelBlockGetMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsLabelBlockGetMsg& from);
  void MergeFrom(const SLMplsLabelBlockGetMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsLabelBlockGetMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLMplsLabelBlockKey Key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::service_layer::SLMplsLabelBlockKey& key() const;
  ::service_layer::SLMplsLabelBlockKey* mutable_key();
  ::service_layer::SLMplsLabelBlockKey* release_key();
  void set_allocated_key(::service_layer::SLMplsLabelBlockKey* key);

  // optional uint32 EntriesCount = 2;
  void clear_entriescount();
  static const int kEntriesCountFieldNumber = 2;
  ::google::protobuf::uint32 entriescount() const;
  void set_entriescount(::google::protobuf::uint32 value);

  // optional bool GetNext = 3;
  void clear_getnext();
  static const int kGetNextFieldNumber = 3;
  bool getnext() const;
  void set_getnext(bool value);

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsLabelBlockGetMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLMplsLabelBlockKey* key_;
  ::google::protobuf::uint32 entriescount_;
  bool getnext_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsLabelBlockGetMsg* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsLabelBlockGetMsgRsp : public ::google::protobuf::Message {
 public:
  SLMplsLabelBlockGetMsgRsp();
  virtual ~SLMplsLabelBlockGetMsgRsp();

  SLMplsLabelBlockGetMsgRsp(const SLMplsLabelBlockGetMsgRsp& from);

  inline SLMplsLabelBlockGetMsgRsp& operator=(const SLMplsLabelBlockGetMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsLabelBlockGetMsgRsp& default_instance();

  void Swap(SLMplsLabelBlockGetMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLMplsLabelBlockGetMsgRsp* New() const { return New(NULL); }

  SLMplsLabelBlockGetMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsLabelBlockGetMsgRsp& from);
  void MergeFrom(const SLMplsLabelBlockGetMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsLabelBlockGetMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool Eof = 1;
  void clear_eof();
  static const int kEofFieldNumber = 1;
  bool eof() const;
  void set_eof(bool value);

  // optional .service_layer.SLErrorStatus ErrStatus = 2;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 2;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // repeated .service_layer.SLMplsLabelBlockKey Entries = 3;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 3;
  const ::service_layer::SLMplsLabelBlockKey& entries(int index) const;
  ::service_layer::SLMplsLabelBlockKey* mutable_entries(int index);
  ::service_layer::SLMplsLabelBlockKey* add_entries();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockKey >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockKey >&
      entries() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsLabelBlockGetMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockKey > entries_;
  bool eof_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsLabelBlockGetMsgRsp* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsRegMsg : public ::google::protobuf::Message {
 public:
  SLMplsRegMsg();
  virtual ~SLMplsRegMsg();

  SLMplsRegMsg(const SLMplsRegMsg& from);

  inline SLMplsRegMsg& operator=(const SLMplsRegMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsRegMsg& default_instance();

  void Swap(SLMplsRegMsg* other);

  // implements Message ----------------------------------------------

  inline SLMplsRegMsg* New() const { return New(NULL); }

  SLMplsRegMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsRegMsg& from);
  void MergeFrom(const SLMplsRegMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsRegMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLRegOp Oper = 1;
  void clear_oper();
  static const int kOperFieldNumber = 1;
  ::service_layer::SLRegOp oper() const;
  void set_oper(::service_layer::SLRegOp value);

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsRegMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int oper_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsRegMsg* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsRegMsgRsp : public ::google::protobuf::Message {
 public:
  SLMplsRegMsgRsp();
  virtual ~SLMplsRegMsgRsp();

  SLMplsRegMsgRsp(const SLMplsRegMsgRsp& from);

  inline SLMplsRegMsgRsp& operator=(const SLMplsRegMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsRegMsgRsp& default_instance();

  void Swap(SLMplsRegMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLMplsRegMsgRsp* New() const { return New(NULL); }

  SLMplsRegMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsRegMsgRsp& from);
  void MergeFrom(const SLMplsRegMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsRegMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsRegMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLErrorStatus* errstatus_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsRegMsgRsp* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsGetMsg : public ::google::protobuf::Message {
 public:
  SLMplsGetMsg();
  virtual ~SLMplsGetMsg();

  SLMplsGetMsg(const SLMplsGetMsg& from);

  inline SLMplsGetMsg& operator=(const SLMplsGetMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsGetMsg& default_instance();

  void Swap(SLMplsGetMsg* other);

  // implements Message ----------------------------------------------

  inline SLMplsGetMsg* New() const { return New(NULL); }

  SLMplsGetMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsGetMsg& from);
  void MergeFrom(const SLMplsGetMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsGetMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsGetMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsGetMsg* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsGetMsgRsp : public ::google::protobuf::Message {
 public:
  SLMplsGetMsgRsp();
  virtual ~SLMplsGetMsgRsp();

  SLMplsGetMsgRsp(const SLMplsGetMsgRsp& from);

  inline SLMplsGetMsgRsp& operator=(const SLMplsGetMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsGetMsgRsp& default_instance();

  void Swap(SLMplsGetMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLMplsGetMsgRsp* New() const { return New(NULL); }

  SLMplsGetMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsGetMsgRsp& from);
  void MergeFrom(const SLMplsGetMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsGetMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // optional uint32 MaxLabelsPerBlock = 2;
  void clear_maxlabelsperblock();
  static const int kMaxLabelsPerBlockFieldNumber = 2;
  ::google::protobuf::uint32 maxlabelsperblock() const;
  void set_maxlabelsperblock(::google::protobuf::uint32 value);

  // optional uint32 MaxLabelblocksPerLabelblockmsg = 3;
  void clear_maxlabelblocksperlabelblockmsg();
  static const int kMaxLabelblocksPerLabelblockmsgFieldNumber = 3;
  ::google::protobuf::uint32 maxlabelblocksperlabelblockmsg() const;
  void set_maxlabelblocksperlabelblockmsg(::google::protobuf::uint32 value);

  // optional uint32 MinStartLabel = 4;
  void clear_minstartlabel();
  static const int kMinStartLabelFieldNumber = 4;
  ::google::protobuf::uint32 minstartlabel() const;
  void set_minstartlabel(::google::protobuf::uint32 value);

  // optional uint32 LabelTableSize = 5;
  void clear_labeltablesize();
  static const int kLabelTableSizeFieldNumber = 5;
  ::google::protobuf::uint32 labeltablesize() const;
  void set_labeltablesize(::google::protobuf::uint32 value);

  // optional uint32 MaxIlmPerIlmmsg = 6;
  void clear_maxilmperilmmsg();
  static const int kMaxIlmPerIlmmsgFieldNumber = 6;
  ::google::protobuf::uint32 maxilmperilmmsg() const;
  void set_maxilmperilmmsg(::google::protobuf::uint32 value);

  // optional uint32 MaxPathsPerIlm = 7;
  void clear_maxpathsperilm();
  static const int kMaxPathsPerIlmFieldNumber = 7;
  ::google::protobuf::uint32 maxpathsperilm() const;
  void set_maxpathsperilm(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsGetMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::uint32 maxlabelsperblock_;
  ::google::protobuf::uint32 maxlabelblocksperlabelblockmsg_;
  ::google::protobuf::uint32 minstartlabel_;
  ::google::protobuf::uint32 labeltablesize_;
  ::google::protobuf::uint32 maxilmperilmmsg_;
  ::google::protobuf::uint32 maxpathsperilm_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsGetMsgRsp* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsGetStatsMsgRsp : public ::google::protobuf::Message {
 public:
  SLMplsGetStatsMsgRsp();
  virtual ~SLMplsGetStatsMsgRsp();

  SLMplsGetStatsMsgRsp(const SLMplsGetStatsMsgRsp& from);

  inline SLMplsGetStatsMsgRsp& operator=(const SLMplsGetStatsMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsGetStatsMsgRsp& default_instance();

  void Swap(SLMplsGetStatsMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLMplsGetStatsMsgRsp* New() const { return New(NULL); }

  SLMplsGetStatsMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsGetStatsMsgRsp& from);
  void MergeFrom(const SLMplsGetStatsMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsGetStatsMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsGetStatsMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLErrorStatus* errstatus_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsGetStatsMsgRsp* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsPath : public ::google::protobuf::Message {
 public:
  SLMplsPath();
  virtual ~SLMplsPath();

  SLMplsPath(const SLMplsPath& from);

  inline SLMplsPath& operator=(const SLMplsPath& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsPath& default_instance();

  void Swap(SLMplsPath* other);

  // implements Message ----------------------------------------------

  inline SLMplsPath* New() const { return New(NULL); }

  SLMplsPath* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsPath& from);
  void MergeFrom(const SLMplsPath& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsPath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLIpAddress NexthopAddress = 1;
  bool has_nexthopaddress() const;
  void clear_nexthopaddress();
  static const int kNexthopAddressFieldNumber = 1;
  const ::service_layer::SLIpAddress& nexthopaddress() const;
  ::service_layer::SLIpAddress* mutable_nexthopaddress();
  ::service_layer::SLIpAddress* release_nexthopaddress();
  void set_allocated_nexthopaddress(::service_layer::SLIpAddress* nexthopaddress);

  // optional .service_layer.SLInterface NexthopInterface = 2;
  bool has_nexthopinterface() const;
  void clear_nexthopinterface();
  static const int kNexthopInterfaceFieldNumber = 2;
  const ::service_layer::SLInterface& nexthopinterface() const;
  ::service_layer::SLInterface* mutable_nexthopinterface();
  ::service_layer::SLInterface* release_nexthopinterface();
  void set_allocated_nexthopinterface(::service_layer::SLInterface* nexthopinterface);

  // optional uint32 LoadMetric = 3;
  void clear_loadmetric();
  static const int kLoadMetricFieldNumber = 3;
  ::google::protobuf::uint32 loadmetric() const;
  void set_loadmetric(::google::protobuf::uint32 value);

  // optional string VrfName = 4;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 4;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // optional .service_layer.SlLabelAction Action = 5;
  void clear_action();
  static const int kActionFieldNumber = 5;
  ::service_layer::SlLabelAction action() const;
  void set_action(::service_layer::SlLabelAction value);

  // optional uint32 PathId = 6;
  void clear_pathid();
  static const int kPathIdFieldNumber = 6;
  ::google::protobuf::uint32 pathid() const;
  void set_pathid(::google::protobuf::uint32 value);

  // repeated uint64 ProtectedPathBitmap = 7;
  int protectedpathbitmap_size() const;
  void clear_protectedpathbitmap();
  static const int kProtectedPathBitmapFieldNumber = 7;
  ::google::protobuf::uint64 protectedpathbitmap(int index) const;
  void set_protectedpathbitmap(int index, ::google::protobuf::uint64 value);
  void add_protectedpathbitmap(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      protectedpathbitmap() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_protectedpathbitmap();

  // repeated uint32 LabelStack = 8;
  int labelstack_size() const;
  void clear_labelstack();
  static const int kLabelStackFieldNumber = 8;
  ::google::protobuf::uint32 labelstack(int index) const;
  void set_labelstack(int index, ::google::protobuf::uint32 value);
  void add_labelstack(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      labelstack() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_labelstack();

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  int remoteaddress_size() const;
  void clear_remoteaddress();
  static const int kRemoteAddressFieldNumber = 9;
  const ::service_layer::SLIpAddress& remoteaddress(int index) const;
  ::service_layer::SLIpAddress* mutable_remoteaddress(int index);
  ::service_layer::SLIpAddress* add_remoteaddress();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >*
      mutable_remoteaddress();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >&
      remoteaddress() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsPath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLIpAddress* nexthopaddress_;
  ::service_layer::SLInterface* nexthopinterface_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::google::protobuf::uint32 loadmetric_;
  int action_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > protectedpathbitmap_;
  mutable int _protectedpathbitmap_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > labelstack_;
  mutable int _labelstack_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress > remoteaddress_;
  ::google::protobuf::uint32 pathid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsPath* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsIlmKey : public ::google::protobuf::Message {
 public:
  SLMplsIlmKey();
  virtual ~SLMplsIlmKey();

  SLMplsIlmKey(const SLMplsIlmKey& from);

  inline SLMplsIlmKey& operator=(const SLMplsIlmKey& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsIlmKey& default_instance();

  void Swap(SLMplsIlmKey* other);

  // implements Message ----------------------------------------------

  inline SLMplsIlmKey* New() const { return New(NULL); }

  SLMplsIlmKey* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsIlmKey& from);
  void MergeFrom(const SLMplsIlmKey& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsIlmKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 LocalLabel = 1;
  void clear_locallabel();
  static const int kLocalLabelFieldNumber = 1;
  ::google::protobuf::uint32 locallabel() const;
  void set_locallabel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsIlmKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint32 locallabel_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsIlmKey* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsIlmEntry : public ::google::protobuf::Message {
 public:
  SLMplsIlmEntry();
  virtual ~SLMplsIlmEntry();

  SLMplsIlmEntry(const SLMplsIlmEntry& from);

  inline SLMplsIlmEntry& operator=(const SLMplsIlmEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsIlmEntry& default_instance();

  void Swap(SLMplsIlmEntry* other);

  // implements Message ----------------------------------------------

  inline SLMplsIlmEntry* New() const { return New(NULL); }

  SLMplsIlmEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsIlmEntry& from);
  void MergeFrom(const SLMplsIlmEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsIlmEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLMplsIlmKey Key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::service_layer::SLMplsIlmKey& key() const;
  ::service_layer::SLMplsIlmKey* mutable_key();
  ::service_layer::SLMplsIlmKey* release_key();
  void set_allocated_key(::service_layer::SLMplsIlmKey* key);

  // repeated .service_layer.SLMplsPath Paths = 2;
  int paths_size() const;
  void clear_paths();
  static const int kPathsFieldNumber = 2;
  const ::service_layer::SLMplsPath& paths(int index) const;
  ::service_layer::SLMplsPath* mutable_paths(int index);
  ::service_layer::SLMplsPath* add_paths();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsPath >*
      mutable_paths();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsPath >&
      paths() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsIlmEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLMplsIlmKey* key_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsPath > paths_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsIlmEntry* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsIlmMsg : public ::google::protobuf::Message {
 public:
  SLMplsIlmMsg();
  virtual ~SLMplsIlmMsg();

  SLMplsIlmMsg(const SLMplsIlmMsg& from);

  inline SLMplsIlmMsg& operator=(const SLMplsIlmMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsIlmMsg& default_instance();

  void Swap(SLMplsIlmMsg* other);

  // implements Message ----------------------------------------------

  inline SLMplsIlmMsg* New() const { return New(NULL); }

  SLMplsIlmMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsIlmMsg& from);
  void MergeFrom(const SLMplsIlmMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsIlmMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLObjectOp Oper = 1;
  void clear_oper();
  static const int kOperFieldNumber = 1;
  ::service_layer::SLObjectOp oper() const;
  void set_oper(::service_layer::SLObjectOp value);

  // optional uint64 Correlator = 2;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 2;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // repeated .service_layer.SLMplsIlmEntry MplsIlms = 3;
  int mplsilms_size() const;
  void clear_mplsilms();
  static const int kMplsIlmsFieldNumber = 3;
  const ::service_layer::SLMplsIlmEntry& mplsilms(int index) const;
  ::service_layer::SLMplsIlmEntry* mutable_mplsilms(int index);
  ::service_layer::SLMplsIlmEntry* add_mplsilms();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmEntry >*
      mutable_mplsilms();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmEntry >&
      mplsilms() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsIlmMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 correlator_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmEntry > mplsilms_;
  int oper_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsIlmMsg* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsIlmRes : public ::google::protobuf::Message {
 public:
  SLMplsIlmRes();
  virtual ~SLMplsIlmRes();

  SLMplsIlmRes(const SLMplsIlmRes& from);

  inline SLMplsIlmRes& operator=(const SLMplsIlmRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsIlmRes& default_instance();

  void Swap(SLMplsIlmRes* other);

  // implements Message ----------------------------------------------

  inline SLMplsIlmRes* New() const { return New(NULL); }

  SLMplsIlmRes* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsIlmRes& from);
  void MergeFrom(const SLMplsIlmRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsIlmRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // optional .service_layer.SLMplsIlmKey Key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::service_layer::SLMplsIlmKey& key() const;
  ::service_layer::SLMplsIlmKey* mutable_key();
  ::service_layer::SLMplsIlmKey* release_key();
  void set_allocated_key(::service_layer::SLMplsIlmKey* key);

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsIlmRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::service_layer::SLMplsIlmKey* key_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsIlmRes* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsIlmMsgRsp : public ::google::protobuf::Message {
 public:
  SLMplsIlmMsgRsp();
  virtual ~SLMplsIlmMsgRsp();

  SLMplsIlmMsgRsp(const SLMplsIlmMsgRsp& from);

  inline SLMplsIlmMsgRsp& operator=(const SLMplsIlmMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsIlmMsgRsp& default_instance();

  void Swap(SLMplsIlmMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLMplsIlmMsgRsp* New() const { return New(NULL); }

  SLMplsIlmMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsIlmMsgRsp& from);
  void MergeFrom(const SLMplsIlmMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsIlmMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // optional .service_layer.SLErrorStatus StatusSummary = 2;
  bool has_statussummary() const;
  void clear_statussummary();
  static const int kStatusSummaryFieldNumber = 2;
  const ::service_layer::SLErrorStatus& statussummary() const;
  ::service_layer::SLErrorStatus* mutable_statussummary();
  ::service_layer::SLErrorStatus* release_statussummary();
  void set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary);

  // repeated .service_layer.SLMplsIlmRes Results = 3;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 3;
  const ::service_layer::SLMplsIlmRes& results(int index) const;
  ::service_layer::SLMplsIlmRes* mutable_results(int index);
  ::service_layer::SLMplsIlmRes* add_results();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmRes >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmRes >&
      results() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsIlmMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 correlator_;
  ::service_layer::SLErrorStatus* statussummary_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmRes > results_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsIlmMsgRsp* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsIlmGetMsg : public ::google::protobuf::Message {
 public:
  SLMplsIlmGetMsg();
  virtual ~SLMplsIlmGetMsg();

  SLMplsIlmGetMsg(const SLMplsIlmGetMsg& from);

  inline SLMplsIlmGetMsg& operator=(const SLMplsIlmGetMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsIlmGetMsg& default_instance();

  void Swap(SLMplsIlmGetMsg* other);

  // implements Message ----------------------------------------------

  inline SLMplsIlmGetMsg* New() const { return New(NULL); }

  SLMplsIlmGetMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsIlmGetMsg& from);
  void MergeFrom(const SLMplsIlmGetMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsIlmGetMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // optional .service_layer.SLMplsIlmKey Key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::service_layer::SLMplsIlmKey& key() const;
  ::service_layer::SLMplsIlmKey* mutable_key();
  ::service_layer::SLMplsIlmKey* release_key();
  void set_allocated_key(::service_layer::SLMplsIlmKey* key);

  // optional uint32 EntriesCount = 3;
  void clear_entriescount();
  static const int kEntriesCountFieldNumber = 3;
  ::google::protobuf::uint32 entriescount() const;
  void set_entriescount(::google::protobuf::uint32 value);

  // optional bool GetNext = 4;
  void clear_getnext();
  static const int kGetNextFieldNumber = 4;
  bool getnext() const;
  void set_getnext(bool value);

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsIlmGetMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 correlator_;
  ::service_layer::SLMplsIlmKey* key_;
  ::google::protobuf::uint32 entriescount_;
  bool getnext_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsIlmGetMsg* default_instance_;
};
// -------------------------------------------------------------------

class SLMplsIlmGetMsgRsp : public ::google::protobuf::Message {
 public:
  SLMplsIlmGetMsgRsp();
  virtual ~SLMplsIlmGetMsgRsp();

  SLMplsIlmGetMsgRsp(const SLMplsIlmGetMsgRsp& from);

  inline SLMplsIlmGetMsgRsp& operator=(const SLMplsIlmGetMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLMplsIlmGetMsgRsp& default_instance();

  void Swap(SLMplsIlmGetMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLMplsIlmGetMsgRsp* New() const { return New(NULL); }

  SLMplsIlmGetMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLMplsIlmGetMsgRsp& from);
  void MergeFrom(const SLMplsIlmGetMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLMplsIlmGetMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // optional bool Eof = 2;
  void clear_eof();
  static const int kEofFieldNumber = 2;
  bool eof() const;
  void set_eof(bool value);

  // optional .service_layer.SLErrorStatus ErrStatus = 3;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 3;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // repeated .service_layer.SLMplsIlmEntry Entries = 4;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 4;
  const ::service_layer::SLMplsIlmEntry& entries(int index) const;
  ::service_layer::SLMplsIlmEntry* mutable_entries(int index);
  ::service_layer::SLMplsIlmEntry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmEntry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmEntry >&
      entries() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLMplsIlmGetMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 correlator_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmEntry > entries_;
  bool eof_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5fmpls_2eproto();
  friend void protobuf_AssignDesc_sl_5fmpls_2eproto();
  friend void protobuf_ShutdownFile_sl_5fmpls_2eproto();

  void InitAsDefaultInstance();
  static SLMplsIlmGetMsgRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SLMplsLabelBlockKey

// optional uint32 StartLabel = 1;
inline void SLMplsLabelBlockKey::clear_startlabel() {
  startlabel_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsLabelBlockKey::startlabel() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockKey.StartLabel)
  return startlabel_;
}
inline void SLMplsLabelBlockKey::set_startlabel(::google::protobuf::uint32 value) {
  
  startlabel_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsLabelBlockKey.StartLabel)
}

// optional uint32 LabelBlockSize = 2;
inline void SLMplsLabelBlockKey::clear_labelblocksize() {
  labelblocksize_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsLabelBlockKey::labelblocksize() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockKey.LabelBlockSize)
  return labelblocksize_;
}
inline void SLMplsLabelBlockKey::set_labelblocksize(::google::protobuf::uint32 value) {
  
  labelblocksize_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsLabelBlockKey.LabelBlockSize)
}

// -------------------------------------------------------------------

// SLMplsLabelBlockMsg

// optional .service_layer.SLObjectOp Oper = 1;
inline void SLMplsLabelBlockMsg::clear_oper() {
  oper_ = 0;
}
inline ::service_layer::SLObjectOp SLMplsLabelBlockMsg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockMsg.Oper)
  return static_cast< ::service_layer::SLObjectOp >(oper_);
}
inline void SLMplsLabelBlockMsg::set_oper(::service_layer::SLObjectOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsLabelBlockMsg.Oper)
}

// repeated .service_layer.SLMplsLabelBlockKey MplsBlocks = 2;
inline int SLMplsLabelBlockMsg::mplsblocks_size() const {
  return mplsblocks_.size();
}
inline void SLMplsLabelBlockMsg::clear_mplsblocks() {
  mplsblocks_.Clear();
}
inline const ::service_layer::SLMplsLabelBlockKey& SLMplsLabelBlockMsg::mplsblocks(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockMsg.MplsBlocks)
  return mplsblocks_.Get(index);
}
inline ::service_layer::SLMplsLabelBlockKey* SLMplsLabelBlockMsg::mutable_mplsblocks(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsLabelBlockMsg.MplsBlocks)
  return mplsblocks_.Mutable(index);
}
inline ::service_layer::SLMplsLabelBlockKey* SLMplsLabelBlockMsg::add_mplsblocks() {
  // @@protoc_insertion_point(field_add:service_layer.SLMplsLabelBlockMsg.MplsBlocks)
  return mplsblocks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockKey >*
SLMplsLabelBlockMsg::mutable_mplsblocks() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLMplsLabelBlockMsg.MplsBlocks)
  return &mplsblocks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockKey >&
SLMplsLabelBlockMsg::mplsblocks() const {
  // @@protoc_insertion_point(field_list:service_layer.SLMplsLabelBlockMsg.MplsBlocks)
  return mplsblocks_;
}

// -------------------------------------------------------------------

// SLMplsLabelBlockMsgRes

// optional .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLMplsLabelBlockMsgRes::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLMplsLabelBlockMsgRes::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLMplsLabelBlockMsgRes::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockMsgRes.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsLabelBlockMsgRes::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsLabelBlockMsgRes.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsLabelBlockMsgRes::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLMplsLabelBlockMsgRes::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsLabelBlockMsgRes.ErrStatus)
}

// optional .service_layer.SLMplsLabelBlockKey Key = 2;
inline bool SLMplsLabelBlockMsgRes::has_key() const {
  return !_is_default_instance_ && key_ != NULL;
}
inline void SLMplsLabelBlockMsgRes::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::service_layer::SLMplsLabelBlockKey& SLMplsLabelBlockMsgRes::key() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockMsgRes.Key)
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::service_layer::SLMplsLabelBlockKey* SLMplsLabelBlockMsgRes::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::service_layer::SLMplsLabelBlockKey;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsLabelBlockMsgRes.Key)
  return key_;
}
inline ::service_layer::SLMplsLabelBlockKey* SLMplsLabelBlockMsgRes::release_key() {
  
  ::service_layer::SLMplsLabelBlockKey* temp = key_;
  key_ = NULL;
  return temp;
}
inline void SLMplsLabelBlockMsgRes::set_allocated_key(::service_layer::SLMplsLabelBlockKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsLabelBlockMsgRes.Key)
}

// -------------------------------------------------------------------

// SLMplsLabelBlockMsgRsp

// optional .service_layer.SLErrorStatus StatusSummary = 1;
inline bool SLMplsLabelBlockMsgRsp::has_statussummary() const {
  return !_is_default_instance_ && statussummary_ != NULL;
}
inline void SLMplsLabelBlockMsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) delete statussummary_;
  statussummary_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLMplsLabelBlockMsgRsp::statussummary() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockMsgRsp.StatusSummary)
  return statussummary_ != NULL ? *statussummary_ : *default_instance_->statussummary_;
}
inline ::service_layer::SLErrorStatus* SLMplsLabelBlockMsgRsp::mutable_statussummary() {
  
  if (statussummary_ == NULL) {
    statussummary_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsLabelBlockMsgRsp.StatusSummary)
  return statussummary_;
}
inline ::service_layer::SLErrorStatus* SLMplsLabelBlockMsgRsp::release_statussummary() {
  
  ::service_layer::SLErrorStatus* temp = statussummary_;
  statussummary_ = NULL;
  return temp;
}
inline void SLMplsLabelBlockMsgRsp::set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary) {
  delete statussummary_;
  statussummary_ = statussummary;
  if (statussummary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsLabelBlockMsgRsp.StatusSummary)
}

// repeated .service_layer.SLMplsLabelBlockMsgRes Results = 2;
inline int SLMplsLabelBlockMsgRsp::results_size() const {
  return results_.size();
}
inline void SLMplsLabelBlockMsgRsp::clear_results() {
  results_.Clear();
}
inline const ::service_layer::SLMplsLabelBlockMsgRes& SLMplsLabelBlockMsgRsp::results(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockMsgRsp.Results)
  return results_.Get(index);
}
inline ::service_layer::SLMplsLabelBlockMsgRes* SLMplsLabelBlockMsgRsp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsLabelBlockMsgRsp.Results)
  return results_.Mutable(index);
}
inline ::service_layer::SLMplsLabelBlockMsgRes* SLMplsLabelBlockMsgRsp::add_results() {
  // @@protoc_insertion_point(field_add:service_layer.SLMplsLabelBlockMsgRsp.Results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockMsgRes >*
SLMplsLabelBlockMsgRsp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLMplsLabelBlockMsgRsp.Results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockMsgRes >&
SLMplsLabelBlockMsgRsp::results() const {
  // @@protoc_insertion_point(field_list:service_layer.SLMplsLabelBlockMsgRsp.Results)
  return results_;
}

// -------------------------------------------------------------------

// SLMplsLabelBlockGetMsg

// optional .service_layer.SLMplsLabelBlockKey Key = 1;
inline bool SLMplsLabelBlockGetMsg::has_key() const {
  return !_is_default_instance_ && key_ != NULL;
}
inline void SLMplsLabelBlockGetMsg::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::service_layer::SLMplsLabelBlockKey& SLMplsLabelBlockGetMsg::key() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockGetMsg.Key)
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::service_layer::SLMplsLabelBlockKey* SLMplsLabelBlockGetMsg::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::service_layer::SLMplsLabelBlockKey;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsLabelBlockGetMsg.Key)
  return key_;
}
inline ::service_layer::SLMplsLabelBlockKey* SLMplsLabelBlockGetMsg::release_key() {
  
  ::service_layer::SLMplsLabelBlockKey* temp = key_;
  key_ = NULL;
  return temp;
}
inline void SLMplsLabelBlockGetMsg::set_allocated_key(::service_layer::SLMplsLabelBlockKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsLabelBlockGetMsg.Key)
}

// optional uint32 EntriesCount = 2;
inline void SLMplsLabelBlockGetMsg::clear_entriescount() {
  entriescount_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsLabelBlockGetMsg::entriescount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockGetMsg.EntriesCount)
  return entriescount_;
}
inline void SLMplsLabelBlockGetMsg::set_entriescount(::google::protobuf::uint32 value) {
  
  entriescount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsLabelBlockGetMsg.EntriesCount)
}

// optional bool GetNext = 3;
inline void SLMplsLabelBlockGetMsg::clear_getnext() {
  getnext_ = false;
}
inline bool SLMplsLabelBlockGetMsg::getnext() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockGetMsg.GetNext)
  return getnext_;
}
inline void SLMplsLabelBlockGetMsg::set_getnext(bool value) {
  
  getnext_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsLabelBlockGetMsg.GetNext)
}

// -------------------------------------------------------------------

// SLMplsLabelBlockGetMsgRsp

// optional bool Eof = 1;
inline void SLMplsLabelBlockGetMsgRsp::clear_eof() {
  eof_ = false;
}
inline bool SLMplsLabelBlockGetMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockGetMsgRsp.Eof)
  return eof_;
}
inline void SLMplsLabelBlockGetMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsLabelBlockGetMsgRsp.Eof)
}

// optional .service_layer.SLErrorStatus ErrStatus = 2;
inline bool SLMplsLabelBlockGetMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLMplsLabelBlockGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLMplsLabelBlockGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsLabelBlockGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsLabelBlockGetMsgRsp.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsLabelBlockGetMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLMplsLabelBlockGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsLabelBlockGetMsgRsp.ErrStatus)
}

// repeated .service_layer.SLMplsLabelBlockKey Entries = 3;
inline int SLMplsLabelBlockGetMsgRsp::entries_size() const {
  return entries_.size();
}
inline void SLMplsLabelBlockGetMsgRsp::clear_entries() {
  entries_.Clear();
}
inline const ::service_layer::SLMplsLabelBlockKey& SLMplsLabelBlockGetMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsLabelBlockGetMsgRsp.Entries)
  return entries_.Get(index);
}
inline ::service_layer::SLMplsLabelBlockKey* SLMplsLabelBlockGetMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsLabelBlockGetMsgRsp.Entries)
  return entries_.Mutable(index);
}
inline ::service_layer::SLMplsLabelBlockKey* SLMplsLabelBlockGetMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLMplsLabelBlockGetMsgRsp.Entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockKey >*
SLMplsLabelBlockGetMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLMplsLabelBlockGetMsgRsp.Entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsLabelBlockKey >&
SLMplsLabelBlockGetMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLMplsLabelBlockGetMsgRsp.Entries)
  return entries_;
}

// -------------------------------------------------------------------

// SLMplsRegMsg

// optional .service_layer.SLRegOp Oper = 1;
inline void SLMplsRegMsg::clear_oper() {
  oper_ = 0;
}
inline ::service_layer::SLRegOp SLMplsRegMsg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsRegMsg.Oper)
  return static_cast< ::service_layer::SLRegOp >(oper_);
}
inline void SLMplsRegMsg::set_oper(::service_layer::SLRegOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsRegMsg.Oper)
}

// -------------------------------------------------------------------

// SLMplsRegMsgRsp

// optional .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLMplsRegMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLMplsRegMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLMplsRegMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsRegMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsRegMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsRegMsgRsp.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsRegMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLMplsRegMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsRegMsgRsp.ErrStatus)
}

// -------------------------------------------------------------------

// SLMplsGetMsg

// -------------------------------------------------------------------

// SLMplsGetMsgRsp

// optional .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLMplsGetMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLMplsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLMplsGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsGetMsgRsp.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsGetMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLMplsGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsGetMsgRsp.ErrStatus)
}

// optional uint32 MaxLabelsPerBlock = 2;
inline void SLMplsGetMsgRsp::clear_maxlabelsperblock() {
  maxlabelsperblock_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsGetMsgRsp::maxlabelsperblock() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsGetMsgRsp.MaxLabelsPerBlock)
  return maxlabelsperblock_;
}
inline void SLMplsGetMsgRsp::set_maxlabelsperblock(::google::protobuf::uint32 value) {
  
  maxlabelsperblock_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsGetMsgRsp.MaxLabelsPerBlock)
}

// optional uint32 MaxLabelblocksPerLabelblockmsg = 3;
inline void SLMplsGetMsgRsp::clear_maxlabelblocksperlabelblockmsg() {
  maxlabelblocksperlabelblockmsg_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsGetMsgRsp::maxlabelblocksperlabelblockmsg() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsGetMsgRsp.MaxLabelblocksPerLabelblockmsg)
  return maxlabelblocksperlabelblockmsg_;
}
inline void SLMplsGetMsgRsp::set_maxlabelblocksperlabelblockmsg(::google::protobuf::uint32 value) {
  
  maxlabelblocksperlabelblockmsg_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsGetMsgRsp.MaxLabelblocksPerLabelblockmsg)
}

// optional uint32 MinStartLabel = 4;
inline void SLMplsGetMsgRsp::clear_minstartlabel() {
  minstartlabel_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsGetMsgRsp::minstartlabel() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsGetMsgRsp.MinStartLabel)
  return minstartlabel_;
}
inline void SLMplsGetMsgRsp::set_minstartlabel(::google::protobuf::uint32 value) {
  
  minstartlabel_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsGetMsgRsp.MinStartLabel)
}

// optional uint32 LabelTableSize = 5;
inline void SLMplsGetMsgRsp::clear_labeltablesize() {
  labeltablesize_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsGetMsgRsp::labeltablesize() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsGetMsgRsp.LabelTableSize)
  return labeltablesize_;
}
inline void SLMplsGetMsgRsp::set_labeltablesize(::google::protobuf::uint32 value) {
  
  labeltablesize_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsGetMsgRsp.LabelTableSize)
}

// optional uint32 MaxIlmPerIlmmsg = 6;
inline void SLMplsGetMsgRsp::clear_maxilmperilmmsg() {
  maxilmperilmmsg_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsGetMsgRsp::maxilmperilmmsg() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsGetMsgRsp.MaxIlmPerIlmmsg)
  return maxilmperilmmsg_;
}
inline void SLMplsGetMsgRsp::set_maxilmperilmmsg(::google::protobuf::uint32 value) {
  
  maxilmperilmmsg_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsGetMsgRsp.MaxIlmPerIlmmsg)
}

// optional uint32 MaxPathsPerIlm = 7;
inline void SLMplsGetMsgRsp::clear_maxpathsperilm() {
  maxpathsperilm_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsGetMsgRsp::maxpathsperilm() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsGetMsgRsp.MaxPathsPerIlm)
  return maxpathsperilm_;
}
inline void SLMplsGetMsgRsp::set_maxpathsperilm(::google::protobuf::uint32 value) {
  
  maxpathsperilm_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsGetMsgRsp.MaxPathsPerIlm)
}

// -------------------------------------------------------------------

// SLMplsGetStatsMsgRsp

// optional .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLMplsGetStatsMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLMplsGetStatsMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLMplsGetStatsMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsGetStatsMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsGetStatsMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsGetStatsMsgRsp.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsGetStatsMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLMplsGetStatsMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsGetStatsMsgRsp.ErrStatus)
}

// -------------------------------------------------------------------

// SLMplsPath

// optional .service_layer.SLIpAddress NexthopAddress = 1;
inline bool SLMplsPath::has_nexthopaddress() const {
  return !_is_default_instance_ && nexthopaddress_ != NULL;
}
inline void SLMplsPath::clear_nexthopaddress() {
  if (GetArenaNoVirtual() == NULL && nexthopaddress_ != NULL) delete nexthopaddress_;
  nexthopaddress_ = NULL;
}
inline const ::service_layer::SLIpAddress& SLMplsPath::nexthopaddress() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsPath.NexthopAddress)
  return nexthopaddress_ != NULL ? *nexthopaddress_ : *default_instance_->nexthopaddress_;
}
inline ::service_layer::SLIpAddress* SLMplsPath::mutable_nexthopaddress() {
  
  if (nexthopaddress_ == NULL) {
    nexthopaddress_ = new ::service_layer::SLIpAddress;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsPath.NexthopAddress)
  return nexthopaddress_;
}
inline ::service_layer::SLIpAddress* SLMplsPath::release_nexthopaddress() {
  
  ::service_layer::SLIpAddress* temp = nexthopaddress_;
  nexthopaddress_ = NULL;
  return temp;
}
inline void SLMplsPath::set_allocated_nexthopaddress(::service_layer::SLIpAddress* nexthopaddress) {
  delete nexthopaddress_;
  nexthopaddress_ = nexthopaddress;
  if (nexthopaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsPath.NexthopAddress)
}

// optional .service_layer.SLInterface NexthopInterface = 2;
inline bool SLMplsPath::has_nexthopinterface() const {
  return !_is_default_instance_ && nexthopinterface_ != NULL;
}
inline void SLMplsPath::clear_nexthopinterface() {
  if (GetArenaNoVirtual() == NULL && nexthopinterface_ != NULL) delete nexthopinterface_;
  nexthopinterface_ = NULL;
}
inline const ::service_layer::SLInterface& SLMplsPath::nexthopinterface() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsPath.NexthopInterface)
  return nexthopinterface_ != NULL ? *nexthopinterface_ : *default_instance_->nexthopinterface_;
}
inline ::service_layer::SLInterface* SLMplsPath::mutable_nexthopinterface() {
  
  if (nexthopinterface_ == NULL) {
    nexthopinterface_ = new ::service_layer::SLInterface;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsPath.NexthopInterface)
  return nexthopinterface_;
}
inline ::service_layer::SLInterface* SLMplsPath::release_nexthopinterface() {
  
  ::service_layer::SLInterface* temp = nexthopinterface_;
  nexthopinterface_ = NULL;
  return temp;
}
inline void SLMplsPath::set_allocated_nexthopinterface(::service_layer::SLInterface* nexthopinterface) {
  delete nexthopinterface_;
  nexthopinterface_ = nexthopinterface;
  if (nexthopinterface) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsPath.NexthopInterface)
}

// optional uint32 LoadMetric = 3;
inline void SLMplsPath::clear_loadmetric() {
  loadmetric_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsPath::loadmetric() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsPath.LoadMetric)
  return loadmetric_;
}
inline void SLMplsPath::set_loadmetric(::google::protobuf::uint32 value) {
  
  loadmetric_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsPath.LoadMetric)
}

// optional string VrfName = 4;
inline void SLMplsPath::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLMplsPath::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsPath.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLMplsPath::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLMplsPath.VrfName)
}
inline void SLMplsPath::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLMplsPath.VrfName)
}
inline void SLMplsPath::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLMplsPath.VrfName)
}
inline ::std::string* SLMplsPath::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsPath.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLMplsPath::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLMplsPath::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsPath.VrfName)
}

// optional .service_layer.SlLabelAction Action = 5;
inline void SLMplsPath::clear_action() {
  action_ = 0;
}
inline ::service_layer::SlLabelAction SLMplsPath::action() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsPath.Action)
  return static_cast< ::service_layer::SlLabelAction >(action_);
}
inline void SLMplsPath::set_action(::service_layer::SlLabelAction value) {
  
  action_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsPath.Action)
}

// optional uint32 PathId = 6;
inline void SLMplsPath::clear_pathid() {
  pathid_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsPath::pathid() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsPath.PathId)
  return pathid_;
}
inline void SLMplsPath::set_pathid(::google::protobuf::uint32 value) {
  
  pathid_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsPath.PathId)
}

// repeated uint64 ProtectedPathBitmap = 7;
inline int SLMplsPath::protectedpathbitmap_size() const {
  return protectedpathbitmap_.size();
}
inline void SLMplsPath::clear_protectedpathbitmap() {
  protectedpathbitmap_.Clear();
}
inline ::google::protobuf::uint64 SLMplsPath::protectedpathbitmap(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsPath.ProtectedPathBitmap)
  return protectedpathbitmap_.Get(index);
}
inline void SLMplsPath::set_protectedpathbitmap(int index, ::google::protobuf::uint64 value) {
  protectedpathbitmap_.Set(index, value);
  // @@protoc_insertion_point(field_set:service_layer.SLMplsPath.ProtectedPathBitmap)
}
inline void SLMplsPath::add_protectedpathbitmap(::google::protobuf::uint64 value) {
  protectedpathbitmap_.Add(value);
  // @@protoc_insertion_point(field_add:service_layer.SLMplsPath.ProtectedPathBitmap)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SLMplsPath::protectedpathbitmap() const {
  // @@protoc_insertion_point(field_list:service_layer.SLMplsPath.ProtectedPathBitmap)
  return protectedpathbitmap_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SLMplsPath::mutable_protectedpathbitmap() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLMplsPath.ProtectedPathBitmap)
  return &protectedpathbitmap_;
}

// repeated uint32 LabelStack = 8;
inline int SLMplsPath::labelstack_size() const {
  return labelstack_.size();
}
inline void SLMplsPath::clear_labelstack() {
  labelstack_.Clear();
}
inline ::google::protobuf::uint32 SLMplsPath::labelstack(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsPath.LabelStack)
  return labelstack_.Get(index);
}
inline void SLMplsPath::set_labelstack(int index, ::google::protobuf::uint32 value) {
  labelstack_.Set(index, value);
  // @@protoc_insertion_point(field_set:service_layer.SLMplsPath.LabelStack)
}
inline void SLMplsPath::add_labelstack(::google::protobuf::uint32 value) {
  labelstack_.Add(value);
  // @@protoc_insertion_point(field_add:service_layer.SLMplsPath.LabelStack)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SLMplsPath::labelstack() const {
  // @@protoc_insertion_point(field_list:service_layer.SLMplsPath.LabelStack)
  return labelstack_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SLMplsPath::mutable_labelstack() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLMplsPath.LabelStack)
  return &labelstack_;
}

// repeated .service_layer.SLIpAddress RemoteAddress = 9;
inline int SLMplsPath::remoteaddress_size() const {
  return remoteaddress_.size();
}
inline void SLMplsPath::clear_remoteaddress() {
  remoteaddress_.Clear();
}
inline const ::service_layer::SLIpAddress& SLMplsPath::remoteaddress(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsPath.RemoteAddress)
  return remoteaddress_.Get(index);
}
inline ::service_layer::SLIpAddress* SLMplsPath::mutable_remoteaddress(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsPath.RemoteAddress)
  return remoteaddress_.Mutable(index);
}
inline ::service_layer::SLIpAddress* SLMplsPath::add_remoteaddress() {
  // @@protoc_insertion_point(field_add:service_layer.SLMplsPath.RemoteAddress)
  return remoteaddress_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >*
SLMplsPath::mutable_remoteaddress() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLMplsPath.RemoteAddress)
  return &remoteaddress_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >&
SLMplsPath::remoteaddress() const {
  // @@protoc_insertion_point(field_list:service_layer.SLMplsPath.RemoteAddress)
  return remoteaddress_;
}

// -------------------------------------------------------------------

// SLMplsIlmKey

// optional uint32 LocalLabel = 1;
inline void SLMplsIlmKey::clear_locallabel() {
  locallabel_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsIlmKey::locallabel() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmKey.LocalLabel)
  return locallabel_;
}
inline void SLMplsIlmKey::set_locallabel(::google::protobuf::uint32 value) {
  
  locallabel_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsIlmKey.LocalLabel)
}

// -------------------------------------------------------------------

// SLMplsIlmEntry

// optional .service_layer.SLMplsIlmKey Key = 1;
inline bool SLMplsIlmEntry::has_key() const {
  return !_is_default_instance_ && key_ != NULL;
}
inline void SLMplsIlmEntry::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::service_layer::SLMplsIlmKey& SLMplsIlmEntry::key() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmEntry.Key)
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::service_layer::SLMplsIlmKey* SLMplsIlmEntry::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::service_layer::SLMplsIlmKey;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsIlmEntry.Key)
  return key_;
}
inline ::service_layer::SLMplsIlmKey* SLMplsIlmEntry::release_key() {
  
  ::service_layer::SLMplsIlmKey* temp = key_;
  key_ = NULL;
  return temp;
}
inline void SLMplsIlmEntry::set_allocated_key(::service_layer::SLMplsIlmKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsIlmEntry.Key)
}

// repeated .service_layer.SLMplsPath Paths = 2;
inline int SLMplsIlmEntry::paths_size() const {
  return paths_.size();
}
inline void SLMplsIlmEntry::clear_paths() {
  paths_.Clear();
}
inline const ::service_layer::SLMplsPath& SLMplsIlmEntry::paths(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmEntry.Paths)
  return paths_.Get(index);
}
inline ::service_layer::SLMplsPath* SLMplsIlmEntry::mutable_paths(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsIlmEntry.Paths)
  return paths_.Mutable(index);
}
inline ::service_layer::SLMplsPath* SLMplsIlmEntry::add_paths() {
  // @@protoc_insertion_point(field_add:service_layer.SLMplsIlmEntry.Paths)
  return paths_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsPath >*
SLMplsIlmEntry::mutable_paths() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLMplsIlmEntry.Paths)
  return &paths_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsPath >&
SLMplsIlmEntry::paths() const {
  // @@protoc_insertion_point(field_list:service_layer.SLMplsIlmEntry.Paths)
  return paths_;
}

// -------------------------------------------------------------------

// SLMplsIlmMsg

// optional .service_layer.SLObjectOp Oper = 1;
inline void SLMplsIlmMsg::clear_oper() {
  oper_ = 0;
}
inline ::service_layer::SLObjectOp SLMplsIlmMsg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmMsg.Oper)
  return static_cast< ::service_layer::SLObjectOp >(oper_);
}
inline void SLMplsIlmMsg::set_oper(::service_layer::SLObjectOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsIlmMsg.Oper)
}

// optional uint64 Correlator = 2;
inline void SLMplsIlmMsg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLMplsIlmMsg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmMsg.Correlator)
  return correlator_;
}
inline void SLMplsIlmMsg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsIlmMsg.Correlator)
}

// repeated .service_layer.SLMplsIlmEntry MplsIlms = 3;
inline int SLMplsIlmMsg::mplsilms_size() const {
  return mplsilms_.size();
}
inline void SLMplsIlmMsg::clear_mplsilms() {
  mplsilms_.Clear();
}
inline const ::service_layer::SLMplsIlmEntry& SLMplsIlmMsg::mplsilms(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmMsg.MplsIlms)
  return mplsilms_.Get(index);
}
inline ::service_layer::SLMplsIlmEntry* SLMplsIlmMsg::mutable_mplsilms(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsIlmMsg.MplsIlms)
  return mplsilms_.Mutable(index);
}
inline ::service_layer::SLMplsIlmEntry* SLMplsIlmMsg::add_mplsilms() {
  // @@protoc_insertion_point(field_add:service_layer.SLMplsIlmMsg.MplsIlms)
  return mplsilms_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmEntry >*
SLMplsIlmMsg::mutable_mplsilms() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLMplsIlmMsg.MplsIlms)
  return &mplsilms_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmEntry >&
SLMplsIlmMsg::mplsilms() const {
  // @@protoc_insertion_point(field_list:service_layer.SLMplsIlmMsg.MplsIlms)
  return mplsilms_;
}

// -------------------------------------------------------------------

// SLMplsIlmRes

// optional .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLMplsIlmRes::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLMplsIlmRes::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLMplsIlmRes::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmRes.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsIlmRes::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsIlmRes.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsIlmRes::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLMplsIlmRes::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsIlmRes.ErrStatus)
}

// optional .service_layer.SLMplsIlmKey Key = 2;
inline bool SLMplsIlmRes::has_key() const {
  return !_is_default_instance_ && key_ != NULL;
}
inline void SLMplsIlmRes::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::service_layer::SLMplsIlmKey& SLMplsIlmRes::key() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmRes.Key)
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::service_layer::SLMplsIlmKey* SLMplsIlmRes::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::service_layer::SLMplsIlmKey;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsIlmRes.Key)
  return key_;
}
inline ::service_layer::SLMplsIlmKey* SLMplsIlmRes::release_key() {
  
  ::service_layer::SLMplsIlmKey* temp = key_;
  key_ = NULL;
  return temp;
}
inline void SLMplsIlmRes::set_allocated_key(::service_layer::SLMplsIlmKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsIlmRes.Key)
}

// -------------------------------------------------------------------

// SLMplsIlmMsgRsp

// optional uint64 Correlator = 1;
inline void SLMplsIlmMsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLMplsIlmMsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmMsgRsp.Correlator)
  return correlator_;
}
inline void SLMplsIlmMsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsIlmMsgRsp.Correlator)
}

// optional .service_layer.SLErrorStatus StatusSummary = 2;
inline bool SLMplsIlmMsgRsp::has_statussummary() const {
  return !_is_default_instance_ && statussummary_ != NULL;
}
inline void SLMplsIlmMsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) delete statussummary_;
  statussummary_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLMplsIlmMsgRsp::statussummary() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmMsgRsp.StatusSummary)
  return statussummary_ != NULL ? *statussummary_ : *default_instance_->statussummary_;
}
inline ::service_layer::SLErrorStatus* SLMplsIlmMsgRsp::mutable_statussummary() {
  
  if (statussummary_ == NULL) {
    statussummary_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsIlmMsgRsp.StatusSummary)
  return statussummary_;
}
inline ::service_layer::SLErrorStatus* SLMplsIlmMsgRsp::release_statussummary() {
  
  ::service_layer::SLErrorStatus* temp = statussummary_;
  statussummary_ = NULL;
  return temp;
}
inline void SLMplsIlmMsgRsp::set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary) {
  delete statussummary_;
  statussummary_ = statussummary;
  if (statussummary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsIlmMsgRsp.StatusSummary)
}

// repeated .service_layer.SLMplsIlmRes Results = 3;
inline int SLMplsIlmMsgRsp::results_size() const {
  return results_.size();
}
inline void SLMplsIlmMsgRsp::clear_results() {
  results_.Clear();
}
inline const ::service_layer::SLMplsIlmRes& SLMplsIlmMsgRsp::results(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmMsgRsp.Results)
  return results_.Get(index);
}
inline ::service_layer::SLMplsIlmRes* SLMplsIlmMsgRsp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsIlmMsgRsp.Results)
  return results_.Mutable(index);
}
inline ::service_layer::SLMplsIlmRes* SLMplsIlmMsgRsp::add_results() {
  // @@protoc_insertion_point(field_add:service_layer.SLMplsIlmMsgRsp.Results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmRes >*
SLMplsIlmMsgRsp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLMplsIlmMsgRsp.Results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmRes >&
SLMplsIlmMsgRsp::results() const {
  // @@protoc_insertion_point(field_list:service_layer.SLMplsIlmMsgRsp.Results)
  return results_;
}

// -------------------------------------------------------------------

// SLMplsIlmGetMsg

// optional uint64 Correlator = 1;
inline void SLMplsIlmGetMsg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLMplsIlmGetMsg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmGetMsg.Correlator)
  return correlator_;
}
inline void SLMplsIlmGetMsg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsIlmGetMsg.Correlator)
}

// optional .service_layer.SLMplsIlmKey Key = 2;
inline bool SLMplsIlmGetMsg::has_key() const {
  return !_is_default_instance_ && key_ != NULL;
}
inline void SLMplsIlmGetMsg::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::service_layer::SLMplsIlmKey& SLMplsIlmGetMsg::key() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmGetMsg.Key)
  return key_ != NULL ? *key_ : *default_instance_->key_;
}
inline ::service_layer::SLMplsIlmKey* SLMplsIlmGetMsg::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::service_layer::SLMplsIlmKey;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsIlmGetMsg.Key)
  return key_;
}
inline ::service_layer::SLMplsIlmKey* SLMplsIlmGetMsg::release_key() {
  
  ::service_layer::SLMplsIlmKey* temp = key_;
  key_ = NULL;
  return temp;
}
inline void SLMplsIlmGetMsg::set_allocated_key(::service_layer::SLMplsIlmKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsIlmGetMsg.Key)
}

// optional uint32 EntriesCount = 3;
inline void SLMplsIlmGetMsg::clear_entriescount() {
  entriescount_ = 0u;
}
inline ::google::protobuf::uint32 SLMplsIlmGetMsg::entriescount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmGetMsg.EntriesCount)
  return entriescount_;
}
inline void SLMplsIlmGetMsg::set_entriescount(::google::protobuf::uint32 value) {
  
  entriescount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsIlmGetMsg.EntriesCount)
}

// optional bool GetNext = 4;
inline void SLMplsIlmGetMsg::clear_getnext() {
  getnext_ = false;
}
inline bool SLMplsIlmGetMsg::getnext() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmGetMsg.GetNext)
  return getnext_;
}
inline void SLMplsIlmGetMsg::set_getnext(bool value) {
  
  getnext_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsIlmGetMsg.GetNext)
}

// -------------------------------------------------------------------

// SLMplsIlmGetMsgRsp

// optional uint64 Correlator = 1;
inline void SLMplsIlmGetMsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLMplsIlmGetMsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmGetMsgRsp.Correlator)
  return correlator_;
}
inline void SLMplsIlmGetMsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsIlmGetMsgRsp.Correlator)
}

// optional bool Eof = 2;
inline void SLMplsIlmGetMsgRsp::clear_eof() {
  eof_ = false;
}
inline bool SLMplsIlmGetMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmGetMsgRsp.Eof)
  return eof_;
}
inline void SLMplsIlmGetMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLMplsIlmGetMsgRsp.Eof)
}

// optional .service_layer.SLErrorStatus ErrStatus = 3;
inline bool SLMplsIlmGetMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLMplsIlmGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLMplsIlmGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsIlmGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsIlmGetMsgRsp.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLMplsIlmGetMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLMplsIlmGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLMplsIlmGetMsgRsp.ErrStatus)
}

// repeated .service_layer.SLMplsIlmEntry Entries = 4;
inline int SLMplsIlmGetMsgRsp::entries_size() const {
  return entries_.size();
}
inline void SLMplsIlmGetMsgRsp::clear_entries() {
  entries_.Clear();
}
inline const ::service_layer::SLMplsIlmEntry& SLMplsIlmGetMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLMplsIlmGetMsgRsp.Entries)
  return entries_.Get(index);
}
inline ::service_layer::SLMplsIlmEntry* SLMplsIlmGetMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLMplsIlmGetMsgRsp.Entries)
  return entries_.Mutable(index);
}
inline ::service_layer::SLMplsIlmEntry* SLMplsIlmGetMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLMplsIlmGetMsgRsp.Entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmEntry >*
SLMplsIlmGetMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLMplsIlmGetMsgRsp.Entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLMplsIlmEntry >&
SLMplsIlmGetMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLMplsIlmGetMsgRsp.Entries)
  return entries_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service_layer

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::service_layer::SlLabelAction> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::service_layer::SlLabelAction>() {
  return ::service_layer::SlLabelAction_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sl_5fmpls_2eproto__INCLUDED
