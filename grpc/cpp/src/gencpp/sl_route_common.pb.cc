// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_route_common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sl_route_common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace service_layer {

namespace {

const ::google::protobuf::Descriptor* SLRouteGlobalsGetMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRouteGlobalsGetMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLRouteGlobalsGetMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRouteGlobalsGetMsgRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLRouteGlobalStatsGetMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRouteGlobalStatsGetMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLRouteGlobalStatsGetMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRouteGlobalStatsGetMsgRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLVrfReg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLVrfReg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLVrfRegMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLVrfRegMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLVrfRegMsgRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLVrfRegMsgRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLVrfRegMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLVrfRegMsgRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLVrfRegGetMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLVrfRegGetMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLVrfRegGetMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLVrfRegGetMsgRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLVRFGetStatsMsgRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLVRFGetStatsMsgRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLVRFGetStatsMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLVRFGetStatsMsgRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLRouteCommon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRouteCommon_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLRoutePath_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRoutePath_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sl_5froute_5fcommon_2eproto() {
  protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sl_route_common.proto");
  GOOGLE_CHECK(file != NULL);
  SLRouteGlobalsGetMsg_descriptor_ = file->message_type(0);
  static const int SLRouteGlobalsGetMsg_offsets_[1] = {
  };
  SLRouteGlobalsGetMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRouteGlobalsGetMsg_descriptor_,
      SLRouteGlobalsGetMsg::default_instance_,
      SLRouteGlobalsGetMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRouteGlobalsGetMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsg, _is_default_instance_));
  SLRouteGlobalsGetMsgRsp_descriptor_ = file->message_type(1);
  static const int SLRouteGlobalsGetMsgRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsgRsp, errstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsgRsp, maxvrfregpervrfregmsg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsgRsp, maxrouteperroutemsg_),
  };
  SLRouteGlobalsGetMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRouteGlobalsGetMsgRsp_descriptor_,
      SLRouteGlobalsGetMsgRsp::default_instance_,
      SLRouteGlobalsGetMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRouteGlobalsGetMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsgRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsgRsp, _is_default_instance_));
  SLRouteGlobalStatsGetMsg_descriptor_ = file->message_type(2);
  static const int SLRouteGlobalStatsGetMsg_offsets_[1] = {
  };
  SLRouteGlobalStatsGetMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRouteGlobalStatsGetMsg_descriptor_,
      SLRouteGlobalStatsGetMsg::default_instance_,
      SLRouteGlobalStatsGetMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRouteGlobalStatsGetMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsg, _is_default_instance_));
  SLRouteGlobalStatsGetMsgRsp_descriptor_ = file->message_type(3);
  static const int SLRouteGlobalStatsGetMsgRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsgRsp, errstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsgRsp, vrfcount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsgRsp, routecount_),
  };
  SLRouteGlobalStatsGetMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRouteGlobalStatsGetMsgRsp_descriptor_,
      SLRouteGlobalStatsGetMsgRsp::default_instance_,
      SLRouteGlobalStatsGetMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRouteGlobalStatsGetMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsgRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsgRsp, _is_default_instance_));
  SLVrfReg_descriptor_ = file->message_type(4);
  static const int SLVrfReg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfReg, vrfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfReg, admindistance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfReg, vrfpurgeintervalseconds_),
  };
  SLVrfReg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLVrfReg_descriptor_,
      SLVrfReg::default_instance_,
      SLVrfReg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLVrfReg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfReg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfReg, _is_default_instance_));
  SLVrfRegMsg_descriptor_ = file->message_type(5);
  static const int SLVrfRegMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsg, oper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsg, vrfregmsgs_),
  };
  SLVrfRegMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLVrfRegMsg_descriptor_,
      SLVrfRegMsg::default_instance_,
      SLVrfRegMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLVrfRegMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsg, _is_default_instance_));
  SLVrfRegMsgRes_descriptor_ = file->message_type(6);
  static const int SLVrfRegMsgRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRes, errstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRes, vrfname_),
  };
  SLVrfRegMsgRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLVrfRegMsgRes_descriptor_,
      SLVrfRegMsgRes::default_instance_,
      SLVrfRegMsgRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLVrfRegMsgRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRes, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRes, _is_default_instance_));
  SLVrfRegMsgRsp_descriptor_ = file->message_type(7);
  static const int SLVrfRegMsgRsp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRsp, statussummary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRsp, results_),
  };
  SLVrfRegMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLVrfRegMsgRsp_descriptor_,
      SLVrfRegMsgRsp::default_instance_,
      SLVrfRegMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLVrfRegMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRsp, _is_default_instance_));
  SLVrfRegGetMsg_descriptor_ = file->message_type(8);
  static const int SLVrfRegGetMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsg, vrfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsg, entriescount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsg, getnext_),
  };
  SLVrfRegGetMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLVrfRegGetMsg_descriptor_,
      SLVrfRegGetMsg::default_instance_,
      SLVrfRegGetMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLVrfRegGetMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsg, _is_default_instance_));
  SLVrfRegGetMsgRsp_descriptor_ = file->message_type(9);
  static const int SLVrfRegGetMsgRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsgRsp, eof_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsgRsp, errstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsgRsp, entries_),
  };
  SLVrfRegGetMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLVrfRegGetMsgRsp_descriptor_,
      SLVrfRegGetMsgRsp::default_instance_,
      SLVrfRegGetMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLVrfRegGetMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsgRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsgRsp, _is_default_instance_));
  SLVRFGetStatsMsgRes_descriptor_ = file->message_type(10);
  static const int SLVRFGetStatsMsgRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRes, vrfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRes, routecount_),
  };
  SLVRFGetStatsMsgRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLVRFGetStatsMsgRes_descriptor_,
      SLVRFGetStatsMsgRes::default_instance_,
      SLVRFGetStatsMsgRes_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLVRFGetStatsMsgRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRes, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRes, _is_default_instance_));
  SLVRFGetStatsMsgRsp_descriptor_ = file->message_type(11);
  static const int SLVRFGetStatsMsgRsp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRsp, eof_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRsp, errstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRsp, entries_),
  };
  SLVRFGetStatsMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLVRFGetStatsMsgRsp_descriptor_,
      SLVRFGetStatsMsgRsp::default_instance_,
      SLVRFGetStatsMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLVRFGetStatsMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRsp, _is_default_instance_));
  SLRouteCommon_descriptor_ = file->message_type(12);
  static const int SLRouteCommon_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteCommon, admindistance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteCommon, locallabel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteCommon, tag_),
  };
  SLRouteCommon_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRouteCommon_descriptor_,
      SLRouteCommon::default_instance_,
      SLRouteCommon_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRouteCommon),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteCommon, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteCommon, _is_default_instance_));
  SLRoutePath_descriptor_ = file->message_type(13);
  static const int SLRoutePath_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, nexthopaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, nexthopinterface_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, loadmetric_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, vrfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, metric_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, pathid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, protectedpathbitmap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, labelstack_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, remoteaddress_),
  };
  SLRoutePath_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRoutePath_descriptor_,
      SLRoutePath::default_instance_,
      SLRoutePath_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRoutePath),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sl_5froute_5fcommon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRouteGlobalsGetMsg_descriptor_, &SLRouteGlobalsGetMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRouteGlobalsGetMsgRsp_descriptor_, &SLRouteGlobalsGetMsgRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRouteGlobalStatsGetMsg_descriptor_, &SLRouteGlobalStatsGetMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRouteGlobalStatsGetMsgRsp_descriptor_, &SLRouteGlobalStatsGetMsgRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLVrfReg_descriptor_, &SLVrfReg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLVrfRegMsg_descriptor_, &SLVrfRegMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLVrfRegMsgRes_descriptor_, &SLVrfRegMsgRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLVrfRegMsgRsp_descriptor_, &SLVrfRegMsgRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLVrfRegGetMsg_descriptor_, &SLVrfRegGetMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLVrfRegGetMsgRsp_descriptor_, &SLVrfRegGetMsgRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLVRFGetStatsMsgRes_descriptor_, &SLVRFGetStatsMsgRes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLVRFGetStatsMsgRsp_descriptor_, &SLVRFGetStatsMsgRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRouteCommon_descriptor_, &SLRouteCommon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRoutePath_descriptor_, &SLRoutePath::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sl_5froute_5fcommon_2eproto() {
  delete SLRouteGlobalsGetMsg::default_instance_;
  delete SLRouteGlobalsGetMsg_reflection_;
  delete SLRouteGlobalsGetMsgRsp::default_instance_;
  delete SLRouteGlobalsGetMsgRsp_reflection_;
  delete SLRouteGlobalStatsGetMsg::default_instance_;
  delete SLRouteGlobalStatsGetMsg_reflection_;
  delete SLRouteGlobalStatsGetMsgRsp::default_instance_;
  delete SLRouteGlobalStatsGetMsgRsp_reflection_;
  delete SLVrfReg::default_instance_;
  delete SLVrfReg_reflection_;
  delete SLVrfRegMsg::default_instance_;
  delete SLVrfRegMsg_reflection_;
  delete SLVrfRegMsgRes::default_instance_;
  delete SLVrfRegMsgRes_reflection_;
  delete SLVrfRegMsgRsp::default_instance_;
  delete SLVrfRegMsgRsp_reflection_;
  delete SLVrfRegGetMsg::default_instance_;
  delete SLVrfRegGetMsg_reflection_;
  delete SLVrfRegGetMsgRsp::default_instance_;
  delete SLVrfRegGetMsgRsp_reflection_;
  delete SLVRFGetStatsMsgRes::default_instance_;
  delete SLVRFGetStatsMsgRes_reflection_;
  delete SLVRFGetStatsMsgRsp::default_instance_;
  delete SLVRFGetStatsMsgRsp_reflection_;
  delete SLRouteCommon::default_instance_;
  delete SLRouteCommon_reflection_;
  delete SLRoutePath::default_instance_;
  delete SLRoutePath_reflection_;
}

void protobuf_AddDesc_sl_5froute_5fcommon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::service_layer::protobuf_AddDesc_sl_5fcommon_5ftypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025sl_route_common.proto\022\rservice_layer\032\025"
    "sl_common_types.proto\"\026\n\024SLRouteGlobalsG"
    "etMsg\"\206\001\n\027SLRouteGlobalsGetMsgRsp\022/\n\tErr"
    "Status\030\001 \001(\0132\034.service_layer.SLErrorStat"
    "us\022\035\n\025MaxVrfregPerVrfregmsg\030\002 \001(\r\022\033\n\023Max"
    "RoutePerRoutemsg\030\003 \001(\r\"\032\n\030SLRouteGlobalS"
    "tatsGetMsg\"t\n\033SLRouteGlobalStatsGetMsgRs"
    "p\022/\n\tErrStatus\030\001 \001(\0132\034.service_layer.SLE"
    "rrorStatus\022\020\n\010VrfCount\030\002 \001(\r\022\022\n\nRouteCou"
    "nt\030\003 \001(\r\"S\n\010SLVrfReg\022\017\n\007VrfName\030\001 \001(\t\022\025\n"
    "\rAdminDistance\030\002 \001(\r\022\037\n\027VrfPurgeInterval"
    "Seconds\030\003 \001(\r\"`\n\013SLVrfRegMsg\022$\n\004Oper\030\001 \001"
    "(\0162\026.service_layer.SLRegOp\022+\n\nVrfRegMsgs"
    "\030\002 \003(\0132\027.service_layer.SLVrfReg\"R\n\016SLVrf"
    "RegMsgRes\022/\n\tErrStatus\030\001 \001(\0132\034.service_l"
    "ayer.SLErrorStatus\022\017\n\007VrfName\030\002 \001(\t\"u\n\016S"
    "LVrfRegMsgRsp\0223\n\rStatusSummary\030\001 \001(\0132\034.s"
    "ervice_layer.SLErrorStatus\022.\n\007Results\030\002 "
    "\003(\0132\035.service_layer.SLVrfRegMsgRes\"H\n\016SL"
    "VrfRegGetMsg\022\017\n\007VrfName\030\001 \001(\t\022\024\n\014Entries"
    "Count\030\002 \001(\r\022\017\n\007GetNext\030\003 \001(\010\"{\n\021SLVrfReg"
    "GetMsgRsp\022\013\n\003Eof\030\001 \001(\010\022/\n\tErrStatus\030\002 \001("
    "\0132\034.service_layer.SLErrorStatus\022(\n\007Entri"
    "es\030\003 \003(\0132\027.service_layer.SLVrfReg\":\n\023SLV"
    "RFGetStatsMsgRes\022\017\n\007VrfName\030\001 \001(\t\022\022\n\nRou"
    "teCount\030\002 \001(\r\"\210\001\n\023SLVRFGetStatsMsgRsp\022\013\n"
    "\003Eof\030\001 \001(\010\022/\n\tErrStatus\030\002 \001(\0132\034.service_"
    "layer.SLErrorStatus\0223\n\007Entries\030\003 \003(\0132\".s"
    "ervice_layer.SLVRFGetStatsMsgRes\"G\n\rSLRo"
    "uteCommon\022\025\n\rAdminDistance\030\001 \001(\r\022\022\n\nLoca"
    "lLabel\030\002 \001(\r\022\013\n\003Tag\030\003 \001(\r\"\240\002\n\013SLRoutePat"
    "h\0222\n\016NexthopAddress\030\001 \001(\0132\032.service_laye"
    "r.SLIpAddress\0224\n\020NexthopInterface\030\002 \001(\0132"
    "\032.service_layer.SLInterface\022\022\n\nLoadMetri"
    "c\030\003 \001(\r\022\017\n\007VrfName\030\004 \001(\t\022\016\n\006Metric\030\005 \001(\r"
    "\022\016\n\006PathId\030\006 \001(\r\022\033\n\023ProtectedPathBitmap\030"
    "\007 \003(\004\022\022\n\nLabelStack\030\010 \003(\r\0221\n\rRemoteAddre"
    "ss\030\t \003(\0132\032.service_layer.SLIpAddressb\006pr"
    "oto3", 1524);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_route_common.proto", &protobuf_RegisterTypes);
  SLRouteGlobalsGetMsg::default_instance_ = new SLRouteGlobalsGetMsg();
  SLRouteGlobalsGetMsgRsp::default_instance_ = new SLRouteGlobalsGetMsgRsp();
  SLRouteGlobalStatsGetMsg::default_instance_ = new SLRouteGlobalStatsGetMsg();
  SLRouteGlobalStatsGetMsgRsp::default_instance_ = new SLRouteGlobalStatsGetMsgRsp();
  SLVrfReg::default_instance_ = new SLVrfReg();
  SLVrfRegMsg::default_instance_ = new SLVrfRegMsg();
  SLVrfRegMsgRes::default_instance_ = new SLVrfRegMsgRes();
  SLVrfRegMsgRsp::default_instance_ = new SLVrfRegMsgRsp();
  SLVrfRegGetMsg::default_instance_ = new SLVrfRegGetMsg();
  SLVrfRegGetMsgRsp::default_instance_ = new SLVrfRegGetMsgRsp();
  SLVRFGetStatsMsgRes::default_instance_ = new SLVRFGetStatsMsgRes();
  SLVRFGetStatsMsgRsp::default_instance_ = new SLVRFGetStatsMsgRsp();
  SLRouteCommon::default_instance_ = new SLRouteCommon();
  SLRoutePath::default_instance_ = new SLRoutePath();
  SLRouteGlobalsGetMsg::default_instance_->InitAsDefaultInstance();
  SLRouteGlobalsGetMsgRsp::default_instance_->InitAsDefaultInstance();
  SLRouteGlobalStatsGetMsg::default_instance_->InitAsDefaultInstance();
  SLRouteGlobalStatsGetMsgRsp::default_instance_->InitAsDefaultInstance();
  SLVrfReg::default_instance_->InitAsDefaultInstance();
  SLVrfRegMsg::default_instance_->InitAsDefaultInstance();
  SLVrfRegMsgRes::default_instance_->InitAsDefaultInstance();
  SLVrfRegMsgRsp::default_instance_->InitAsDefaultInstance();
  SLVrfRegGetMsg::default_instance_->InitAsDefaultInstance();
  SLVrfRegGetMsgRsp::default_instance_->InitAsDefaultInstance();
  SLVRFGetStatsMsgRes::default_instance_->InitAsDefaultInstance();
  SLVRFGetStatsMsgRsp::default_instance_->InitAsDefaultInstance();
  SLRouteCommon::default_instance_->InitAsDefaultInstance();
  SLRoutePath::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sl_5froute_5fcommon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sl_5froute_5fcommon_2eproto {
  StaticDescriptorInitializer_sl_5froute_5fcommon_2eproto() {
    protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  }
} static_descriptor_initializer_sl_5froute_5fcommon_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalsGetMsg::SLRouteGlobalsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalsGetMsg)
}

void SLRouteGlobalsGetMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLRouteGlobalsGetMsg::SLRouteGlobalsGetMsg(const SLRouteGlobalsGetMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalsGetMsg)
}

void SLRouteGlobalsGetMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

SLRouteGlobalsGetMsg::~SLRouteGlobalsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalsGetMsg)
  SharedDtor();
}

void SLRouteGlobalsGetMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SLRouteGlobalsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalsGetMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRouteGlobalsGetMsg_descriptor_;
}

const SLRouteGlobalsGetMsg& SLRouteGlobalsGetMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLRouteGlobalsGetMsg* SLRouteGlobalsGetMsg::default_instance_ = NULL;

SLRouteGlobalsGetMsg* SLRouteGlobalsGetMsg::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalsGetMsg* n = new SLRouteGlobalsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalsGetMsg::Clear() {
}

bool SLRouteGlobalsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalsGetMsg)
  return false;
#undef DO_
}

void SLRouteGlobalsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalsGetMsg)
  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalsGetMsg)
}

::google::protobuf::uint8* SLRouteGlobalsGetMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalsGetMsg)
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalsGetMsg)
  return target;
}

int SLRouteGlobalsGetMsg::ByteSize() const {
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRouteGlobalsGetMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalsGetMsg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRouteGlobalsGetMsg::MergeFrom(const SLRouteGlobalsGetMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void SLRouteGlobalsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalsGetMsg::CopyFrom(const SLRouteGlobalsGetMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalsGetMsg::IsInitialized() const {

  return true;
}

void SLRouteGlobalsGetMsg::Swap(SLRouteGlobalsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalsGetMsg::InternalSwap(SLRouteGlobalsGetMsg* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalsGetMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRouteGlobalsGetMsg_descriptor_;
  metadata.reflection = SLRouteGlobalsGetMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteGlobalsGetMsg

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteGlobalsGetMsgRsp::kErrStatusFieldNumber;
const int SLRouteGlobalsGetMsgRsp::kMaxVrfregPerVrfregmsgFieldNumber;
const int SLRouteGlobalsGetMsgRsp::kMaxRoutePerRoutemsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalsGetMsgRsp::SLRouteGlobalsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalsGetMsgRsp)
}

void SLRouteGlobalsGetMsgRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(&::service_layer::SLErrorStatus::default_instance());
}

SLRouteGlobalsGetMsgRsp::SLRouteGlobalsGetMsgRsp(const SLRouteGlobalsGetMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalsGetMsgRsp)
}

void SLRouteGlobalsGetMsgRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errstatus_ = NULL;
  maxvrfregpervrfregmsg_ = 0u;
  maxrouteperroutemsg_ = 0u;
}

SLRouteGlobalsGetMsgRsp::~SLRouteGlobalsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalsGetMsgRsp)
  SharedDtor();
}

void SLRouteGlobalsGetMsgRsp::SharedDtor() {
  if (this != default_instance_) {
    delete errstatus_;
  }
}

void SLRouteGlobalsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalsGetMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRouteGlobalsGetMsgRsp_descriptor_;
}

const SLRouteGlobalsGetMsgRsp& SLRouteGlobalsGetMsgRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLRouteGlobalsGetMsgRsp* SLRouteGlobalsGetMsgRsp::default_instance_ = NULL;

SLRouteGlobalsGetMsgRsp* SLRouteGlobalsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalsGetMsgRsp* n = new SLRouteGlobalsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalsGetMsgRsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLRouteGlobalsGetMsgRsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(maxvrfregpervrfregmsg_, maxrouteperroutemsg_);
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool SLRouteGlobalsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_MaxVrfregPerVrfregmsg;
        break;
      }

      // optional uint32 MaxVrfregPerVrfregmsg = 2;
      case 2: {
        if (tag == 16) {
         parse_MaxVrfregPerVrfregmsg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxvrfregpervrfregmsg_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_MaxRoutePerRoutemsg;
        break;
      }

      // optional uint32 MaxRoutePerRoutemsg = 3;
      case 3: {
        if (tag == 24) {
         parse_MaxRoutePerRoutemsg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxrouteperroutemsg_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalsGetMsgRsp)
  return false;
#undef DO_
}

void SLRouteGlobalsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalsGetMsgRsp)
  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // optional uint32 MaxVrfregPerVrfregmsg = 2;
  if (this->maxvrfregpervrfregmsg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxvrfregpervrfregmsg(), output);
  }

  // optional uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxrouteperroutemsg(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalsGetMsgRsp)
}

::google::protobuf::uint8* SLRouteGlobalsGetMsgRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalsGetMsgRsp)
  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->errstatus_, target);
  }

  // optional uint32 MaxVrfregPerVrfregmsg = 2;
  if (this->maxvrfregpervrfregmsg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxvrfregpervrfregmsg(), target);
  }

  // optional uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxrouteperroutemsg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalsGetMsgRsp)
  return target;
}

int SLRouteGlobalsGetMsgRsp::ByteSize() const {
  int total_size = 0;

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // optional uint32 MaxVrfregPerVrfregmsg = 2;
  if (this->maxvrfregpervrfregmsg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxvrfregpervrfregmsg());
  }

  // optional uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxrouteperroutemsg());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRouteGlobalsGetMsgRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalsGetMsgRsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRouteGlobalsGetMsgRsp::MergeFrom(const SLRouteGlobalsGetMsgRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.maxvrfregpervrfregmsg() != 0) {
    set_maxvrfregpervrfregmsg(from.maxvrfregpervrfregmsg());
  }
  if (from.maxrouteperroutemsg() != 0) {
    set_maxrouteperroutemsg(from.maxrouteperroutemsg());
  }
}

void SLRouteGlobalsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalsGetMsgRsp::CopyFrom(const SLRouteGlobalsGetMsgRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalsGetMsgRsp::IsInitialized() const {

  return true;
}

void SLRouteGlobalsGetMsgRsp::Swap(SLRouteGlobalsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalsGetMsgRsp::InternalSwap(SLRouteGlobalsGetMsgRsp* other) {
  std::swap(errstatus_, other->errstatus_);
  std::swap(maxvrfregpervrfregmsg_, other->maxvrfregpervrfregmsg_);
  std::swap(maxrouteperroutemsg_, other->maxrouteperroutemsg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalsGetMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRouteGlobalsGetMsgRsp_descriptor_;
  metadata.reflection = SLRouteGlobalsGetMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteGlobalsGetMsgRsp

// optional .service_layer.SLErrorStatus ErrStatus = 1;
bool SLRouteGlobalsGetMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
void SLRouteGlobalsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLRouteGlobalsGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalsGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
::service_layer::SLErrorStatus* SLRouteGlobalsGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteGlobalsGetMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLRouteGlobalsGetMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLRouteGlobalsGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteGlobalsGetMsgRsp.ErrStatus)
}

// optional uint32 MaxVrfregPerVrfregmsg = 2;
void SLRouteGlobalsGetMsgRsp::clear_maxvrfregpervrfregmsg() {
  maxvrfregpervrfregmsg_ = 0u;
}
 ::google::protobuf::uint32 SLRouteGlobalsGetMsgRsp::maxvrfregpervrfregmsg() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalsGetMsgRsp.MaxVrfregPerVrfregmsg)
  return maxvrfregpervrfregmsg_;
}
 void SLRouteGlobalsGetMsgRsp::set_maxvrfregpervrfregmsg(::google::protobuf::uint32 value) {
  
  maxvrfregpervrfregmsg_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalsGetMsgRsp.MaxVrfregPerVrfregmsg)
}

// optional uint32 MaxRoutePerRoutemsg = 3;
void SLRouteGlobalsGetMsgRsp::clear_maxrouteperroutemsg() {
  maxrouteperroutemsg_ = 0u;
}
 ::google::protobuf::uint32 SLRouteGlobalsGetMsgRsp::maxrouteperroutemsg() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalsGetMsgRsp.MaxRoutePerRoutemsg)
  return maxrouteperroutemsg_;
}
 void SLRouteGlobalsGetMsgRsp::set_maxrouteperroutemsg(::google::protobuf::uint32 value) {
  
  maxrouteperroutemsg_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalsGetMsgRsp.MaxRoutePerRoutemsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalStatsGetMsg::SLRouteGlobalStatsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalStatsGetMsg)
}

void SLRouteGlobalStatsGetMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLRouteGlobalStatsGetMsg::SLRouteGlobalStatsGetMsg(const SLRouteGlobalStatsGetMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalStatsGetMsg)
}

void SLRouteGlobalStatsGetMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

SLRouteGlobalStatsGetMsg::~SLRouteGlobalStatsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalStatsGetMsg)
  SharedDtor();
}

void SLRouteGlobalStatsGetMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SLRouteGlobalStatsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalStatsGetMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRouteGlobalStatsGetMsg_descriptor_;
}

const SLRouteGlobalStatsGetMsg& SLRouteGlobalStatsGetMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLRouteGlobalStatsGetMsg* SLRouteGlobalStatsGetMsg::default_instance_ = NULL;

SLRouteGlobalStatsGetMsg* SLRouteGlobalStatsGetMsg::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalStatsGetMsg* n = new SLRouteGlobalStatsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalStatsGetMsg::Clear() {
}

bool SLRouteGlobalStatsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalStatsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalStatsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalStatsGetMsg)
  return false;
#undef DO_
}

void SLRouteGlobalStatsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalStatsGetMsg)
  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalStatsGetMsg)
}

::google::protobuf::uint8* SLRouteGlobalStatsGetMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalStatsGetMsg)
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalStatsGetMsg)
  return target;
}

int SLRouteGlobalStatsGetMsg::ByteSize() const {
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalStatsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRouteGlobalStatsGetMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalStatsGetMsg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRouteGlobalStatsGetMsg::MergeFrom(const SLRouteGlobalStatsGetMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void SLRouteGlobalStatsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalStatsGetMsg::CopyFrom(const SLRouteGlobalStatsGetMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalStatsGetMsg::IsInitialized() const {

  return true;
}

void SLRouteGlobalStatsGetMsg::Swap(SLRouteGlobalStatsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalStatsGetMsg::InternalSwap(SLRouteGlobalStatsGetMsg* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalStatsGetMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRouteGlobalStatsGetMsg_descriptor_;
  metadata.reflection = SLRouteGlobalStatsGetMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteGlobalStatsGetMsg

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteGlobalStatsGetMsgRsp::kErrStatusFieldNumber;
const int SLRouteGlobalStatsGetMsgRsp::kVrfCountFieldNumber;
const int SLRouteGlobalStatsGetMsgRsp::kRouteCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalStatsGetMsgRsp::SLRouteGlobalStatsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalStatsGetMsgRsp)
}

void SLRouteGlobalStatsGetMsgRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(&::service_layer::SLErrorStatus::default_instance());
}

SLRouteGlobalStatsGetMsgRsp::SLRouteGlobalStatsGetMsgRsp(const SLRouteGlobalStatsGetMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalStatsGetMsgRsp)
}

void SLRouteGlobalStatsGetMsgRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errstatus_ = NULL;
  vrfcount_ = 0u;
  routecount_ = 0u;
}

SLRouteGlobalStatsGetMsgRsp::~SLRouteGlobalStatsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalStatsGetMsgRsp)
  SharedDtor();
}

void SLRouteGlobalStatsGetMsgRsp::SharedDtor() {
  if (this != default_instance_) {
    delete errstatus_;
  }
}

void SLRouteGlobalStatsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalStatsGetMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRouteGlobalStatsGetMsgRsp_descriptor_;
}

const SLRouteGlobalStatsGetMsgRsp& SLRouteGlobalStatsGetMsgRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLRouteGlobalStatsGetMsgRsp* SLRouteGlobalStatsGetMsgRsp::default_instance_ = NULL;

SLRouteGlobalStatsGetMsgRsp* SLRouteGlobalStatsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalStatsGetMsgRsp* n = new SLRouteGlobalStatsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalStatsGetMsgRsp::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLRouteGlobalStatsGetMsgRsp*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(vrfcount_, routecount_);
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool SLRouteGlobalStatsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_VrfCount;
        break;
      }

      // optional uint32 VrfCount = 2;
      case 2: {
        if (tag == 16) {
         parse_VrfCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vrfcount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_RouteCount;
        break;
      }

      // optional uint32 RouteCount = 3;
      case 3: {
        if (tag == 24) {
         parse_RouteCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &routecount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalStatsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalStatsGetMsgRsp)
  return false;
#undef DO_
}

void SLRouteGlobalStatsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // optional uint32 VrfCount = 2;
  if (this->vrfcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vrfcount(), output);
  }

  // optional uint32 RouteCount = 3;
  if (this->routecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->routecount(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalStatsGetMsgRsp)
}

::google::protobuf::uint8* SLRouteGlobalStatsGetMsgRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->errstatus_, target);
  }

  // optional uint32 VrfCount = 2;
  if (this->vrfcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vrfcount(), target);
  }

  // optional uint32 RouteCount = 3;
  if (this->routecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->routecount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalStatsGetMsgRsp)
  return target;
}

int SLRouteGlobalStatsGetMsgRsp::ByteSize() const {
  int total_size = 0;

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // optional uint32 VrfCount = 2;
  if (this->vrfcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vrfcount());
  }

  // optional uint32 RouteCount = 3;
  if (this->routecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->routecount());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalStatsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRouteGlobalStatsGetMsgRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalStatsGetMsgRsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRouteGlobalStatsGetMsgRsp::MergeFrom(const SLRouteGlobalStatsGetMsgRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.vrfcount() != 0) {
    set_vrfcount(from.vrfcount());
  }
  if (from.routecount() != 0) {
    set_routecount(from.routecount());
  }
}

void SLRouteGlobalStatsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalStatsGetMsgRsp::CopyFrom(const SLRouteGlobalStatsGetMsgRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalStatsGetMsgRsp::IsInitialized() const {

  return true;
}

void SLRouteGlobalStatsGetMsgRsp::Swap(SLRouteGlobalStatsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalStatsGetMsgRsp::InternalSwap(SLRouteGlobalStatsGetMsgRsp* other) {
  std::swap(errstatus_, other->errstatus_);
  std::swap(vrfcount_, other->vrfcount_);
  std::swap(routecount_, other->routecount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalStatsGetMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRouteGlobalStatsGetMsgRsp_descriptor_;
  metadata.reflection = SLRouteGlobalStatsGetMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteGlobalStatsGetMsgRsp

// optional .service_layer.SLErrorStatus ErrStatus = 1;
bool SLRouteGlobalStatsGetMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
void SLRouteGlobalStatsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLRouteGlobalStatsGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalStatsGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
::service_layer::SLErrorStatus* SLRouteGlobalStatsGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteGlobalStatsGetMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLRouteGlobalStatsGetMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLRouteGlobalStatsGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteGlobalStatsGetMsgRsp.ErrStatus)
}

// optional uint32 VrfCount = 2;
void SLRouteGlobalStatsGetMsgRsp::clear_vrfcount() {
  vrfcount_ = 0u;
}
 ::google::protobuf::uint32 SLRouteGlobalStatsGetMsgRsp::vrfcount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalStatsGetMsgRsp.VrfCount)
  return vrfcount_;
}
 void SLRouteGlobalStatsGetMsgRsp::set_vrfcount(::google::protobuf::uint32 value) {
  
  vrfcount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalStatsGetMsgRsp.VrfCount)
}

// optional uint32 RouteCount = 3;
void SLRouteGlobalStatsGetMsgRsp::clear_routecount() {
  routecount_ = 0u;
}
 ::google::protobuf::uint32 SLRouteGlobalStatsGetMsgRsp::routecount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalStatsGetMsgRsp.RouteCount)
  return routecount_;
}
 void SLRouteGlobalStatsGetMsgRsp::set_routecount(::google::protobuf::uint32 value) {
  
  routecount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalStatsGetMsgRsp.RouteCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfReg::kVrfNameFieldNumber;
const int SLVrfReg::kAdminDistanceFieldNumber;
const int SLVrfReg::kVrfPurgeIntervalSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfReg::SLVrfReg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfReg)
}

void SLVrfReg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLVrfReg::SLVrfReg(const SLVrfReg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfReg)
}

void SLVrfReg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  admindistance_ = 0u;
  vrfpurgeintervalseconds_ = 0u;
}

SLVrfReg::~SLVrfReg() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfReg)
  SharedDtor();
}

void SLVrfReg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SLVrfReg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfReg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLVrfReg_descriptor_;
}

const SLVrfReg& SLVrfReg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLVrfReg* SLVrfReg::default_instance_ = NULL;

SLVrfReg* SLVrfReg::New(::google::protobuf::Arena* arena) const {
  SLVrfReg* n = new SLVrfReg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfReg::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLVrfReg*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(admindistance_, vrfpurgeintervalseconds_);
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SLVrfReg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfReg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string VrfName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVrfReg.VrfName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_AdminDistance;
        break;
      }

      // optional uint32 AdminDistance = 2;
      case 2: {
        if (tag == 16) {
         parse_AdminDistance:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admindistance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_VrfPurgeIntervalSeconds;
        break;
      }

      // optional uint32 VrfPurgeIntervalSeconds = 3;
      case 3: {
        if (tag == 24) {
         parse_VrfPurgeIntervalSeconds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vrfpurgeintervalseconds_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfReg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfReg)
  return false;
#undef DO_
}

void SLVrfReg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfReg)
  // optional string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfReg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // optional uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->admindistance(), output);
  }

  // optional uint32 VrfPurgeIntervalSeconds = 3;
  if (this->vrfpurgeintervalseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->vrfpurgeintervalseconds(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfReg)
}

::google::protobuf::uint8* SLVrfReg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfReg)
  // optional string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfReg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // optional uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->admindistance(), target);
  }

  // optional uint32 VrfPurgeIntervalSeconds = 3;
  if (this->vrfpurgeintervalseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->vrfpurgeintervalseconds(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfReg)
  return target;
}

int SLVrfReg::ByteSize() const {
  int total_size = 0;

  // optional string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // optional uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->admindistance());
  }

  // optional uint32 VrfPurgeIntervalSeconds = 3;
  if (this->vrfpurgeintervalseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vrfpurgeintervalseconds());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfReg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLVrfReg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfReg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLVrfReg::MergeFrom(const SLVrfReg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.admindistance() != 0) {
    set_admindistance(from.admindistance());
  }
  if (from.vrfpurgeintervalseconds() != 0) {
    set_vrfpurgeintervalseconds(from.vrfpurgeintervalseconds());
  }
}

void SLVrfReg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfReg::CopyFrom(const SLVrfReg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfReg::IsInitialized() const {

  return true;
}

void SLVrfReg::Swap(SLVrfReg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfReg::InternalSwap(SLVrfReg* other) {
  vrfname_.Swap(&other->vrfname_);
  std::swap(admindistance_, other->admindistance_);
  std::swap(vrfpurgeintervalseconds_, other->vrfpurgeintervalseconds_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfReg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLVrfReg_descriptor_;
  metadata.reflection = SLVrfReg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfReg

// optional string VrfName = 1;
void SLVrfReg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SLVrfReg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfReg.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLVrfReg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVrfReg.VrfName)
}
 void SLVrfReg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVrfReg.VrfName)
}
 void SLVrfReg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVrfReg.VrfName)
}
 ::std::string* SLVrfReg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfReg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SLVrfReg::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLVrfReg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfReg.VrfName)
}

// optional uint32 AdminDistance = 2;
void SLVrfReg::clear_admindistance() {
  admindistance_ = 0u;
}
 ::google::protobuf::uint32 SLVrfReg::admindistance() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfReg.AdminDistance)
  return admindistance_;
}
 void SLVrfReg::set_admindistance(::google::protobuf::uint32 value) {
  
  admindistance_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfReg.AdminDistance)
}

// optional uint32 VrfPurgeIntervalSeconds = 3;
void SLVrfReg::clear_vrfpurgeintervalseconds() {
  vrfpurgeintervalseconds_ = 0u;
}
 ::google::protobuf::uint32 SLVrfReg::vrfpurgeintervalseconds() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfReg.VrfPurgeIntervalSeconds)
  return vrfpurgeintervalseconds_;
}
 void SLVrfReg::set_vrfpurgeintervalseconds(::google::protobuf::uint32 value) {
  
  vrfpurgeintervalseconds_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfReg.VrfPurgeIntervalSeconds)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegMsg::kOperFieldNumber;
const int SLVrfRegMsg::kVrfRegMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegMsg::SLVrfRegMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegMsg)
}

void SLVrfRegMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLVrfRegMsg::SLVrfRegMsg(const SLVrfRegMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegMsg)
}

void SLVrfRegMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  oper_ = 0;
}

SLVrfRegMsg::~SLVrfRegMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegMsg)
  SharedDtor();
}

void SLVrfRegMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SLVrfRegMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLVrfRegMsg_descriptor_;
}

const SLVrfRegMsg& SLVrfRegMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLVrfRegMsg* SLVrfRegMsg::default_instance_ = NULL;

SLVrfRegMsg* SLVrfRegMsg::New(::google::protobuf::Arena* arena) const {
  SLVrfRegMsg* n = new SLVrfRegMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegMsg::Clear() {
  oper_ = 0;
  vrfregmsgs_.Clear();
}

bool SLVrfRegMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .service_layer.SLRegOp Oper = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLRegOp >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_VrfRegMsgs;
        break;
      }

      // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
      case 2: {
        if (tag == 18) {
         parse_VrfRegMsgs:
          DO_(input->IncrementRecursionDepth());
         parse_loop_VrfRegMsgs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vrfregmsgs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_VrfRegMsgs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegMsg)
  return false;
#undef DO_
}

void SLVrfRegMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegMsg)
  // optional .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
  for (unsigned int i = 0, n = this->vrfregmsgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vrfregmsgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegMsg)
}

::google::protobuf::uint8* SLVrfRegMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegMsg)
  // optional .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
  for (unsigned int i = 0, n = this->vrfregmsgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->vrfregmsgs(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegMsg)
  return target;
}

int SLVrfRegMsg::ByteSize() const {
  int total_size = 0;

  // optional .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
  total_size += 1 * this->vrfregmsgs_size();
  for (int i = 0; i < this->vrfregmsgs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->vrfregmsgs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLVrfRegMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegMsg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLVrfRegMsg::MergeFrom(const SLVrfRegMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  vrfregmsgs_.MergeFrom(from.vrfregmsgs_);
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLVrfRegMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegMsg::CopyFrom(const SLVrfRegMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegMsg::IsInitialized() const {

  return true;
}

void SLVrfRegMsg::Swap(SLVrfRegMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegMsg::InternalSwap(SLVrfRegMsg* other) {
  std::swap(oper_, other->oper_);
  vrfregmsgs_.UnsafeArenaSwap(&other->vrfregmsgs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLVrfRegMsg_descriptor_;
  metadata.reflection = SLVrfRegMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfRegMsg

// optional .service_layer.SLRegOp Oper = 1;
void SLVrfRegMsg::clear_oper() {
  oper_ = 0;
}
 ::service_layer::SLRegOp SLVrfRegMsg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsg.Oper)
  return static_cast< ::service_layer::SLRegOp >(oper_);
}
 void SLVrfRegMsg::set_oper(::service_layer::SLRegOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegMsg.Oper)
}

// repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
int SLVrfRegMsg::vrfregmsgs_size() const {
  return vrfregmsgs_.size();
}
void SLVrfRegMsg::clear_vrfregmsgs() {
  vrfregmsgs_.Clear();
}
const ::service_layer::SLVrfReg& SLVrfRegMsg::vrfregmsgs(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_.Get(index);
}
::service_layer::SLVrfReg* SLVrfRegMsg::mutable_vrfregmsgs(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_.Mutable(index);
}
::service_layer::SLVrfReg* SLVrfRegMsg::add_vrfregmsgs() {
  // @@protoc_insertion_point(field_add:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >*
SLVrfRegMsg::mutable_vrfregmsgs() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return &vrfregmsgs_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >&
SLVrfRegMsg::vrfregmsgs() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegMsgRes::kErrStatusFieldNumber;
const int SLVrfRegMsgRes::kVrfNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegMsgRes::SLVrfRegMsgRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegMsgRes)
}

void SLVrfRegMsgRes::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(&::service_layer::SLErrorStatus::default_instance());
}

SLVrfRegMsgRes::SLVrfRegMsgRes(const SLVrfRegMsgRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegMsgRes)
}

void SLVrfRegMsgRes::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  errstatus_ = NULL;
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SLVrfRegMsgRes::~SLVrfRegMsgRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegMsgRes)
  SharedDtor();
}

void SLVrfRegMsgRes::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete errstatus_;
  }
}

void SLVrfRegMsgRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegMsgRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLVrfRegMsgRes_descriptor_;
}

const SLVrfRegMsgRes& SLVrfRegMsgRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLVrfRegMsgRes* SLVrfRegMsgRes::default_instance_ = NULL;

SLVrfRegMsgRes* SLVrfRegMsgRes::New(::google::protobuf::Arena* arena) const {
  SLVrfRegMsgRes* n = new SLVrfRegMsgRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegMsgRes::Clear() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SLVrfRegMsgRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegMsgRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_VrfName;
        break;
      }

      // optional string VrfName = 2;
      case 2: {
        if (tag == 18) {
         parse_VrfName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVrfRegMsgRes.VrfName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegMsgRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegMsgRes)
  return false;
#undef DO_
}

void SLVrfRegMsgRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegMsgRes)
  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // optional string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegMsgRes.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vrfname(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegMsgRes)
}

::google::protobuf::uint8* SLVrfRegMsgRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegMsgRes)
  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->errstatus_, target);
  }

  // optional string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegMsgRes.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vrfname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegMsgRes)
  return target;
}

int SLVrfRegMsgRes::ByteSize() const {
  int total_size = 0;

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // optional string VrfName = 2;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegMsgRes::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLVrfRegMsgRes* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegMsgRes>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLVrfRegMsgRes::MergeFrom(const SLVrfRegMsgRes& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
}

void SLVrfRegMsgRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegMsgRes::CopyFrom(const SLVrfRegMsgRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegMsgRes::IsInitialized() const {

  return true;
}

void SLVrfRegMsgRes::Swap(SLVrfRegMsgRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegMsgRes::InternalSwap(SLVrfRegMsgRes* other) {
  std::swap(errstatus_, other->errstatus_);
  vrfname_.Swap(&other->vrfname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegMsgRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLVrfRegMsgRes_descriptor_;
  metadata.reflection = SLVrfRegMsgRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfRegMsgRes

// optional .service_layer.SLErrorStatus ErrStatus = 1;
bool SLVrfRegMsgRes::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
void SLVrfRegMsgRes::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLVrfRegMsgRes::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRes.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
::service_layer::SLErrorStatus* SLVrfRegMsgRes::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRes.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLVrfRegMsgRes::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLVrfRegMsgRes::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegMsgRes.ErrStatus)
}

// optional string VrfName = 2;
void SLVrfRegMsgRes::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SLVrfRegMsgRes::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRes.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLVrfRegMsgRes::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegMsgRes.VrfName)
}
 void SLVrfRegMsgRes::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVrfRegMsgRes.VrfName)
}
 void SLVrfRegMsgRes::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVrfRegMsgRes.VrfName)
}
 ::std::string* SLVrfRegMsgRes::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRes.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SLVrfRegMsgRes::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLVrfRegMsgRes::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegMsgRes.VrfName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegMsgRsp::kStatusSummaryFieldNumber;
const int SLVrfRegMsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegMsgRsp::SLVrfRegMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegMsgRsp)
}

void SLVrfRegMsgRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(&::service_layer::SLErrorStatus::default_instance());
}

SLVrfRegMsgRsp::SLVrfRegMsgRsp(const SLVrfRegMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegMsgRsp)
}

void SLVrfRegMsgRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  statussummary_ = NULL;
}

SLVrfRegMsgRsp::~SLVrfRegMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegMsgRsp)
  SharedDtor();
}

void SLVrfRegMsgRsp::SharedDtor() {
  if (this != default_instance_) {
    delete statussummary_;
  }
}

void SLVrfRegMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLVrfRegMsgRsp_descriptor_;
}

const SLVrfRegMsgRsp& SLVrfRegMsgRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLVrfRegMsgRsp* SLVrfRegMsgRsp::default_instance_ = NULL;

SLVrfRegMsgRsp* SLVrfRegMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLVrfRegMsgRsp* n = new SLVrfRegMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegMsgRsp::Clear() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) delete statussummary_;
  statussummary_ = NULL;
  results_.Clear();
}

bool SLVrfRegMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .service_layer.SLErrorStatus StatusSummary = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Results;
        break;
      }

      // repeated .service_layer.SLVrfRegMsgRes Results = 2;
      case 2: {
        if (tag == 18) {
         parse_Results:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Results;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegMsgRsp)
  return false;
#undef DO_
}

void SLVrfRegMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegMsgRsp)
  // optional .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->statussummary_, output);
  }

  // repeated .service_layer.SLVrfRegMsgRes Results = 2;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->results(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegMsgRsp)
}

::google::protobuf::uint8* SLVrfRegMsgRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegMsgRsp)
  // optional .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->statussummary_, target);
  }

  // repeated .service_layer.SLVrfRegMsgRes Results = 2;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->results(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegMsgRsp)
  return target;
}

int SLVrfRegMsgRsp::ByteSize() const {
  int total_size = 0;

  // optional .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->statussummary_);
  }

  // repeated .service_layer.SLVrfRegMsgRes Results = 2;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLVrfRegMsgRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegMsgRsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLVrfRegMsgRsp::MergeFrom(const SLVrfRegMsgRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  results_.MergeFrom(from.results_);
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
}

void SLVrfRegMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegMsgRsp::CopyFrom(const SLVrfRegMsgRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegMsgRsp::IsInitialized() const {

  return true;
}

void SLVrfRegMsgRsp::Swap(SLVrfRegMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegMsgRsp::InternalSwap(SLVrfRegMsgRsp* other) {
  std::swap(statussummary_, other->statussummary_);
  results_.UnsafeArenaSwap(&other->results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLVrfRegMsgRsp_descriptor_;
  metadata.reflection = SLVrfRegMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfRegMsgRsp

// optional .service_layer.SLErrorStatus StatusSummary = 1;
bool SLVrfRegMsgRsp::has_statussummary() const {
  return !_is_default_instance_ && statussummary_ != NULL;
}
void SLVrfRegMsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) delete statussummary_;
  statussummary_ = NULL;
}
const ::service_layer::SLErrorStatus& SLVrfRegMsgRsp::statussummary() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRsp.StatusSummary)
  return statussummary_ != NULL ? *statussummary_ : *default_instance_->statussummary_;
}
::service_layer::SLErrorStatus* SLVrfRegMsgRsp::mutable_statussummary() {
  
  if (statussummary_ == NULL) {
    statussummary_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRsp.StatusSummary)
  return statussummary_;
}
::service_layer::SLErrorStatus* SLVrfRegMsgRsp::release_statussummary() {
  
  ::service_layer::SLErrorStatus* temp = statussummary_;
  statussummary_ = NULL;
  return temp;
}
void SLVrfRegMsgRsp::set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary) {
  delete statussummary_;
  statussummary_ = statussummary;
  if (statussummary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegMsgRsp.StatusSummary)
}

// repeated .service_layer.SLVrfRegMsgRes Results = 2;
int SLVrfRegMsgRsp::results_size() const {
  return results_.size();
}
void SLVrfRegMsgRsp::clear_results() {
  results_.Clear();
}
const ::service_layer::SLVrfRegMsgRes& SLVrfRegMsgRsp::results(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRsp.Results)
  return results_.Get(index);
}
::service_layer::SLVrfRegMsgRes* SLVrfRegMsgRsp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRsp.Results)
  return results_.Mutable(index);
}
::service_layer::SLVrfRegMsgRes* SLVrfRegMsgRsp::add_results() {
  // @@protoc_insertion_point(field_add:service_layer.SLVrfRegMsgRsp.Results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfRegMsgRes >*
SLVrfRegMsgRsp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVrfRegMsgRsp.Results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfRegMsgRes >&
SLVrfRegMsgRsp::results() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVrfRegMsgRsp.Results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegGetMsg::kVrfNameFieldNumber;
const int SLVrfRegGetMsg::kEntriesCountFieldNumber;
const int SLVrfRegGetMsg::kGetNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegGetMsg::SLVrfRegGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegGetMsg)
}

void SLVrfRegGetMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLVrfRegGetMsg::SLVrfRegGetMsg(const SLVrfRegGetMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegGetMsg)
}

void SLVrfRegGetMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  entriescount_ = 0u;
  getnext_ = false;
}

SLVrfRegGetMsg::~SLVrfRegGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegGetMsg)
  SharedDtor();
}

void SLVrfRegGetMsg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SLVrfRegGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegGetMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLVrfRegGetMsg_descriptor_;
}

const SLVrfRegGetMsg& SLVrfRegGetMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLVrfRegGetMsg* SLVrfRegGetMsg::default_instance_ = NULL;

SLVrfRegGetMsg* SLVrfRegGetMsg::New(::google::protobuf::Arena* arena) const {
  SLVrfRegGetMsg* n = new SLVrfRegGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegGetMsg::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLVrfRegGetMsg*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(entriescount_, getnext_);
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SLVrfRegGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string VrfName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVrfRegGetMsg.VrfName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_EntriesCount;
        break;
      }

      // optional uint32 EntriesCount = 2;
      case 2: {
        if (tag == 16) {
         parse_EntriesCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entriescount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_GetNext;
        break;
      }

      // optional bool GetNext = 3;
      case 3: {
        if (tag == 24) {
         parse_GetNext:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getnext_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegGetMsg)
  return false;
#undef DO_
}

void SLVrfRegGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegGetMsg)
  // optional string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegGetMsg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // optional uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entriescount(), output);
  }

  // optional bool GetNext = 3;
  if (this->getnext() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->getnext(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegGetMsg)
}

::google::protobuf::uint8* SLVrfRegGetMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegGetMsg)
  // optional string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegGetMsg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // optional uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entriescount(), target);
  }

  // optional bool GetNext = 3;
  if (this->getnext() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->getnext(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegGetMsg)
  return target;
}

int SLVrfRegGetMsg::ByteSize() const {
  int total_size = 0;

  // optional string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // optional uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entriescount());
  }

  // optional bool GetNext = 3;
  if (this->getnext() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLVrfRegGetMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegGetMsg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLVrfRegGetMsg::MergeFrom(const SLVrfRegGetMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.entriescount() != 0) {
    set_entriescount(from.entriescount());
  }
  if (from.getnext() != 0) {
    set_getnext(from.getnext());
  }
}

void SLVrfRegGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegGetMsg::CopyFrom(const SLVrfRegGetMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegGetMsg::IsInitialized() const {

  return true;
}

void SLVrfRegGetMsg::Swap(SLVrfRegGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegGetMsg::InternalSwap(SLVrfRegGetMsg* other) {
  vrfname_.Swap(&other->vrfname_);
  std::swap(entriescount_, other->entriescount_);
  std::swap(getnext_, other->getnext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegGetMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLVrfRegGetMsg_descriptor_;
  metadata.reflection = SLVrfRegGetMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfRegGetMsg

// optional string VrfName = 1;
void SLVrfRegGetMsg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SLVrfRegGetMsg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsg.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLVrfRegGetMsg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsg.VrfName)
}
 void SLVrfRegGetMsg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVrfRegGetMsg.VrfName)
}
 void SLVrfRegGetMsg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVrfRegGetMsg.VrfName)
}
 ::std::string* SLVrfRegGetMsg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegGetMsg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SLVrfRegGetMsg::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLVrfRegGetMsg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegGetMsg.VrfName)
}

// optional uint32 EntriesCount = 2;
void SLVrfRegGetMsg::clear_entriescount() {
  entriescount_ = 0u;
}
 ::google::protobuf::uint32 SLVrfRegGetMsg::entriescount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsg.EntriesCount)
  return entriescount_;
}
 void SLVrfRegGetMsg::set_entriescount(::google::protobuf::uint32 value) {
  
  entriescount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsg.EntriesCount)
}

// optional bool GetNext = 3;
void SLVrfRegGetMsg::clear_getnext() {
  getnext_ = false;
}
 bool SLVrfRegGetMsg::getnext() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsg.GetNext)
  return getnext_;
}
 void SLVrfRegGetMsg::set_getnext(bool value) {
  
  getnext_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsg.GetNext)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegGetMsgRsp::kEofFieldNumber;
const int SLVrfRegGetMsgRsp::kErrStatusFieldNumber;
const int SLVrfRegGetMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegGetMsgRsp::SLVrfRegGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegGetMsgRsp)
}

void SLVrfRegGetMsgRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(&::service_layer::SLErrorStatus::default_instance());
}

SLVrfRegGetMsgRsp::SLVrfRegGetMsgRsp(const SLVrfRegGetMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegGetMsgRsp)
}

void SLVrfRegGetMsgRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  eof_ = false;
  errstatus_ = NULL;
}

SLVrfRegGetMsgRsp::~SLVrfRegGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegGetMsgRsp)
  SharedDtor();
}

void SLVrfRegGetMsgRsp::SharedDtor() {
  if (this != default_instance_) {
    delete errstatus_;
  }
}

void SLVrfRegGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegGetMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLVrfRegGetMsgRsp_descriptor_;
}

const SLVrfRegGetMsgRsp& SLVrfRegGetMsgRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLVrfRegGetMsgRsp* SLVrfRegGetMsgRsp::default_instance_ = NULL;

SLVrfRegGetMsgRsp* SLVrfRegGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLVrfRegGetMsgRsp* n = new SLVrfRegGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegGetMsgRsp::Clear() {
  eof_ = false;
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
  entries_.Clear();
}

bool SLVrfRegGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Eof = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ErrStatus;
        break;
      }

      // optional .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (tag == 18) {
         parse_ErrStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Entries;
        break;
      }

      // repeated .service_layer.SLVrfReg Entries = 3;
      case 3: {
        if (tag == 26) {
         parse_Entries:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_Entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegGetMsgRsp)
  return false;
#undef DO_
}

void SLVrfRegGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegGetMsgRsp)
  // optional bool Eof = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->eof(), output);
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // repeated .service_layer.SLVrfReg Entries = 3;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->entries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegGetMsgRsp)
}

::google::protobuf::uint8* SLVrfRegGetMsgRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegGetMsgRsp)
  // optional bool Eof = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->eof(), target);
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->errstatus_, target);
  }

  // repeated .service_layer.SLVrfReg Entries = 3;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->entries(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegGetMsgRsp)
  return target;
}

int SLVrfRegGetMsgRsp::ByteSize() const {
  int total_size = 0;

  // optional bool Eof = 1;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // repeated .service_layer.SLVrfReg Entries = 3;
  total_size += 1 * this->entries_size();
  for (int i = 0; i < this->entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entries(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLVrfRegGetMsgRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegGetMsgRsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLVrfRegGetMsgRsp::MergeFrom(const SLVrfRegGetMsgRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entries_.MergeFrom(from.entries_);
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
}

void SLVrfRegGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegGetMsgRsp::CopyFrom(const SLVrfRegGetMsgRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegGetMsgRsp::IsInitialized() const {

  return true;
}

void SLVrfRegGetMsgRsp::Swap(SLVrfRegGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegGetMsgRsp::InternalSwap(SLVrfRegGetMsgRsp* other) {
  std::swap(eof_, other->eof_);
  std::swap(errstatus_, other->errstatus_);
  entries_.UnsafeArenaSwap(&other->entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegGetMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLVrfRegGetMsgRsp_descriptor_;
  metadata.reflection = SLVrfRegGetMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfRegGetMsgRsp

// optional bool Eof = 1;
void SLVrfRegGetMsgRsp::clear_eof() {
  eof_ = false;
}
 bool SLVrfRegGetMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsgRsp.Eof)
  return eof_;
}
 void SLVrfRegGetMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsgRsp.Eof)
}

// optional .service_layer.SLErrorStatus ErrStatus = 2;
bool SLVrfRegGetMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
void SLVrfRegGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLVrfRegGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
::service_layer::SLErrorStatus* SLVrfRegGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegGetMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLVrfRegGetMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLVrfRegGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegGetMsgRsp.ErrStatus)
}

// repeated .service_layer.SLVrfReg Entries = 3;
int SLVrfRegGetMsgRsp::entries_size() const {
  return entries_.size();
}
void SLVrfRegGetMsgRsp::clear_entries() {
  entries_.Clear();
}
const ::service_layer::SLVrfReg& SLVrfRegGetMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_.Get(index);
}
::service_layer::SLVrfReg* SLVrfRegGetMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_.Mutable(index);
}
::service_layer::SLVrfReg* SLVrfRegGetMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >*
SLVrfRegGetMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVrfRegGetMsgRsp.Entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >&
SLVrfRegGetMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVRFGetStatsMsgRes::kVrfNameFieldNumber;
const int SLVRFGetStatsMsgRes::kRouteCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVRFGetStatsMsgRes::SLVRFGetStatsMsgRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVRFGetStatsMsgRes)
}

void SLVRFGetStatsMsgRes::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLVRFGetStatsMsgRes::SLVRFGetStatsMsgRes(const SLVRFGetStatsMsgRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVRFGetStatsMsgRes)
}

void SLVRFGetStatsMsgRes::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routecount_ = 0u;
}

SLVRFGetStatsMsgRes::~SLVRFGetStatsMsgRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLVRFGetStatsMsgRes)
  SharedDtor();
}

void SLVRFGetStatsMsgRes::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SLVRFGetStatsMsgRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVRFGetStatsMsgRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLVRFGetStatsMsgRes_descriptor_;
}

const SLVRFGetStatsMsgRes& SLVRFGetStatsMsgRes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLVRFGetStatsMsgRes* SLVRFGetStatsMsgRes::default_instance_ = NULL;

SLVRFGetStatsMsgRes* SLVRFGetStatsMsgRes::New(::google::protobuf::Arena* arena) const {
  SLVRFGetStatsMsgRes* n = new SLVRFGetStatsMsgRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVRFGetStatsMsgRes::Clear() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routecount_ = 0u;
}

bool SLVRFGetStatsMsgRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVRFGetStatsMsgRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string VrfName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVRFGetStatsMsgRes.VrfName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_RouteCount;
        break;
      }

      // optional uint32 RouteCount = 2;
      case 2: {
        if (tag == 16) {
         parse_RouteCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &routecount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVRFGetStatsMsgRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVRFGetStatsMsgRes)
  return false;
#undef DO_
}

void SLVRFGetStatsMsgRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVRFGetStatsMsgRes)
  // optional string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVRFGetStatsMsgRes.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // optional uint32 RouteCount = 2;
  if (this->routecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->routecount(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVRFGetStatsMsgRes)
}

::google::protobuf::uint8* SLVRFGetStatsMsgRes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVRFGetStatsMsgRes)
  // optional string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVRFGetStatsMsgRes.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // optional uint32 RouteCount = 2;
  if (this->routecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->routecount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVRFGetStatsMsgRes)
  return target;
}

int SLVRFGetStatsMsgRes::ByteSize() const {
  int total_size = 0;

  // optional string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // optional uint32 RouteCount = 2;
  if (this->routecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->routecount());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVRFGetStatsMsgRes::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLVRFGetStatsMsgRes* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVRFGetStatsMsgRes>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLVRFGetStatsMsgRes::MergeFrom(const SLVRFGetStatsMsgRes& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.routecount() != 0) {
    set_routecount(from.routecount());
  }
}

void SLVRFGetStatsMsgRes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVRFGetStatsMsgRes::CopyFrom(const SLVRFGetStatsMsgRes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVRFGetStatsMsgRes::IsInitialized() const {

  return true;
}

void SLVRFGetStatsMsgRes::Swap(SLVRFGetStatsMsgRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVRFGetStatsMsgRes::InternalSwap(SLVRFGetStatsMsgRes* other) {
  vrfname_.Swap(&other->vrfname_);
  std::swap(routecount_, other->routecount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVRFGetStatsMsgRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLVRFGetStatsMsgRes_descriptor_;
  metadata.reflection = SLVRFGetStatsMsgRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVRFGetStatsMsgRes

// optional string VrfName = 1;
void SLVRFGetStatsMsgRes::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SLVRFGetStatsMsgRes::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRes.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLVRFGetStatsMsgRes::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVRFGetStatsMsgRes.VrfName)
}
 void SLVRFGetStatsMsgRes::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVRFGetStatsMsgRes.VrfName)
}
 void SLVRFGetStatsMsgRes::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVRFGetStatsMsgRes.VrfName)
}
 ::std::string* SLVRFGetStatsMsgRes::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVRFGetStatsMsgRes.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SLVRFGetStatsMsgRes::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLVRFGetStatsMsgRes::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVRFGetStatsMsgRes.VrfName)
}

// optional uint32 RouteCount = 2;
void SLVRFGetStatsMsgRes::clear_routecount() {
  routecount_ = 0u;
}
 ::google::protobuf::uint32 SLVRFGetStatsMsgRes::routecount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRes.RouteCount)
  return routecount_;
}
 void SLVRFGetStatsMsgRes::set_routecount(::google::protobuf::uint32 value) {
  
  routecount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVRFGetStatsMsgRes.RouteCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVRFGetStatsMsgRsp::kEofFieldNumber;
const int SLVRFGetStatsMsgRsp::kErrStatusFieldNumber;
const int SLVRFGetStatsMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVRFGetStatsMsgRsp::SLVRFGetStatsMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVRFGetStatsMsgRsp)
}

void SLVRFGetStatsMsgRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(&::service_layer::SLErrorStatus::default_instance());
}

SLVRFGetStatsMsgRsp::SLVRFGetStatsMsgRsp(const SLVRFGetStatsMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVRFGetStatsMsgRsp)
}

void SLVRFGetStatsMsgRsp::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  eof_ = false;
  errstatus_ = NULL;
}

SLVRFGetStatsMsgRsp::~SLVRFGetStatsMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLVRFGetStatsMsgRsp)
  SharedDtor();
}

void SLVRFGetStatsMsgRsp::SharedDtor() {
  if (this != default_instance_) {
    delete errstatus_;
  }
}

void SLVRFGetStatsMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVRFGetStatsMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLVRFGetStatsMsgRsp_descriptor_;
}

const SLVRFGetStatsMsgRsp& SLVRFGetStatsMsgRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLVRFGetStatsMsgRsp* SLVRFGetStatsMsgRsp::default_instance_ = NULL;

SLVRFGetStatsMsgRsp* SLVRFGetStatsMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLVRFGetStatsMsgRsp* n = new SLVRFGetStatsMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVRFGetStatsMsgRsp::Clear() {
  eof_ = false;
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
  entries_.Clear();
}

bool SLVRFGetStatsMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVRFGetStatsMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Eof = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ErrStatus;
        break;
      }

      // optional .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (tag == 18) {
         parse_ErrStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Entries;
        break;
      }

      // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
      case 3: {
        if (tag == 26) {
         parse_Entries:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_Entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVRFGetStatsMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVRFGetStatsMsgRsp)
  return false;
#undef DO_
}

void SLVRFGetStatsMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVRFGetStatsMsgRsp)
  // optional bool Eof = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->eof(), output);
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->entries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVRFGetStatsMsgRsp)
}

::google::protobuf::uint8* SLVRFGetStatsMsgRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVRFGetStatsMsgRsp)
  // optional bool Eof = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->eof(), target);
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->errstatus_, target);
  }

  // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->entries(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVRFGetStatsMsgRsp)
  return target;
}

int SLVRFGetStatsMsgRsp::ByteSize() const {
  int total_size = 0;

  // optional bool Eof = 1;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
  total_size += 1 * this->entries_size();
  for (int i = 0; i < this->entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entries(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVRFGetStatsMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLVRFGetStatsMsgRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVRFGetStatsMsgRsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLVRFGetStatsMsgRsp::MergeFrom(const SLVRFGetStatsMsgRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entries_.MergeFrom(from.entries_);
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
}

void SLVRFGetStatsMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVRFGetStatsMsgRsp::CopyFrom(const SLVRFGetStatsMsgRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVRFGetStatsMsgRsp::IsInitialized() const {

  return true;
}

void SLVRFGetStatsMsgRsp::Swap(SLVRFGetStatsMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVRFGetStatsMsgRsp::InternalSwap(SLVRFGetStatsMsgRsp* other) {
  std::swap(eof_, other->eof_);
  std::swap(errstatus_, other->errstatus_);
  entries_.UnsafeArenaSwap(&other->entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVRFGetStatsMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLVRFGetStatsMsgRsp_descriptor_;
  metadata.reflection = SLVRFGetStatsMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVRFGetStatsMsgRsp

// optional bool Eof = 1;
void SLVRFGetStatsMsgRsp::clear_eof() {
  eof_ = false;
}
 bool SLVRFGetStatsMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRsp.Eof)
  return eof_;
}
 void SLVRFGetStatsMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVRFGetStatsMsgRsp.Eof)
}

// optional .service_layer.SLErrorStatus ErrStatus = 2;
bool SLVRFGetStatsMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
void SLVRFGetStatsMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLVRFGetStatsMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
::service_layer::SLErrorStatus* SLVRFGetStatsMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVRFGetStatsMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLVRFGetStatsMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLVRFGetStatsMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVRFGetStatsMsgRsp.ErrStatus)
}

// repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
int SLVRFGetStatsMsgRsp::entries_size() const {
  return entries_.size();
}
void SLVRFGetStatsMsgRsp::clear_entries() {
  entries_.Clear();
}
const ::service_layer::SLVRFGetStatsMsgRes& SLVRFGetStatsMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_.Get(index);
}
::service_layer::SLVRFGetStatsMsgRes* SLVRFGetStatsMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_.Mutable(index);
}
::service_layer::SLVRFGetStatsMsgRes* SLVRFGetStatsMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLVRFGetStatsMsgRes >*
SLVRFGetStatsMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVRFGetStatsMsgRes >&
SLVRFGetStatsMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteCommon::kAdminDistanceFieldNumber;
const int SLRouteCommon::kLocalLabelFieldNumber;
const int SLRouteCommon::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteCommon::SLRouteCommon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteCommon)
}

void SLRouteCommon::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLRouteCommon::SLRouteCommon(const SLRouteCommon& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteCommon)
}

void SLRouteCommon::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  admindistance_ = 0u;
  locallabel_ = 0u;
  tag_ = 0u;
}

SLRouteCommon::~SLRouteCommon() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteCommon)
  SharedDtor();
}

void SLRouteCommon::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SLRouteCommon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteCommon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRouteCommon_descriptor_;
}

const SLRouteCommon& SLRouteCommon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLRouteCommon* SLRouteCommon::default_instance_ = NULL;

SLRouteCommon* SLRouteCommon::New(::google::protobuf::Arena* arena) const {
  SLRouteCommon* n = new SLRouteCommon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteCommon::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLRouteCommon*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(admindistance_, tag_);

#undef ZR_HELPER_
#undef ZR_

}

bool SLRouteCommon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteCommon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AdminDistance = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admindistance_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_LocalLabel;
        break;
      }

      // optional uint32 LocalLabel = 2;
      case 2: {
        if (tag == 16) {
         parse_LocalLabel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &locallabel_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Tag;
        break;
      }

      // optional uint32 Tag = 3;
      case 3: {
        if (tag == 24) {
         parse_Tag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteCommon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteCommon)
  return false;
#undef DO_
}

void SLRouteCommon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteCommon)
  // optional uint32 AdminDistance = 1;
  if (this->admindistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->admindistance(), output);
  }

  // optional uint32 LocalLabel = 2;
  if (this->locallabel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->locallabel(), output);
  }

  // optional uint32 Tag = 3;
  if (this->tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tag(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteCommon)
}

::google::protobuf::uint8* SLRouteCommon::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteCommon)
  // optional uint32 AdminDistance = 1;
  if (this->admindistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->admindistance(), target);
  }

  // optional uint32 LocalLabel = 2;
  if (this->locallabel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->locallabel(), target);
  }

  // optional uint32 Tag = 3;
  if (this->tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tag(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteCommon)
  return target;
}

int SLRouteCommon::ByteSize() const {
  int total_size = 0;

  // optional uint32 AdminDistance = 1;
  if (this->admindistance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->admindistance());
  }

  // optional uint32 LocalLabel = 2;
  if (this->locallabel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->locallabel());
  }

  // optional uint32 Tag = 3;
  if (this->tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tag());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteCommon::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRouteCommon* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteCommon>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRouteCommon::MergeFrom(const SLRouteCommon& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.admindistance() != 0) {
    set_admindistance(from.admindistance());
  }
  if (from.locallabel() != 0) {
    set_locallabel(from.locallabel());
  }
  if (from.tag() != 0) {
    set_tag(from.tag());
  }
}

void SLRouteCommon::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteCommon::CopyFrom(const SLRouteCommon& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteCommon::IsInitialized() const {

  return true;
}

void SLRouteCommon::Swap(SLRouteCommon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteCommon::InternalSwap(SLRouteCommon* other) {
  std::swap(admindistance_, other->admindistance_);
  std::swap(locallabel_, other->locallabel_);
  std::swap(tag_, other->tag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteCommon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRouteCommon_descriptor_;
  metadata.reflection = SLRouteCommon_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteCommon

// optional uint32 AdminDistance = 1;
void SLRouteCommon::clear_admindistance() {
  admindistance_ = 0u;
}
 ::google::protobuf::uint32 SLRouteCommon::admindistance() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteCommon.AdminDistance)
  return admindistance_;
}
 void SLRouteCommon::set_admindistance(::google::protobuf::uint32 value) {
  
  admindistance_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteCommon.AdminDistance)
}

// optional uint32 LocalLabel = 2;
void SLRouteCommon::clear_locallabel() {
  locallabel_ = 0u;
}
 ::google::protobuf::uint32 SLRouteCommon::locallabel() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteCommon.LocalLabel)
  return locallabel_;
}
 void SLRouteCommon::set_locallabel(::google::protobuf::uint32 value) {
  
  locallabel_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteCommon.LocalLabel)
}

// optional uint32 Tag = 3;
void SLRouteCommon::clear_tag() {
  tag_ = 0u;
}
 ::google::protobuf::uint32 SLRouteCommon::tag() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteCommon.Tag)
  return tag_;
}
 void SLRouteCommon::set_tag(::google::protobuf::uint32 value) {
  
  tag_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteCommon.Tag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutePath::kNexthopAddressFieldNumber;
const int SLRoutePath::kNexthopInterfaceFieldNumber;
const int SLRoutePath::kLoadMetricFieldNumber;
const int SLRoutePath::kVrfNameFieldNumber;
const int SLRoutePath::kMetricFieldNumber;
const int SLRoutePath::kPathIdFieldNumber;
const int SLRoutePath::kProtectedPathBitmapFieldNumber;
const int SLRoutePath::kLabelStackFieldNumber;
const int SLRoutePath::kRemoteAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutePath::SLRoutePath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutePath)
}

void SLRoutePath::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  nexthopaddress_ = const_cast< ::service_layer::SLIpAddress*>(&::service_layer::SLIpAddress::default_instance());
  nexthopinterface_ = const_cast< ::service_layer::SLInterface*>(&::service_layer::SLInterface::default_instance());
}

SLRoutePath::SLRoutePath(const SLRoutePath& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutePath)
}

void SLRoutePath::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  nexthopaddress_ = NULL;
  nexthopinterface_ = NULL;
  loadmetric_ = 0u;
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metric_ = 0u;
  pathid_ = 0u;
}

SLRoutePath::~SLRoutePath() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutePath)
  SharedDtor();
}

void SLRoutePath::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete nexthopaddress_;
    delete nexthopinterface_;
  }
}

void SLRoutePath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutePath::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRoutePath_descriptor_;
}

const SLRoutePath& SLRoutePath::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  return *default_instance_;
}

SLRoutePath* SLRoutePath::default_instance_ = NULL;

SLRoutePath* SLRoutePath::New(::google::protobuf::Arena* arena) const {
  SLRoutePath* n = new SLRoutePath;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutePath::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLRoutePath*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(loadmetric_, metric_);
  if (GetArenaNoVirtual() == NULL && nexthopaddress_ != NULL) delete nexthopaddress_;
  nexthopaddress_ = NULL;
  if (GetArenaNoVirtual() == NULL && nexthopinterface_ != NULL) delete nexthopinterface_;
  nexthopinterface_ = NULL;
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pathid_ = 0u;

#undef ZR_HELPER_
#undef ZR_

  protectedpathbitmap_.Clear();
  labelstack_.Clear();
  remoteaddress_.Clear();
}

bool SLRoutePath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutePath)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .service_layer.SLIpAddress NexthopAddress = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nexthopaddress()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_NexthopInterface;
        break;
      }

      // optional .service_layer.SLInterface NexthopInterface = 2;
      case 2: {
        if (tag == 18) {
         parse_NexthopInterface:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nexthopinterface()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_LoadMetric;
        break;
      }

      // optional uint32 LoadMetric = 3;
      case 3: {
        if (tag == 24) {
         parse_LoadMetric:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loadmetric_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_VrfName;
        break;
      }

      // optional string VrfName = 4;
      case 4: {
        if (tag == 34) {
         parse_VrfName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutePath.VrfName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_Metric;
        break;
      }

      // optional uint32 Metric = 5;
      case 5: {
        if (tag == 40) {
         parse_Metric:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &metric_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_PathId;
        break;
      }

      // optional uint32 PathId = 6;
      case 6: {
        if (tag == 48) {
         parse_PathId:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pathid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ProtectedPathBitmap;
        break;
      }

      // repeated uint64 ProtectedPathBitmap = 7;
      case 7: {
        if (tag == 58) {
         parse_ProtectedPathBitmap:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_protectedpathbitmap())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 58, input, this->mutable_protectedpathbitmap())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_LabelStack;
        break;
      }

      // repeated uint32 LabelStack = 8;
      case 8: {
        if (tag == 66) {
         parse_LabelStack:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_labelstack())));
        } else if (tag == 64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66, input, this->mutable_labelstack())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_RemoteAddress;
        break;
      }

      // repeated .service_layer.SLIpAddress RemoteAddress = 9;
      case 9: {
        if (tag == 74) {
         parse_RemoteAddress:
          DO_(input->IncrementRecursionDepth());
         parse_loop_RemoteAddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_remoteaddress()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_RemoteAddress;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutePath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutePath)
  return false;
#undef DO_
}

void SLRoutePath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutePath)
  // optional .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->nexthopaddress_, output);
  }

  // optional .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->nexthopinterface_, output);
  }

  // optional uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->loadmetric(), output);
  }

  // optional string VrfName = 4;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutePath.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->vrfname(), output);
  }

  // optional uint32 Metric = 5;
  if (this->metric() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->metric(), output);
  }

  // optional uint32 PathId = 6;
  if (this->pathid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pathid(), output);
  }

  // repeated uint64 ProtectedPathBitmap = 7;
  if (this->protectedpathbitmap_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_protectedpathbitmap_cached_byte_size_);
  }
  for (int i = 0; i < this->protectedpathbitmap_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->protectedpathbitmap(i), output);
  }

  // repeated uint32 LabelStack = 8;
  if (this->labelstack_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_labelstack_cached_byte_size_);
  }
  for (int i = 0; i < this->labelstack_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->labelstack(i), output);
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  for (unsigned int i = 0, n = this->remoteaddress_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->remoteaddress(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutePath)
}

::google::protobuf::uint8* SLRoutePath::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutePath)
  // optional .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->nexthopaddress_, target);
  }

  // optional .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->nexthopinterface_, target);
  }

  // optional uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->loadmetric(), target);
  }

  // optional string VrfName = 4;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutePath.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->vrfname(), target);
  }

  // optional uint32 Metric = 5;
  if (this->metric() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->metric(), target);
  }

  // optional uint32 PathId = 6;
  if (this->pathid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pathid(), target);
  }

  // repeated uint64 ProtectedPathBitmap = 7;
  if (this->protectedpathbitmap_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _protectedpathbitmap_cached_byte_size_, target);
  }
  for (int i = 0; i < this->protectedpathbitmap_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->protectedpathbitmap(i), target);
  }

  // repeated uint32 LabelStack = 8;
  if (this->labelstack_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _labelstack_cached_byte_size_, target);
  }
  for (int i = 0; i < this->labelstack_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->labelstack(i), target);
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  for (unsigned int i = 0, n = this->remoteaddress_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->remoteaddress(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutePath)
  return target;
}

int SLRoutePath::ByteSize() const {
  int total_size = 0;

  // optional .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nexthopaddress_);
  }

  // optional .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nexthopinterface_);
  }

  // optional uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loadmetric());
  }

  // optional string VrfName = 4;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // optional uint32 Metric = 5;
  if (this->metric() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->metric());
  }

  // optional uint32 PathId = 6;
  if (this->pathid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pathid());
  }

  // repeated uint64 ProtectedPathBitmap = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->protectedpathbitmap_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->protectedpathbitmap(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _protectedpathbitmap_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 LabelStack = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->labelstack_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->labelstack(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _labelstack_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  total_size += 1 * this->remoteaddress_size();
  for (int i = 0; i < this->remoteaddress_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->remoteaddress(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutePath::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRoutePath* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutePath>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRoutePath::MergeFrom(const SLRoutePath& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  protectedpathbitmap_.MergeFrom(from.protectedpathbitmap_);
  labelstack_.MergeFrom(from.labelstack_);
  remoteaddress_.MergeFrom(from.remoteaddress_);
  if (from.has_nexthopaddress()) {
    mutable_nexthopaddress()->::service_layer::SLIpAddress::MergeFrom(from.nexthopaddress());
  }
  if (from.has_nexthopinterface()) {
    mutable_nexthopinterface()->::service_layer::SLInterface::MergeFrom(from.nexthopinterface());
  }
  if (from.loadmetric() != 0) {
    set_loadmetric(from.loadmetric());
  }
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.metric() != 0) {
    set_metric(from.metric());
  }
  if (from.pathid() != 0) {
    set_pathid(from.pathid());
  }
}

void SLRoutePath::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutePath::CopyFrom(const SLRoutePath& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutePath::IsInitialized() const {

  return true;
}

void SLRoutePath::Swap(SLRoutePath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutePath::InternalSwap(SLRoutePath* other) {
  std::swap(nexthopaddress_, other->nexthopaddress_);
  std::swap(nexthopinterface_, other->nexthopinterface_);
  std::swap(loadmetric_, other->loadmetric_);
  vrfname_.Swap(&other->vrfname_);
  std::swap(metric_, other->metric_);
  std::swap(pathid_, other->pathid_);
  protectedpathbitmap_.UnsafeArenaSwap(&other->protectedpathbitmap_);
  labelstack_.UnsafeArenaSwap(&other->labelstack_);
  remoteaddress_.UnsafeArenaSwap(&other->remoteaddress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutePath::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRoutePath_descriptor_;
  metadata.reflection = SLRoutePath_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutePath

// optional .service_layer.SLIpAddress NexthopAddress = 1;
bool SLRoutePath::has_nexthopaddress() const {
  return !_is_default_instance_ && nexthopaddress_ != NULL;
}
void SLRoutePath::clear_nexthopaddress() {
  if (GetArenaNoVirtual() == NULL && nexthopaddress_ != NULL) delete nexthopaddress_;
  nexthopaddress_ = NULL;
}
const ::service_layer::SLIpAddress& SLRoutePath::nexthopaddress() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.NexthopAddress)
  return nexthopaddress_ != NULL ? *nexthopaddress_ : *default_instance_->nexthopaddress_;
}
::service_layer::SLIpAddress* SLRoutePath::mutable_nexthopaddress() {
  
  if (nexthopaddress_ == NULL) {
    nexthopaddress_ = new ::service_layer::SLIpAddress;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.NexthopAddress)
  return nexthopaddress_;
}
::service_layer::SLIpAddress* SLRoutePath::release_nexthopaddress() {
  
  ::service_layer::SLIpAddress* temp = nexthopaddress_;
  nexthopaddress_ = NULL;
  return temp;
}
void SLRoutePath::set_allocated_nexthopaddress(::service_layer::SLIpAddress* nexthopaddress) {
  delete nexthopaddress_;
  nexthopaddress_ = nexthopaddress;
  if (nexthopaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutePath.NexthopAddress)
}

// optional .service_layer.SLInterface NexthopInterface = 2;
bool SLRoutePath::has_nexthopinterface() const {
  return !_is_default_instance_ && nexthopinterface_ != NULL;
}
void SLRoutePath::clear_nexthopinterface() {
  if (GetArenaNoVirtual() == NULL && nexthopinterface_ != NULL) delete nexthopinterface_;
  nexthopinterface_ = NULL;
}
const ::service_layer::SLInterface& SLRoutePath::nexthopinterface() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.NexthopInterface)
  return nexthopinterface_ != NULL ? *nexthopinterface_ : *default_instance_->nexthopinterface_;
}
::service_layer::SLInterface* SLRoutePath::mutable_nexthopinterface() {
  
  if (nexthopinterface_ == NULL) {
    nexthopinterface_ = new ::service_layer::SLInterface;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.NexthopInterface)
  return nexthopinterface_;
}
::service_layer::SLInterface* SLRoutePath::release_nexthopinterface() {
  
  ::service_layer::SLInterface* temp = nexthopinterface_;
  nexthopinterface_ = NULL;
  return temp;
}
void SLRoutePath::set_allocated_nexthopinterface(::service_layer::SLInterface* nexthopinterface) {
  delete nexthopinterface_;
  nexthopinterface_ = nexthopinterface;
  if (nexthopinterface) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutePath.NexthopInterface)
}

// optional uint32 LoadMetric = 3;
void SLRoutePath::clear_loadmetric() {
  loadmetric_ = 0u;
}
 ::google::protobuf::uint32 SLRoutePath::loadmetric() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.LoadMetric)
  return loadmetric_;
}
 void SLRoutePath::set_loadmetric(::google::protobuf::uint32 value) {
  
  loadmetric_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.LoadMetric)
}

// optional string VrfName = 4;
void SLRoutePath::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SLRoutePath::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLRoutePath::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.VrfName)
}
 void SLRoutePath::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutePath.VrfName)
}
 void SLRoutePath::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutePath.VrfName)
}
 ::std::string* SLRoutePath::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SLRoutePath::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLRoutePath::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutePath.VrfName)
}

// optional uint32 Metric = 5;
void SLRoutePath::clear_metric() {
  metric_ = 0u;
}
 ::google::protobuf::uint32 SLRoutePath::metric() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.Metric)
  return metric_;
}
 void SLRoutePath::set_metric(::google::protobuf::uint32 value) {
  
  metric_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.Metric)
}

// optional uint32 PathId = 6;
void SLRoutePath::clear_pathid() {
  pathid_ = 0u;
}
 ::google::protobuf::uint32 SLRoutePath::pathid() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.PathId)
  return pathid_;
}
 void SLRoutePath::set_pathid(::google::protobuf::uint32 value) {
  
  pathid_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.PathId)
}

// repeated uint64 ProtectedPathBitmap = 7;
int SLRoutePath::protectedpathbitmap_size() const {
  return protectedpathbitmap_.size();
}
void SLRoutePath::clear_protectedpathbitmap() {
  protectedpathbitmap_.Clear();
}
 ::google::protobuf::uint64 SLRoutePath::protectedpathbitmap(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.ProtectedPathBitmap)
  return protectedpathbitmap_.Get(index);
}
 void SLRoutePath::set_protectedpathbitmap(int index, ::google::protobuf::uint64 value) {
  protectedpathbitmap_.Set(index, value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.ProtectedPathBitmap)
}
 void SLRoutePath::add_protectedpathbitmap(::google::protobuf::uint64 value) {
  protectedpathbitmap_.Add(value);
  // @@protoc_insertion_point(field_add:service_layer.SLRoutePath.ProtectedPathBitmap)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SLRoutePath::protectedpathbitmap() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutePath.ProtectedPathBitmap)
  return protectedpathbitmap_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SLRoutePath::mutable_protectedpathbitmap() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutePath.ProtectedPathBitmap)
  return &protectedpathbitmap_;
}

// repeated uint32 LabelStack = 8;
int SLRoutePath::labelstack_size() const {
  return labelstack_.size();
}
void SLRoutePath::clear_labelstack() {
  labelstack_.Clear();
}
 ::google::protobuf::uint32 SLRoutePath::labelstack(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.LabelStack)
  return labelstack_.Get(index);
}
 void SLRoutePath::set_labelstack(int index, ::google::protobuf::uint32 value) {
  labelstack_.Set(index, value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.LabelStack)
}
 void SLRoutePath::add_labelstack(::google::protobuf::uint32 value) {
  labelstack_.Add(value);
  // @@protoc_insertion_point(field_add:service_layer.SLRoutePath.LabelStack)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SLRoutePath::labelstack() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutePath.LabelStack)
  return labelstack_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SLRoutePath::mutable_labelstack() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutePath.LabelStack)
  return &labelstack_;
}

// repeated .service_layer.SLIpAddress RemoteAddress = 9;
int SLRoutePath::remoteaddress_size() const {
  return remoteaddress_.size();
}
void SLRoutePath::clear_remoteaddress() {
  remoteaddress_.Clear();
}
const ::service_layer::SLIpAddress& SLRoutePath::remoteaddress(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_.Get(index);
}
::service_layer::SLIpAddress* SLRoutePath::mutable_remoteaddress(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_.Mutable(index);
}
::service_layer::SLIpAddress* SLRoutePath::add_remoteaddress() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >*
SLRoutePath::mutable_remoteaddress() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutePath.RemoteAddress)
  return &remoteaddress_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >&
SLRoutePath::remoteaddress() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
