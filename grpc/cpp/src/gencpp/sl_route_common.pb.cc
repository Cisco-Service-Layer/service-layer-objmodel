// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_route_common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sl_route_common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace service_layer {
class SLRouteGlobalsGetMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRouteGlobalsGetMsg> {
} _SLRouteGlobalsGetMsg_default_instance_;
class SLRouteGlobalsGetMsgRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRouteGlobalsGetMsgRsp> {
} _SLRouteGlobalsGetMsgRsp_default_instance_;
class SLRouteGlobalStatsGetMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRouteGlobalStatsGetMsg> {
} _SLRouteGlobalStatsGetMsg_default_instance_;
class SLRouteGlobalStatsGetMsgRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRouteGlobalStatsGetMsgRsp> {
} _SLRouteGlobalStatsGetMsgRsp_default_instance_;
class SLVrfRegDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLVrfReg> {
} _SLVrfReg_default_instance_;
class SLVrfRegMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLVrfRegMsg> {
} _SLVrfRegMsg_default_instance_;
class SLVrfRegMsgResDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLVrfRegMsgRes> {
} _SLVrfRegMsgRes_default_instance_;
class SLVrfRegMsgRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLVrfRegMsgRsp> {
} _SLVrfRegMsgRsp_default_instance_;
class SLVrfRegGetMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLVrfRegGetMsg> {
} _SLVrfRegGetMsg_default_instance_;
class SLVrfRegGetMsgRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLVrfRegGetMsgRsp> {
} _SLVrfRegGetMsgRsp_default_instance_;
class SLVRFGetStatsMsgResDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLVRFGetStatsMsgRes> {
} _SLVRFGetStatsMsgRes_default_instance_;
class SLVRFGetStatsMsgRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLVRFGetStatsMsgRsp> {
} _SLVRFGetStatsMsgRsp_default_instance_;
class SLRouteGetNotifMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRouteGetNotifMsg> {
} _SLRouteGetNotifMsg_default_instance_;
class SLRouteNotifStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRouteNotifStatus> {
} _SLRouteNotifStatus_default_instance_;
class SLRouteNotifMarkerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRouteNotifMarker> {
} _SLRouteNotifMarker_default_instance_;
class SLVrfNotifDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLVrfNotif> {
} _SLVrfNotif_default_instance_;
class SLRouteCommonDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRouteCommon> {
} _SLRouteCommon_default_instance_;
class SLRoutePathDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRoutePath> {
} _SLRoutePath_default_instance_;

namespace protobuf_sl_5froute_5fcommon_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsgRsp, maxvrfregpervrfregmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalsGetMsgRsp, maxrouteperroutemsg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsgRsp, vrfcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGlobalStatsGetMsgRsp, routecount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfReg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfReg, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfReg, admindistance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfReg, vrfpurgeintervalseconds_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsg, vrfregmsgs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRes, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRes, vrfname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRsp, statussummary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegMsgRsp, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsg, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsg, entriescount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsg, getnext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsgRsp, eof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfRegGetMsgRsp, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRes, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRes, routecount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRsp, eof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVRFGetStatsMsgRsp, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGetNotifMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGetNotifMsg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGetNotifMsg, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGetNotifMsg, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGetNotifMsg, srcproto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteGetNotifMsg, srcprototag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteNotifStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteNotifStatus, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteNotifStatus, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteNotifStatus, notifstatus_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteNotifMarker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteNotifMarker, vrfname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfNotif, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfNotif, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLVrfNotif, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteCommon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteCommon, admindistance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteCommon, locallabel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteCommon, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteCommon, srcproto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRouteCommon, srcprototag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, nexthopaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, nexthopinterface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, loadmetric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, metric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, pathid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, protectedpathbitmap_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, labelstack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, remoteaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, encaptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutePath, vteproutermacaddress_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(SLRouteGlobalsGetMsg)},
  { 4, -1, sizeof(SLRouteGlobalsGetMsgRsp)},
  { 11, -1, sizeof(SLRouteGlobalStatsGetMsg)},
  { 15, -1, sizeof(SLRouteGlobalStatsGetMsgRsp)},
  { 22, -1, sizeof(SLVrfReg)},
  { 29, -1, sizeof(SLVrfRegMsg)},
  { 35, -1, sizeof(SLVrfRegMsgRes)},
  { 41, -1, sizeof(SLVrfRegMsgRsp)},
  { 47, -1, sizeof(SLVrfRegGetMsg)},
  { 54, -1, sizeof(SLVrfRegGetMsgRsp)},
  { 61, -1, sizeof(SLVRFGetStatsMsgRes)},
  { 67, -1, sizeof(SLVRFGetStatsMsgRsp)},
  { 74, -1, sizeof(SLRouteGetNotifMsg)},
  { 83, -1, sizeof(SLRouteNotifStatus)},
  { 90, -1, sizeof(SLRouteNotifMarker)},
  { 95, -1, sizeof(SLVrfNotif)},
  { 101, -1, sizeof(SLRouteCommon)},
  { 110, -1, sizeof(SLRoutePath)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRouteGlobalsGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRouteGlobalsGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRouteGlobalStatsGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRouteGlobalStatsGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLVrfReg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLVrfRegMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLVrfRegMsgRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLVrfRegMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLVrfRegGetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLVrfRegGetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLVRFGetStatsMsgRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLVRFGetStatsMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRouteGetNotifMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRouteNotifStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRouteNotifMarker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLVrfNotif_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRouteCommon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRoutePath_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sl_route_common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

}  // namespace

void TableStruct::Shutdown() {
  _SLRouteGlobalsGetMsg_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SLRouteGlobalsGetMsgRsp_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SLRouteGlobalStatsGetMsg_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SLRouteGlobalStatsGetMsgRsp_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _SLVrfReg_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _SLVrfRegMsg_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _SLVrfRegMsgRes_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _SLVrfRegMsgRsp_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _SLVrfRegGetMsg_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _SLVrfRegGetMsgRsp_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _SLVRFGetStatsMsgRes_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _SLVRFGetStatsMsgRsp_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _SLRouteGetNotifMsg_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _SLRouteNotifStatus_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _SLRouteNotifMarker_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _SLVrfNotif_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _SLRouteCommon_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _SLRoutePath_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::service_layer::protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaults();
  _SLRouteGlobalsGetMsg_default_instance_.DefaultConstruct();
  _SLRouteGlobalsGetMsgRsp_default_instance_.DefaultConstruct();
  _SLRouteGlobalStatsGetMsg_default_instance_.DefaultConstruct();
  _SLRouteGlobalStatsGetMsgRsp_default_instance_.DefaultConstruct();
  _SLVrfReg_default_instance_.DefaultConstruct();
  _SLVrfRegMsg_default_instance_.DefaultConstruct();
  _SLVrfRegMsgRes_default_instance_.DefaultConstruct();
  _SLVrfRegMsgRsp_default_instance_.DefaultConstruct();
  _SLVrfRegGetMsg_default_instance_.DefaultConstruct();
  _SLVrfRegGetMsgRsp_default_instance_.DefaultConstruct();
  _SLVRFGetStatsMsgRes_default_instance_.DefaultConstruct();
  _SLVRFGetStatsMsgRsp_default_instance_.DefaultConstruct();
  _SLRouteGetNotifMsg_default_instance_.DefaultConstruct();
  _SLRouteNotifStatus_default_instance_.DefaultConstruct();
  _SLRouteNotifMarker_default_instance_.DefaultConstruct();
  _SLVrfNotif_default_instance_.DefaultConstruct();
  _SLRouteCommon_default_instance_.DefaultConstruct();
  _SLRoutePath_default_instance_.DefaultConstruct();
  _SLRouteGlobalsGetMsgRsp_default_instance_.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLRouteGlobalStatsGetMsgRsp_default_instance_.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLVrfRegMsgRes_default_instance_.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLVrfRegMsgRsp_default_instance_.get_mutable()->statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLVrfRegGetMsgRsp_default_instance_.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLVRFGetStatsMsgRsp_default_instance_.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLRouteNotifStatus_default_instance_.get_mutable()->notifstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLRoutePath_default_instance_.get_mutable()->nexthopaddress_ = const_cast< ::service_layer::SLIpAddress*>(
      ::service_layer::SLIpAddress::internal_default_instance());
  _SLRoutePath_default_instance_.get_mutable()->nexthopinterface_ = const_cast< ::service_layer::SLInterface*>(
      ::service_layer::SLInterface::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\025sl_route_common.proto\022\rservice_layer\032\025"
      "sl_common_types.proto\"\026\n\024SLRouteGlobalsG"
      "etMsg\"\206\001\n\027SLRouteGlobalsGetMsgRsp\022/\n\tErr"
      "Status\030\001 \001(\0132\034.service_layer.SLErrorStat"
      "us\022\035\n\025MaxVrfregPerVrfregmsg\030\002 \001(\r\022\033\n\023Max"
      "RoutePerRoutemsg\030\003 \001(\r\"\032\n\030SLRouteGlobalS"
      "tatsGetMsg\"t\n\033SLRouteGlobalStatsGetMsgRs"
      "p\022/\n\tErrStatus\030\001 \001(\0132\034.service_layer.SLE"
      "rrorStatus\022\020\n\010VrfCount\030\002 \001(\r\022\022\n\nRouteCou"
      "nt\030\003 \001(\r\"S\n\010SLVrfReg\022\017\n\007VrfName\030\001 \001(\t\022\025\n"
      "\rAdminDistance\030\002 \001(\r\022\037\n\027VrfPurgeInterval"
      "Seconds\030\003 \001(\r\"`\n\013SLVrfRegMsg\022$\n\004Oper\030\001 \001"
      "(\0162\026.service_layer.SLRegOp\022+\n\nVrfRegMsgs"
      "\030\002 \003(\0132\027.service_layer.SLVrfReg\"R\n\016SLVrf"
      "RegMsgRes\022/\n\tErrStatus\030\001 \001(\0132\034.service_l"
      "ayer.SLErrorStatus\022\017\n\007VrfName\030\002 \001(\t\"u\n\016S"
      "LVrfRegMsgRsp\0223\n\rStatusSummary\030\001 \001(\0132\034.s"
      "ervice_layer.SLErrorStatus\022.\n\007Results\030\002 "
      "\003(\0132\035.service_layer.SLVrfRegMsgRes\"H\n\016SL"
      "VrfRegGetMsg\022\017\n\007VrfName\030\001 \001(\t\022\024\n\014Entries"
      "Count\030\002 \001(\r\022\017\n\007GetNext\030\003 \001(\010\"{\n\021SLVrfReg"
      "GetMsgRsp\022\013\n\003Eof\030\001 \001(\010\022/\n\tErrStatus\030\002 \001("
      "\0132\034.service_layer.SLErrorStatus\022(\n\007Entri"
      "es\030\003 \003(\0132\027.service_layer.SLVrfReg\":\n\023SLV"
      "RFGetStatsMsgRes\022\017\n\007VrfName\030\001 \001(\t\022\022\n\nRou"
      "teCount\030\002 \001(\r\"\210\001\n\023SLVRFGetStatsMsgRsp\022\013\n"
      "\003Eof\030\001 \001(\010\022/\n\tErrStatus\030\002 \001(\0132\034.service_"
      "layer.SLErrorStatus\0223\n\007Entries\030\003 \003(\0132\".s"
      "ervice_layer.SLVRFGetStatsMsgRes\"\210\001\n\022SLR"
      "outeGetNotifMsg\022&\n\004Oper\030\001 \001(\0162\030.service_"
      "layer.SLNotifOp\022\022\n\nCorrelator\030\002 \001(\004\022\017\n\007V"
      "rfName\030\003 \001(\t\022\020\n\010SrcProto\030\004 \001(\t\022\023\n\013SrcPro"
      "toTag\030\005 \001(\t\"l\n\022SLRouteNotifStatus\022\022\n\nCor"
      "relator\030\001 \001(\004\022\017\n\007VrfName\030\002 \001(\t\0221\n\013NotifS"
      "tatus\030\003 \001(\0132\034.service_layer.SLErrorStatu"
      "s\"%\n\022SLRouteNotifMarker\022\017\n\007VrfName\030\001 \001(\t"
      "\"H\n\nSLVrfNotif\022\017\n\007VrfName\030\001 \001(\t\022)\n\006Statu"
      "s\030\002 \001(\0162\031.service_layer.SLObjectOp\"n\n\rSL"
      "RouteCommon\022\025\n\rAdminDistance\030\001 \001(\r\022\022\n\nLo"
      "calLabel\030\002 \001(\r\022\013\n\003Tag\030\003 \001(\r\022\020\n\010SrcProto\030"
      "\004 \001(\t\022\023\n\013SrcProtoTag\030\005 \001(\t\"\355\002\n\013SLRoutePa"
      "th\0222\n\016NexthopAddress\030\001 \001(\0132\032.service_lay"
      "er.SLIpAddress\0224\n\020NexthopInterface\030\002 \001(\013"
      "2\032.service_layer.SLInterface\022\022\n\nLoadMetr"
      "ic\030\003 \001(\r\022\017\n\007VrfName\030\004 \001(\t\022\016\n\006Metric\030\005 \001("
      "\r\022\016\n\006PathId\030\006 \001(\r\022\033\n\023ProtectedPathBitmap"
      "\030\007 \003(\004\022\022\n\nLabelStack\030\010 \003(\r\0221\n\rRemoteAddr"
      "ess\030\t \003(\0132\032.service_layer.SLIpAddress\022-\n"
      "\tEncapType\030\n \001(\0162\032.service_layer.SLEncap"
      "Type\022\034\n\024VtepRouterMacAddress\030\013 \001(\014*\312\001\n\013S"
      "LNotifType\022\032\n\026SL_EVENT_TYPE_RESERVED\020\000\022\027"
      "\n\023SL_EVENT_TYPE_ERROR\020\001\022\030\n\024SL_EVENT_TYPE"
      "_STATUS\020\002\022\027\n\023SL_EVENT_TYPE_ROUTE\020\003\022\036\n\032SL"
      "_EVENT_TYPE_START_MARKER\020\004\022\034\n\030SL_EVENT_T"
      "YPE_END_MARKER\020\005\022\025\n\021SL_EVENT_TYPE_VRF\020\006b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2207);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_route_common.proto", &protobuf_RegisterTypes);
  ::service_layer::protobuf_sl_5fcommon_5ftypes_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_sl_5froute_5fcommon_2eproto

const ::google::protobuf::EnumDescriptor* SLNotifType_descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_enum_descriptors[0];
}
bool SLNotifType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalsGetMsg::SLRouteGlobalsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalsGetMsg)
}
SLRouteGlobalsGetMsg::SLRouteGlobalsGetMsg(const SLRouteGlobalsGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalsGetMsg)
}

void SLRouteGlobalsGetMsg::SharedCtor() {
  _cached_size_ = 0;
}

SLRouteGlobalsGetMsg::~SLRouteGlobalsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalsGetMsg)
  SharedDtor();
}

void SLRouteGlobalsGetMsg::SharedDtor() {
}

void SLRouteGlobalsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalsGetMsg::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[0].descriptor;
}

const SLRouteGlobalsGetMsg& SLRouteGlobalsGetMsg::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRouteGlobalsGetMsg* SLRouteGlobalsGetMsg::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalsGetMsg* n = new SLRouteGlobalsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalsGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteGlobalsGetMsg)
}

bool SLRouteGlobalsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalsGetMsg)
  return false;
#undef DO_
}

void SLRouteGlobalsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalsGetMsg)
  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalsGetMsg)
}

::google::protobuf::uint8* SLRouteGlobalsGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalsGetMsg)
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalsGetMsg)
  return target;
}

size_t SLRouteGlobalsGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteGlobalsGetMsg)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteGlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteGlobalsGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalsGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteGlobalsGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteGlobalsGetMsg)
    MergeFrom(*source);
  }
}

void SLRouteGlobalsGetMsg::MergeFrom(const SLRouteGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteGlobalsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void SLRouteGlobalsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalsGetMsg::CopyFrom(const SLRouteGlobalsGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteGlobalsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalsGetMsg::IsInitialized() const {
  return true;
}

void SLRouteGlobalsGetMsg::Swap(SLRouteGlobalsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalsGetMsg::InternalSwap(SLRouteGlobalsGetMsg* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalsGetMsg::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteGlobalsGetMsg

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteGlobalsGetMsgRsp::kErrStatusFieldNumber;
const int SLRouteGlobalsGetMsgRsp::kMaxVrfregPerVrfregmsgFieldNumber;
const int SLRouteGlobalsGetMsgRsp::kMaxRoutePerRoutemsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalsGetMsgRsp::SLRouteGlobalsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalsGetMsgRsp)
}
SLRouteGlobalsGetMsgRsp::SLRouteGlobalsGetMsgRsp(const SLRouteGlobalsGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&maxvrfregpervrfregmsg_, &from.maxvrfregpervrfregmsg_,
    reinterpret_cast<char*>(&maxrouteperroutemsg_) -
    reinterpret_cast<char*>(&maxvrfregpervrfregmsg_) + sizeof(maxrouteperroutemsg_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalsGetMsgRsp)
}

void SLRouteGlobalsGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, reinterpret_cast<char*>(&maxrouteperroutemsg_) -
    reinterpret_cast<char*>(&errstatus_) + sizeof(maxrouteperroutemsg_));
  _cached_size_ = 0;
}

SLRouteGlobalsGetMsgRsp::~SLRouteGlobalsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalsGetMsgRsp)
  SharedDtor();
}

void SLRouteGlobalsGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete errstatus_;
  }
}

void SLRouteGlobalsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalsGetMsgRsp::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[1].descriptor;
}

const SLRouteGlobalsGetMsgRsp& SLRouteGlobalsGetMsgRsp::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRouteGlobalsGetMsgRsp* SLRouteGlobalsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalsGetMsgRsp* n = new SLRouteGlobalsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalsGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteGlobalsGetMsgRsp)
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&maxvrfregpervrfregmsg_, 0, reinterpret_cast<char*>(&maxrouteperroutemsg_) -
    reinterpret_cast<char*>(&maxvrfregpervrfregmsg_) + sizeof(maxrouteperroutemsg_));
}

bool SLRouteGlobalsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxVrfregPerVrfregmsg = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxvrfregpervrfregmsg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxRoutePerRoutemsg = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxrouteperroutemsg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalsGetMsgRsp)
  return false;
#undef DO_
}

void SLRouteGlobalsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalsGetMsgRsp)
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint32 MaxVrfregPerVrfregmsg = 2;
  if (this->maxvrfregpervrfregmsg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->maxvrfregpervrfregmsg(), output);
  }

  // uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->maxrouteperroutemsg(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalsGetMsgRsp)
}

::google::protobuf::uint8* SLRouteGlobalsGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalsGetMsgRsp)
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errstatus_, false, target);
  }

  // uint32 MaxVrfregPerVrfregmsg = 2;
  if (this->maxvrfregpervrfregmsg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->maxvrfregpervrfregmsg(), target);
  }

  // uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->maxrouteperroutemsg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalsGetMsgRsp)
  return target;
}

size_t SLRouteGlobalsGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteGlobalsGetMsgRsp)
  size_t total_size = 0;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // uint32 MaxVrfregPerVrfregmsg = 2;
  if (this->maxvrfregpervrfregmsg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxvrfregpervrfregmsg());
  }

  // uint32 MaxRoutePerRoutemsg = 3;
  if (this->maxrouteperroutemsg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxrouteperroutemsg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteGlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteGlobalsGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalsGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteGlobalsGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteGlobalsGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLRouteGlobalsGetMsgRsp::MergeFrom(const SLRouteGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteGlobalsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.maxvrfregpervrfregmsg() != 0) {
    set_maxvrfregpervrfregmsg(from.maxvrfregpervrfregmsg());
  }
  if (from.maxrouteperroutemsg() != 0) {
    set_maxrouteperroutemsg(from.maxrouteperroutemsg());
  }
}

void SLRouteGlobalsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalsGetMsgRsp::CopyFrom(const SLRouteGlobalsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteGlobalsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalsGetMsgRsp::IsInitialized() const {
  return true;
}

void SLRouteGlobalsGetMsgRsp::Swap(SLRouteGlobalsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalsGetMsgRsp::InternalSwap(SLRouteGlobalsGetMsgRsp* other) {
  std::swap(errstatus_, other->errstatus_);
  std::swap(maxvrfregpervrfregmsg_, other->maxvrfregpervrfregmsg_);
  std::swap(maxrouteperroutemsg_, other->maxrouteperroutemsg_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalsGetMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteGlobalsGetMsgRsp

// .service_layer.SLErrorStatus ErrStatus = 1;
bool SLRouteGlobalsGetMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void SLRouteGlobalsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLRouteGlobalsGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalsGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLRouteGlobalsGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteGlobalsGetMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLRouteGlobalsGetMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteGlobalsGetMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLRouteGlobalsGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteGlobalsGetMsgRsp.ErrStatus)
}

// uint32 MaxVrfregPerVrfregmsg = 2;
void SLRouteGlobalsGetMsgRsp::clear_maxvrfregpervrfregmsg() {
  maxvrfregpervrfregmsg_ = 0u;
}
::google::protobuf::uint32 SLRouteGlobalsGetMsgRsp::maxvrfregpervrfregmsg() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalsGetMsgRsp.MaxVrfregPerVrfregmsg)
  return maxvrfregpervrfregmsg_;
}
void SLRouteGlobalsGetMsgRsp::set_maxvrfregpervrfregmsg(::google::protobuf::uint32 value) {
  
  maxvrfregpervrfregmsg_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalsGetMsgRsp.MaxVrfregPerVrfregmsg)
}

// uint32 MaxRoutePerRoutemsg = 3;
void SLRouteGlobalsGetMsgRsp::clear_maxrouteperroutemsg() {
  maxrouteperroutemsg_ = 0u;
}
::google::protobuf::uint32 SLRouteGlobalsGetMsgRsp::maxrouteperroutemsg() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalsGetMsgRsp.MaxRoutePerRoutemsg)
  return maxrouteperroutemsg_;
}
void SLRouteGlobalsGetMsgRsp::set_maxrouteperroutemsg(::google::protobuf::uint32 value) {
  
  maxrouteperroutemsg_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalsGetMsgRsp.MaxRoutePerRoutemsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalStatsGetMsg::SLRouteGlobalStatsGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalStatsGetMsg)
}
SLRouteGlobalStatsGetMsg::SLRouteGlobalStatsGetMsg(const SLRouteGlobalStatsGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalStatsGetMsg)
}

void SLRouteGlobalStatsGetMsg::SharedCtor() {
  _cached_size_ = 0;
}

SLRouteGlobalStatsGetMsg::~SLRouteGlobalStatsGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalStatsGetMsg)
  SharedDtor();
}

void SLRouteGlobalStatsGetMsg::SharedDtor() {
}

void SLRouteGlobalStatsGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalStatsGetMsg::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[2].descriptor;
}

const SLRouteGlobalStatsGetMsg& SLRouteGlobalStatsGetMsg::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRouteGlobalStatsGetMsg* SLRouteGlobalStatsGetMsg::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalStatsGetMsg* n = new SLRouteGlobalStatsGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalStatsGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteGlobalStatsGetMsg)
}

bool SLRouteGlobalStatsGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalStatsGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalStatsGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalStatsGetMsg)
  return false;
#undef DO_
}

void SLRouteGlobalStatsGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalStatsGetMsg)
  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalStatsGetMsg)
}

::google::protobuf::uint8* SLRouteGlobalStatsGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalStatsGetMsg)
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalStatsGetMsg)
  return target;
}

size_t SLRouteGlobalStatsGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteGlobalStatsGetMsg)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalStatsGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteGlobalStatsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteGlobalStatsGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalStatsGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteGlobalStatsGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteGlobalStatsGetMsg)
    MergeFrom(*source);
  }
}

void SLRouteGlobalStatsGetMsg::MergeFrom(const SLRouteGlobalStatsGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteGlobalStatsGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void SLRouteGlobalStatsGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteGlobalStatsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalStatsGetMsg::CopyFrom(const SLRouteGlobalStatsGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteGlobalStatsGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalStatsGetMsg::IsInitialized() const {
  return true;
}

void SLRouteGlobalStatsGetMsg::Swap(SLRouteGlobalStatsGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalStatsGetMsg::InternalSwap(SLRouteGlobalStatsGetMsg* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalStatsGetMsg::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteGlobalStatsGetMsg

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteGlobalStatsGetMsgRsp::kErrStatusFieldNumber;
const int SLRouteGlobalStatsGetMsgRsp::kVrfCountFieldNumber;
const int SLRouteGlobalStatsGetMsgRsp::kRouteCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGlobalStatsGetMsgRsp::SLRouteGlobalStatsGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGlobalStatsGetMsgRsp)
}
SLRouteGlobalStatsGetMsgRsp::SLRouteGlobalStatsGetMsgRsp(const SLRouteGlobalStatsGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&vrfcount_, &from.vrfcount_,
    reinterpret_cast<char*>(&routecount_) -
    reinterpret_cast<char*>(&vrfcount_) + sizeof(routecount_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGlobalStatsGetMsgRsp)
}

void SLRouteGlobalStatsGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, reinterpret_cast<char*>(&routecount_) -
    reinterpret_cast<char*>(&errstatus_) + sizeof(routecount_));
  _cached_size_ = 0;
}

SLRouteGlobalStatsGetMsgRsp::~SLRouteGlobalStatsGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGlobalStatsGetMsgRsp)
  SharedDtor();
}

void SLRouteGlobalStatsGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete errstatus_;
  }
}

void SLRouteGlobalStatsGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGlobalStatsGetMsgRsp::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[3].descriptor;
}

const SLRouteGlobalStatsGetMsgRsp& SLRouteGlobalStatsGetMsgRsp::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRouteGlobalStatsGetMsgRsp* SLRouteGlobalStatsGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRouteGlobalStatsGetMsgRsp* n = new SLRouteGlobalStatsGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGlobalStatsGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&vrfcount_, 0, reinterpret_cast<char*>(&routecount_) -
    reinterpret_cast<char*>(&vrfcount_) + sizeof(routecount_));
}

bool SLRouteGlobalStatsGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 VrfCount = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vrfcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RouteCount = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &routecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGlobalStatsGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGlobalStatsGetMsgRsp)
  return false;
#undef DO_
}

void SLRouteGlobalStatsGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint32 VrfCount = 2;
  if (this->vrfcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->vrfcount(), output);
  }

  // uint32 RouteCount = 3;
  if (this->routecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->routecount(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGlobalStatsGetMsgRsp)
}

::google::protobuf::uint8* SLRouteGlobalStatsGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errstatus_, false, target);
  }

  // uint32 VrfCount = 2;
  if (this->vrfcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->vrfcount(), target);
  }

  // uint32 RouteCount = 3;
  if (this->routecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->routecount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGlobalStatsGetMsgRsp)
  return target;
}

size_t SLRouteGlobalStatsGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  size_t total_size = 0;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // uint32 VrfCount = 2;
  if (this->vrfcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vrfcount());
  }

  // uint32 RouteCount = 3;
  if (this->routecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->routecount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGlobalStatsGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteGlobalStatsGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGlobalStatsGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteGlobalStatsGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteGlobalStatsGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLRouteGlobalStatsGetMsgRsp::MergeFrom(const SLRouteGlobalStatsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.vrfcount() != 0) {
    set_vrfcount(from.vrfcount());
  }
  if (from.routecount() != 0) {
    set_routecount(from.routecount());
  }
}

void SLRouteGlobalStatsGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGlobalStatsGetMsgRsp::CopyFrom(const SLRouteGlobalStatsGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteGlobalStatsGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGlobalStatsGetMsgRsp::IsInitialized() const {
  return true;
}

void SLRouteGlobalStatsGetMsgRsp::Swap(SLRouteGlobalStatsGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGlobalStatsGetMsgRsp::InternalSwap(SLRouteGlobalStatsGetMsgRsp* other) {
  std::swap(errstatus_, other->errstatus_);
  std::swap(vrfcount_, other->vrfcount_);
  std::swap(routecount_, other->routecount_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGlobalStatsGetMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteGlobalStatsGetMsgRsp

// .service_layer.SLErrorStatus ErrStatus = 1;
bool SLRouteGlobalStatsGetMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void SLRouteGlobalStatsGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLRouteGlobalStatsGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalStatsGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLRouteGlobalStatsGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteGlobalStatsGetMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLRouteGlobalStatsGetMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteGlobalStatsGetMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLRouteGlobalStatsGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteGlobalStatsGetMsgRsp.ErrStatus)
}

// uint32 VrfCount = 2;
void SLRouteGlobalStatsGetMsgRsp::clear_vrfcount() {
  vrfcount_ = 0u;
}
::google::protobuf::uint32 SLRouteGlobalStatsGetMsgRsp::vrfcount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalStatsGetMsgRsp.VrfCount)
  return vrfcount_;
}
void SLRouteGlobalStatsGetMsgRsp::set_vrfcount(::google::protobuf::uint32 value) {
  
  vrfcount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalStatsGetMsgRsp.VrfCount)
}

// uint32 RouteCount = 3;
void SLRouteGlobalStatsGetMsgRsp::clear_routecount() {
  routecount_ = 0u;
}
::google::protobuf::uint32 SLRouteGlobalStatsGetMsgRsp::routecount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGlobalStatsGetMsgRsp.RouteCount)
  return routecount_;
}
void SLRouteGlobalStatsGetMsgRsp::set_routecount(::google::protobuf::uint32 value) {
  
  routecount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGlobalStatsGetMsgRsp.RouteCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfReg::kVrfNameFieldNumber;
const int SLVrfReg::kAdminDistanceFieldNumber;
const int SLVrfReg::kVrfPurgeIntervalSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfReg::SLVrfReg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfReg)
}
SLVrfReg::SLVrfReg(const SLVrfReg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  ::memcpy(&admindistance_, &from.admindistance_,
    reinterpret_cast<char*>(&vrfpurgeintervalseconds_) -
    reinterpret_cast<char*>(&admindistance_) + sizeof(vrfpurgeintervalseconds_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfReg)
}

void SLVrfReg::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&admindistance_, 0, reinterpret_cast<char*>(&vrfpurgeintervalseconds_) -
    reinterpret_cast<char*>(&admindistance_) + sizeof(vrfpurgeintervalseconds_));
  _cached_size_ = 0;
}

SLVrfReg::~SLVrfReg() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfReg)
  SharedDtor();
}

void SLVrfReg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLVrfReg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfReg::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[4].descriptor;
}

const SLVrfReg& SLVrfReg::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLVrfReg* SLVrfReg::New(::google::protobuf::Arena* arena) const {
  SLVrfReg* n = new SLVrfReg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfReg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfReg)
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&admindistance_, 0, reinterpret_cast<char*>(&vrfpurgeintervalseconds_) -
    reinterpret_cast<char*>(&admindistance_) + sizeof(vrfpurgeintervalseconds_));
}

bool SLVrfReg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfReg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string VrfName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVrfReg.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 AdminDistance = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admindistance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 VrfPurgeIntervalSeconds = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vrfpurgeintervalseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfReg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfReg)
  return false;
#undef DO_
}

void SLVrfReg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfReg)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfReg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->admindistance(), output);
  }

  // uint32 VrfPurgeIntervalSeconds = 3;
  if (this->vrfpurgeintervalseconds() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->vrfpurgeintervalseconds(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfReg)
}

::google::protobuf::uint8* SLVrfReg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfReg)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfReg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->admindistance(), target);
  }

  // uint32 VrfPurgeIntervalSeconds = 3;
  if (this->vrfpurgeintervalseconds() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->vrfpurgeintervalseconds(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfReg)
  return target;
}

size_t SLVrfReg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfReg)
  size_t total_size = 0;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // uint32 AdminDistance = 2;
  if (this->admindistance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->admindistance());
  }

  // uint32 VrfPurgeIntervalSeconds = 3;
  if (this->vrfpurgeintervalseconds() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vrfpurgeintervalseconds());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfReg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfReg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfReg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfReg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfReg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfReg)
    MergeFrom(*source);
  }
}

void SLVrfReg::MergeFrom(const SLVrfReg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfReg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.admindistance() != 0) {
    set_admindistance(from.admindistance());
  }
  if (from.vrfpurgeintervalseconds() != 0) {
    set_vrfpurgeintervalseconds(from.vrfpurgeintervalseconds());
  }
}

void SLVrfReg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfReg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfReg::CopyFrom(const SLVrfReg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfReg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfReg::IsInitialized() const {
  return true;
}

void SLVrfReg::Swap(SLVrfReg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfReg::InternalSwap(SLVrfReg* other) {
  vrfname_.Swap(&other->vrfname_);
  std::swap(admindistance_, other->admindistance_);
  std::swap(vrfpurgeintervalseconds_, other->vrfpurgeintervalseconds_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfReg::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfReg

// string VrfName = 1;
void SLVrfReg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLVrfReg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfReg.VrfName)
  return vrfname_.GetNoArena();
}
void SLVrfReg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVrfReg.VrfName)
}
#if LANG_CXX11
void SLVrfReg::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLVrfReg.VrfName)
}
#endif
void SLVrfReg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVrfReg.VrfName)
}
void SLVrfReg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVrfReg.VrfName)
}
::std::string* SLVrfReg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfReg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLVrfReg::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfReg.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLVrfReg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfReg.VrfName)
}

// uint32 AdminDistance = 2;
void SLVrfReg::clear_admindistance() {
  admindistance_ = 0u;
}
::google::protobuf::uint32 SLVrfReg::admindistance() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfReg.AdminDistance)
  return admindistance_;
}
void SLVrfReg::set_admindistance(::google::protobuf::uint32 value) {
  
  admindistance_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfReg.AdminDistance)
}

// uint32 VrfPurgeIntervalSeconds = 3;
void SLVrfReg::clear_vrfpurgeintervalseconds() {
  vrfpurgeintervalseconds_ = 0u;
}
::google::protobuf::uint32 SLVrfReg::vrfpurgeintervalseconds() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfReg.VrfPurgeIntervalSeconds)
  return vrfpurgeintervalseconds_;
}
void SLVrfReg::set_vrfpurgeintervalseconds(::google::protobuf::uint32 value) {
  
  vrfpurgeintervalseconds_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfReg.VrfPurgeIntervalSeconds)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegMsg::kOperFieldNumber;
const int SLVrfRegMsg::kVrfRegMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegMsg::SLVrfRegMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegMsg)
}
SLVrfRegMsg::SLVrfRegMsg(const SLVrfRegMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vrfregmsgs_(from.vrfregmsgs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oper_ = from.oper_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegMsg)
}

void SLVrfRegMsg::SharedCtor() {
  oper_ = 0;
  _cached_size_ = 0;
}

SLVrfRegMsg::~SLVrfRegMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegMsg)
  SharedDtor();
}

void SLVrfRegMsg::SharedDtor() {
}

void SLVrfRegMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegMsg::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[5].descriptor;
}

const SLVrfRegMsg& SLVrfRegMsg::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLVrfRegMsg* SLVrfRegMsg::New(::google::protobuf::Arena* arena) const {
  SLVrfRegMsg* n = new SLVrfRegMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfRegMsg)
  vrfregmsgs_.Clear();
  oper_ = 0;
}

bool SLVrfRegMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLRegOp Oper = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLRegOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_vrfregmsgs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegMsg)
  return false;
#undef DO_
}

void SLVrfRegMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegMsg)
  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
  for (unsigned int i = 0, n = this->vrfregmsgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vrfregmsgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegMsg)
}

::google::protobuf::uint8* SLVrfRegMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegMsg)
  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
  for (unsigned int i = 0, n = this->vrfregmsgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->vrfregmsgs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegMsg)
  return target;
}

size_t SLVrfRegMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfRegMsg)
  size_t total_size = 0;

  // repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
  {
    unsigned int count = this->vrfregmsgs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vrfregmsgs(i));
    }
  }

  // .service_layer.SLRegOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfRegMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfRegMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfRegMsg)
    MergeFrom(*source);
  }
}

void SLVrfRegMsg::MergeFrom(const SLVrfRegMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfRegMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfregmsgs_.MergeFrom(from.vrfregmsgs_);
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLVrfRegMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegMsg::CopyFrom(const SLVrfRegMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfRegMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegMsg::IsInitialized() const {
  return true;
}

void SLVrfRegMsg::Swap(SLVrfRegMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegMsg::InternalSwap(SLVrfRegMsg* other) {
  vrfregmsgs_.UnsafeArenaSwap(&other->vrfregmsgs_);
  std::swap(oper_, other->oper_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegMsg::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfRegMsg

// .service_layer.SLRegOp Oper = 1;
void SLVrfRegMsg::clear_oper() {
  oper_ = 0;
}
::service_layer::SLRegOp SLVrfRegMsg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsg.Oper)
  return static_cast< ::service_layer::SLRegOp >(oper_);
}
void SLVrfRegMsg::set_oper(::service_layer::SLRegOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegMsg.Oper)
}

// repeated .service_layer.SLVrfReg VrfRegMsgs = 2;
int SLVrfRegMsg::vrfregmsgs_size() const {
  return vrfregmsgs_.size();
}
void SLVrfRegMsg::clear_vrfregmsgs() {
  vrfregmsgs_.Clear();
}
const ::service_layer::SLVrfReg& SLVrfRegMsg::vrfregmsgs(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_.Get(index);
}
::service_layer::SLVrfReg* SLVrfRegMsg::mutable_vrfregmsgs(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_.Mutable(index);
}
::service_layer::SLVrfReg* SLVrfRegMsg::add_vrfregmsgs() {
  // @@protoc_insertion_point(field_add:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >*
SLVrfRegMsg::mutable_vrfregmsgs() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return &vrfregmsgs_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >&
SLVrfRegMsg::vrfregmsgs() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVrfRegMsg.VrfRegMsgs)
  return vrfregmsgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegMsgRes::kErrStatusFieldNumber;
const int SLVrfRegMsgRes::kVrfNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegMsgRes::SLVrfRegMsgRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegMsgRes)
}
SLVrfRegMsgRes::SLVrfRegMsgRes(const SLVrfRegMsgRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegMsgRes)
}

void SLVrfRegMsgRes::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errstatus_ = NULL;
  _cached_size_ = 0;
}

SLVrfRegMsgRes::~SLVrfRegMsgRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegMsgRes)
  SharedDtor();
}

void SLVrfRegMsgRes::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete errstatus_;
  }
}

void SLVrfRegMsgRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegMsgRes::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[6].descriptor;
}

const SLVrfRegMsgRes& SLVrfRegMsgRes::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLVrfRegMsgRes* SLVrfRegMsgRes::New(::google::protobuf::Arena* arena) const {
  SLVrfRegMsgRes* n = new SLVrfRegMsgRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegMsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfRegMsgRes)
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}

bool SLVrfRegMsgRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegMsgRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVrfRegMsgRes.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegMsgRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegMsgRes)
  return false;
#undef DO_
}

void SLVrfRegMsgRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegMsgRes)
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegMsgRes.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vrfname(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegMsgRes)
}

::google::protobuf::uint8* SLVrfRegMsgRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegMsgRes)
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errstatus_, false, target);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegMsgRes.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vrfname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegMsgRes)
  return target;
}

size_t SLVrfRegMsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfRegMsgRes)
  size_t total_size = 0;

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegMsgRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfRegMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfRegMsgRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegMsgRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfRegMsgRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfRegMsgRes)
    MergeFrom(*source);
  }
}

void SLVrfRegMsgRes::MergeFrom(const SLVrfRegMsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfRegMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
}

void SLVrfRegMsgRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfRegMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegMsgRes::CopyFrom(const SLVrfRegMsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfRegMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegMsgRes::IsInitialized() const {
  return true;
}

void SLVrfRegMsgRes::Swap(SLVrfRegMsgRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegMsgRes::InternalSwap(SLVrfRegMsgRes* other) {
  vrfname_.Swap(&other->vrfname_);
  std::swap(errstatus_, other->errstatus_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegMsgRes::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfRegMsgRes

// .service_layer.SLErrorStatus ErrStatus = 1;
bool SLVrfRegMsgRes::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void SLVrfRegMsgRes::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLVrfRegMsgRes::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRes.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLVrfRegMsgRes::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRes.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLVrfRegMsgRes::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfRegMsgRes.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLVrfRegMsgRes::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegMsgRes.ErrStatus)
}

// string VrfName = 2;
void SLVrfRegMsgRes::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLVrfRegMsgRes::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRes.VrfName)
  return vrfname_.GetNoArena();
}
void SLVrfRegMsgRes::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegMsgRes.VrfName)
}
#if LANG_CXX11
void SLVrfRegMsgRes::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLVrfRegMsgRes.VrfName)
}
#endif
void SLVrfRegMsgRes::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVrfRegMsgRes.VrfName)
}
void SLVrfRegMsgRes::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVrfRegMsgRes.VrfName)
}
::std::string* SLVrfRegMsgRes::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRes.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLVrfRegMsgRes::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfRegMsgRes.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLVrfRegMsgRes::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegMsgRes.VrfName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegMsgRsp::kStatusSummaryFieldNumber;
const int SLVrfRegMsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegMsgRsp::SLVrfRegMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegMsgRsp)
}
SLVrfRegMsgRsp::SLVrfRegMsgRsp(const SLVrfRegMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_statussummary()) {
    statussummary_ = new ::service_layer::SLErrorStatus(*from.statussummary_);
  } else {
    statussummary_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegMsgRsp)
}

void SLVrfRegMsgRsp::SharedCtor() {
  statussummary_ = NULL;
  _cached_size_ = 0;
}

SLVrfRegMsgRsp::~SLVrfRegMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegMsgRsp)
  SharedDtor();
}

void SLVrfRegMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete statussummary_;
  }
}

void SLVrfRegMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegMsgRsp::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[7].descriptor;
}

const SLVrfRegMsgRsp& SLVrfRegMsgRsp::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLVrfRegMsgRsp* SLVrfRegMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLVrfRegMsgRsp* n = new SLVrfRegMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfRegMsgRsp)
  results_.Clear();
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
}

bool SLVrfRegMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus StatusSummary = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLVrfRegMsgRes Results = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegMsgRsp)
  return false;
#undef DO_
}

void SLVrfRegMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegMsgRsp)
  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->statussummary_, output);
  }

  // repeated .service_layer.SLVrfRegMsgRes Results = 2;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->results(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegMsgRsp)
}

::google::protobuf::uint8* SLVrfRegMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegMsgRsp)
  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->statussummary_, false, target);
  }

  // repeated .service_layer.SLVrfRegMsgRes Results = 2;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->results(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegMsgRsp)
  return target;
}

size_t SLVrfRegMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfRegMsgRsp)
  size_t total_size = 0;

  // repeated .service_layer.SLVrfRegMsgRes Results = 2;
  {
    unsigned int count = this->results_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->results(i));
    }
  }

  // .service_layer.SLErrorStatus StatusSummary = 1;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->statussummary_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfRegMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfRegMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfRegMsgRsp)
    MergeFrom(*source);
  }
}

void SLVrfRegMsgRsp::MergeFrom(const SLVrfRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfRegMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  results_.MergeFrom(from.results_);
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
}

void SLVrfRegMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegMsgRsp::CopyFrom(const SLVrfRegMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfRegMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegMsgRsp::IsInitialized() const {
  return true;
}

void SLVrfRegMsgRsp::Swap(SLVrfRegMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegMsgRsp::InternalSwap(SLVrfRegMsgRsp* other) {
  results_.UnsafeArenaSwap(&other->results_);
  std::swap(statussummary_, other->statussummary_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfRegMsgRsp

// .service_layer.SLErrorStatus StatusSummary = 1;
bool SLVrfRegMsgRsp::has_statussummary() const {
  return this != internal_default_instance() && statussummary_ != NULL;
}
void SLVrfRegMsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) delete statussummary_;
  statussummary_ = NULL;
}
const ::service_layer::SLErrorStatus& SLVrfRegMsgRsp::statussummary() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRsp.StatusSummary)
  return statussummary_ != NULL ? *statussummary_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLVrfRegMsgRsp::mutable_statussummary() {
  
  if (statussummary_ == NULL) {
    statussummary_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRsp.StatusSummary)
  return statussummary_;
}
::service_layer::SLErrorStatus* SLVrfRegMsgRsp::release_statussummary() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfRegMsgRsp.StatusSummary)
  
  ::service_layer::SLErrorStatus* temp = statussummary_;
  statussummary_ = NULL;
  return temp;
}
void SLVrfRegMsgRsp::set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary) {
  delete statussummary_;
  statussummary_ = statussummary;
  if (statussummary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegMsgRsp.StatusSummary)
}

// repeated .service_layer.SLVrfRegMsgRes Results = 2;
int SLVrfRegMsgRsp::results_size() const {
  return results_.size();
}
void SLVrfRegMsgRsp::clear_results() {
  results_.Clear();
}
const ::service_layer::SLVrfRegMsgRes& SLVrfRegMsgRsp::results(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegMsgRsp.Results)
  return results_.Get(index);
}
::service_layer::SLVrfRegMsgRes* SLVrfRegMsgRsp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegMsgRsp.Results)
  return results_.Mutable(index);
}
::service_layer::SLVrfRegMsgRes* SLVrfRegMsgRsp::add_results() {
  // @@protoc_insertion_point(field_add:service_layer.SLVrfRegMsgRsp.Results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfRegMsgRes >*
SLVrfRegMsgRsp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVrfRegMsgRsp.Results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfRegMsgRes >&
SLVrfRegMsgRsp::results() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVrfRegMsgRsp.Results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegGetMsg::kVrfNameFieldNumber;
const int SLVrfRegGetMsg::kEntriesCountFieldNumber;
const int SLVrfRegGetMsg::kGetNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegGetMsg::SLVrfRegGetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegGetMsg)
}
SLVrfRegGetMsg::SLVrfRegGetMsg(const SLVrfRegGetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  ::memcpy(&entriescount_, &from.entriescount_,
    reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&entriescount_) + sizeof(getnext_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegGetMsg)
}

void SLVrfRegGetMsg::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entriescount_, 0, reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&entriescount_) + sizeof(getnext_));
  _cached_size_ = 0;
}

SLVrfRegGetMsg::~SLVrfRegGetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegGetMsg)
  SharedDtor();
}

void SLVrfRegGetMsg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLVrfRegGetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegGetMsg::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[8].descriptor;
}

const SLVrfRegGetMsg& SLVrfRegGetMsg::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLVrfRegGetMsg* SLVrfRegGetMsg::New(::google::protobuf::Arena* arena) const {
  SLVrfRegGetMsg* n = new SLVrfRegGetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegGetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfRegGetMsg)
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&entriescount_, 0, reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&entriescount_) + sizeof(getnext_));
}

bool SLVrfRegGetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegGetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string VrfName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVrfRegGetMsg.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EntriesCount = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entriescount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool GetNext = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getnext_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegGetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegGetMsg)
  return false;
#undef DO_
}

void SLVrfRegGetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegGetMsg)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegGetMsg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entriescount(), output);
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->getnext(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegGetMsg)
}

::google::protobuf::uint8* SLVrfRegGetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegGetMsg)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfRegGetMsg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entriescount(), target);
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->getnext(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegGetMsg)
  return target;
}

size_t SLVrfRegGetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfRegGetMsg)
  size_t total_size = 0;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // uint32 EntriesCount = 2;
  if (this->entriescount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entriescount());
  }

  // bool GetNext = 3;
  if (this->getnext() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegGetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfRegGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfRegGetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegGetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfRegGetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfRegGetMsg)
    MergeFrom(*source);
  }
}

void SLVrfRegGetMsg::MergeFrom(const SLVrfRegGetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfRegGetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.entriescount() != 0) {
    set_entriescount(from.entriescount());
  }
  if (from.getnext() != 0) {
    set_getnext(from.getnext());
  }
}

void SLVrfRegGetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfRegGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegGetMsg::CopyFrom(const SLVrfRegGetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfRegGetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegGetMsg::IsInitialized() const {
  return true;
}

void SLVrfRegGetMsg::Swap(SLVrfRegGetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegGetMsg::InternalSwap(SLVrfRegGetMsg* other) {
  vrfname_.Swap(&other->vrfname_);
  std::swap(entriescount_, other->entriescount_);
  std::swap(getnext_, other->getnext_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegGetMsg::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfRegGetMsg

// string VrfName = 1;
void SLVrfRegGetMsg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLVrfRegGetMsg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsg.VrfName)
  return vrfname_.GetNoArena();
}
void SLVrfRegGetMsg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsg.VrfName)
}
#if LANG_CXX11
void SLVrfRegGetMsg::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLVrfRegGetMsg.VrfName)
}
#endif
void SLVrfRegGetMsg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVrfRegGetMsg.VrfName)
}
void SLVrfRegGetMsg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVrfRegGetMsg.VrfName)
}
::std::string* SLVrfRegGetMsg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegGetMsg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLVrfRegGetMsg::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfRegGetMsg.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLVrfRegGetMsg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegGetMsg.VrfName)
}

// uint32 EntriesCount = 2;
void SLVrfRegGetMsg::clear_entriescount() {
  entriescount_ = 0u;
}
::google::protobuf::uint32 SLVrfRegGetMsg::entriescount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsg.EntriesCount)
  return entriescount_;
}
void SLVrfRegGetMsg::set_entriescount(::google::protobuf::uint32 value) {
  
  entriescount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsg.EntriesCount)
}

// bool GetNext = 3;
void SLVrfRegGetMsg::clear_getnext() {
  getnext_ = false;
}
bool SLVrfRegGetMsg::getnext() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsg.GetNext)
  return getnext_;
}
void SLVrfRegGetMsg::set_getnext(bool value) {
  
  getnext_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsg.GetNext)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfRegGetMsgRsp::kEofFieldNumber;
const int SLVrfRegGetMsgRsp::kErrStatusFieldNumber;
const int SLVrfRegGetMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfRegGetMsgRsp::SLVrfRegGetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfRegGetMsgRsp)
}
SLVrfRegGetMsgRsp::SLVrfRegGetMsgRsp(const SLVrfRegGetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  eof_ = from.eof_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfRegGetMsgRsp)
}

void SLVrfRegGetMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, reinterpret_cast<char*>(&eof_) -
    reinterpret_cast<char*>(&errstatus_) + sizeof(eof_));
  _cached_size_ = 0;
}

SLVrfRegGetMsgRsp::~SLVrfRegGetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfRegGetMsgRsp)
  SharedDtor();
}

void SLVrfRegGetMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete errstatus_;
  }
}

void SLVrfRegGetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfRegGetMsgRsp::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[9].descriptor;
}

const SLVrfRegGetMsgRsp& SLVrfRegGetMsgRsp::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLVrfRegGetMsgRsp* SLVrfRegGetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLVrfRegGetMsgRsp* n = new SLVrfRegGetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfRegGetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfRegGetMsgRsp)
  entries_.Clear();
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  eof_ = false;
}

bool SLVrfRegGetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfRegGetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Eof = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLVrfReg Entries = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfRegGetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfRegGetMsgRsp)
  return false;
#undef DO_
}

void SLVrfRegGetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfRegGetMsgRsp)
  // bool Eof = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->eof(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // repeated .service_layer.SLVrfReg Entries = 3;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->entries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfRegGetMsgRsp)
}

::google::protobuf::uint8* SLVrfRegGetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfRegGetMsgRsp)
  // bool Eof = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->eof(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->errstatus_, false, target);
  }

  // repeated .service_layer.SLVrfReg Entries = 3;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->entries(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfRegGetMsgRsp)
  return target;
}

size_t SLVrfRegGetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfRegGetMsgRsp)
  size_t total_size = 0;

  // repeated .service_layer.SLVrfReg Entries = 3;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // bool Eof = 1;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfRegGetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfRegGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfRegGetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfRegGetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfRegGetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfRegGetMsgRsp)
    MergeFrom(*source);
  }
}

void SLVrfRegGetMsgRsp::MergeFrom(const SLVrfRegGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfRegGetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entries_.MergeFrom(from.entries_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
}

void SLVrfRegGetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfRegGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfRegGetMsgRsp::CopyFrom(const SLVrfRegGetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfRegGetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfRegGetMsgRsp::IsInitialized() const {
  return true;
}

void SLVrfRegGetMsgRsp::Swap(SLVrfRegGetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfRegGetMsgRsp::InternalSwap(SLVrfRegGetMsgRsp* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  std::swap(errstatus_, other->errstatus_);
  std::swap(eof_, other->eof_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfRegGetMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfRegGetMsgRsp

// bool Eof = 1;
void SLVrfRegGetMsgRsp::clear_eof() {
  eof_ = false;
}
bool SLVrfRegGetMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsgRsp.Eof)
  return eof_;
}
void SLVrfRegGetMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfRegGetMsgRsp.Eof)
}

// .service_layer.SLErrorStatus ErrStatus = 2;
bool SLVrfRegGetMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void SLVrfRegGetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLVrfRegGetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLVrfRegGetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegGetMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLVrfRegGetMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfRegGetMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLVrfRegGetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfRegGetMsgRsp.ErrStatus)
}

// repeated .service_layer.SLVrfReg Entries = 3;
int SLVrfRegGetMsgRsp::entries_size() const {
  return entries_.size();
}
void SLVrfRegGetMsgRsp::clear_entries() {
  entries_.Clear();
}
const ::service_layer::SLVrfReg& SLVrfRegGetMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_.Get(index);
}
::service_layer::SLVrfReg* SLVrfRegGetMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_.Mutable(index);
}
::service_layer::SLVrfReg* SLVrfRegGetMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >*
SLVrfRegGetMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVrfRegGetMsgRsp.Entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVrfReg >&
SLVrfRegGetMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVrfRegGetMsgRsp.Entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVRFGetStatsMsgRes::kVrfNameFieldNumber;
const int SLVRFGetStatsMsgRes::kRouteCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVRFGetStatsMsgRes::SLVRFGetStatsMsgRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVRFGetStatsMsgRes)
}
SLVRFGetStatsMsgRes::SLVRFGetStatsMsgRes(const SLVRFGetStatsMsgRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  routecount_ = from.routecount_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVRFGetStatsMsgRes)
}

void SLVRFGetStatsMsgRes::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routecount_ = 0u;
  _cached_size_ = 0;
}

SLVRFGetStatsMsgRes::~SLVRFGetStatsMsgRes() {
  // @@protoc_insertion_point(destructor:service_layer.SLVRFGetStatsMsgRes)
  SharedDtor();
}

void SLVRFGetStatsMsgRes::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLVRFGetStatsMsgRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVRFGetStatsMsgRes::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[10].descriptor;
}

const SLVRFGetStatsMsgRes& SLVRFGetStatsMsgRes::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLVRFGetStatsMsgRes* SLVRFGetStatsMsgRes::New(::google::protobuf::Arena* arena) const {
  SLVRFGetStatsMsgRes* n = new SLVRFGetStatsMsgRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVRFGetStatsMsgRes::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVRFGetStatsMsgRes)
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routecount_ = 0u;
}

bool SLVRFGetStatsMsgRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVRFGetStatsMsgRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string VrfName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVRFGetStatsMsgRes.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 RouteCount = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &routecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVRFGetStatsMsgRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVRFGetStatsMsgRes)
  return false;
#undef DO_
}

void SLVRFGetStatsMsgRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVRFGetStatsMsgRes)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVRFGetStatsMsgRes.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // uint32 RouteCount = 2;
  if (this->routecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->routecount(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVRFGetStatsMsgRes)
}

::google::protobuf::uint8* SLVRFGetStatsMsgRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVRFGetStatsMsgRes)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVRFGetStatsMsgRes.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // uint32 RouteCount = 2;
  if (this->routecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->routecount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVRFGetStatsMsgRes)
  return target;
}

size_t SLVRFGetStatsMsgRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVRFGetStatsMsgRes)
  size_t total_size = 0;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // uint32 RouteCount = 2;
  if (this->routecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->routecount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVRFGetStatsMsgRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVRFGetStatsMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVRFGetStatsMsgRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVRFGetStatsMsgRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVRFGetStatsMsgRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVRFGetStatsMsgRes)
    MergeFrom(*source);
  }
}

void SLVRFGetStatsMsgRes::MergeFrom(const SLVRFGetStatsMsgRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVRFGetStatsMsgRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.routecount() != 0) {
    set_routecount(from.routecount());
  }
}

void SLVRFGetStatsMsgRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVRFGetStatsMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVRFGetStatsMsgRes::CopyFrom(const SLVRFGetStatsMsgRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVRFGetStatsMsgRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVRFGetStatsMsgRes::IsInitialized() const {
  return true;
}

void SLVRFGetStatsMsgRes::Swap(SLVRFGetStatsMsgRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVRFGetStatsMsgRes::InternalSwap(SLVRFGetStatsMsgRes* other) {
  vrfname_.Swap(&other->vrfname_);
  std::swap(routecount_, other->routecount_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVRFGetStatsMsgRes::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVRFGetStatsMsgRes

// string VrfName = 1;
void SLVRFGetStatsMsgRes::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLVRFGetStatsMsgRes::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRes.VrfName)
  return vrfname_.GetNoArena();
}
void SLVRFGetStatsMsgRes::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVRFGetStatsMsgRes.VrfName)
}
#if LANG_CXX11
void SLVRFGetStatsMsgRes::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLVRFGetStatsMsgRes.VrfName)
}
#endif
void SLVRFGetStatsMsgRes::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVRFGetStatsMsgRes.VrfName)
}
void SLVRFGetStatsMsgRes::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVRFGetStatsMsgRes.VrfName)
}
::std::string* SLVRFGetStatsMsgRes::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVRFGetStatsMsgRes.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLVRFGetStatsMsgRes::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLVRFGetStatsMsgRes.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLVRFGetStatsMsgRes::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVRFGetStatsMsgRes.VrfName)
}

// uint32 RouteCount = 2;
void SLVRFGetStatsMsgRes::clear_routecount() {
  routecount_ = 0u;
}
::google::protobuf::uint32 SLVRFGetStatsMsgRes::routecount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRes.RouteCount)
  return routecount_;
}
void SLVRFGetStatsMsgRes::set_routecount(::google::protobuf::uint32 value) {
  
  routecount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVRFGetStatsMsgRes.RouteCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVRFGetStatsMsgRsp::kEofFieldNumber;
const int SLVRFGetStatsMsgRsp::kErrStatusFieldNumber;
const int SLVRFGetStatsMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVRFGetStatsMsgRsp::SLVRFGetStatsMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVRFGetStatsMsgRsp)
}
SLVRFGetStatsMsgRsp::SLVRFGetStatsMsgRsp(const SLVRFGetStatsMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  eof_ = from.eof_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVRFGetStatsMsgRsp)
}

void SLVRFGetStatsMsgRsp::SharedCtor() {
  ::memset(&errstatus_, 0, reinterpret_cast<char*>(&eof_) -
    reinterpret_cast<char*>(&errstatus_) + sizeof(eof_));
  _cached_size_ = 0;
}

SLVRFGetStatsMsgRsp::~SLVRFGetStatsMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLVRFGetStatsMsgRsp)
  SharedDtor();
}

void SLVRFGetStatsMsgRsp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete errstatus_;
  }
}

void SLVRFGetStatsMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVRFGetStatsMsgRsp::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[11].descriptor;
}

const SLVRFGetStatsMsgRsp& SLVRFGetStatsMsgRsp::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLVRFGetStatsMsgRsp* SLVRFGetStatsMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLVRFGetStatsMsgRsp* n = new SLVRFGetStatsMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVRFGetStatsMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVRFGetStatsMsgRsp)
  entries_.Clear();
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  eof_ = false;
}

bool SLVRFGetStatsMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVRFGetStatsMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool Eof = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVRFGetStatsMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVRFGetStatsMsgRsp)
  return false;
#undef DO_
}

void SLVRFGetStatsMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVRFGetStatsMsgRsp)
  // bool Eof = 1;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->eof(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->errstatus_, output);
  }

  // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->entries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVRFGetStatsMsgRsp)
}

::google::protobuf::uint8* SLVRFGetStatsMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVRFGetStatsMsgRsp)
  // bool Eof = 1;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->eof(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->errstatus_, false, target);
  }

  // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->entries(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVRFGetStatsMsgRsp)
  return target;
}

size_t SLVRFGetStatsMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVRFGetStatsMsgRsp)
  size_t total_size = 0;

  // repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // bool Eof = 1;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVRFGetStatsMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVRFGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVRFGetStatsMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVRFGetStatsMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVRFGetStatsMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVRFGetStatsMsgRsp)
    MergeFrom(*source);
  }
}

void SLVRFGetStatsMsgRsp::MergeFrom(const SLVRFGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVRFGetStatsMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entries_.MergeFrom(from.entries_);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
}

void SLVRFGetStatsMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVRFGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVRFGetStatsMsgRsp::CopyFrom(const SLVRFGetStatsMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVRFGetStatsMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVRFGetStatsMsgRsp::IsInitialized() const {
  return true;
}

void SLVRFGetStatsMsgRsp::Swap(SLVRFGetStatsMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVRFGetStatsMsgRsp::InternalSwap(SLVRFGetStatsMsgRsp* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  std::swap(errstatus_, other->errstatus_);
  std::swap(eof_, other->eof_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVRFGetStatsMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVRFGetStatsMsgRsp

// bool Eof = 1;
void SLVRFGetStatsMsgRsp::clear_eof() {
  eof_ = false;
}
bool SLVRFGetStatsMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRsp.Eof)
  return eof_;
}
void SLVRFGetStatsMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVRFGetStatsMsgRsp.Eof)
}

// .service_layer.SLErrorStatus ErrStatus = 2;
bool SLVRFGetStatsMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void SLVRFGetStatsMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLVRFGetStatsMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLVRFGetStatsMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLVRFGetStatsMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLVRFGetStatsMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLVRFGetStatsMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLVRFGetStatsMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVRFGetStatsMsgRsp.ErrStatus)
}

// repeated .service_layer.SLVRFGetStatsMsgRes Entries = 3;
int SLVRFGetStatsMsgRsp::entries_size() const {
  return entries_.size();
}
void SLVRFGetStatsMsgRsp::clear_entries() {
  entries_.Clear();
}
const ::service_layer::SLVRFGetStatsMsgRes& SLVRFGetStatsMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_.Get(index);
}
::service_layer::SLVRFGetStatsMsgRes* SLVRFGetStatsMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_.Mutable(index);
}
::service_layer::SLVRFGetStatsMsgRes* SLVRFGetStatsMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLVRFGetStatsMsgRes >*
SLVRFGetStatsMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLVRFGetStatsMsgRes >&
SLVRFGetStatsMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLVRFGetStatsMsgRsp.Entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteGetNotifMsg::kOperFieldNumber;
const int SLRouteGetNotifMsg::kCorrelatorFieldNumber;
const int SLRouteGetNotifMsg::kVrfNameFieldNumber;
const int SLRouteGetNotifMsg::kSrcProtoFieldNumber;
const int SLRouteGetNotifMsg::kSrcProtoTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteGetNotifMsg::SLRouteGetNotifMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteGetNotifMsg)
}
SLRouteGetNotifMsg::SLRouteGetNotifMsg(const SLRouteGetNotifMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  srcproto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srcproto().size() > 0) {
    srcproto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcproto_);
  }
  srcprototag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srcprototag().size() > 0) {
    srcprototag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcprototag_);
  }
  ::memcpy(&correlator_, &from.correlator_,
    reinterpret_cast<char*>(&oper_) -
    reinterpret_cast<char*>(&correlator_) + sizeof(oper_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteGetNotifMsg)
}

void SLRouteGetNotifMsg::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcproto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcprototag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&correlator_, 0, reinterpret_cast<char*>(&oper_) -
    reinterpret_cast<char*>(&correlator_) + sizeof(oper_));
  _cached_size_ = 0;
}

SLRouteGetNotifMsg::~SLRouteGetNotifMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteGetNotifMsg)
  SharedDtor();
}

void SLRouteGetNotifMsg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcproto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcprototag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLRouteGetNotifMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteGetNotifMsg::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[12].descriptor;
}

const SLRouteGetNotifMsg& SLRouteGetNotifMsg::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRouteGetNotifMsg* SLRouteGetNotifMsg::New(::google::protobuf::Arena* arena) const {
  SLRouteGetNotifMsg* n = new SLRouteGetNotifMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteGetNotifMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteGetNotifMsg)
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcproto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcprototag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&correlator_, 0, reinterpret_cast<char*>(&oper_) -
    reinterpret_cast<char*>(&correlator_) + sizeof(oper_));
}

bool SLRouteGetNotifMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteGetNotifMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLNotifOp Oper = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLNotifOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Correlator = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRouteGetNotifMsg.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SrcProto = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcproto()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcproto().data(), this->srcproto().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRouteGetNotifMsg.SrcProto"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SrcProtoTag = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcprototag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcprototag().data(), this->srcprototag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRouteGetNotifMsg.SrcProtoTag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteGetNotifMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteGetNotifMsg)
  return false;
#undef DO_
}

void SLRouteGetNotifMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteGetNotifMsg)
  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->correlator(), output);
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteGetNotifMsg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vrfname(), output);
  }

  // string SrcProto = 4;
  if (this->srcproto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcproto().data(), this->srcproto().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteGetNotifMsg.SrcProto");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->srcproto(), output);
  }

  // string SrcProtoTag = 5;
  if (this->srcprototag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcprototag().data(), this->srcprototag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteGetNotifMsg.SrcProtoTag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->srcprototag(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteGetNotifMsg)
}

::google::protobuf::uint8* SLRouteGetNotifMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteGetNotifMsg)
  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->correlator(), target);
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteGetNotifMsg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vrfname(), target);
  }

  // string SrcProto = 4;
  if (this->srcproto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcproto().data(), this->srcproto().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteGetNotifMsg.SrcProto");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->srcproto(), target);
  }

  // string SrcProtoTag = 5;
  if (this->srcprototag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcprototag().data(), this->srcprototag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteGetNotifMsg.SrcProtoTag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->srcprototag(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteGetNotifMsg)
  return target;
}

size_t SLRouteGetNotifMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteGetNotifMsg)
  size_t total_size = 0;

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // string SrcProto = 4;
  if (this->srcproto().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcproto());
  }

  // string SrcProtoTag = 5;
  if (this->srcprototag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcprototag());
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // .service_layer.SLNotifOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteGetNotifMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteGetNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteGetNotifMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteGetNotifMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteGetNotifMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteGetNotifMsg)
    MergeFrom(*source);
  }
}

void SLRouteGetNotifMsg::MergeFrom(const SLRouteGetNotifMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteGetNotifMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.srcproto().size() > 0) {

    srcproto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcproto_);
  }
  if (from.srcprototag().size() > 0) {

    srcprototag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcprototag_);
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLRouteGetNotifMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteGetNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteGetNotifMsg::CopyFrom(const SLRouteGetNotifMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteGetNotifMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteGetNotifMsg::IsInitialized() const {
  return true;
}

void SLRouteGetNotifMsg::Swap(SLRouteGetNotifMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteGetNotifMsg::InternalSwap(SLRouteGetNotifMsg* other) {
  vrfname_.Swap(&other->vrfname_);
  srcproto_.Swap(&other->srcproto_);
  srcprototag_.Swap(&other->srcprototag_);
  std::swap(correlator_, other->correlator_);
  std::swap(oper_, other->oper_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteGetNotifMsg::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteGetNotifMsg

// .service_layer.SLNotifOp Oper = 1;
void SLRouteGetNotifMsg::clear_oper() {
  oper_ = 0;
}
::service_layer::SLNotifOp SLRouteGetNotifMsg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGetNotifMsg.Oper)
  return static_cast< ::service_layer::SLNotifOp >(oper_);
}
void SLRouteGetNotifMsg::set_oper(::service_layer::SLNotifOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGetNotifMsg.Oper)
}

// uint64 Correlator = 2;
void SLRouteGetNotifMsg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SLRouteGetNotifMsg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGetNotifMsg.Correlator)
  return correlator_;
}
void SLRouteGetNotifMsg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGetNotifMsg.Correlator)
}

// string VrfName = 3;
void SLRouteGetNotifMsg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRouteGetNotifMsg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGetNotifMsg.VrfName)
  return vrfname_.GetNoArena();
}
void SLRouteGetNotifMsg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGetNotifMsg.VrfName)
}
#if LANG_CXX11
void SLRouteGetNotifMsg::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRouteGetNotifMsg.VrfName)
}
#endif
void SLRouteGetNotifMsg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRouteGetNotifMsg.VrfName)
}
void SLRouteGetNotifMsg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRouteGetNotifMsg.VrfName)
}
::std::string* SLRouteGetNotifMsg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteGetNotifMsg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRouteGetNotifMsg::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteGetNotifMsg.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRouteGetNotifMsg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteGetNotifMsg.VrfName)
}

// string SrcProto = 4;
void SLRouteGetNotifMsg::clear_srcproto() {
  srcproto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRouteGetNotifMsg::srcproto() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGetNotifMsg.SrcProto)
  return srcproto_.GetNoArena();
}
void SLRouteGetNotifMsg::set_srcproto(const ::std::string& value) {
  
  srcproto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGetNotifMsg.SrcProto)
}
#if LANG_CXX11
void SLRouteGetNotifMsg::set_srcproto(::std::string&& value) {
  
  srcproto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRouteGetNotifMsg.SrcProto)
}
#endif
void SLRouteGetNotifMsg::set_srcproto(const char* value) {
  
  srcproto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRouteGetNotifMsg.SrcProto)
}
void SLRouteGetNotifMsg::set_srcproto(const char* value, size_t size) {
  
  srcproto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRouteGetNotifMsg.SrcProto)
}
::std::string* SLRouteGetNotifMsg::mutable_srcproto() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteGetNotifMsg.SrcProto)
  return srcproto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRouteGetNotifMsg::release_srcproto() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteGetNotifMsg.SrcProto)
  
  return srcproto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRouteGetNotifMsg::set_allocated_srcproto(::std::string* srcproto) {
  if (srcproto != NULL) {
    
  } else {
    
  }
  srcproto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcproto);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteGetNotifMsg.SrcProto)
}

// string SrcProtoTag = 5;
void SLRouteGetNotifMsg::clear_srcprototag() {
  srcprototag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRouteGetNotifMsg::srcprototag() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteGetNotifMsg.SrcProtoTag)
  return srcprototag_.GetNoArena();
}
void SLRouteGetNotifMsg::set_srcprototag(const ::std::string& value) {
  
  srcprototag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRouteGetNotifMsg.SrcProtoTag)
}
#if LANG_CXX11
void SLRouteGetNotifMsg::set_srcprototag(::std::string&& value) {
  
  srcprototag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRouteGetNotifMsg.SrcProtoTag)
}
#endif
void SLRouteGetNotifMsg::set_srcprototag(const char* value) {
  
  srcprototag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRouteGetNotifMsg.SrcProtoTag)
}
void SLRouteGetNotifMsg::set_srcprototag(const char* value, size_t size) {
  
  srcprototag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRouteGetNotifMsg.SrcProtoTag)
}
::std::string* SLRouteGetNotifMsg::mutable_srcprototag() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteGetNotifMsg.SrcProtoTag)
  return srcprototag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRouteGetNotifMsg::release_srcprototag() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteGetNotifMsg.SrcProtoTag)
  
  return srcprototag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRouteGetNotifMsg::set_allocated_srcprototag(::std::string* srcprototag) {
  if (srcprototag != NULL) {
    
  } else {
    
  }
  srcprototag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcprototag);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteGetNotifMsg.SrcProtoTag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteNotifStatus::kCorrelatorFieldNumber;
const int SLRouteNotifStatus::kVrfNameFieldNumber;
const int SLRouteNotifStatus::kNotifStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteNotifStatus::SLRouteNotifStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteNotifStatus)
}
SLRouteNotifStatus::SLRouteNotifStatus(const SLRouteNotifStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_notifstatus()) {
    notifstatus_ = new ::service_layer::SLErrorStatus(*from.notifstatus_);
  } else {
    notifstatus_ = NULL;
  }
  correlator_ = from.correlator_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteNotifStatus)
}

void SLRouteNotifStatus::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&notifstatus_, 0, reinterpret_cast<char*>(&correlator_) -
    reinterpret_cast<char*>(&notifstatus_) + sizeof(correlator_));
  _cached_size_ = 0;
}

SLRouteNotifStatus::~SLRouteNotifStatus() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteNotifStatus)
  SharedDtor();
}

void SLRouteNotifStatus::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete notifstatus_;
  }
}

void SLRouteNotifStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteNotifStatus::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[13].descriptor;
}

const SLRouteNotifStatus& SLRouteNotifStatus::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRouteNotifStatus* SLRouteNotifStatus::New(::google::protobuf::Arena* arena) const {
  SLRouteNotifStatus* n = new SLRouteNotifStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteNotifStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteNotifStatus)
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && notifstatus_ != NULL) {
    delete notifstatus_;
  }
  notifstatus_ = NULL;
  correlator_ = GOOGLE_ULONGLONG(0);
}

bool SLRouteNotifStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteNotifStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRouteNotifStatus.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus NotifStatus = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notifstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteNotifStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteNotifStatus)
  return false;
#undef DO_
}

void SLRouteNotifStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteNotifStatus)
  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteNotifStatus.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vrfname(), output);
  }

  // .service_layer.SLErrorStatus NotifStatus = 3;
  if (this->has_notifstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->notifstatus_, output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteNotifStatus)
}

::google::protobuf::uint8* SLRouteNotifStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteNotifStatus)
  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteNotifStatus.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vrfname(), target);
  }

  // .service_layer.SLErrorStatus NotifStatus = 3;
  if (this->has_notifstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->notifstatus_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteNotifStatus)
  return target;
}

size_t SLRouteNotifStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteNotifStatus)
  size_t total_size = 0;

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // .service_layer.SLErrorStatus NotifStatus = 3;
  if (this->has_notifstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->notifstatus_);
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteNotifStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteNotifStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteNotifStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteNotifStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteNotifStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteNotifStatus)
    MergeFrom(*source);
  }
}

void SLRouteNotifStatus::MergeFrom(const SLRouteNotifStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteNotifStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_notifstatus()) {
    mutable_notifstatus()->::service_layer::SLErrorStatus::MergeFrom(from.notifstatus());
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
}

void SLRouteNotifStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteNotifStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteNotifStatus::CopyFrom(const SLRouteNotifStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteNotifStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteNotifStatus::IsInitialized() const {
  return true;
}

void SLRouteNotifStatus::Swap(SLRouteNotifStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteNotifStatus::InternalSwap(SLRouteNotifStatus* other) {
  vrfname_.Swap(&other->vrfname_);
  std::swap(notifstatus_, other->notifstatus_);
  std::swap(correlator_, other->correlator_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteNotifStatus::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteNotifStatus

// uint64 Correlator = 1;
void SLRouteNotifStatus::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SLRouteNotifStatus::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteNotifStatus.Correlator)
  return correlator_;
}
void SLRouteNotifStatus::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteNotifStatus.Correlator)
}

// string VrfName = 2;
void SLRouteNotifStatus::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRouteNotifStatus::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteNotifStatus.VrfName)
  return vrfname_.GetNoArena();
}
void SLRouteNotifStatus::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRouteNotifStatus.VrfName)
}
#if LANG_CXX11
void SLRouteNotifStatus::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRouteNotifStatus.VrfName)
}
#endif
void SLRouteNotifStatus::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRouteNotifStatus.VrfName)
}
void SLRouteNotifStatus::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRouteNotifStatus.VrfName)
}
::std::string* SLRouteNotifStatus::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteNotifStatus.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRouteNotifStatus::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteNotifStatus.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRouteNotifStatus::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteNotifStatus.VrfName)
}

// .service_layer.SLErrorStatus NotifStatus = 3;
bool SLRouteNotifStatus::has_notifstatus() const {
  return this != internal_default_instance() && notifstatus_ != NULL;
}
void SLRouteNotifStatus::clear_notifstatus() {
  if (GetArenaNoVirtual() == NULL && notifstatus_ != NULL) delete notifstatus_;
  notifstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLRouteNotifStatus::notifstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteNotifStatus.NotifStatus)
  return notifstatus_ != NULL ? *notifstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLRouteNotifStatus::mutable_notifstatus() {
  
  if (notifstatus_ == NULL) {
    notifstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteNotifStatus.NotifStatus)
  return notifstatus_;
}
::service_layer::SLErrorStatus* SLRouteNotifStatus::release_notifstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteNotifStatus.NotifStatus)
  
  ::service_layer::SLErrorStatus* temp = notifstatus_;
  notifstatus_ = NULL;
  return temp;
}
void SLRouteNotifStatus::set_allocated_notifstatus(::service_layer::SLErrorStatus* notifstatus) {
  delete notifstatus_;
  notifstatus_ = notifstatus;
  if (notifstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteNotifStatus.NotifStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteNotifMarker::kVrfNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteNotifMarker::SLRouteNotifMarker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteNotifMarker)
}
SLRouteNotifMarker::SLRouteNotifMarker(const SLRouteNotifMarker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteNotifMarker)
}

void SLRouteNotifMarker::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SLRouteNotifMarker::~SLRouteNotifMarker() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteNotifMarker)
  SharedDtor();
}

void SLRouteNotifMarker::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLRouteNotifMarker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteNotifMarker::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[14].descriptor;
}

const SLRouteNotifMarker& SLRouteNotifMarker::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRouteNotifMarker* SLRouteNotifMarker::New(::google::protobuf::Arena* arena) const {
  SLRouteNotifMarker* n = new SLRouteNotifMarker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteNotifMarker::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteNotifMarker)
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SLRouteNotifMarker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteNotifMarker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string VrfName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRouteNotifMarker.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteNotifMarker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteNotifMarker)
  return false;
#undef DO_
}

void SLRouteNotifMarker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteNotifMarker)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteNotifMarker.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteNotifMarker)
}

::google::protobuf::uint8* SLRouteNotifMarker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteNotifMarker)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteNotifMarker.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteNotifMarker)
  return target;
}

size_t SLRouteNotifMarker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteNotifMarker)
  size_t total_size = 0;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteNotifMarker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteNotifMarker)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteNotifMarker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteNotifMarker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteNotifMarker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteNotifMarker)
    MergeFrom(*source);
  }
}

void SLRouteNotifMarker::MergeFrom(const SLRouteNotifMarker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteNotifMarker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
}

void SLRouteNotifMarker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteNotifMarker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteNotifMarker::CopyFrom(const SLRouteNotifMarker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteNotifMarker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteNotifMarker::IsInitialized() const {
  return true;
}

void SLRouteNotifMarker::Swap(SLRouteNotifMarker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteNotifMarker::InternalSwap(SLRouteNotifMarker* other) {
  vrfname_.Swap(&other->vrfname_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteNotifMarker::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteNotifMarker

// string VrfName = 1;
void SLRouteNotifMarker::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRouteNotifMarker::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteNotifMarker.VrfName)
  return vrfname_.GetNoArena();
}
void SLRouteNotifMarker::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRouteNotifMarker.VrfName)
}
#if LANG_CXX11
void SLRouteNotifMarker::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRouteNotifMarker.VrfName)
}
#endif
void SLRouteNotifMarker::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRouteNotifMarker.VrfName)
}
void SLRouteNotifMarker::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRouteNotifMarker.VrfName)
}
::std::string* SLRouteNotifMarker::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteNotifMarker.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRouteNotifMarker::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteNotifMarker.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRouteNotifMarker::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteNotifMarker.VrfName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLVrfNotif::kVrfNameFieldNumber;
const int SLVrfNotif::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLVrfNotif::SLVrfNotif()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLVrfNotif)
}
SLVrfNotif::SLVrfNotif(const SLVrfNotif& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLVrfNotif)
}

void SLVrfNotif::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _cached_size_ = 0;
}

SLVrfNotif::~SLVrfNotif() {
  // @@protoc_insertion_point(destructor:service_layer.SLVrfNotif)
  SharedDtor();
}

void SLVrfNotif::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLVrfNotif::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLVrfNotif::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[15].descriptor;
}

const SLVrfNotif& SLVrfNotif::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLVrfNotif* SLVrfNotif::New(::google::protobuf::Arena* arena) const {
  SLVrfNotif* n = new SLVrfNotif;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLVrfNotif::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLVrfNotif)
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

bool SLVrfNotif::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLVrfNotif)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string VrfName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLVrfNotif.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLObjectOp Status = 2;
      case 2: {
        if (tag == 16u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_status(static_cast< ::service_layer::SLObjectOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLVrfNotif)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLVrfNotif)
  return false;
#undef DO_
}

void SLVrfNotif::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLVrfNotif)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfNotif.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // .service_layer.SLObjectOp Status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLVrfNotif)
}

::google::protobuf::uint8* SLVrfNotif::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLVrfNotif)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLVrfNotif.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // .service_layer.SLObjectOp Status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLVrfNotif)
  return target;
}

size_t SLVrfNotif::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLVrfNotif)
  size_t total_size = 0;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // .service_layer.SLObjectOp Status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLVrfNotif::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLVrfNotif)
  GOOGLE_DCHECK_NE(&from, this);
  const SLVrfNotif* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLVrfNotif>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLVrfNotif)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLVrfNotif)
    MergeFrom(*source);
  }
}

void SLVrfNotif::MergeFrom(const SLVrfNotif& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLVrfNotif)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void SLVrfNotif::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLVrfNotif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLVrfNotif::CopyFrom(const SLVrfNotif& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLVrfNotif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLVrfNotif::IsInitialized() const {
  return true;
}

void SLVrfNotif::Swap(SLVrfNotif* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLVrfNotif::InternalSwap(SLVrfNotif* other) {
  vrfname_.Swap(&other->vrfname_);
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLVrfNotif::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLVrfNotif

// string VrfName = 1;
void SLVrfNotif::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLVrfNotif::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfNotif.VrfName)
  return vrfname_.GetNoArena();
}
void SLVrfNotif::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLVrfNotif.VrfName)
}
#if LANG_CXX11
void SLVrfNotif::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLVrfNotif.VrfName)
}
#endif
void SLVrfNotif::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLVrfNotif.VrfName)
}
void SLVrfNotif::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLVrfNotif.VrfName)
}
::std::string* SLVrfNotif::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLVrfNotif.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLVrfNotif::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLVrfNotif.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLVrfNotif::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLVrfNotif.VrfName)
}

// .service_layer.SLObjectOp Status = 2;
void SLVrfNotif::clear_status() {
  status_ = 0;
}
::service_layer::SLObjectOp SLVrfNotif::status() const {
  // @@protoc_insertion_point(field_get:service_layer.SLVrfNotif.Status)
  return static_cast< ::service_layer::SLObjectOp >(status_);
}
void SLVrfNotif::set_status(::service_layer::SLObjectOp value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLVrfNotif.Status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRouteCommon::kAdminDistanceFieldNumber;
const int SLRouteCommon::kLocalLabelFieldNumber;
const int SLRouteCommon::kTagFieldNumber;
const int SLRouteCommon::kSrcProtoFieldNumber;
const int SLRouteCommon::kSrcProtoTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRouteCommon::SLRouteCommon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRouteCommon)
}
SLRouteCommon::SLRouteCommon(const SLRouteCommon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  srcproto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srcproto().size() > 0) {
    srcproto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcproto_);
  }
  srcprototag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.srcprototag().size() > 0) {
    srcprototag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcprototag_);
  }
  ::memcpy(&admindistance_, &from.admindistance_,
    reinterpret_cast<char*>(&tag_) -
    reinterpret_cast<char*>(&admindistance_) + sizeof(tag_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRouteCommon)
}

void SLRouteCommon::SharedCtor() {
  srcproto_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcprototag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&admindistance_, 0, reinterpret_cast<char*>(&tag_) -
    reinterpret_cast<char*>(&admindistance_) + sizeof(tag_));
  _cached_size_ = 0;
}

SLRouteCommon::~SLRouteCommon() {
  // @@protoc_insertion_point(destructor:service_layer.SLRouteCommon)
  SharedDtor();
}

void SLRouteCommon::SharedDtor() {
  srcproto_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcprototag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLRouteCommon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRouteCommon::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[16].descriptor;
}

const SLRouteCommon& SLRouteCommon::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRouteCommon* SLRouteCommon::New(::google::protobuf::Arena* arena) const {
  SLRouteCommon* n = new SLRouteCommon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRouteCommon::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRouteCommon)
  srcproto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srcprototag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&admindistance_, 0, reinterpret_cast<char*>(&tag_) -
    reinterpret_cast<char*>(&admindistance_) + sizeof(tag_));
}

bool SLRouteCommon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRouteCommon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 AdminDistance = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &admindistance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LocalLabel = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &locallabel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Tag = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SrcProto = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcproto()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcproto().data(), this->srcproto().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRouteCommon.SrcProto"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SrcProtoTag = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcprototag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->srcprototag().data(), this->srcprototag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRouteCommon.SrcProtoTag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRouteCommon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRouteCommon)
  return false;
#undef DO_
}

void SLRouteCommon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRouteCommon)
  // uint32 AdminDistance = 1;
  if (this->admindistance() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->admindistance(), output);
  }

  // uint32 LocalLabel = 2;
  if (this->locallabel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->locallabel(), output);
  }

  // uint32 Tag = 3;
  if (this->tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->tag(), output);
  }

  // string SrcProto = 4;
  if (this->srcproto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcproto().data(), this->srcproto().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteCommon.SrcProto");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->srcproto(), output);
  }

  // string SrcProtoTag = 5;
  if (this->srcprototag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcprototag().data(), this->srcprototag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteCommon.SrcProtoTag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->srcprototag(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRouteCommon)
}

::google::protobuf::uint8* SLRouteCommon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRouteCommon)
  // uint32 AdminDistance = 1;
  if (this->admindistance() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->admindistance(), target);
  }

  // uint32 LocalLabel = 2;
  if (this->locallabel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->locallabel(), target);
  }

  // uint32 Tag = 3;
  if (this->tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->tag(), target);
  }

  // string SrcProto = 4;
  if (this->srcproto().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcproto().data(), this->srcproto().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteCommon.SrcProto");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->srcproto(), target);
  }

  // string SrcProtoTag = 5;
  if (this->srcprototag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->srcprototag().data(), this->srcprototag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRouteCommon.SrcProtoTag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->srcprototag(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRouteCommon)
  return target;
}

size_t SLRouteCommon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRouteCommon)
  size_t total_size = 0;

  // string SrcProto = 4;
  if (this->srcproto().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcproto());
  }

  // string SrcProtoTag = 5;
  if (this->srcprototag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->srcprototag());
  }

  // uint32 AdminDistance = 1;
  if (this->admindistance() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->admindistance());
  }

  // uint32 LocalLabel = 2;
  if (this->locallabel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->locallabel());
  }

  // uint32 Tag = 3;
  if (this->tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->tag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRouteCommon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRouteCommon)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRouteCommon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRouteCommon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRouteCommon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRouteCommon)
    MergeFrom(*source);
  }
}

void SLRouteCommon::MergeFrom(const SLRouteCommon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRouteCommon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.srcproto().size() > 0) {

    srcproto_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcproto_);
  }
  if (from.srcprototag().size() > 0) {

    srcprototag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.srcprototag_);
  }
  if (from.admindistance() != 0) {
    set_admindistance(from.admindistance());
  }
  if (from.locallabel() != 0) {
    set_locallabel(from.locallabel());
  }
  if (from.tag() != 0) {
    set_tag(from.tag());
  }
}

void SLRouteCommon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRouteCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRouteCommon::CopyFrom(const SLRouteCommon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRouteCommon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRouteCommon::IsInitialized() const {
  return true;
}

void SLRouteCommon::Swap(SLRouteCommon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRouteCommon::InternalSwap(SLRouteCommon* other) {
  srcproto_.Swap(&other->srcproto_);
  srcprototag_.Swap(&other->srcprototag_);
  std::swap(admindistance_, other->admindistance_);
  std::swap(locallabel_, other->locallabel_);
  std::swap(tag_, other->tag_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRouteCommon::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRouteCommon

// uint32 AdminDistance = 1;
void SLRouteCommon::clear_admindistance() {
  admindistance_ = 0u;
}
::google::protobuf::uint32 SLRouteCommon::admindistance() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteCommon.AdminDistance)
  return admindistance_;
}
void SLRouteCommon::set_admindistance(::google::protobuf::uint32 value) {
  
  admindistance_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteCommon.AdminDistance)
}

// uint32 LocalLabel = 2;
void SLRouteCommon::clear_locallabel() {
  locallabel_ = 0u;
}
::google::protobuf::uint32 SLRouteCommon::locallabel() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteCommon.LocalLabel)
  return locallabel_;
}
void SLRouteCommon::set_locallabel(::google::protobuf::uint32 value) {
  
  locallabel_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteCommon.LocalLabel)
}

// uint32 Tag = 3;
void SLRouteCommon::clear_tag() {
  tag_ = 0u;
}
::google::protobuf::uint32 SLRouteCommon::tag() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteCommon.Tag)
  return tag_;
}
void SLRouteCommon::set_tag(::google::protobuf::uint32 value) {
  
  tag_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRouteCommon.Tag)
}

// string SrcProto = 4;
void SLRouteCommon::clear_srcproto() {
  srcproto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRouteCommon::srcproto() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteCommon.SrcProto)
  return srcproto_.GetNoArena();
}
void SLRouteCommon::set_srcproto(const ::std::string& value) {
  
  srcproto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRouteCommon.SrcProto)
}
#if LANG_CXX11
void SLRouteCommon::set_srcproto(::std::string&& value) {
  
  srcproto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRouteCommon.SrcProto)
}
#endif
void SLRouteCommon::set_srcproto(const char* value) {
  
  srcproto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRouteCommon.SrcProto)
}
void SLRouteCommon::set_srcproto(const char* value, size_t size) {
  
  srcproto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRouteCommon.SrcProto)
}
::std::string* SLRouteCommon::mutable_srcproto() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteCommon.SrcProto)
  return srcproto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRouteCommon::release_srcproto() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteCommon.SrcProto)
  
  return srcproto_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRouteCommon::set_allocated_srcproto(::std::string* srcproto) {
  if (srcproto != NULL) {
    
  } else {
    
  }
  srcproto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcproto);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteCommon.SrcProto)
}

// string SrcProtoTag = 5;
void SLRouteCommon::clear_srcprototag() {
  srcprototag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRouteCommon::srcprototag() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRouteCommon.SrcProtoTag)
  return srcprototag_.GetNoArena();
}
void SLRouteCommon::set_srcprototag(const ::std::string& value) {
  
  srcprototag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRouteCommon.SrcProtoTag)
}
#if LANG_CXX11
void SLRouteCommon::set_srcprototag(::std::string&& value) {
  
  srcprototag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRouteCommon.SrcProtoTag)
}
#endif
void SLRouteCommon::set_srcprototag(const char* value) {
  
  srcprototag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRouteCommon.SrcProtoTag)
}
void SLRouteCommon::set_srcprototag(const char* value, size_t size) {
  
  srcprototag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRouteCommon.SrcProtoTag)
}
::std::string* SLRouteCommon::mutable_srcprototag() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRouteCommon.SrcProtoTag)
  return srcprototag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRouteCommon::release_srcprototag() {
  // @@protoc_insertion_point(field_release:service_layer.SLRouteCommon.SrcProtoTag)
  
  return srcprototag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRouteCommon::set_allocated_srcprototag(::std::string* srcprototag) {
  if (srcprototag != NULL) {
    
  } else {
    
  }
  srcprototag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), srcprototag);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRouteCommon.SrcProtoTag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutePath::kNexthopAddressFieldNumber;
const int SLRoutePath::kNexthopInterfaceFieldNumber;
const int SLRoutePath::kLoadMetricFieldNumber;
const int SLRoutePath::kVrfNameFieldNumber;
const int SLRoutePath::kMetricFieldNumber;
const int SLRoutePath::kPathIdFieldNumber;
const int SLRoutePath::kProtectedPathBitmapFieldNumber;
const int SLRoutePath::kLabelStackFieldNumber;
const int SLRoutePath::kRemoteAddressFieldNumber;
const int SLRoutePath::kEncapTypeFieldNumber;
const int SLRoutePath::kVtepRouterMacAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutePath::SLRoutePath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutePath)
}
SLRoutePath::SLRoutePath(const SLRoutePath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      protectedpathbitmap_(from.protectedpathbitmap_),
      labelstack_(from.labelstack_),
      remoteaddress_(from.remoteaddress_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  vteproutermacaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vteproutermacaddress().size() > 0) {
    vteproutermacaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vteproutermacaddress_);
  }
  if (from.has_nexthopaddress()) {
    nexthopaddress_ = new ::service_layer::SLIpAddress(*from.nexthopaddress_);
  } else {
    nexthopaddress_ = NULL;
  }
  if (from.has_nexthopinterface()) {
    nexthopinterface_ = new ::service_layer::SLInterface(*from.nexthopinterface_);
  } else {
    nexthopinterface_ = NULL;
  }
  ::memcpy(&loadmetric_, &from.loadmetric_,
    reinterpret_cast<char*>(&encaptype_) -
    reinterpret_cast<char*>(&loadmetric_) + sizeof(encaptype_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutePath)
}

void SLRoutePath::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vteproutermacaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nexthopaddress_, 0, reinterpret_cast<char*>(&encaptype_) -
    reinterpret_cast<char*>(&nexthopaddress_) + sizeof(encaptype_));
  _cached_size_ = 0;
}

SLRoutePath::~SLRoutePath() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutePath)
  SharedDtor();
}

void SLRoutePath::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vteproutermacaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete nexthopaddress_;
  }
  if (this != internal_default_instance()) {
    delete nexthopinterface_;
  }
}

void SLRoutePath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutePath::descriptor() {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[17].descriptor;
}

const SLRoutePath& SLRoutePath::default_instance() {
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRoutePath* SLRoutePath::New(::google::protobuf::Arena* arena) const {
  SLRoutePath* n = new SLRoutePath;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutePath::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutePath)
  protectedpathbitmap_.Clear();
  labelstack_.Clear();
  remoteaddress_.Clear();
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vteproutermacaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && nexthopaddress_ != NULL) {
    delete nexthopaddress_;
  }
  nexthopaddress_ = NULL;
  if (GetArenaNoVirtual() == NULL && nexthopinterface_ != NULL) {
    delete nexthopinterface_;
  }
  nexthopinterface_ = NULL;
  ::memset(&loadmetric_, 0, reinterpret_cast<char*>(&encaptype_) -
    reinterpret_cast<char*>(&loadmetric_) + sizeof(encaptype_));
}

bool SLRoutePath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutePath)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLIpAddress NexthopAddress = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nexthopaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLInterface NexthopInterface = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nexthopinterface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 LoadMetric = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loadmetric_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutePath.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Metric = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &metric_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PathId = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pathid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 ProtectedPathBitmap = 7;
      case 7: {
        if (tag == 58u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_protectedpathbitmap())));
        } else if (tag == 56u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 58u, input, this->mutable_protectedpathbitmap())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 LabelStack = 8;
      case 8: {
        if (tag == 66u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_labelstack())));
        } else if (tag == 64u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_labelstack())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLIpAddress RemoteAddress = 9;
      case 9: {
        if (tag == 74u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_remoteaddress()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // .service_layer.SLEncapType EncapType = 10;
      case 10: {
        if (tag == 80u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encaptype(static_cast< ::service_layer::SLEncapType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes VtepRouterMacAddress = 11;
      case 11: {
        if (tag == 90u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vteproutermacaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutePath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutePath)
  return false;
#undef DO_
}

void SLRoutePath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutePath)
  // .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->nexthopaddress_, output);
  }

  // .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->nexthopinterface_, output);
  }

  // uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->loadmetric(), output);
  }

  // string VrfName = 4;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutePath.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->vrfname(), output);
  }

  // uint32 Metric = 5;
  if (this->metric() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->metric(), output);
  }

  // uint32 PathId = 6;
  if (this->pathid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->pathid(), output);
  }

  // repeated uint64 ProtectedPathBitmap = 7;
  if (this->protectedpathbitmap_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_protectedpathbitmap_cached_byte_size_);
  }
  for (int i = 0; i < this->protectedpathbitmap_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->protectedpathbitmap(i), output);
  }

  // repeated uint32 LabelStack = 8;
  if (this->labelstack_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_labelstack_cached_byte_size_);
  }
  for (int i = 0; i < this->labelstack_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->labelstack(i), output);
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  for (unsigned int i = 0, n = this->remoteaddress_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->remoteaddress(i), output);
  }

  // .service_layer.SLEncapType EncapType = 10;
  if (this->encaptype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->encaptype(), output);
  }

  // bytes VtepRouterMacAddress = 11;
  if (this->vteproutermacaddress().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->vteproutermacaddress(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutePath)
}

::google::protobuf::uint8* SLRoutePath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutePath)
  // .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->nexthopaddress_, false, target);
  }

  // .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->nexthopinterface_, false, target);
  }

  // uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->loadmetric(), target);
  }

  // string VrfName = 4;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutePath.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->vrfname(), target);
  }

  // uint32 Metric = 5;
  if (this->metric() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->metric(), target);
  }

  // uint32 PathId = 6;
  if (this->pathid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->pathid(), target);
  }

  // repeated uint64 ProtectedPathBitmap = 7;
  if (this->protectedpathbitmap_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _protectedpathbitmap_cached_byte_size_, target);
  }
  for (int i = 0; i < this->protectedpathbitmap_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->protectedpathbitmap(i), target);
  }

  // repeated uint32 LabelStack = 8;
  if (this->labelstack_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _labelstack_cached_byte_size_, target);
  }
  for (int i = 0; i < this->labelstack_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->labelstack(i), target);
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  for (unsigned int i = 0, n = this->remoteaddress_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->remoteaddress(i), false, target);
  }

  // .service_layer.SLEncapType EncapType = 10;
  if (this->encaptype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->encaptype(), target);
  }

  // bytes VtepRouterMacAddress = 11;
  if (this->vteproutermacaddress().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->vteproutermacaddress(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutePath)
  return target;
}

size_t SLRoutePath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutePath)
  size_t total_size = 0;

  // repeated uint64 ProtectedPathBitmap = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->protectedpathbitmap_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _protectedpathbitmap_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 LabelStack = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->labelstack_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _labelstack_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .service_layer.SLIpAddress RemoteAddress = 9;
  {
    unsigned int count = this->remoteaddress_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->remoteaddress(i));
    }
  }

  // string VrfName = 4;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // bytes VtepRouterMacAddress = 11;
  if (this->vteproutermacaddress().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->vteproutermacaddress());
  }

  // .service_layer.SLIpAddress NexthopAddress = 1;
  if (this->has_nexthopaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nexthopaddress_);
  }

  // .service_layer.SLInterface NexthopInterface = 2;
  if (this->has_nexthopinterface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nexthopinterface_);
  }

  // uint32 LoadMetric = 3;
  if (this->loadmetric() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->loadmetric());
  }

  // uint32 Metric = 5;
  if (this->metric() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->metric());
  }

  // uint32 PathId = 6;
  if (this->pathid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pathid());
  }

  // .service_layer.SLEncapType EncapType = 10;
  if (this->encaptype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encaptype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutePath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutePath)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutePath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutePath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutePath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutePath)
    MergeFrom(*source);
  }
}

void SLRoutePath::MergeFrom(const SLRoutePath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutePath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protectedpathbitmap_.MergeFrom(from.protectedpathbitmap_);
  labelstack_.MergeFrom(from.labelstack_);
  remoteaddress_.MergeFrom(from.remoteaddress_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.vteproutermacaddress().size() > 0) {

    vteproutermacaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vteproutermacaddress_);
  }
  if (from.has_nexthopaddress()) {
    mutable_nexthopaddress()->::service_layer::SLIpAddress::MergeFrom(from.nexthopaddress());
  }
  if (from.has_nexthopinterface()) {
    mutable_nexthopinterface()->::service_layer::SLInterface::MergeFrom(from.nexthopinterface());
  }
  if (from.loadmetric() != 0) {
    set_loadmetric(from.loadmetric());
  }
  if (from.metric() != 0) {
    set_metric(from.metric());
  }
  if (from.pathid() != 0) {
    set_pathid(from.pathid());
  }
  if (from.encaptype() != 0) {
    set_encaptype(from.encaptype());
  }
}

void SLRoutePath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutePath::CopyFrom(const SLRoutePath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutePath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutePath::IsInitialized() const {
  return true;
}

void SLRoutePath::Swap(SLRoutePath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutePath::InternalSwap(SLRoutePath* other) {
  protectedpathbitmap_.UnsafeArenaSwap(&other->protectedpathbitmap_);
  labelstack_.UnsafeArenaSwap(&other->labelstack_);
  remoteaddress_.UnsafeArenaSwap(&other->remoteaddress_);
  vrfname_.Swap(&other->vrfname_);
  vteproutermacaddress_.Swap(&other->vteproutermacaddress_);
  std::swap(nexthopaddress_, other->nexthopaddress_);
  std::swap(nexthopinterface_, other->nexthopinterface_);
  std::swap(loadmetric_, other->loadmetric_);
  std::swap(metric_, other->metric_);
  std::swap(pathid_, other->pathid_);
  std::swap(encaptype_, other->encaptype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutePath::GetMetadata() const {
  protobuf_sl_5froute_5fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fcommon_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutePath

// .service_layer.SLIpAddress NexthopAddress = 1;
bool SLRoutePath::has_nexthopaddress() const {
  return this != internal_default_instance() && nexthopaddress_ != NULL;
}
void SLRoutePath::clear_nexthopaddress() {
  if (GetArenaNoVirtual() == NULL && nexthopaddress_ != NULL) delete nexthopaddress_;
  nexthopaddress_ = NULL;
}
const ::service_layer::SLIpAddress& SLRoutePath::nexthopaddress() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.NexthopAddress)
  return nexthopaddress_ != NULL ? *nexthopaddress_
                         : *::service_layer::SLIpAddress::internal_default_instance();
}
::service_layer::SLIpAddress* SLRoutePath::mutable_nexthopaddress() {
  
  if (nexthopaddress_ == NULL) {
    nexthopaddress_ = new ::service_layer::SLIpAddress;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.NexthopAddress)
  return nexthopaddress_;
}
::service_layer::SLIpAddress* SLRoutePath::release_nexthopaddress() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutePath.NexthopAddress)
  
  ::service_layer::SLIpAddress* temp = nexthopaddress_;
  nexthopaddress_ = NULL;
  return temp;
}
void SLRoutePath::set_allocated_nexthopaddress(::service_layer::SLIpAddress* nexthopaddress) {
  delete nexthopaddress_;
  nexthopaddress_ = nexthopaddress;
  if (nexthopaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutePath.NexthopAddress)
}

// .service_layer.SLInterface NexthopInterface = 2;
bool SLRoutePath::has_nexthopinterface() const {
  return this != internal_default_instance() && nexthopinterface_ != NULL;
}
void SLRoutePath::clear_nexthopinterface() {
  if (GetArenaNoVirtual() == NULL && nexthopinterface_ != NULL) delete nexthopinterface_;
  nexthopinterface_ = NULL;
}
const ::service_layer::SLInterface& SLRoutePath::nexthopinterface() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.NexthopInterface)
  return nexthopinterface_ != NULL ? *nexthopinterface_
                         : *::service_layer::SLInterface::internal_default_instance();
}
::service_layer::SLInterface* SLRoutePath::mutable_nexthopinterface() {
  
  if (nexthopinterface_ == NULL) {
    nexthopinterface_ = new ::service_layer::SLInterface;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.NexthopInterface)
  return nexthopinterface_;
}
::service_layer::SLInterface* SLRoutePath::release_nexthopinterface() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutePath.NexthopInterface)
  
  ::service_layer::SLInterface* temp = nexthopinterface_;
  nexthopinterface_ = NULL;
  return temp;
}
void SLRoutePath::set_allocated_nexthopinterface(::service_layer::SLInterface* nexthopinterface) {
  delete nexthopinterface_;
  nexthopinterface_ = nexthopinterface;
  if (nexthopinterface) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutePath.NexthopInterface)
}

// uint32 LoadMetric = 3;
void SLRoutePath::clear_loadmetric() {
  loadmetric_ = 0u;
}
::google::protobuf::uint32 SLRoutePath::loadmetric() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.LoadMetric)
  return loadmetric_;
}
void SLRoutePath::set_loadmetric(::google::protobuf::uint32 value) {
  
  loadmetric_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.LoadMetric)
}

// string VrfName = 4;
void SLRoutePath::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRoutePath::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.VrfName)
  return vrfname_.GetNoArena();
}
void SLRoutePath::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.VrfName)
}
#if LANG_CXX11
void SLRoutePath::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutePath.VrfName)
}
#endif
void SLRoutePath::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutePath.VrfName)
}
void SLRoutePath::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutePath.VrfName)
}
::std::string* SLRoutePath::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRoutePath::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutePath.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRoutePath::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutePath.VrfName)
}

// uint32 Metric = 5;
void SLRoutePath::clear_metric() {
  metric_ = 0u;
}
::google::protobuf::uint32 SLRoutePath::metric() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.Metric)
  return metric_;
}
void SLRoutePath::set_metric(::google::protobuf::uint32 value) {
  
  metric_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.Metric)
}

// uint32 PathId = 6;
void SLRoutePath::clear_pathid() {
  pathid_ = 0u;
}
::google::protobuf::uint32 SLRoutePath::pathid() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.PathId)
  return pathid_;
}
void SLRoutePath::set_pathid(::google::protobuf::uint32 value) {
  
  pathid_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.PathId)
}

// repeated uint64 ProtectedPathBitmap = 7;
int SLRoutePath::protectedpathbitmap_size() const {
  return protectedpathbitmap_.size();
}
void SLRoutePath::clear_protectedpathbitmap() {
  protectedpathbitmap_.Clear();
}
::google::protobuf::uint64 SLRoutePath::protectedpathbitmap(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.ProtectedPathBitmap)
  return protectedpathbitmap_.Get(index);
}
void SLRoutePath::set_protectedpathbitmap(int index, ::google::protobuf::uint64 value) {
  protectedpathbitmap_.Set(index, value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.ProtectedPathBitmap)
}
void SLRoutePath::add_protectedpathbitmap(::google::protobuf::uint64 value) {
  protectedpathbitmap_.Add(value);
  // @@protoc_insertion_point(field_add:service_layer.SLRoutePath.ProtectedPathBitmap)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SLRoutePath::protectedpathbitmap() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutePath.ProtectedPathBitmap)
  return protectedpathbitmap_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SLRoutePath::mutable_protectedpathbitmap() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutePath.ProtectedPathBitmap)
  return &protectedpathbitmap_;
}

// repeated uint32 LabelStack = 8;
int SLRoutePath::labelstack_size() const {
  return labelstack_.size();
}
void SLRoutePath::clear_labelstack() {
  labelstack_.Clear();
}
::google::protobuf::uint32 SLRoutePath::labelstack(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.LabelStack)
  return labelstack_.Get(index);
}
void SLRoutePath::set_labelstack(int index, ::google::protobuf::uint32 value) {
  labelstack_.Set(index, value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.LabelStack)
}
void SLRoutePath::add_labelstack(::google::protobuf::uint32 value) {
  labelstack_.Add(value);
  // @@protoc_insertion_point(field_add:service_layer.SLRoutePath.LabelStack)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SLRoutePath::labelstack() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutePath.LabelStack)
  return labelstack_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SLRoutePath::mutable_labelstack() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutePath.LabelStack)
  return &labelstack_;
}

// repeated .service_layer.SLIpAddress RemoteAddress = 9;
int SLRoutePath::remoteaddress_size() const {
  return remoteaddress_.size();
}
void SLRoutePath::clear_remoteaddress() {
  remoteaddress_.Clear();
}
const ::service_layer::SLIpAddress& SLRoutePath::remoteaddress(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_.Get(index);
}
::service_layer::SLIpAddress* SLRoutePath::mutable_remoteaddress(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_.Mutable(index);
}
::service_layer::SLIpAddress* SLRoutePath::add_remoteaddress() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >*
SLRoutePath::mutable_remoteaddress() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutePath.RemoteAddress)
  return &remoteaddress_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLIpAddress >&
SLRoutePath::remoteaddress() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutePath.RemoteAddress)
  return remoteaddress_;
}

// .service_layer.SLEncapType EncapType = 10;
void SLRoutePath::clear_encaptype() {
  encaptype_ = 0;
}
::service_layer::SLEncapType SLRoutePath::encaptype() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.EncapType)
  return static_cast< ::service_layer::SLEncapType >(encaptype_);
}
void SLRoutePath::set_encaptype(::service_layer::SLEncapType value) {
  
  encaptype_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.EncapType)
}

// bytes VtepRouterMacAddress = 11;
void SLRoutePath::clear_vteproutermacaddress() {
  vteproutermacaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRoutePath::vteproutermacaddress() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutePath.VtepRouterMacAddress)
  return vteproutermacaddress_.GetNoArena();
}
void SLRoutePath::set_vteproutermacaddress(const ::std::string& value) {
  
  vteproutermacaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutePath.VtepRouterMacAddress)
}
#if LANG_CXX11
void SLRoutePath::set_vteproutermacaddress(::std::string&& value) {
  
  vteproutermacaddress_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutePath.VtepRouterMacAddress)
}
#endif
void SLRoutePath::set_vteproutermacaddress(const char* value) {
  
  vteproutermacaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutePath.VtepRouterMacAddress)
}
void SLRoutePath::set_vteproutermacaddress(const void* value, size_t size) {
  
  vteproutermacaddress_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutePath.VtepRouterMacAddress)
}
::std::string* SLRoutePath::mutable_vteproutermacaddress() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutePath.VtepRouterMacAddress)
  return vteproutermacaddress_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRoutePath::release_vteproutermacaddress() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutePath.VtepRouterMacAddress)
  
  return vteproutermacaddress_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRoutePath::set_allocated_vteproutermacaddress(::std::string* vteproutermacaddress) {
  if (vteproutermacaddress != NULL) {
    
  } else {
    
  }
  vteproutermacaddress_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vteproutermacaddress);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutePath.VtepRouterMacAddress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
