// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_route_ipv4.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sl_route_ipv4.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace service_layer {

namespace {

const ::google::protobuf::Descriptor* SLRoutev4_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRoutev4_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLRoutev4Msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRoutev4Msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLRoutev4Res_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRoutev4Res_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLRoutev4MsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRoutev4MsgRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLRoutev4GetMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRoutev4GetMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* SLRoutev4GetMsgRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SLRoutev4GetMsgRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_sl_5froute_5fipv4_2eproto() {
  protobuf_AddDesc_sl_5froute_5fipv4_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "sl_route_ipv4.proto");
  GOOGLE_CHECK(file != NULL);
  SLRoutev4_descriptor_ = file->message_type(0);
  static const int SLRoutev4_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4, prefix_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4, prefixlen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4, routecommon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4, pathlist_),
  };
  SLRoutev4_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRoutev4_descriptor_,
      SLRoutev4::default_instance_,
      SLRoutev4_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRoutev4),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4, _is_default_instance_));
  SLRoutev4Msg_descriptor_ = file->message_type(1);
  static const int SLRoutev4Msg_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4Msg, oper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4Msg, correlator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4Msg, vrfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4Msg, routes_),
  };
  SLRoutev4Msg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRoutev4Msg_descriptor_,
      SLRoutev4Msg::default_instance_,
      SLRoutev4Msg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRoutev4Msg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4Msg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4Msg, _is_default_instance_));
  SLRoutev4Res_descriptor_ = file->message_type(2);
  static const int SLRoutev4Res_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4Res, errstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4Res, prefix_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4Res, prefixlen_),
  };
  SLRoutev4Res_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRoutev4Res_descriptor_,
      SLRoutev4Res::default_instance_,
      SLRoutev4Res_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRoutev4Res),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4Res, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4Res, _is_default_instance_));
  SLRoutev4MsgRsp_descriptor_ = file->message_type(3);
  static const int SLRoutev4MsgRsp_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4MsgRsp, correlator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4MsgRsp, vrfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4MsgRsp, statussummary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4MsgRsp, results_),
  };
  SLRoutev4MsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRoutev4MsgRsp_descriptor_,
      SLRoutev4MsgRsp::default_instance_,
      SLRoutev4MsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRoutev4MsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4MsgRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4MsgRsp, _is_default_instance_));
  SLRoutev4GetMsg_descriptor_ = file->message_type(4);
  static const int SLRoutev4GetMsg_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsg, correlator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsg, vrfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsg, prefix_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsg, prefixlen_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsg, entriescount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsg, getnext_),
  };
  SLRoutev4GetMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRoutev4GetMsg_descriptor_,
      SLRoutev4GetMsg::default_instance_,
      SLRoutev4GetMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRoutev4GetMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsg, _is_default_instance_));
  SLRoutev4GetMsgRsp_descriptor_ = file->message_type(5);
  static const int SLRoutev4GetMsgRsp_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsgRsp, correlator_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsgRsp, eof_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsgRsp, vrfname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsgRsp, errstatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsgRsp, entries_),
  };
  SLRoutev4GetMsgRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SLRoutev4GetMsgRsp_descriptor_,
      SLRoutev4GetMsgRsp::default_instance_,
      SLRoutev4GetMsgRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(SLRoutev4GetMsgRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsgRsp, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev4GetMsgRsp, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_sl_5froute_5fipv4_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRoutev4_descriptor_, &SLRoutev4::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRoutev4Msg_descriptor_, &SLRoutev4Msg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRoutev4Res_descriptor_, &SLRoutev4Res::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRoutev4MsgRsp_descriptor_, &SLRoutev4MsgRsp::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRoutev4GetMsg_descriptor_, &SLRoutev4GetMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SLRoutev4GetMsgRsp_descriptor_, &SLRoutev4GetMsgRsp::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_sl_5froute_5fipv4_2eproto() {
  delete SLRoutev4::default_instance_;
  delete SLRoutev4_reflection_;
  delete SLRoutev4Msg::default_instance_;
  delete SLRoutev4Msg_reflection_;
  delete SLRoutev4Res::default_instance_;
  delete SLRoutev4Res_reflection_;
  delete SLRoutev4MsgRsp::default_instance_;
  delete SLRoutev4MsgRsp_reflection_;
  delete SLRoutev4GetMsg::default_instance_;
  delete SLRoutev4GetMsg_reflection_;
  delete SLRoutev4GetMsgRsp::default_instance_;
  delete SLRoutev4GetMsgRsp_reflection_;
}

void protobuf_AddDesc_sl_5froute_5fipv4_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::service_layer::protobuf_AddDesc_sl_5fcommon_5ftypes_2eproto();
  ::service_layer::protobuf_AddDesc_sl_5froute_5fcommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023sl_route_ipv4.proto\022\rservice_layer\032\025sl"
    "_common_types.proto\032\025sl_route_common.pro"
    "to\"\217\001\n\tSLRoutev4\022\016\n\006Prefix\030\001 \001(\r\022\021\n\tPref"
    "ixLen\030\002 \001(\r\0221\n\013RouteCommon\030\003 \001(\0132\034.servi"
    "ce_layer.SLRouteCommon\022,\n\010PathList\030\004 \003(\013"
    "2\032.service_layer.SLRoutePath\"\206\001\n\014SLRoute"
    "v4Msg\022\'\n\004Oper\030\001 \001(\0162\031.service_layer.SLOb"
    "jectOp\022\022\n\nCorrelator\030\002 \001(\004\022\017\n\007VrfName\030\003 "
    "\001(\t\022(\n\006Routes\030\004 \003(\0132\030.service_layer.SLRo"
    "utev4\"b\n\014SLRoutev4Res\022/\n\tErrStatus\030\001 \001(\013"
    "2\034.service_layer.SLErrorStatus\022\016\n\006Prefix"
    "\030\002 \001(\r\022\021\n\tPrefixLen\030\003 \001(\r\"\231\001\n\017SLRoutev4M"
    "sgRsp\022\022\n\nCorrelator\030\001 \001(\004\022\017\n\007VrfName\030\002 \001"
    "(\t\0223\n\rStatusSummary\030\003 \001(\0132\034.service_laye"
    "r.SLErrorStatus\022,\n\007Results\030\004 \003(\0132\033.servi"
    "ce_layer.SLRoutev4Res\"\200\001\n\017SLRoutev4GetMs"
    "g\022\022\n\nCorrelator\030\001 \001(\004\022\017\n\007VrfName\030\002 \001(\t\022\016"
    "\n\006Prefix\030\003 \001(\r\022\021\n\tPrefixLen\030\004 \001(\r\022\024\n\014Ent"
    "riesCount\030\005 \001(\r\022\017\n\007GetNext\030\006 \001(\010\"\242\001\n\022SLR"
    "outev4GetMsgRsp\022\022\n\nCorrelator\030\001 \001(\004\022\013\n\003E"
    "of\030\002 \001(\010\022\017\n\007VrfName\030\003 \001(\t\022/\n\tErrStatus\030\004"
    " \001(\0132\034.service_layer.SLErrorStatus\022)\n\007En"
    "tries\030\005 \003(\0132\030.service_layer.SLRoutev42\267\006"
    "\n\rSLRoutev4Oper\022b\n\023SLRoutev4GlobalsGet\022#"
    ".service_layer.SLRouteGlobalsGetMsg\032&.se"
    "rvice_layer.SLRouteGlobalsGetMsgRsp\022n\n\027S"
    "LRoutev4GlobalStatsGet\022\'.service_layer.S"
    "LRouteGlobalStatsGetMsg\032*.service_layer."
    "SLRouteGlobalStatsGetMsgRsp\022N\n\021SLRoutev4"
    "VrfRegOp\022\032.service_layer.SLVrfRegMsg\032\035.s"
    "ervice_layer.SLVrfRegMsgRsp\022U\n\022SLRoutev4"
    "VrfRegGet\022\035.service_layer.SLVrfRegGetMsg"
    "\032 .service_layer.SLVrfRegGetMsgRsp\022Y\n\024SL"
    "Routev4VrfGetStats\022\035.service_layer.SLVrf"
    "RegGetMsg\032\".service_layer.SLVRFGetStatsM"
    "sgRsp\022J\n\013SLRoutev4Op\022\033.service_layer.SLR"
    "outev4Msg\032\036.service_layer.SLRoutev4MsgRs"
    "p\022Q\n\014SLRoutev4Get\022\036.service_layer.SLRout"
    "ev4GetMsg\032!.service_layer.SLRoutev4GetMs"
    "gRsp\022T\n\021SLRoutev4OpStream\022\033.service_laye"
    "r.SLRoutev4Msg\032\036.service_layer.SLRoutev4"
    "MsgRsp(\0010\001\022[\n\022SLRoutev4GetStream\022\036.servi"
    "ce_layer.SLRoutev4GetMsg\032!.service_layer"
    ".SLRoutev4GetMsgRsp(\0010\001b\006proto3", 1751);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_route_ipv4.proto", &protobuf_RegisterTypes);
  SLRoutev4::default_instance_ = new SLRoutev4();
  SLRoutev4Msg::default_instance_ = new SLRoutev4Msg();
  SLRoutev4Res::default_instance_ = new SLRoutev4Res();
  SLRoutev4MsgRsp::default_instance_ = new SLRoutev4MsgRsp();
  SLRoutev4GetMsg::default_instance_ = new SLRoutev4GetMsg();
  SLRoutev4GetMsgRsp::default_instance_ = new SLRoutev4GetMsgRsp();
  SLRoutev4::default_instance_->InitAsDefaultInstance();
  SLRoutev4Msg::default_instance_->InitAsDefaultInstance();
  SLRoutev4Res::default_instance_->InitAsDefaultInstance();
  SLRoutev4MsgRsp::default_instance_->InitAsDefaultInstance();
  SLRoutev4GetMsg::default_instance_->InitAsDefaultInstance();
  SLRoutev4GetMsgRsp::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_sl_5froute_5fipv4_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_sl_5froute_5fipv4_2eproto {
  StaticDescriptorInitializer_sl_5froute_5fipv4_2eproto() {
    protobuf_AddDesc_sl_5froute_5fipv4_2eproto();
  }
} static_descriptor_initializer_sl_5froute_5fipv4_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4::kPrefixFieldNumber;
const int SLRoutev4::kPrefixLenFieldNumber;
const int SLRoutev4::kRouteCommonFieldNumber;
const int SLRoutev4::kPathListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4::SLRoutev4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4)
}

void SLRoutev4::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  routecommon_ = const_cast< ::service_layer::SLRouteCommon*>(&::service_layer::SLRouteCommon::default_instance());
}

SLRoutev4::SLRoutev4(const SLRoutev4& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4)
}

void SLRoutev4::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  prefix_ = 0u;
  prefixlen_ = 0u;
  routecommon_ = NULL;
}

SLRoutev4::~SLRoutev4() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4)
  SharedDtor();
}

void SLRoutev4::SharedDtor() {
  if (this != default_instance_) {
    delete routecommon_;
  }
}

void SLRoutev4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRoutev4_descriptor_;
}

const SLRoutev4& SLRoutev4::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fipv4_2eproto();
  return *default_instance_;
}

SLRoutev4* SLRoutev4::default_instance_ = NULL;

SLRoutev4* SLRoutev4::New(::google::protobuf::Arena* arena) const {
  SLRoutev4* n = new SLRoutev4;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLRoutev4*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(prefix_, prefixlen_);
  if (GetArenaNoVirtual() == NULL && routecommon_ != NULL) delete routecommon_;
  routecommon_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  pathlist_.Clear();
}

bool SLRoutev4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 Prefix = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefix_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_PrefixLen;
        break;
      }

      // optional uint32 PrefixLen = 2;
      case 2: {
        if (tag == 16) {
         parse_PrefixLen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefixlen_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_RouteCommon;
        break;
      }

      // optional .service_layer.SLRouteCommon RouteCommon = 3;
      case 3: {
        if (tag == 26) {
         parse_RouteCommon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_routecommon()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_PathList;
        break;
      }

      // repeated .service_layer.SLRoutePath PathList = 4;
      case 4: {
        if (tag == 34) {
         parse_PathList:
          DO_(input->IncrementRecursionDepth());
         parse_loop_PathList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pathlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_PathList;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4)
  return false;
#undef DO_
}

void SLRoutev4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4)
  // optional uint32 Prefix = 1;
  if (this->prefix() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->prefix(), output);
  }

  // optional uint32 PrefixLen = 2;
  if (this->prefixlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->prefixlen(), output);
  }

  // optional .service_layer.SLRouteCommon RouteCommon = 3;
  if (this->has_routecommon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->routecommon_, output);
  }

  // repeated .service_layer.SLRoutePath PathList = 4;
  for (unsigned int i = 0, n = this->pathlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pathlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4)
}

::google::protobuf::uint8* SLRoutev4::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4)
  // optional uint32 Prefix = 1;
  if (this->prefix() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->prefix(), target);
  }

  // optional uint32 PrefixLen = 2;
  if (this->prefixlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->prefixlen(), target);
  }

  // optional .service_layer.SLRouteCommon RouteCommon = 3;
  if (this->has_routecommon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->routecommon_, target);
  }

  // repeated .service_layer.SLRoutePath PathList = 4;
  for (unsigned int i = 0, n = this->pathlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->pathlist(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4)
  return target;
}

int SLRoutev4::ByteSize() const {
  int total_size = 0;

  // optional uint32 Prefix = 1;
  if (this->prefix() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefix());
  }

  // optional uint32 PrefixLen = 2;
  if (this->prefixlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefixlen());
  }

  // optional .service_layer.SLRouteCommon RouteCommon = 3;
  if (this->has_routecommon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->routecommon_);
  }

  // repeated .service_layer.SLRoutePath PathList = 4;
  total_size += 1 * this->pathlist_size();
  for (int i = 0; i < this->pathlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pathlist(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRoutev4* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRoutev4::MergeFrom(const SLRoutev4& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  pathlist_.MergeFrom(from.pathlist_);
  if (from.prefix() != 0) {
    set_prefix(from.prefix());
  }
  if (from.prefixlen() != 0) {
    set_prefixlen(from.prefixlen());
  }
  if (from.has_routecommon()) {
    mutable_routecommon()->::service_layer::SLRouteCommon::MergeFrom(from.routecommon());
  }
}

void SLRoutev4::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4::CopyFrom(const SLRoutev4& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4::IsInitialized() const {

  return true;
}

void SLRoutev4::Swap(SLRoutev4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4::InternalSwap(SLRoutev4* other) {
  std::swap(prefix_, other->prefix_);
  std::swap(prefixlen_, other->prefixlen_);
  std::swap(routecommon_, other->routecommon_);
  pathlist_.UnsafeArenaSwap(&other->pathlist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRoutev4_descriptor_;
  metadata.reflection = SLRoutev4_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev4

// optional uint32 Prefix = 1;
void SLRoutev4::clear_prefix() {
  prefix_ = 0u;
}
 ::google::protobuf::uint32 SLRoutev4::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4.Prefix)
  return prefix_;
}
 void SLRoutev4::set_prefix(::google::protobuf::uint32 value) {
  
  prefix_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4.Prefix)
}

// optional uint32 PrefixLen = 2;
void SLRoutev4::clear_prefixlen() {
  prefixlen_ = 0u;
}
 ::google::protobuf::uint32 SLRoutev4::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4.PrefixLen)
  return prefixlen_;
}
 void SLRoutev4::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4.PrefixLen)
}

// optional .service_layer.SLRouteCommon RouteCommon = 3;
bool SLRoutev4::has_routecommon() const {
  return !_is_default_instance_ && routecommon_ != NULL;
}
void SLRoutev4::clear_routecommon() {
  if (GetArenaNoVirtual() == NULL && routecommon_ != NULL) delete routecommon_;
  routecommon_ = NULL;
}
const ::service_layer::SLRouteCommon& SLRoutev4::routecommon() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4.RouteCommon)
  return routecommon_ != NULL ? *routecommon_ : *default_instance_->routecommon_;
}
::service_layer::SLRouteCommon* SLRoutev4::mutable_routecommon() {
  
  if (routecommon_ == NULL) {
    routecommon_ = new ::service_layer::SLRouteCommon;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4.RouteCommon)
  return routecommon_;
}
::service_layer::SLRouteCommon* SLRoutev4::release_routecommon() {
  
  ::service_layer::SLRouteCommon* temp = routecommon_;
  routecommon_ = NULL;
  return temp;
}
void SLRoutev4::set_allocated_routecommon(::service_layer::SLRouteCommon* routecommon) {
  delete routecommon_;
  routecommon_ = routecommon;
  if (routecommon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4.RouteCommon)
}

// repeated .service_layer.SLRoutePath PathList = 4;
int SLRoutev4::pathlist_size() const {
  return pathlist_.size();
}
void SLRoutev4::clear_pathlist() {
  pathlist_.Clear();
}
const ::service_layer::SLRoutePath& SLRoutev4::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4.PathList)
  return pathlist_.Get(index);
}
::service_layer::SLRoutePath* SLRoutev4::mutable_pathlist(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4.PathList)
  return pathlist_.Mutable(index);
}
::service_layer::SLRoutePath* SLRoutev4::add_pathlist() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev4.PathList)
  return pathlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >*
SLRoutev4::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev4.PathList)
  return &pathlist_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >&
SLRoutev4::pathlist() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev4.PathList)
  return pathlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4Msg::kOperFieldNumber;
const int SLRoutev4Msg::kCorrelatorFieldNumber;
const int SLRoutev4Msg::kVrfNameFieldNumber;
const int SLRoutev4Msg::kRoutesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4Msg::SLRoutev4Msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4Msg)
}

void SLRoutev4Msg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLRoutev4Msg::SLRoutev4Msg(const SLRoutev4Msg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4Msg)
}

void SLRoutev4Msg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  oper_ = 0;
  correlator_ = GOOGLE_ULONGLONG(0);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SLRoutev4Msg::~SLRoutev4Msg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4Msg)
  SharedDtor();
}

void SLRoutev4Msg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SLRoutev4Msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4Msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRoutev4Msg_descriptor_;
}

const SLRoutev4Msg& SLRoutev4Msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fipv4_2eproto();
  return *default_instance_;
}

SLRoutev4Msg* SLRoutev4Msg::default_instance_ = NULL;

SLRoutev4Msg* SLRoutev4Msg::New(::google::protobuf::Arena* arena) const {
  SLRoutev4Msg* n = new SLRoutev4Msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4Msg::Clear() {
  oper_ = 0;
  correlator_ = GOOGLE_ULONGLONG(0);
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routes_.Clear();
}

bool SLRoutev4Msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4Msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .service_layer.SLObjectOp Oper = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLObjectOp >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Correlator;
        break;
      }

      // optional uint64 Correlator = 2;
      case 2: {
        if (tag == 16) {
         parse_Correlator:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_VrfName;
        break;
      }

      // optional string VrfName = 3;
      case 3: {
        if (tag == 26) {
         parse_VrfName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev4Msg.VrfName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Routes;
        break;
      }

      // repeated .service_layer.SLRoutev4 Routes = 4;
      case 4: {
        if (tag == 34) {
         parse_Routes:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Routes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_routes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_Routes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4Msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4Msg)
  return false;
#undef DO_
}

void SLRoutev4Msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4Msg)
  // optional .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // optional uint64 Correlator = 2;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->correlator(), output);
  }

  // optional string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4Msg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vrfname(), output);
  }

  // repeated .service_layer.SLRoutev4 Routes = 4;
  for (unsigned int i = 0, n = this->routes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->routes(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4Msg)
}

::google::protobuf::uint8* SLRoutev4Msg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4Msg)
  // optional .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // optional uint64 Correlator = 2;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->correlator(), target);
  }

  // optional string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4Msg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vrfname(), target);
  }

  // repeated .service_layer.SLRoutev4 Routes = 4;
  for (unsigned int i = 0, n = this->routes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->routes(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4Msg)
  return target;
}

int SLRoutev4Msg::ByteSize() const {
  int total_size = 0;

  // optional .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  // optional uint64 Correlator = 2;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // optional string VrfName = 3;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // repeated .service_layer.SLRoutev4 Routes = 4;
  total_size += 1 * this->routes_size();
  for (int i = 0; i < this->routes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->routes(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4Msg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRoutev4Msg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4Msg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRoutev4Msg::MergeFrom(const SLRoutev4Msg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  routes_.MergeFrom(from.routes_);
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
}

void SLRoutev4Msg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4Msg::CopyFrom(const SLRoutev4Msg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4Msg::IsInitialized() const {

  return true;
}

void SLRoutev4Msg::Swap(SLRoutev4Msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4Msg::InternalSwap(SLRoutev4Msg* other) {
  std::swap(oper_, other->oper_);
  std::swap(correlator_, other->correlator_);
  vrfname_.Swap(&other->vrfname_);
  routes_.UnsafeArenaSwap(&other->routes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4Msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRoutev4Msg_descriptor_;
  metadata.reflection = SLRoutev4Msg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev4Msg

// optional .service_layer.SLObjectOp Oper = 1;
void SLRoutev4Msg::clear_oper() {
  oper_ = 0;
}
 ::service_layer::SLObjectOp SLRoutev4Msg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Msg.Oper)
  return static_cast< ::service_layer::SLObjectOp >(oper_);
}
 void SLRoutev4Msg::set_oper(::service_layer::SLObjectOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4Msg.Oper)
}

// optional uint64 Correlator = 2;
void SLRoutev4Msg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SLRoutev4Msg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Msg.Correlator)
  return correlator_;
}
 void SLRoutev4Msg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4Msg.Correlator)
}

// optional string VrfName = 3;
void SLRoutev4Msg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SLRoutev4Msg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Msg.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLRoutev4Msg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4Msg.VrfName)
}
 void SLRoutev4Msg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev4Msg.VrfName)
}
 void SLRoutev4Msg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev4Msg.VrfName)
}
 ::std::string* SLRoutev4Msg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4Msg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SLRoutev4Msg::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLRoutev4Msg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4Msg.VrfName)
}

// repeated .service_layer.SLRoutev4 Routes = 4;
int SLRoutev4Msg::routes_size() const {
  return routes_.size();
}
void SLRoutev4Msg::clear_routes() {
  routes_.Clear();
}
const ::service_layer::SLRoutev4& SLRoutev4Msg::routes(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Msg.Routes)
  return routes_.Get(index);
}
::service_layer::SLRoutev4* SLRoutev4Msg::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4Msg.Routes)
  return routes_.Mutable(index);
}
::service_layer::SLRoutev4* SLRoutev4Msg::add_routes() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev4Msg.Routes)
  return routes_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >*
SLRoutev4Msg::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev4Msg.Routes)
  return &routes_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >&
SLRoutev4Msg::routes() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev4Msg.Routes)
  return routes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4Res::kErrStatusFieldNumber;
const int SLRoutev4Res::kPrefixFieldNumber;
const int SLRoutev4Res::kPrefixLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4Res::SLRoutev4Res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4Res)
}

void SLRoutev4Res::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(&::service_layer::SLErrorStatus::default_instance());
}

SLRoutev4Res::SLRoutev4Res(const SLRoutev4Res& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4Res)
}

void SLRoutev4Res::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  errstatus_ = NULL;
  prefix_ = 0u;
  prefixlen_ = 0u;
}

SLRoutev4Res::~SLRoutev4Res() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4Res)
  SharedDtor();
}

void SLRoutev4Res::SharedDtor() {
  if (this != default_instance_) {
    delete errstatus_;
  }
}

void SLRoutev4Res::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4Res::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRoutev4Res_descriptor_;
}

const SLRoutev4Res& SLRoutev4Res::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fipv4_2eproto();
  return *default_instance_;
}

SLRoutev4Res* SLRoutev4Res::default_instance_ = NULL;

SLRoutev4Res* SLRoutev4Res::New(::google::protobuf::Arena* arena) const {
  SLRoutev4Res* n = new SLRoutev4Res;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4Res::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLRoutev4Res*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(prefix_, prefixlen_);
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool SLRoutev4Res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4Res)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Prefix;
        break;
      }

      // optional uint32 Prefix = 2;
      case 2: {
        if (tag == 16) {
         parse_Prefix:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefix_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_PrefixLen;
        break;
      }

      // optional uint32 PrefixLen = 3;
      case 3: {
        if (tag == 24) {
         parse_PrefixLen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefixlen_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4Res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4Res)
  return false;
#undef DO_
}

void SLRoutev4Res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4Res)
  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // optional uint32 Prefix = 2;
  if (this->prefix() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->prefix(), output);
  }

  // optional uint32 PrefixLen = 3;
  if (this->prefixlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->prefixlen(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4Res)
}

::google::protobuf::uint8* SLRoutev4Res::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4Res)
  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->errstatus_, target);
  }

  // optional uint32 Prefix = 2;
  if (this->prefix() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->prefix(), target);
  }

  // optional uint32 PrefixLen = 3;
  if (this->prefixlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->prefixlen(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4Res)
  return target;
}

int SLRoutev4Res::ByteSize() const {
  int total_size = 0;

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // optional uint32 Prefix = 2;
  if (this->prefix() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefix());
  }

  // optional uint32 PrefixLen = 3;
  if (this->prefixlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefixlen());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4Res::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRoutev4Res* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4Res>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRoutev4Res::MergeFrom(const SLRoutev4Res& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.prefix() != 0) {
    set_prefix(from.prefix());
  }
  if (from.prefixlen() != 0) {
    set_prefixlen(from.prefixlen());
  }
}

void SLRoutev4Res::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4Res::CopyFrom(const SLRoutev4Res& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4Res::IsInitialized() const {

  return true;
}

void SLRoutev4Res::Swap(SLRoutev4Res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4Res::InternalSwap(SLRoutev4Res* other) {
  std::swap(errstatus_, other->errstatus_);
  std::swap(prefix_, other->prefix_);
  std::swap(prefixlen_, other->prefixlen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4Res::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRoutev4Res_descriptor_;
  metadata.reflection = SLRoutev4Res_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev4Res

// optional .service_layer.SLErrorStatus ErrStatus = 1;
bool SLRoutev4Res::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
void SLRoutev4Res::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLRoutev4Res::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Res.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
::service_layer::SLErrorStatus* SLRoutev4Res::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4Res.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLRoutev4Res::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLRoutev4Res::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4Res.ErrStatus)
}

// optional uint32 Prefix = 2;
void SLRoutev4Res::clear_prefix() {
  prefix_ = 0u;
}
 ::google::protobuf::uint32 SLRoutev4Res::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Res.Prefix)
  return prefix_;
}
 void SLRoutev4Res::set_prefix(::google::protobuf::uint32 value) {
  
  prefix_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4Res.Prefix)
}

// optional uint32 PrefixLen = 3;
void SLRoutev4Res::clear_prefixlen() {
  prefixlen_ = 0u;
}
 ::google::protobuf::uint32 SLRoutev4Res::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4Res.PrefixLen)
  return prefixlen_;
}
 void SLRoutev4Res::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4Res.PrefixLen)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4MsgRsp::kCorrelatorFieldNumber;
const int SLRoutev4MsgRsp::kVrfNameFieldNumber;
const int SLRoutev4MsgRsp::kStatusSummaryFieldNumber;
const int SLRoutev4MsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4MsgRsp::SLRoutev4MsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4MsgRsp)
}

void SLRoutev4MsgRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(&::service_layer::SLErrorStatus::default_instance());
}

SLRoutev4MsgRsp::SLRoutev4MsgRsp(const SLRoutev4MsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4MsgRsp)
}

void SLRoutev4MsgRsp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  correlator_ = GOOGLE_ULONGLONG(0);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statussummary_ = NULL;
}

SLRoutev4MsgRsp::~SLRoutev4MsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4MsgRsp)
  SharedDtor();
}

void SLRoutev4MsgRsp::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete statussummary_;
  }
}

void SLRoutev4MsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4MsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRoutev4MsgRsp_descriptor_;
}

const SLRoutev4MsgRsp& SLRoutev4MsgRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fipv4_2eproto();
  return *default_instance_;
}

SLRoutev4MsgRsp* SLRoutev4MsgRsp::default_instance_ = NULL;

SLRoutev4MsgRsp* SLRoutev4MsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRoutev4MsgRsp* n = new SLRoutev4MsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4MsgRsp::Clear() {
  correlator_ = GOOGLE_ULONGLONG(0);
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) delete statussummary_;
  statussummary_ = NULL;
  results_.Clear();
}

bool SLRoutev4MsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4MsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Correlator = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_VrfName;
        break;
      }

      // optional string VrfName = 2;
      case 2: {
        if (tag == 18) {
         parse_VrfName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev4MsgRsp.VrfName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_StatusSummary;
        break;
      }

      // optional .service_layer.SLErrorStatus StatusSummary = 3;
      case 3: {
        if (tag == 26) {
         parse_StatusSummary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Results;
        break;
      }

      // repeated .service_layer.SLRoutev4Res Results = 4;
      case 4: {
        if (tag == 34) {
         parse_Results:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_Results;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4MsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4MsgRsp)
  return false;
#undef DO_
}

void SLRoutev4MsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4MsgRsp)
  // optional uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // optional string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4MsgRsp.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vrfname(), output);
  }

  // optional .service_layer.SLErrorStatus StatusSummary = 3;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->statussummary_, output);
  }

  // repeated .service_layer.SLRoutev4Res Results = 4;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->results(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4MsgRsp)
}

::google::protobuf::uint8* SLRoutev4MsgRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4MsgRsp)
  // optional uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // optional string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4MsgRsp.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vrfname(), target);
  }

  // optional .service_layer.SLErrorStatus StatusSummary = 3;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->statussummary_, target);
  }

  // repeated .service_layer.SLRoutev4Res Results = 4;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->results(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4MsgRsp)
  return target;
}

int SLRoutev4MsgRsp::ByteSize() const {
  int total_size = 0;

  // optional uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // optional string VrfName = 2;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // optional .service_layer.SLErrorStatus StatusSummary = 3;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->statussummary_);
  }

  // repeated .service_layer.SLRoutev4Res Results = 4;
  total_size += 1 * this->results_size();
  for (int i = 0; i < this->results_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->results(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4MsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRoutev4MsgRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4MsgRsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRoutev4MsgRsp::MergeFrom(const SLRoutev4MsgRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  results_.MergeFrom(from.results_);
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
}

void SLRoutev4MsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4MsgRsp::CopyFrom(const SLRoutev4MsgRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4MsgRsp::IsInitialized() const {

  return true;
}

void SLRoutev4MsgRsp::Swap(SLRoutev4MsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4MsgRsp::InternalSwap(SLRoutev4MsgRsp* other) {
  std::swap(correlator_, other->correlator_);
  vrfname_.Swap(&other->vrfname_);
  std::swap(statussummary_, other->statussummary_);
  results_.UnsafeArenaSwap(&other->results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4MsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRoutev4MsgRsp_descriptor_;
  metadata.reflection = SLRoutev4MsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev4MsgRsp

// optional uint64 Correlator = 1;
void SLRoutev4MsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SLRoutev4MsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4MsgRsp.Correlator)
  return correlator_;
}
 void SLRoutev4MsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4MsgRsp.Correlator)
}

// optional string VrfName = 2;
void SLRoutev4MsgRsp::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SLRoutev4MsgRsp::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4MsgRsp.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLRoutev4MsgRsp::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4MsgRsp.VrfName)
}
 void SLRoutev4MsgRsp::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev4MsgRsp.VrfName)
}
 void SLRoutev4MsgRsp::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev4MsgRsp.VrfName)
}
 ::std::string* SLRoutev4MsgRsp::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4MsgRsp.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SLRoutev4MsgRsp::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLRoutev4MsgRsp::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4MsgRsp.VrfName)
}

// optional .service_layer.SLErrorStatus StatusSummary = 3;
bool SLRoutev4MsgRsp::has_statussummary() const {
  return !_is_default_instance_ && statussummary_ != NULL;
}
void SLRoutev4MsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) delete statussummary_;
  statussummary_ = NULL;
}
const ::service_layer::SLErrorStatus& SLRoutev4MsgRsp::statussummary() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4MsgRsp.StatusSummary)
  return statussummary_ != NULL ? *statussummary_ : *default_instance_->statussummary_;
}
::service_layer::SLErrorStatus* SLRoutev4MsgRsp::mutable_statussummary() {
  
  if (statussummary_ == NULL) {
    statussummary_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4MsgRsp.StatusSummary)
  return statussummary_;
}
::service_layer::SLErrorStatus* SLRoutev4MsgRsp::release_statussummary() {
  
  ::service_layer::SLErrorStatus* temp = statussummary_;
  statussummary_ = NULL;
  return temp;
}
void SLRoutev4MsgRsp::set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary) {
  delete statussummary_;
  statussummary_ = statussummary;
  if (statussummary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4MsgRsp.StatusSummary)
}

// repeated .service_layer.SLRoutev4Res Results = 4;
int SLRoutev4MsgRsp::results_size() const {
  return results_.size();
}
void SLRoutev4MsgRsp::clear_results() {
  results_.Clear();
}
const ::service_layer::SLRoutev4Res& SLRoutev4MsgRsp::results(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4MsgRsp.Results)
  return results_.Get(index);
}
::service_layer::SLRoutev4Res* SLRoutev4MsgRsp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4MsgRsp.Results)
  return results_.Mutable(index);
}
::service_layer::SLRoutev4Res* SLRoutev4MsgRsp::add_results() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev4MsgRsp.Results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4Res >*
SLRoutev4MsgRsp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev4MsgRsp.Results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4Res >&
SLRoutev4MsgRsp::results() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev4MsgRsp.Results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4GetMsg::kCorrelatorFieldNumber;
const int SLRoutev4GetMsg::kVrfNameFieldNumber;
const int SLRoutev4GetMsg::kPrefixFieldNumber;
const int SLRoutev4GetMsg::kPrefixLenFieldNumber;
const int SLRoutev4GetMsg::kEntriesCountFieldNumber;
const int SLRoutev4GetMsg::kGetNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4GetMsg::SLRoutev4GetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4GetMsg)
}

void SLRoutev4GetMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SLRoutev4GetMsg::SLRoutev4GetMsg(const SLRoutev4GetMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4GetMsg)
}

void SLRoutev4GetMsg::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  correlator_ = GOOGLE_ULONGLONG(0);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefix_ = 0u;
  prefixlen_ = 0u;
  entriescount_ = 0u;
  getnext_ = false;
}

SLRoutev4GetMsg::~SLRoutev4GetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4GetMsg)
  SharedDtor();
}

void SLRoutev4GetMsg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SLRoutev4GetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4GetMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRoutev4GetMsg_descriptor_;
}

const SLRoutev4GetMsg& SLRoutev4GetMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fipv4_2eproto();
  return *default_instance_;
}

SLRoutev4GetMsg* SLRoutev4GetMsg::default_instance_ = NULL;

SLRoutev4GetMsg* SLRoutev4GetMsg::New(::google::protobuf::Arena* arena) const {
  SLRoutev4GetMsg* n = new SLRoutev4GetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4GetMsg::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SLRoutev4GetMsg*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(prefix_, getnext_);
  correlator_ = GOOGLE_ULONGLONG(0);
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SLRoutev4GetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4GetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Correlator = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_VrfName;
        break;
      }

      // optional string VrfName = 2;
      case 2: {
        if (tag == 18) {
         parse_VrfName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev4GetMsg.VrfName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Prefix;
        break;
      }

      // optional uint32 Prefix = 3;
      case 3: {
        if (tag == 24) {
         parse_Prefix:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefix_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_PrefixLen;
        break;
      }

      // optional uint32 PrefixLen = 4;
      case 4: {
        if (tag == 32) {
         parse_PrefixLen:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefixlen_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_EntriesCount;
        break;
      }

      // optional uint32 EntriesCount = 5;
      case 5: {
        if (tag == 40) {
         parse_EntriesCount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entriescount_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_GetNext;
        break;
      }

      // optional bool GetNext = 6;
      case 6: {
        if (tag == 48) {
         parse_GetNext:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getnext_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4GetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4GetMsg)
  return false;
#undef DO_
}

void SLRoutev4GetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4GetMsg)
  // optional uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // optional string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4GetMsg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vrfname(), output);
  }

  // optional uint32 Prefix = 3;
  if (this->prefix() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->prefix(), output);
  }

  // optional uint32 PrefixLen = 4;
  if (this->prefixlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->prefixlen(), output);
  }

  // optional uint32 EntriesCount = 5;
  if (this->entriescount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->entriescount(), output);
  }

  // optional bool GetNext = 6;
  if (this->getnext() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->getnext(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4GetMsg)
}

::google::protobuf::uint8* SLRoutev4GetMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4GetMsg)
  // optional uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // optional string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4GetMsg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vrfname(), target);
  }

  // optional uint32 Prefix = 3;
  if (this->prefix() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->prefix(), target);
  }

  // optional uint32 PrefixLen = 4;
  if (this->prefixlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->prefixlen(), target);
  }

  // optional uint32 EntriesCount = 5;
  if (this->entriescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->entriescount(), target);
  }

  // optional bool GetNext = 6;
  if (this->getnext() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->getnext(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4GetMsg)
  return target;
}

int SLRoutev4GetMsg::ByteSize() const {
  int total_size = 0;

  // optional uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // optional string VrfName = 2;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // optional uint32 Prefix = 3;
  if (this->prefix() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefix());
  }

  // optional uint32 PrefixLen = 4;
  if (this->prefixlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefixlen());
  }

  // optional uint32 EntriesCount = 5;
  if (this->entriescount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entriescount());
  }

  // optional bool GetNext = 6;
  if (this->getnext() != 0) {
    total_size += 1 + 1;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4GetMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRoutev4GetMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4GetMsg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRoutev4GetMsg::MergeFrom(const SLRoutev4GetMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.prefix() != 0) {
    set_prefix(from.prefix());
  }
  if (from.prefixlen() != 0) {
    set_prefixlen(from.prefixlen());
  }
  if (from.entriescount() != 0) {
    set_entriescount(from.entriescount());
  }
  if (from.getnext() != 0) {
    set_getnext(from.getnext());
  }
}

void SLRoutev4GetMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4GetMsg::CopyFrom(const SLRoutev4GetMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4GetMsg::IsInitialized() const {

  return true;
}

void SLRoutev4GetMsg::Swap(SLRoutev4GetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4GetMsg::InternalSwap(SLRoutev4GetMsg* other) {
  std::swap(correlator_, other->correlator_);
  vrfname_.Swap(&other->vrfname_);
  std::swap(prefix_, other->prefix_);
  std::swap(prefixlen_, other->prefixlen_);
  std::swap(entriescount_, other->entriescount_);
  std::swap(getnext_, other->getnext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4GetMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRoutev4GetMsg_descriptor_;
  metadata.reflection = SLRoutev4GetMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev4GetMsg

// optional uint64 Correlator = 1;
void SLRoutev4GetMsg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SLRoutev4GetMsg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.Correlator)
  return correlator_;
}
 void SLRoutev4GetMsg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.Correlator)
}

// optional string VrfName = 2;
void SLRoutev4GetMsg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SLRoutev4GetMsg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLRoutev4GetMsg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.VrfName)
}
 void SLRoutev4GetMsg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev4GetMsg.VrfName)
}
 void SLRoutev4GetMsg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev4GetMsg.VrfName)
}
 ::std::string* SLRoutev4GetMsg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4GetMsg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SLRoutev4GetMsg::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLRoutev4GetMsg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4GetMsg.VrfName)
}

// optional uint32 Prefix = 3;
void SLRoutev4GetMsg::clear_prefix() {
  prefix_ = 0u;
}
 ::google::protobuf::uint32 SLRoutev4GetMsg::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.Prefix)
  return prefix_;
}
 void SLRoutev4GetMsg::set_prefix(::google::protobuf::uint32 value) {
  
  prefix_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.Prefix)
}

// optional uint32 PrefixLen = 4;
void SLRoutev4GetMsg::clear_prefixlen() {
  prefixlen_ = 0u;
}
 ::google::protobuf::uint32 SLRoutev4GetMsg::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.PrefixLen)
  return prefixlen_;
}
 void SLRoutev4GetMsg::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.PrefixLen)
}

// optional uint32 EntriesCount = 5;
void SLRoutev4GetMsg::clear_entriescount() {
  entriescount_ = 0u;
}
 ::google::protobuf::uint32 SLRoutev4GetMsg::entriescount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.EntriesCount)
  return entriescount_;
}
 void SLRoutev4GetMsg::set_entriescount(::google::protobuf::uint32 value) {
  
  entriescount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.EntriesCount)
}

// optional bool GetNext = 6;
void SLRoutev4GetMsg::clear_getnext() {
  getnext_ = false;
}
 bool SLRoutev4GetMsg::getnext() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsg.GetNext)
  return getnext_;
}
 void SLRoutev4GetMsg::set_getnext(bool value) {
  
  getnext_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsg.GetNext)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4GetMsgRsp::kCorrelatorFieldNumber;
const int SLRoutev4GetMsgRsp::kEofFieldNumber;
const int SLRoutev4GetMsgRsp::kVrfNameFieldNumber;
const int SLRoutev4GetMsgRsp::kErrStatusFieldNumber;
const int SLRoutev4GetMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4GetMsgRsp::SLRoutev4GetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4GetMsgRsp)
}

void SLRoutev4GetMsgRsp::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(&::service_layer::SLErrorStatus::default_instance());
}

SLRoutev4GetMsgRsp::SLRoutev4GetMsgRsp(const SLRoutev4GetMsgRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4GetMsgRsp)
}

void SLRoutev4GetMsgRsp::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  correlator_ = GOOGLE_ULONGLONG(0);
  eof_ = false;
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errstatus_ = NULL;
}

SLRoutev4GetMsgRsp::~SLRoutev4GetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4GetMsgRsp)
  SharedDtor();
}

void SLRoutev4GetMsgRsp::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete errstatus_;
  }
}

void SLRoutev4GetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4GetMsgRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SLRoutev4GetMsgRsp_descriptor_;
}

const SLRoutev4GetMsgRsp& SLRoutev4GetMsgRsp::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_sl_5froute_5fipv4_2eproto();
  return *default_instance_;
}

SLRoutev4GetMsgRsp* SLRoutev4GetMsgRsp::default_instance_ = NULL;

SLRoutev4GetMsgRsp* SLRoutev4GetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRoutev4GetMsgRsp* n = new SLRoutev4GetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4GetMsgRsp::Clear() {
  correlator_ = GOOGLE_ULONGLONG(0);
  eof_ = false;
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
  entries_.Clear();
}

bool SLRoutev4GetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4GetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 Correlator = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Eof;
        break;
      }

      // optional bool Eof = 2;
      case 2: {
        if (tag == 16) {
         parse_Eof:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_VrfName;
        break;
      }

      // optional string VrfName = 3;
      case 3: {
        if (tag == 26) {
         parse_VrfName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev4GetMsgRsp.VrfName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ErrStatus;
        break;
      }

      // optional .service_layer.SLErrorStatus ErrStatus = 4;
      case 4: {
        if (tag == 34) {
         parse_ErrStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Entries;
        break;
      }

      // repeated .service_layer.SLRoutev4 Entries = 5;
      case 5: {
        if (tag == 42) {
         parse_Entries:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Entries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_Entries;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4GetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4GetMsgRsp)
  return false;
#undef DO_
}

void SLRoutev4GetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4GetMsgRsp)
  // optional uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // optional bool Eof = 2;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->eof(), output);
  }

  // optional string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4GetMsgRsp.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vrfname(), output);
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 4;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->errstatus_, output);
  }

  // repeated .service_layer.SLRoutev4 Entries = 5;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->entries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4GetMsgRsp)
}

::google::protobuf::uint8* SLRoutev4GetMsgRsp::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4GetMsgRsp)
  // optional uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // optional bool Eof = 2;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->eof(), target);
  }

  // optional string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4GetMsgRsp.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vrfname(), target);
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 4;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->errstatus_, target);
  }

  // repeated .service_layer.SLRoutev4 Entries = 5;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->entries(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4GetMsgRsp)
  return target;
}

int SLRoutev4GetMsgRsp::ByteSize() const {
  int total_size = 0;

  // optional uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // optional bool Eof = 2;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  // optional string VrfName = 3;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // optional .service_layer.SLErrorStatus ErrStatus = 4;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // repeated .service_layer.SLRoutev4 Entries = 5;
  total_size += 1 * this->entries_size();
  for (int i = 0; i < this->entries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->entries(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4GetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SLRoutev4GetMsgRsp* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4GetMsgRsp>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SLRoutev4GetMsgRsp::MergeFrom(const SLRoutev4GetMsgRsp& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  entries_.MergeFrom(from.entries_);
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
}

void SLRoutev4GetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4GetMsgRsp::CopyFrom(const SLRoutev4GetMsgRsp& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4GetMsgRsp::IsInitialized() const {

  return true;
}

void SLRoutev4GetMsgRsp::Swap(SLRoutev4GetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4GetMsgRsp::InternalSwap(SLRoutev4GetMsgRsp* other) {
  std::swap(correlator_, other->correlator_);
  std::swap(eof_, other->eof_);
  vrfname_.Swap(&other->vrfname_);
  std::swap(errstatus_, other->errstatus_);
  entries_.UnsafeArenaSwap(&other->entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4GetMsgRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SLRoutev4GetMsgRsp_descriptor_;
  metadata.reflection = SLRoutev4GetMsgRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev4GetMsgRsp

// optional uint64 Correlator = 1;
void SLRoutev4GetMsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 SLRoutev4GetMsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsgRsp.Correlator)
  return correlator_;
}
 void SLRoutev4GetMsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsgRsp.Correlator)
}

// optional bool Eof = 2;
void SLRoutev4GetMsgRsp::clear_eof() {
  eof_ = false;
}
 bool SLRoutev4GetMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsgRsp.Eof)
  return eof_;
}
 void SLRoutev4GetMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsgRsp.Eof)
}

// optional string VrfName = 3;
void SLRoutev4GetMsgRsp::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SLRoutev4GetMsgRsp::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsgRsp.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLRoutev4GetMsgRsp::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev4GetMsgRsp.VrfName)
}
 void SLRoutev4GetMsgRsp::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev4GetMsgRsp.VrfName)
}
 void SLRoutev4GetMsgRsp::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev4GetMsgRsp.VrfName)
}
 ::std::string* SLRoutev4GetMsgRsp::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4GetMsgRsp.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SLRoutev4GetMsgRsp::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SLRoutev4GetMsgRsp::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4GetMsgRsp.VrfName)
}

// optional .service_layer.SLErrorStatus ErrStatus = 4;
bool SLRoutev4GetMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
void SLRoutev4GetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLRoutev4GetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
::service_layer::SLErrorStatus* SLRoutev4GetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4GetMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLRoutev4GetMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLRoutev4GetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4GetMsgRsp.ErrStatus)
}

// repeated .service_layer.SLRoutev4 Entries = 5;
int SLRoutev4GetMsgRsp::entries_size() const {
  return entries_.size();
}
void SLRoutev4GetMsgRsp::clear_entries() {
  entries_.Clear();
}
const ::service_layer::SLRoutev4& SLRoutev4GetMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev4GetMsgRsp.Entries)
  return entries_.Get(index);
}
::service_layer::SLRoutev4* SLRoutev4GetMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev4GetMsgRsp.Entries)
  return entries_.Mutable(index);
}
::service_layer::SLRoutev4* SLRoutev4GetMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev4GetMsgRsp.Entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >*
SLRoutev4GetMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev4GetMsgRsp.Entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev4 >&
SLRoutev4GetMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev4GetMsgRsp.Entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
