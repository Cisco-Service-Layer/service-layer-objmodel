// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_route_ipv4.proto

#include "sl_route_ipv4.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace service_layer {
class SLRoutev4DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev4>
      _instance;
} _SLRoutev4_default_instance_;
class SLRoutev4MsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev4Msg>
      _instance;
} _SLRoutev4Msg_default_instance_;
class SLRoutev4ResDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev4Res>
      _instance;
} _SLRoutev4Res_default_instance_;
class SLRoutev4MsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev4MsgRsp>
      _instance;
} _SLRoutev4MsgRsp_default_instance_;
class SLRoutev4GetMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev4GetMsg>
      _instance;
} _SLRoutev4GetMsg_default_instance_;
class SLRoutev4GetMsgRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev4GetMsgRsp>
      _instance;
} _SLRoutev4GetMsgRsp_default_instance_;
class SLRoutev4NotifRouteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev4NotifRoute>
      _instance;
} _SLRoutev4NotifRoute_default_instance_;
class SLRoutev4NotifDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev4Notif>
      _instance;
  const ::service_layer::SLErrorStatus* errstatus_;
  const ::service_layer::SLRouteNotifStatus* notifstatus_;
  const ::service_layer::SLRoutev4NotifRoute* route_;
  const ::service_layer::SLRouteNotifMarker* marker_;
  const ::service_layer::SLVrfNotif* vrf_;
} _SLRoutev4Notif_default_instance_;
}  // namespace service_layer
namespace protobuf_sl_5froute_5fipv4_2eproto {
void InitDefaultsSLRoutev4Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteCommon();
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRoutePath();
  {
    void* ptr = &::service_layer::_SLRoutev4_default_instance_;
    new (ptr) ::service_layer::SLRoutev4();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRoutev4::InitAsDefaultInstance();
}

void InitDefaultsSLRoutev4() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRoutev4Impl);
}

void InitDefaultsSLRoutev4MsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4();
  {
    void* ptr = &::service_layer::_SLRoutev4Msg_default_instance_;
    new (ptr) ::service_layer::SLRoutev4Msg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRoutev4Msg::InitAsDefaultInstance();
}

void InitDefaultsSLRoutev4Msg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRoutev4MsgImpl);
}

void InitDefaultsSLRoutev4ResImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  {
    void* ptr = &::service_layer::_SLRoutev4Res_default_instance_;
    new (ptr) ::service_layer::SLRoutev4Res();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRoutev4Res::InitAsDefaultInstance();
}

void InitDefaultsSLRoutev4Res() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRoutev4ResImpl);
}

void InitDefaultsSLRoutev4MsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4Res();
  {
    void* ptr = &::service_layer::_SLRoutev4MsgRsp_default_instance_;
    new (ptr) ::service_layer::SLRoutev4MsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRoutev4MsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLRoutev4MsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRoutev4MsgRspImpl);
}

void InitDefaultsSLRoutev4GetMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::service_layer::_SLRoutev4GetMsg_default_instance_;
    new (ptr) ::service_layer::SLRoutev4GetMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRoutev4GetMsg::InitAsDefaultInstance();
}

void InitDefaultsSLRoutev4GetMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRoutev4GetMsgImpl);
}

void InitDefaultsSLRoutev4GetMsgRspImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4();
  {
    void* ptr = &::service_layer::_SLRoutev4GetMsgRsp_default_instance_;
    new (ptr) ::service_layer::SLRoutev4GetMsgRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRoutev4GetMsgRsp::InitAsDefaultInstance();
}

void InitDefaultsSLRoutev4GetMsgRsp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRoutev4GetMsgRspImpl);
}

void InitDefaultsSLRoutev4NotifRouteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4();
  {
    void* ptr = &::service_layer::_SLRoutev4NotifRoute_default_instance_;
    new (ptr) ::service_layer::SLRoutev4NotifRoute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRoutev4NotifRoute::InitAsDefaultInstance();
}

void InitDefaultsSLRoutev4NotifRoute() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRoutev4NotifRouteImpl);
}

void InitDefaultsSLRoutev4NotifImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaultsSLErrorStatus();
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteNotifStatus();
  protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4NotifRoute();
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLRouteNotifMarker();
  protobuf_sl_5froute_5fcommon_2eproto::InitDefaultsSLVrfNotif();
  {
    void* ptr = &::service_layer::_SLRoutev4Notif_default_instance_;
    new (ptr) ::service_layer::SLRoutev4Notif();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_layer::SLRoutev4Notif::InitAsDefaultInstance();
}

void InitDefaultsSLRoutev4Notif() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSLRoutev4NotifImpl);
}

::google::protobuf::Metadata file_level_metadata[8];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4, prefixlen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4, routecommon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4, pathlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Msg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Msg, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Msg, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Msg, routes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Res, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Res, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Res, prefixlen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4MsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4MsgRsp, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4MsgRsp, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4MsgRsp, statussummary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4MsgRsp, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsg, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsg, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsg, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsg, prefixlen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsg, entriescount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsg, getnext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsgRsp, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsgRsp, eof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsgRsp, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4GetMsgRsp, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4NotifRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4NotifRoute, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4NotifRoute, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Notif, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Notif, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Notif, eventtype_),
  offsetof(::service_layer::SLRoutev4NotifDefaultTypeInternal, errstatus_),
  offsetof(::service_layer::SLRoutev4NotifDefaultTypeInternal, notifstatus_),
  offsetof(::service_layer::SLRoutev4NotifDefaultTypeInternal, route_),
  offsetof(::service_layer::SLRoutev4NotifDefaultTypeInternal, marker_),
  offsetof(::service_layer::SLRoutev4NotifDefaultTypeInternal, vrf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::service_layer::SLRoutev4Notif, Event_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::service_layer::SLRoutev4)},
  { 9, -1, sizeof(::service_layer::SLRoutev4Msg)},
  { 18, -1, sizeof(::service_layer::SLRoutev4Res)},
  { 26, -1, sizeof(::service_layer::SLRoutev4MsgRsp)},
  { 35, -1, sizeof(::service_layer::SLRoutev4GetMsg)},
  { 46, -1, sizeof(::service_layer::SLRoutev4GetMsgRsp)},
  { 56, -1, sizeof(::service_layer::SLRoutev4NotifRoute)},
  { 63, -1, sizeof(::service_layer::SLRoutev4Notif)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRoutev4_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRoutev4Msg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRoutev4Res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRoutev4MsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRoutev4GetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRoutev4GetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRoutev4NotifRoute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::service_layer::_SLRoutev4Notif_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sl_route_ipv4.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023sl_route_ipv4.proto\022\rservice_layer\032\025sl"
      "_common_types.proto\032\025sl_route_common.pro"
      "to\"\217\001\n\tSLRoutev4\022\016\n\006Prefix\030\001 \001(\r\022\021\n\tPref"
      "ixLen\030\002 \001(\r\0221\n\013RouteCommon\030\003 \001(\0132\034.servi"
      "ce_layer.SLRouteCommon\022,\n\010PathList\030\004 \003(\013"
      "2\032.service_layer.SLRoutePath\"\206\001\n\014SLRoute"
      "v4Msg\022\'\n\004Oper\030\001 \001(\0162\031.service_layer.SLOb"
      "jectOp\022\022\n\nCorrelator\030\002 \001(\004\022\017\n\007VrfName\030\003 "
      "\001(\t\022(\n\006Routes\030\004 \003(\0132\030.service_layer.SLRo"
      "utev4\"b\n\014SLRoutev4Res\022/\n\tErrStatus\030\001 \001(\013"
      "2\034.service_layer.SLErrorStatus\022\016\n\006Prefix"
      "\030\002 \001(\r\022\021\n\tPrefixLen\030\003 \001(\r\"\231\001\n\017SLRoutev4M"
      "sgRsp\022\022\n\nCorrelator\030\001 \001(\004\022\017\n\007VrfName\030\002 \001"
      "(\t\0223\n\rStatusSummary\030\003 \001(\0132\034.service_laye"
      "r.SLErrorStatus\022,\n\007Results\030\004 \003(\0132\033.servi"
      "ce_layer.SLRoutev4Res\"\200\001\n\017SLRoutev4GetMs"
      "g\022\022\n\nCorrelator\030\001 \001(\004\022\017\n\007VrfName\030\002 \001(\t\022\016"
      "\n\006Prefix\030\003 \001(\r\022\021\n\tPrefixLen\030\004 \001(\r\022\024\n\014Ent"
      "riesCount\030\005 \001(\r\022\017\n\007GetNext\030\006 \001(\010\"\242\001\n\022SLR"
      "outev4GetMsgRsp\022\022\n\nCorrelator\030\001 \001(\004\022\013\n\003E"
      "of\030\002 \001(\010\022\017\n\007VrfName\030\003 \001(\t\022/\n\tErrStatus\030\004"
      " \001(\0132\034.service_layer.SLErrorStatus\022)\n\007En"
      "tries\030\005 \003(\0132\030.service_layer.SLRoutev4\"Q\n"
      "\023SLRoutev4NotifRoute\022\017\n\007VrfName\030\001 \001(\t\022)\n"
      "\007Entries\030\002 \003(\0132\030.service_layer.SLRoutev4"
      "\"\311\002\n\016SLRoutev4Notif\022-\n\tEventType\030\001 \001(\0162\032"
      ".service_layer.SLNotifType\0221\n\tErrStatus\030"
      "\002 \001(\0132\034.service_layer.SLErrorStatusH\000\0228\n"
      "\013NotifStatus\030\003 \001(\0132!.service_layer.SLRou"
      "teNotifStatusH\000\0223\n\005Route\030\004 \001(\0132\".service"
      "_layer.SLRoutev4NotifRouteH\000\0223\n\006Marker\030\005"
      " \001(\0132!.service_layer.SLRouteNotifMarkerH"
      "\000\022(\n\003Vrf\030\006 \001(\0132\031.service_layer.SLVrfNoti"
      "fH\000B\007\n\005Event2\230\007\n\rSLRoutev4Oper\022b\n\023SLRout"
      "ev4GlobalsGet\022#.service_layer.SLRouteGlo"
      "balsGetMsg\032&.service_layer.SLRouteGlobal"
      "sGetMsgRsp\022n\n\027SLRoutev4GlobalStatsGet\022\'."
      "service_layer.SLRouteGlobalStatsGetMsg\032*"
      ".service_layer.SLRouteGlobalStatsGetMsgR"
      "sp\022N\n\021SLRoutev4VrfRegOp\022\032.service_layer."
      "SLVrfRegMsg\032\035.service_layer.SLVrfRegMsgR"
      "sp\022U\n\022SLRoutev4VrfRegGet\022\035.service_layer"
      ".SLVrfRegGetMsg\032 .service_layer.SLVrfReg"
      "GetMsgRsp\022Y\n\024SLRoutev4VrfGetStats\022\035.serv"
      "ice_layer.SLVrfRegGetMsg\032\".service_layer"
      ".SLVRFGetStatsMsgRsp\022J\n\013SLRoutev4Op\022\033.se"
      "rvice_layer.SLRoutev4Msg\032\036.service_layer"
      ".SLRoutev4MsgRsp\022Q\n\014SLRoutev4Get\022\036.servi"
      "ce_layer.SLRoutev4GetMsg\032!.service_layer"
      ".SLRoutev4GetMsgRsp\022T\n\021SLRoutev4OpStream"
      "\022\033.service_layer.SLRoutev4Msg\032\036.service_"
      "layer.SLRoutev4MsgRsp(\0010\001\022[\n\022SLRoutev4Ge"
      "tStream\022\036.service_layer.SLRoutev4GetMsg\032"
      "!.service_layer.SLRoutev4GetMsgRsp(\0010\001\022_"
      "\n\027SLRoutev4GetNotifStream\022!.service_laye"
      "r.SLRouteGetNotifMsg\032\035.service_layer.SLR"
      "outev4Notif(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2263);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_route_ipv4.proto", &protobuf_RegisterTypes);
  ::protobuf_sl_5fcommon_5ftypes_2eproto::AddDescriptors();
  ::protobuf_sl_5froute_5fcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_sl_5froute_5fipv4_2eproto
namespace service_layer {

// ===================================================================

void SLRoutev4::InitAsDefaultInstance() {
  ::service_layer::_SLRoutev4_default_instance_._instance.get_mutable()->routecommon_ = const_cast< ::service_layer::SLRouteCommon*>(
      ::service_layer::SLRouteCommon::internal_default_instance());
}
void SLRoutev4::clear_routecommon() {
  if (GetArenaNoVirtual() == NULL && routecommon_ != NULL) {
    delete routecommon_;
  }
  routecommon_ = NULL;
}
void SLRoutev4::clear_pathlist() {
  pathlist_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4::kPrefixFieldNumber;
const int SLRoutev4::kPrefixLenFieldNumber;
const int SLRoutev4::kRouteCommonFieldNumber;
const int SLRoutev4::kPathListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4::SLRoutev4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4)
}
SLRoutev4::SLRoutev4(const SLRoutev4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pathlist_(from.pathlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_routecommon()) {
    routecommon_ = new ::service_layer::SLRouteCommon(*from.routecommon_);
  } else {
    routecommon_ = NULL;
  }
  ::memcpy(&prefix_, &from.prefix_,
    static_cast<size_t>(reinterpret_cast<char*>(&prefixlen_) -
    reinterpret_cast<char*>(&prefix_)) + sizeof(prefixlen_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4)
}

void SLRoutev4::SharedCtor() {
  ::memset(&routecommon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prefixlen_) -
      reinterpret_cast<char*>(&routecommon_)) + sizeof(prefixlen_));
  _cached_size_ = 0;
}

SLRoutev4::~SLRoutev4() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4)
  SharedDtor();
}

void SLRoutev4::SharedDtor() {
  if (this != internal_default_instance()) delete routecommon_;
}

void SLRoutev4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4::descriptor() {
  ::protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRoutev4& SLRoutev4::default_instance() {
  ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4();
  return *internal_default_instance();
}

SLRoutev4* SLRoutev4::New(::google::protobuf::Arena* arena) const {
  SLRoutev4* n = new SLRoutev4;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pathlist_.Clear();
  if (GetArenaNoVirtual() == NULL && routecommon_ != NULL) {
    delete routecommon_;
  }
  routecommon_ = NULL;
  ::memset(&prefix_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prefixlen_) -
      reinterpret_cast<char*>(&prefix_)) + sizeof(prefixlen_));
  _internal_metadata_.Clear();
}

bool SLRoutev4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 Prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefix_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PrefixLen = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefixlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLRouteCommon RouteCommon = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_routecommon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLRoutePath PathList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pathlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4)
  return false;
#undef DO_
}

void SLRoutev4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Prefix = 1;
  if (this->prefix() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->prefix(), output);
  }

  // uint32 PrefixLen = 2;
  if (this->prefixlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->prefixlen(), output);
  }

  // .service_layer.SLRouteCommon RouteCommon = 3;
  if (this->has_routecommon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->routecommon_, output);
  }

  // repeated .service_layer.SLRoutePath PathList = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pathlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pathlist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4)
}

::google::protobuf::uint8* SLRoutev4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Prefix = 1;
  if (this->prefix() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->prefix(), target);
  }

  // uint32 PrefixLen = 2;
  if (this->prefixlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->prefixlen(), target);
  }

  // .service_layer.SLRouteCommon RouteCommon = 3;
  if (this->has_routecommon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->routecommon_, deterministic, target);
  }

  // repeated .service_layer.SLRoutePath PathList = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pathlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->pathlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4)
  return target;
}

size_t SLRoutev4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev4)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLRoutePath PathList = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->pathlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pathlist(static_cast<int>(i)));
    }
  }

  // .service_layer.SLRouteCommon RouteCommon = 3;
  if (this->has_routecommon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->routecommon_);
  }

  // uint32 Prefix = 1;
  if (this->prefix() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefix());
  }

  // uint32 PrefixLen = 2;
  if (this->prefixlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefixlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev4)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev4)
    MergeFrom(*source);
  }
}

void SLRoutev4::MergeFrom(const SLRoutev4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pathlist_.MergeFrom(from.pathlist_);
  if (from.has_routecommon()) {
    mutable_routecommon()->::service_layer::SLRouteCommon::MergeFrom(from.routecommon());
  }
  if (from.prefix() != 0) {
    set_prefix(from.prefix());
  }
  if (from.prefixlen() != 0) {
    set_prefixlen(from.prefixlen());
  }
}

void SLRoutev4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4::CopyFrom(const SLRoutev4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4::IsInitialized() const {
  return true;
}

void SLRoutev4::Swap(SLRoutev4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4::InternalSwap(SLRoutev4* other) {
  using std::swap;
  pathlist_.InternalSwap(&other->pathlist_);
  swap(routecommon_, other->routecommon_);
  swap(prefix_, other->prefix_);
  swap(prefixlen_, other->prefixlen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4::GetMetadata() const {
  protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRoutev4Msg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4Msg::kOperFieldNumber;
const int SLRoutev4Msg::kCorrelatorFieldNumber;
const int SLRoutev4Msg::kVrfNameFieldNumber;
const int SLRoutev4Msg::kRoutesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4Msg::SLRoutev4Msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4Msg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4Msg)
}
SLRoutev4Msg::SLRoutev4Msg(const SLRoutev4Msg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      routes_(from.routes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  ::memcpy(&correlator_, &from.correlator_,
    static_cast<size_t>(reinterpret_cast<char*>(&oper_) -
    reinterpret_cast<char*>(&correlator_)) + sizeof(oper_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4Msg)
}

void SLRoutev4Msg::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(oper_));
  _cached_size_ = 0;
}

SLRoutev4Msg::~SLRoutev4Msg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4Msg)
  SharedDtor();
}

void SLRoutev4Msg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLRoutev4Msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4Msg::descriptor() {
  ::protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRoutev4Msg& SLRoutev4Msg::default_instance() {
  ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4Msg();
  return *internal_default_instance();
}

SLRoutev4Msg* SLRoutev4Msg::New(::google::protobuf::Arena* arena) const {
  SLRoutev4Msg* n = new SLRoutev4Msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4Msg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev4Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  routes_.Clear();
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(oper_));
  _internal_metadata_.Clear();
}

bool SLRoutev4Msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4Msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLObjectOp Oper = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLObjectOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Correlator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev4Msg.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLRoutev4 Routes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_routes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4Msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4Msg)
  return false;
#undef DO_
}

void SLRoutev4Msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->correlator(), output);
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4Msg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vrfname(), output);
  }

  // repeated .service_layer.SLRoutev4 Routes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->routes(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4Msg)
}

::google::protobuf::uint8* SLRoutev4Msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->correlator(), target);
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4Msg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vrfname(), target);
  }

  // repeated .service_layer.SLRoutev4 Routes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->routes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->routes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4Msg)
  return target;
}

size_t SLRoutev4Msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev4Msg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLRoutev4 Routes = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->routes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->routes(static_cast<int>(i)));
    }
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4Msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev4Msg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev4Msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4Msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev4Msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev4Msg)
    MergeFrom(*source);
  }
}

void SLRoutev4Msg::MergeFrom(const SLRoutev4Msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev4Msg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  routes_.MergeFrom(from.routes_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLRoutev4Msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev4Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4Msg::CopyFrom(const SLRoutev4Msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev4Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4Msg::IsInitialized() const {
  return true;
}

void SLRoutev4Msg::Swap(SLRoutev4Msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4Msg::InternalSwap(SLRoutev4Msg* other) {
  using std::swap;
  routes_.InternalSwap(&other->routes_);
  vrfname_.Swap(&other->vrfname_);
  swap(correlator_, other->correlator_);
  swap(oper_, other->oper_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4Msg::GetMetadata() const {
  protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRoutev4Res::InitAsDefaultInstance() {
  ::service_layer::_SLRoutev4Res_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLRoutev4Res::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4Res::kErrStatusFieldNumber;
const int SLRoutev4Res::kPrefixFieldNumber;
const int SLRoutev4Res::kPrefixLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4Res::SLRoutev4Res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4Res();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4Res)
}
SLRoutev4Res::SLRoutev4Res(const SLRoutev4Res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&prefix_, &from.prefix_,
    static_cast<size_t>(reinterpret_cast<char*>(&prefixlen_) -
    reinterpret_cast<char*>(&prefix_)) + sizeof(prefixlen_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4Res)
}

void SLRoutev4Res::SharedCtor() {
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prefixlen_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(prefixlen_));
  _cached_size_ = 0;
}

SLRoutev4Res::~SLRoutev4Res() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4Res)
  SharedDtor();
}

void SLRoutev4Res::SharedDtor() {
  if (this != internal_default_instance()) delete errstatus_;
}

void SLRoutev4Res::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4Res::descriptor() {
  ::protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRoutev4Res& SLRoutev4Res::default_instance() {
  ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4Res();
  return *internal_default_instance();
}

SLRoutev4Res* SLRoutev4Res::New(::google::protobuf::Arena* arena) const {
  SLRoutev4Res* n = new SLRoutev4Res;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4Res::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev4Res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&prefix_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prefixlen_) -
      reinterpret_cast<char*>(&prefix_)) + sizeof(prefixlen_));
  _internal_metadata_.Clear();
}

bool SLRoutev4Res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4Res)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefix_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PrefixLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefixlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4Res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4Res)
  return false;
#undef DO_
}

void SLRoutev4Res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4Res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // uint32 Prefix = 2;
  if (this->prefix() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->prefix(), output);
  }

  // uint32 PrefixLen = 3;
  if (this->prefixlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->prefixlen(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4Res)
}

::google::protobuf::uint8* SLRoutev4Res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4Res)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->errstatus_, deterministic, target);
  }

  // uint32 Prefix = 2;
  if (this->prefix() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->prefix(), target);
  }

  // uint32 PrefixLen = 3;
  if (this->prefixlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->prefixlen(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4Res)
  return target;
}

size_t SLRoutev4Res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev4Res)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint32 Prefix = 2;
  if (this->prefix() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefix());
  }

  // uint32 PrefixLen = 3;
  if (this->prefixlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefixlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4Res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev4Res)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev4Res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4Res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev4Res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev4Res)
    MergeFrom(*source);
  }
}

void SLRoutev4Res::MergeFrom(const SLRoutev4Res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev4Res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.prefix() != 0) {
    set_prefix(from.prefix());
  }
  if (from.prefixlen() != 0) {
    set_prefixlen(from.prefixlen());
  }
}

void SLRoutev4Res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev4Res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4Res::CopyFrom(const SLRoutev4Res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev4Res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4Res::IsInitialized() const {
  return true;
}

void SLRoutev4Res::Swap(SLRoutev4Res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4Res::InternalSwap(SLRoutev4Res* other) {
  using std::swap;
  swap(errstatus_, other->errstatus_);
  swap(prefix_, other->prefix_);
  swap(prefixlen_, other->prefixlen_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4Res::GetMetadata() const {
  protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRoutev4MsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLRoutev4MsgRsp_default_instance_._instance.get_mutable()->statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLRoutev4MsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4MsgRsp::kCorrelatorFieldNumber;
const int SLRoutev4MsgRsp::kVrfNameFieldNumber;
const int SLRoutev4MsgRsp::kStatusSummaryFieldNumber;
const int SLRoutev4MsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4MsgRsp::SLRoutev4MsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4MsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4MsgRsp)
}
SLRoutev4MsgRsp::SLRoutev4MsgRsp(const SLRoutev4MsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_statussummary()) {
    statussummary_ = new ::service_layer::SLErrorStatus(*from.statussummary_);
  } else {
    statussummary_ = NULL;
  }
  correlator_ = from.correlator_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4MsgRsp)
}

void SLRoutev4MsgRsp::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&statussummary_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&correlator_) -
      reinterpret_cast<char*>(&statussummary_)) + sizeof(correlator_));
  _cached_size_ = 0;
}

SLRoutev4MsgRsp::~SLRoutev4MsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4MsgRsp)
  SharedDtor();
}

void SLRoutev4MsgRsp::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete statussummary_;
}

void SLRoutev4MsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4MsgRsp::descriptor() {
  ::protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRoutev4MsgRsp& SLRoutev4MsgRsp::default_instance() {
  ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4MsgRsp();
  return *internal_default_instance();
}

SLRoutev4MsgRsp* SLRoutev4MsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRoutev4MsgRsp* n = new SLRoutev4MsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4MsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev4MsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  results_.Clear();
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
  correlator_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool SLRoutev4MsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4MsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev4MsgRsp.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus StatusSummary = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLRoutev4Res Results = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4MsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4MsgRsp)
  return false;
#undef DO_
}

void SLRoutev4MsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4MsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4MsgRsp.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vrfname(), output);
  }

  // .service_layer.SLErrorStatus StatusSummary = 3;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->statussummary_, output);
  }

  // repeated .service_layer.SLRoutev4Res Results = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->results(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4MsgRsp)
}

::google::protobuf::uint8* SLRoutev4MsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4MsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4MsgRsp.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vrfname(), target);
  }

  // .service_layer.SLErrorStatus StatusSummary = 3;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->statussummary_, deterministic, target);
  }

  // repeated .service_layer.SLRoutev4Res Results = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->results_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->results(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4MsgRsp)
  return target;
}

size_t SLRoutev4MsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev4MsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLRoutev4Res Results = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->results_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->results(static_cast<int>(i)));
    }
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // .service_layer.SLErrorStatus StatusSummary = 3;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->statussummary_);
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4MsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev4MsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev4MsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4MsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev4MsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev4MsgRsp)
    MergeFrom(*source);
  }
}

void SLRoutev4MsgRsp::MergeFrom(const SLRoutev4MsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev4MsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
}

void SLRoutev4MsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev4MsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4MsgRsp::CopyFrom(const SLRoutev4MsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev4MsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4MsgRsp::IsInitialized() const {
  return true;
}

void SLRoutev4MsgRsp::Swap(SLRoutev4MsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4MsgRsp::InternalSwap(SLRoutev4MsgRsp* other) {
  using std::swap;
  results_.InternalSwap(&other->results_);
  vrfname_.Swap(&other->vrfname_);
  swap(statussummary_, other->statussummary_);
  swap(correlator_, other->correlator_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4MsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRoutev4GetMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4GetMsg::kCorrelatorFieldNumber;
const int SLRoutev4GetMsg::kVrfNameFieldNumber;
const int SLRoutev4GetMsg::kPrefixFieldNumber;
const int SLRoutev4GetMsg::kPrefixLenFieldNumber;
const int SLRoutev4GetMsg::kEntriesCountFieldNumber;
const int SLRoutev4GetMsg::kGetNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4GetMsg::SLRoutev4GetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4GetMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4GetMsg)
}
SLRoutev4GetMsg::SLRoutev4GetMsg(const SLRoutev4GetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  ::memcpy(&correlator_, &from.correlator_,
    static_cast<size_t>(reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&correlator_)) + sizeof(getnext_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4GetMsg)
}

void SLRoutev4GetMsg::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(getnext_));
  _cached_size_ = 0;
}

SLRoutev4GetMsg::~SLRoutev4GetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4GetMsg)
  SharedDtor();
}

void SLRoutev4GetMsg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLRoutev4GetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4GetMsg::descriptor() {
  ::protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRoutev4GetMsg& SLRoutev4GetMsg::default_instance() {
  ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4GetMsg();
  return *internal_default_instance();
}

SLRoutev4GetMsg* SLRoutev4GetMsg::New(::google::protobuf::Arena* arena) const {
  SLRoutev4GetMsg* n = new SLRoutev4GetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4GetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev4GetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getnext_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(getnext_));
  _internal_metadata_.Clear();
}

bool SLRoutev4GetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4GetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev4GetMsg.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 Prefix = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefix_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PrefixLen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefixlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EntriesCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entriescount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool GetNext = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getnext_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4GetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4GetMsg)
  return false;
#undef DO_
}

void SLRoutev4GetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4GetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4GetMsg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vrfname(), output);
  }

  // uint32 Prefix = 3;
  if (this->prefix() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->prefix(), output);
  }

  // uint32 PrefixLen = 4;
  if (this->prefixlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->prefixlen(), output);
  }

  // uint32 EntriesCount = 5;
  if (this->entriescount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->entriescount(), output);
  }

  // bool GetNext = 6;
  if (this->getnext() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->getnext(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4GetMsg)
}

::google::protobuf::uint8* SLRoutev4GetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4GetMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4GetMsg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vrfname(), target);
  }

  // uint32 Prefix = 3;
  if (this->prefix() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->prefix(), target);
  }

  // uint32 PrefixLen = 4;
  if (this->prefixlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->prefixlen(), target);
  }

  // uint32 EntriesCount = 5;
  if (this->entriescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->entriescount(), target);
  }

  // bool GetNext = 6;
  if (this->getnext() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->getnext(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4GetMsg)
  return target;
}

size_t SLRoutev4GetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev4GetMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // uint32 Prefix = 3;
  if (this->prefix() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefix());
  }

  // uint32 PrefixLen = 4;
  if (this->prefixlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefixlen());
  }

  // uint32 EntriesCount = 5;
  if (this->entriescount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entriescount());
  }

  // bool GetNext = 6;
  if (this->getnext() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4GetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev4GetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev4GetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4GetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev4GetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev4GetMsg)
    MergeFrom(*source);
  }
}

void SLRoutev4GetMsg::MergeFrom(const SLRoutev4GetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev4GetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.prefix() != 0) {
    set_prefix(from.prefix());
  }
  if (from.prefixlen() != 0) {
    set_prefixlen(from.prefixlen());
  }
  if (from.entriescount() != 0) {
    set_entriescount(from.entriescount());
  }
  if (from.getnext() != 0) {
    set_getnext(from.getnext());
  }
}

void SLRoutev4GetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev4GetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4GetMsg::CopyFrom(const SLRoutev4GetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev4GetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4GetMsg::IsInitialized() const {
  return true;
}

void SLRoutev4GetMsg::Swap(SLRoutev4GetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4GetMsg::InternalSwap(SLRoutev4GetMsg* other) {
  using std::swap;
  vrfname_.Swap(&other->vrfname_);
  swap(correlator_, other->correlator_);
  swap(prefix_, other->prefix_);
  swap(prefixlen_, other->prefixlen_);
  swap(entriescount_, other->entriescount_);
  swap(getnext_, other->getnext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4GetMsg::GetMetadata() const {
  protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRoutev4GetMsgRsp::InitAsDefaultInstance() {
  ::service_layer::_SLRoutev4GetMsgRsp_default_instance_._instance.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
}
void SLRoutev4GetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4GetMsgRsp::kCorrelatorFieldNumber;
const int SLRoutev4GetMsgRsp::kEofFieldNumber;
const int SLRoutev4GetMsgRsp::kVrfNameFieldNumber;
const int SLRoutev4GetMsgRsp::kErrStatusFieldNumber;
const int SLRoutev4GetMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4GetMsgRsp::SLRoutev4GetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4GetMsgRsp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4GetMsgRsp)
}
SLRoutev4GetMsgRsp::SLRoutev4GetMsgRsp(const SLRoutev4GetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&correlator_, &from.correlator_,
    static_cast<size_t>(reinterpret_cast<char*>(&eof_) -
    reinterpret_cast<char*>(&correlator_)) + sizeof(eof_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4GetMsgRsp)
}

void SLRoutev4GetMsgRsp::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&errstatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&errstatus_)) + sizeof(eof_));
  _cached_size_ = 0;
}

SLRoutev4GetMsgRsp::~SLRoutev4GetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4GetMsgRsp)
  SharedDtor();
}

void SLRoutev4GetMsgRsp::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete errstatus_;
}

void SLRoutev4GetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4GetMsgRsp::descriptor() {
  ::protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRoutev4GetMsgRsp& SLRoutev4GetMsgRsp::default_instance() {
  ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4GetMsgRsp();
  return *internal_default_instance();
}

SLRoutev4GetMsgRsp* SLRoutev4GetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRoutev4GetMsgRsp* n = new SLRoutev4GetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4GetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev4GetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&correlator_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&eof_) -
      reinterpret_cast<char*>(&correlator_)) + sizeof(eof_));
  _internal_metadata_.Clear();
}

bool SLRoutev4GetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4GetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Eof = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev4GetMsgRsp.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLRoutev4 Entries = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4GetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4GetMsgRsp)
  return false;
#undef DO_
}

void SLRoutev4GetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4GetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // bool Eof = 2;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->eof(), output);
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4GetMsgRsp.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vrfname(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 4;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->errstatus_, output);
  }

  // repeated .service_layer.SLRoutev4 Entries = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4GetMsgRsp)
}

::google::protobuf::uint8* SLRoutev4GetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4GetMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // bool Eof = 2;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->eof(), target);
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4GetMsgRsp.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vrfname(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 4;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->errstatus_, deterministic, target);
  }

  // repeated .service_layer.SLRoutev4 Entries = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4GetMsgRsp)
  return target;
}

size_t SLRoutev4GetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev4GetMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLRoutev4 Entries = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // .service_layer.SLErrorStatus ErrStatus = 4;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->errstatus_);
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // bool Eof = 2;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4GetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev4GetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev4GetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4GetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev4GetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev4GetMsgRsp)
    MergeFrom(*source);
  }
}

void SLRoutev4GetMsgRsp::MergeFrom(const SLRoutev4GetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev4GetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
}

void SLRoutev4GetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev4GetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4GetMsgRsp::CopyFrom(const SLRoutev4GetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev4GetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4GetMsgRsp::IsInitialized() const {
  return true;
}

void SLRoutev4GetMsgRsp::Swap(SLRoutev4GetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4GetMsgRsp::InternalSwap(SLRoutev4GetMsgRsp* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  vrfname_.Swap(&other->vrfname_);
  swap(errstatus_, other->errstatus_);
  swap(correlator_, other->correlator_);
  swap(eof_, other->eof_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4GetMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRoutev4NotifRoute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4NotifRoute::kVrfNameFieldNumber;
const int SLRoutev4NotifRoute::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4NotifRoute::SLRoutev4NotifRoute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4NotifRoute();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4NotifRoute)
}
SLRoutev4NotifRoute::SLRoutev4NotifRoute(const SLRoutev4NotifRoute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4NotifRoute)
}

void SLRoutev4NotifRoute::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SLRoutev4NotifRoute::~SLRoutev4NotifRoute() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4NotifRoute)
  SharedDtor();
}

void SLRoutev4NotifRoute::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLRoutev4NotifRoute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4NotifRoute::descriptor() {
  ::protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRoutev4NotifRoute& SLRoutev4NotifRoute::default_instance() {
  ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4NotifRoute();
  return *internal_default_instance();
}

SLRoutev4NotifRoute* SLRoutev4NotifRoute::New(::google::protobuf::Arena* arena) const {
  SLRoutev4NotifRoute* n = new SLRoutev4NotifRoute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4NotifRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev4NotifRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SLRoutev4NotifRoute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4NotifRoute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string VrfName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), static_cast<int>(this->vrfname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev4NotifRoute.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLRoutev4 Entries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4NotifRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4NotifRoute)
  return false;
#undef DO_
}

void SLRoutev4NotifRoute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4NotifRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4NotifRoute.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // repeated .service_layer.SLRoutev4 Entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->entries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4NotifRoute)
}

::google::protobuf::uint8* SLRoutev4NotifRoute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4NotifRoute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), static_cast<int>(this->vrfname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev4NotifRoute.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // repeated .service_layer.SLRoutev4 Entries = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->entries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4NotifRoute)
  return target;
}

size_t SLRoutev4NotifRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev4NotifRoute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .service_layer.SLRoutev4 Entries = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->entries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entries(static_cast<int>(i)));
    }
  }

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4NotifRoute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev4NotifRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev4NotifRoute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4NotifRoute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev4NotifRoute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev4NotifRoute)
    MergeFrom(*source);
  }
}

void SLRoutev4NotifRoute::MergeFrom(const SLRoutev4NotifRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev4NotifRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
}

void SLRoutev4NotifRoute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev4NotifRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4NotifRoute::CopyFrom(const SLRoutev4NotifRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev4NotifRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4NotifRoute::IsInitialized() const {
  return true;
}

void SLRoutev4NotifRoute::Swap(SLRoutev4NotifRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4NotifRoute::InternalSwap(SLRoutev4NotifRoute* other) {
  using std::swap;
  entries_.InternalSwap(&other->entries_);
  vrfname_.Swap(&other->vrfname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4NotifRoute::GetMetadata() const {
  protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SLRoutev4Notif::InitAsDefaultInstance() {
  ::service_layer::_SLRoutev4Notif_default_instance_.errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  ::service_layer::_SLRoutev4Notif_default_instance_.notifstatus_ = const_cast< ::service_layer::SLRouteNotifStatus*>(
      ::service_layer::SLRouteNotifStatus::internal_default_instance());
  ::service_layer::_SLRoutev4Notif_default_instance_.route_ = const_cast< ::service_layer::SLRoutev4NotifRoute*>(
      ::service_layer::SLRoutev4NotifRoute::internal_default_instance());
  ::service_layer::_SLRoutev4Notif_default_instance_.marker_ = const_cast< ::service_layer::SLRouteNotifMarker*>(
      ::service_layer::SLRouteNotifMarker::internal_default_instance());
  ::service_layer::_SLRoutev4Notif_default_instance_.vrf_ = const_cast< ::service_layer::SLVrfNotif*>(
      ::service_layer::SLVrfNotif::internal_default_instance());
}
void SLRoutev4Notif::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (errstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errstatus, submessage_arena);
    }
    set_has_errstatus();
    Event_.errstatus_ = errstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4Notif.ErrStatus)
}
void SLRoutev4Notif::clear_errstatus() {
  if (has_errstatus()) {
    delete Event_.errstatus_;
    clear_has_Event();
  }
}
void SLRoutev4Notif::set_allocated_notifstatus(::service_layer::SLRouteNotifStatus* notifstatus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (notifstatus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      notifstatus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, notifstatus, submessage_arena);
    }
    set_has_notifstatus();
    Event_.notifstatus_ = notifstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4Notif.NotifStatus)
}
void SLRoutev4Notif::clear_notifstatus() {
  if (has_notifstatus()) {
    delete Event_.notifstatus_;
    clear_has_Event();
  }
}
void SLRoutev4Notif::set_allocated_route(::service_layer::SLRoutev4NotifRoute* route) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (route) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      route = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, route, submessage_arena);
    }
    set_has_route();
    Event_.route_ = route;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4Notif.Route)
}
void SLRoutev4Notif::set_allocated_marker(::service_layer::SLRouteNotifMarker* marker) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (marker) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      marker = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, marker, submessage_arena);
    }
    set_has_marker();
    Event_.marker_ = marker;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4Notif.Marker)
}
void SLRoutev4Notif::clear_marker() {
  if (has_marker()) {
    delete Event_.marker_;
    clear_has_Event();
  }
}
void SLRoutev4Notif::set_allocated_vrf(::service_layer::SLVrfNotif* vrf) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_Event();
  if (vrf) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vrf = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vrf, submessage_arena);
    }
    set_has_vrf();
    Event_.vrf_ = vrf;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev4Notif.Vrf)
}
void SLRoutev4Notif::clear_vrf() {
  if (has_vrf()) {
    delete Event_.vrf_;
    clear_has_Event();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev4Notif::kEventTypeFieldNumber;
const int SLRoutev4Notif::kErrStatusFieldNumber;
const int SLRoutev4Notif::kNotifStatusFieldNumber;
const int SLRoutev4Notif::kRouteFieldNumber;
const int SLRoutev4Notif::kMarkerFieldNumber;
const int SLRoutev4Notif::kVrfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev4Notif::SLRoutev4Notif()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4Notif();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev4Notif)
}
SLRoutev4Notif::SLRoutev4Notif(const SLRoutev4Notif& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eventtype_ = from.eventtype_;
  clear_has_Event();
  switch (from.Event_case()) {
    case kErrStatus: {
      mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
      break;
    }
    case kNotifStatus: {
      mutable_notifstatus()->::service_layer::SLRouteNotifStatus::MergeFrom(from.notifstatus());
      break;
    }
    case kRoute: {
      mutable_route()->::service_layer::SLRoutev4NotifRoute::MergeFrom(from.route());
      break;
    }
    case kMarker: {
      mutable_marker()->::service_layer::SLRouteNotifMarker::MergeFrom(from.marker());
      break;
    }
    case kVrf: {
      mutable_vrf()->::service_layer::SLVrfNotif::MergeFrom(from.vrf());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev4Notif)
}

void SLRoutev4Notif::SharedCtor() {
  eventtype_ = 0;
  clear_has_Event();
  _cached_size_ = 0;
}

SLRoutev4Notif::~SLRoutev4Notif() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev4Notif)
  SharedDtor();
}

void SLRoutev4Notif::SharedDtor() {
  if (has_Event()) {
    clear_Event();
  }
}

void SLRoutev4Notif::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev4Notif::descriptor() {
  ::protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SLRoutev4Notif& SLRoutev4Notif::default_instance() {
  ::protobuf_sl_5froute_5fipv4_2eproto::InitDefaultsSLRoutev4Notif();
  return *internal_default_instance();
}

SLRoutev4Notif* SLRoutev4Notif::New(::google::protobuf::Arena* arena) const {
  SLRoutev4Notif* n = new SLRoutev4Notif;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev4Notif::clear_Event() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLRoutev4Notif)
  switch (Event_case()) {
    case kErrStatus: {
      delete Event_.errstatus_;
      break;
    }
    case kNotifStatus: {
      delete Event_.notifstatus_;
      break;
    }
    case kRoute: {
      delete Event_.route_;
      break;
    }
    case kMarker: {
      delete Event_.marker_;
      break;
    }
    case kVrf: {
      delete Event_.vrf_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void SLRoutev4Notif::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev4Notif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  eventtype_ = 0;
  clear_Event();
  _internal_metadata_.Clear();
}

bool SLRoutev4Notif::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev4Notif)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLNotifType EventType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_eventtype(static_cast< ::service_layer::SLNotifType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLRouteNotifStatus NotifStatus = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_notifstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLRoutev4NotifRoute Route = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLRouteNotifMarker Marker = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_marker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLVrfNotif Vrf = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vrf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev4Notif)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev4Notif)
  return false;
#undef DO_
}

void SLRoutev4Notif::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev4Notif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLNotifType EventType = 1;
  if (this->eventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eventtype(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *Event_.errstatus_, output);
  }

  // .service_layer.SLRouteNotifStatus NotifStatus = 3;
  if (has_notifstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *Event_.notifstatus_, output);
  }

  // .service_layer.SLRoutev4NotifRoute Route = 4;
  if (has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *Event_.route_, output);
  }

  // .service_layer.SLRouteNotifMarker Marker = 5;
  if (has_marker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *Event_.marker_, output);
  }

  // .service_layer.SLVrfNotif Vrf = 6;
  if (has_vrf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *Event_.vrf_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev4Notif)
}

::google::protobuf::uint8* SLRoutev4Notif::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev4Notif)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLNotifType EventType = 1;
  if (this->eventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eventtype(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *Event_.errstatus_, deterministic, target);
  }

  // .service_layer.SLRouteNotifStatus NotifStatus = 3;
  if (has_notifstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *Event_.notifstatus_, deterministic, target);
  }

  // .service_layer.SLRoutev4NotifRoute Route = 4;
  if (has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *Event_.route_, deterministic, target);
  }

  // .service_layer.SLRouteNotifMarker Marker = 5;
  if (has_marker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *Event_.marker_, deterministic, target);
  }

  // .service_layer.SLVrfNotif Vrf = 6;
  if (has_vrf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *Event_.vrf_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev4Notif)
  return target;
}

size_t SLRoutev4Notif::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev4Notif)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .service_layer.SLNotifType EventType = 1;
  if (this->eventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->eventtype());
  }

  switch (Event_case()) {
    // .service_layer.SLErrorStatus ErrStatus = 2;
    case kErrStatus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.errstatus_);
      break;
    }
    // .service_layer.SLRouteNotifStatus NotifStatus = 3;
    case kNotifStatus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.notifstatus_);
      break;
    }
    // .service_layer.SLRoutev4NotifRoute Route = 4;
    case kRoute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.route_);
      break;
    }
    // .service_layer.SLRouteNotifMarker Marker = 5;
    case kMarker: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.marker_);
      break;
    }
    // .service_layer.SLVrfNotif Vrf = 6;
    case kVrf: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *Event_.vrf_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev4Notif::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev4Notif)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev4Notif* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev4Notif>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev4Notif)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev4Notif)
    MergeFrom(*source);
  }
}

void SLRoutev4Notif::MergeFrom(const SLRoutev4Notif& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev4Notif)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.eventtype() != 0) {
    set_eventtype(from.eventtype());
  }
  switch (from.Event_case()) {
    case kErrStatus: {
      mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
      break;
    }
    case kNotifStatus: {
      mutable_notifstatus()->::service_layer::SLRouteNotifStatus::MergeFrom(from.notifstatus());
      break;
    }
    case kRoute: {
      mutable_route()->::service_layer::SLRoutev4NotifRoute::MergeFrom(from.route());
      break;
    }
    case kMarker: {
      mutable_marker()->::service_layer::SLRouteNotifMarker::MergeFrom(from.marker());
      break;
    }
    case kVrf: {
      mutable_vrf()->::service_layer::SLVrfNotif::MergeFrom(from.vrf());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void SLRoutev4Notif::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev4Notif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev4Notif::CopyFrom(const SLRoutev4Notif& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev4Notif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev4Notif::IsInitialized() const {
  return true;
}

void SLRoutev4Notif::Swap(SLRoutev4Notif* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev4Notif::InternalSwap(SLRoutev4Notif* other) {
  using std::swap;
  swap(eventtype_, other->eventtype_);
  swap(Event_, other->Event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev4Notif::GetMetadata() const {
  protobuf_sl_5froute_5fipv4_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_sl_5froute_5fipv4_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
