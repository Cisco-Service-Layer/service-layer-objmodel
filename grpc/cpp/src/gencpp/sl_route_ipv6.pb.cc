// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_route_ipv6.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "sl_route_ipv6.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace service_layer {
class SLRoutev6DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev6> {
} _SLRoutev6_default_instance_;
class SLRoutev6MsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev6Msg> {
} _SLRoutev6Msg_default_instance_;
class SLRoutev6ResDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev6Res> {
} _SLRoutev6Res_default_instance_;
class SLRoutev6MsgRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev6MsgRsp> {
} _SLRoutev6MsgRsp_default_instance_;
class SLRoutev6GetMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev6GetMsg> {
} _SLRoutev6GetMsg_default_instance_;
class SLRoutev6GetMsgRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev6GetMsgRsp> {
} _SLRoutev6GetMsgRsp_default_instance_;
class SLRoutev6NotifRouteDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev6NotifRoute> {
} _SLRoutev6NotifRoute_default_instance_;
class SLRoutev6NotifDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SLRoutev6Notif> {
  public:
  const ::service_layer::SLErrorStatus* errstatus_;
  const ::service_layer::SLRouteNotifStatus* notifstatus_;
  const ::service_layer::SLRoutev6NotifRoute* route_;
  const ::service_layer::SLRouteNotifMarker* marker_;
  const ::service_layer::SLVrfNotif* vrf_;
} _SLRoutev6Notif_default_instance_;

namespace protobuf_sl_5froute_5fipv6_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6, prefixlen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6, routecommon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6, pathlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Msg, oper_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Msg, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Msg, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Msg, routes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Res, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Res, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Res, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Res, prefixlen_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6MsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6MsgRsp, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6MsgRsp, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6MsgRsp, statussummary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6MsgRsp, results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsg, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsg, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsg, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsg, prefixlen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsg, entriescount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsg, getnext_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsgRsp, correlator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsgRsp, eof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsgRsp, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsgRsp, errstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6GetMsgRsp, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6NotifRoute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6NotifRoute, vrfname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6NotifRoute, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Notif, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Notif, _oneof_case_[0]),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Notif, eventtype_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SLRoutev6Notif_default_instance_), errstatus_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SLRoutev6Notif_default_instance_), notifstatus_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SLRoutev6Notif_default_instance_), route_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SLRoutev6Notif_default_instance_), marker_),
  PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SLRoutev6Notif_default_instance_), vrf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SLRoutev6Notif, Event_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(SLRoutev6)},
  { 8, -1, sizeof(SLRoutev6Msg)},
  { 16, -1, sizeof(SLRoutev6Res)},
  { 23, -1, sizeof(SLRoutev6MsgRsp)},
  { 31, -1, sizeof(SLRoutev6GetMsg)},
  { 41, -1, sizeof(SLRoutev6GetMsgRsp)},
  { 50, -1, sizeof(SLRoutev6NotifRoute)},
  { 56, -1, sizeof(SLRoutev6Notif)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRoutev6_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRoutev6Msg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRoutev6Res_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRoutev6MsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRoutev6GetMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRoutev6GetMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRoutev6NotifRoute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SLRoutev6Notif_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "sl_route_ipv6.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace

void TableStruct::Shutdown() {
  _SLRoutev6_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SLRoutev6Msg_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SLRoutev6Res_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SLRoutev6MsgRsp_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _SLRoutev6GetMsg_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _SLRoutev6GetMsgRsp_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _SLRoutev6NotifRoute_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _SLRoutev6Notif_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::service_layer::protobuf_sl_5fcommon_5ftypes_2eproto::InitDefaults();
  ::service_layer::protobuf_sl_5froute_5fcommon_2eproto::InitDefaults();
  _SLRoutev6_default_instance_.DefaultConstruct();
  _SLRoutev6Msg_default_instance_.DefaultConstruct();
  _SLRoutev6Res_default_instance_.DefaultConstruct();
  _SLRoutev6MsgRsp_default_instance_.DefaultConstruct();
  _SLRoutev6GetMsg_default_instance_.DefaultConstruct();
  _SLRoutev6GetMsgRsp_default_instance_.DefaultConstruct();
  _SLRoutev6NotifRoute_default_instance_.DefaultConstruct();
  _SLRoutev6Notif_default_instance_.DefaultConstruct();
  _SLRoutev6_default_instance_.get_mutable()->routecommon_ = const_cast< ::service_layer::SLRouteCommon*>(
      ::service_layer::SLRouteCommon::internal_default_instance());
  _SLRoutev6Res_default_instance_.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLRoutev6MsgRsp_default_instance_.get_mutable()->statussummary_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLRoutev6GetMsgRsp_default_instance_.get_mutable()->errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLRoutev6Notif_default_instance_.errstatus_ = const_cast< ::service_layer::SLErrorStatus*>(
      ::service_layer::SLErrorStatus::internal_default_instance());
  _SLRoutev6Notif_default_instance_.notifstatus_ = const_cast< ::service_layer::SLRouteNotifStatus*>(
      ::service_layer::SLRouteNotifStatus::internal_default_instance());
  _SLRoutev6Notif_default_instance_.route_ = const_cast< ::service_layer::SLRoutev6NotifRoute*>(
      ::service_layer::SLRoutev6NotifRoute::internal_default_instance());
  _SLRoutev6Notif_default_instance_.marker_ = const_cast< ::service_layer::SLRouteNotifMarker*>(
      ::service_layer::SLRouteNotifMarker::internal_default_instance());
  _SLRoutev6Notif_default_instance_.vrf_ = const_cast< ::service_layer::SLVrfNotif*>(
      ::service_layer::SLVrfNotif::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\023sl_route_ipv6.proto\022\rservice_layer\032\025sl"
      "_common_types.proto\032\025sl_route_common.pro"
      "to\"\217\001\n\tSLRoutev6\022\016\n\006Prefix\030\001 \001(\014\022\021\n\tPref"
      "ixLen\030\002 \001(\r\0221\n\013RouteCommon\030\003 \001(\0132\034.servi"
      "ce_layer.SLRouteCommon\022,\n\010PathList\030\004 \003(\013"
      "2\032.service_layer.SLRoutePath\"\206\001\n\014SLRoute"
      "v6Msg\022\'\n\004Oper\030\001 \001(\0162\031.service_layer.SLOb"
      "jectOp\022\022\n\nCorrelator\030\002 \001(\004\022\017\n\007VrfName\030\003 "
      "\001(\t\022(\n\006Routes\030\004 \003(\0132\030.service_layer.SLRo"
      "utev6\"b\n\014SLRoutev6Res\022/\n\tErrStatus\030\001 \001(\013"
      "2\034.service_layer.SLErrorStatus\022\016\n\006Prefix"
      "\030\002 \001(\014\022\021\n\tPrefixLen\030\003 \001(\r\"\231\001\n\017SLRoutev6M"
      "sgRsp\022\022\n\nCorrelator\030\001 \001(\004\022\017\n\007VrfName\030\002 \001"
      "(\t\0223\n\rStatusSummary\030\003 \001(\0132\034.service_laye"
      "r.SLErrorStatus\022,\n\007Results\030\004 \003(\0132\033.servi"
      "ce_layer.SLRoutev6Res\"\200\001\n\017SLRoutev6GetMs"
      "g\022\022\n\nCorrelator\030\001 \001(\004\022\017\n\007VrfName\030\002 \001(\t\022\016"
      "\n\006Prefix\030\003 \001(\014\022\021\n\tPrefixLen\030\004 \001(\r\022\024\n\014Ent"
      "riesCount\030\005 \001(\r\022\017\n\007GetNext\030\006 \001(\010\"\242\001\n\022SLR"
      "outev6GetMsgRsp\022\022\n\nCorrelator\030\001 \001(\004\022\013\n\003E"
      "of\030\002 \001(\010\022\017\n\007VrfName\030\003 \001(\t\022/\n\tErrStatus\030\004"
      " \001(\0132\034.service_layer.SLErrorStatus\022)\n\007En"
      "tries\030\005 \003(\0132\030.service_layer.SLRoutev6\"Q\n"
      "\023SLRoutev6NotifRoute\022\017\n\007VrfName\030\001 \001(\t\022)\n"
      "\007Entries\030\002 \003(\0132\030.service_layer.SLRoutev6"
      "\"\311\002\n\016SLRoutev6Notif\022-\n\tEventType\030\001 \001(\0162\032"
      ".service_layer.SLNotifType\0221\n\tErrStatus\030"
      "\002 \001(\0132\034.service_layer.SLErrorStatusH\000\0228\n"
      "\013NotifStatus\030\003 \001(\0132!.service_layer.SLRou"
      "teNotifStatusH\000\0223\n\005Route\030\004 \001(\0132\".service"
      "_layer.SLRoutev6NotifRouteH\000\0223\n\006Marker\030\005"
      " \001(\0132!.service_layer.SLRouteNotifMarkerH"
      "\000\022(\n\003Vrf\030\006 \001(\0132\031.service_layer.SLVrfNoti"
      "fH\000B\007\n\005Event2\230\007\n\rSLRoutev6Oper\022b\n\023SLRout"
      "ev6GlobalsGet\022#.service_layer.SLRouteGlo"
      "balsGetMsg\032&.service_layer.SLRouteGlobal"
      "sGetMsgRsp\022n\n\027SLRoutev6GlobalStatsGet\022\'."
      "service_layer.SLRouteGlobalStatsGetMsg\032*"
      ".service_layer.SLRouteGlobalStatsGetMsgR"
      "sp\022N\n\021SLRoutev6VrfRegOp\022\032.service_layer."
      "SLVrfRegMsg\032\035.service_layer.SLVrfRegMsgR"
      "sp\022U\n\022SLRoutev6VrfRegGet\022\035.service_layer"
      ".SLVrfRegGetMsg\032 .service_layer.SLVrfReg"
      "GetMsgRsp\022Y\n\024SLRoutev6VrfGetStats\022\035.serv"
      "ice_layer.SLVrfRegGetMsg\032\".service_layer"
      ".SLVRFGetStatsMsgRsp\022J\n\013SLRoutev6Op\022\033.se"
      "rvice_layer.SLRoutev6Msg\032\036.service_layer"
      ".SLRoutev6MsgRsp\022Q\n\014SLRoutev6Get\022\036.servi"
      "ce_layer.SLRoutev6GetMsg\032!.service_layer"
      ".SLRoutev6GetMsgRsp\022T\n\021SLRoutev6OpStream"
      "\022\033.service_layer.SLRoutev6Msg\032\036.service_"
      "layer.SLRoutev6MsgRsp(\0010\001\022[\n\022SLRoutev6Ge"
      "tStream\022\036.service_layer.SLRoutev6GetMsg\032"
      "!.service_layer.SLRoutev6GetMsgRsp(\0010\001\022_"
      "\n\027SLRoutev6GetNotifStream\022!.service_laye"
      "r.SLRouteGetNotifMsg\032\035.service_layer.SLR"
      "outev6Notif(\0010\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2263);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "sl_route_ipv6.proto", &protobuf_RegisterTypes);
  ::service_layer::protobuf_sl_5fcommon_5ftypes_2eproto::AddDescriptors();
  ::service_layer::protobuf_sl_5froute_5fcommon_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_sl_5froute_5fipv6_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev6::kPrefixFieldNumber;
const int SLRoutev6::kPrefixLenFieldNumber;
const int SLRoutev6::kRouteCommonFieldNumber;
const int SLRoutev6::kPathListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev6::SLRoutev6()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev6)
}
SLRoutev6::SLRoutev6(const SLRoutev6& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pathlist_(from.pathlist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prefix().size() > 0) {
    prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefix_);
  }
  if (from.has_routecommon()) {
    routecommon_ = new ::service_layer::SLRouteCommon(*from.routecommon_);
  } else {
    routecommon_ = NULL;
  }
  prefixlen_ = from.prefixlen_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev6)
}

void SLRoutev6::SharedCtor() {
  prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&routecommon_, 0, reinterpret_cast<char*>(&prefixlen_) -
    reinterpret_cast<char*>(&routecommon_) + sizeof(prefixlen_));
  _cached_size_ = 0;
}

SLRoutev6::~SLRoutev6() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev6)
  SharedDtor();
}

void SLRoutev6::SharedDtor() {
  prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete routecommon_;
  }
}

void SLRoutev6::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev6::descriptor() {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[0].descriptor;
}

const SLRoutev6& SLRoutev6::default_instance() {
  protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRoutev6* SLRoutev6::New(::google::protobuf::Arena* arena) const {
  SLRoutev6* n = new SLRoutev6;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev6::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev6)
  pathlist_.Clear();
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && routecommon_ != NULL) {
    delete routecommon_;
  }
  routecommon_ = NULL;
  prefixlen_ = 0u;
}

bool SLRoutev6::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev6)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Prefix = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PrefixLen = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefixlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLRouteCommon RouteCommon = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_routecommon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLRoutePath PathList = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pathlist()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev6)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev6)
  return false;
#undef DO_
}

void SLRoutev6::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev6)
  // bytes Prefix = 1;
  if (this->prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->prefix(), output);
  }

  // uint32 PrefixLen = 2;
  if (this->prefixlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->prefixlen(), output);
  }

  // .service_layer.SLRouteCommon RouteCommon = 3;
  if (this->has_routecommon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->routecommon_, output);
  }

  // repeated .service_layer.SLRoutePath PathList = 4;
  for (unsigned int i = 0, n = this->pathlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pathlist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev6)
}

::google::protobuf::uint8* SLRoutev6::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev6)
  // bytes Prefix = 1;
  if (this->prefix().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->prefix(), target);
  }

  // uint32 PrefixLen = 2;
  if (this->prefixlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->prefixlen(), target);
  }

  // .service_layer.SLRouteCommon RouteCommon = 3;
  if (this->has_routecommon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->routecommon_, false, target);
  }

  // repeated .service_layer.SLRoutePath PathList = 4;
  for (unsigned int i = 0, n = this->pathlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->pathlist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev6)
  return target;
}

size_t SLRoutev6::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev6)
  size_t total_size = 0;

  // repeated .service_layer.SLRoutePath PathList = 4;
  {
    unsigned int count = this->pathlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pathlist(i));
    }
  }

  // bytes Prefix = 1;
  if (this->prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prefix());
  }

  // .service_layer.SLRouteCommon RouteCommon = 3;
  if (this->has_routecommon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->routecommon_);
  }

  // uint32 PrefixLen = 2;
  if (this->prefixlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefixlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev6::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev6)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev6* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev6>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev6)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev6)
    MergeFrom(*source);
  }
}

void SLRoutev6::MergeFrom(const SLRoutev6& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev6)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pathlist_.MergeFrom(from.pathlist_);
  if (from.prefix().size() > 0) {

    prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefix_);
  }
  if (from.has_routecommon()) {
    mutable_routecommon()->::service_layer::SLRouteCommon::MergeFrom(from.routecommon());
  }
  if (from.prefixlen() != 0) {
    set_prefixlen(from.prefixlen());
  }
}

void SLRoutev6::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev6::CopyFrom(const SLRoutev6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev6::IsInitialized() const {
  return true;
}

void SLRoutev6::Swap(SLRoutev6* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev6::InternalSwap(SLRoutev6* other) {
  pathlist_.UnsafeArenaSwap(&other->pathlist_);
  prefix_.Swap(&other->prefix_);
  std::swap(routecommon_, other->routecommon_);
  std::swap(prefixlen_, other->prefixlen_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev6::GetMetadata() const {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev6

// bytes Prefix = 1;
void SLRoutev6::clear_prefix() {
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRoutev6::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.Prefix)
  return prefix_.GetNoArena();
}
void SLRoutev6::set_prefix(const ::std::string& value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6.Prefix)
}
#if LANG_CXX11
void SLRoutev6::set_prefix(::std::string&& value) {
  
  prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6.Prefix)
}
#endif
void SLRoutev6::set_prefix(const char* value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6.Prefix)
}
void SLRoutev6::set_prefix(const void* value, size_t size) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6.Prefix)
}
::std::string* SLRoutev6::mutable_prefix() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6.Prefix)
  return prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRoutev6::release_prefix() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6.Prefix)
  
  return prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRoutev6::set_allocated_prefix(::std::string* prefix) {
  if (prefix != NULL) {
    
  } else {
    
  }
  prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prefix);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6.Prefix)
}

// uint32 PrefixLen = 2;
void SLRoutev6::clear_prefixlen() {
  prefixlen_ = 0u;
}
::google::protobuf::uint32 SLRoutev6::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.PrefixLen)
  return prefixlen_;
}
void SLRoutev6::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6.PrefixLen)
}

// .service_layer.SLRouteCommon RouteCommon = 3;
bool SLRoutev6::has_routecommon() const {
  return this != internal_default_instance() && routecommon_ != NULL;
}
void SLRoutev6::clear_routecommon() {
  if (GetArenaNoVirtual() == NULL && routecommon_ != NULL) delete routecommon_;
  routecommon_ = NULL;
}
const ::service_layer::SLRouteCommon& SLRoutev6::routecommon() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.RouteCommon)
  return routecommon_ != NULL ? *routecommon_
                         : *::service_layer::SLRouteCommon::internal_default_instance();
}
::service_layer::SLRouteCommon* SLRoutev6::mutable_routecommon() {
  
  if (routecommon_ == NULL) {
    routecommon_ = new ::service_layer::SLRouteCommon;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6.RouteCommon)
  return routecommon_;
}
::service_layer::SLRouteCommon* SLRoutev6::release_routecommon() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6.RouteCommon)
  
  ::service_layer::SLRouteCommon* temp = routecommon_;
  routecommon_ = NULL;
  return temp;
}
void SLRoutev6::set_allocated_routecommon(::service_layer::SLRouteCommon* routecommon) {
  delete routecommon_;
  routecommon_ = routecommon;
  if (routecommon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6.RouteCommon)
}

// repeated .service_layer.SLRoutePath PathList = 4;
int SLRoutev6::pathlist_size() const {
  return pathlist_.size();
}
void SLRoutev6::clear_pathlist() {
  pathlist_.Clear();
}
const ::service_layer::SLRoutePath& SLRoutev6::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.PathList)
  return pathlist_.Get(index);
}
::service_layer::SLRoutePath* SLRoutev6::mutable_pathlist(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6.PathList)
  return pathlist_.Mutable(index);
}
::service_layer::SLRoutePath* SLRoutev6::add_pathlist() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6.PathList)
  return pathlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >*
SLRoutev6::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6.PathList)
  return &pathlist_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >&
SLRoutev6::pathlist() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6.PathList)
  return pathlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev6Msg::kOperFieldNumber;
const int SLRoutev6Msg::kCorrelatorFieldNumber;
const int SLRoutev6Msg::kVrfNameFieldNumber;
const int SLRoutev6Msg::kRoutesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev6Msg::SLRoutev6Msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev6Msg)
}
SLRoutev6Msg::SLRoutev6Msg(const SLRoutev6Msg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      routes_(from.routes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  ::memcpy(&correlator_, &from.correlator_,
    reinterpret_cast<char*>(&oper_) -
    reinterpret_cast<char*>(&correlator_) + sizeof(oper_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev6Msg)
}

void SLRoutev6Msg::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&correlator_, 0, reinterpret_cast<char*>(&oper_) -
    reinterpret_cast<char*>(&correlator_) + sizeof(oper_));
  _cached_size_ = 0;
}

SLRoutev6Msg::~SLRoutev6Msg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev6Msg)
  SharedDtor();
}

void SLRoutev6Msg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLRoutev6Msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev6Msg::descriptor() {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[1].descriptor;
}

const SLRoutev6Msg& SLRoutev6Msg::default_instance() {
  protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRoutev6Msg* SLRoutev6Msg::New(::google::protobuf::Arena* arena) const {
  SLRoutev6Msg* n = new SLRoutev6Msg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev6Msg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev6Msg)
  routes_.Clear();
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&correlator_, 0, reinterpret_cast<char*>(&oper_) -
    reinterpret_cast<char*>(&correlator_) + sizeof(oper_));
}

bool SLRoutev6Msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev6Msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLObjectOp Oper = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper(static_cast< ::service_layer::SLObjectOp >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 Correlator = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev6Msg.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLRoutev6 Routes = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_routes()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev6Msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev6Msg)
  return false;
#undef DO_
}

void SLRoutev6Msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev6Msg)
  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->oper(), output);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->correlator(), output);
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev6Msg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vrfname(), output);
  }

  // repeated .service_layer.SLRoutev6 Routes = 4;
  for (unsigned int i = 0, n = this->routes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->routes(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev6Msg)
}

::google::protobuf::uint8* SLRoutev6Msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev6Msg)
  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->oper(), target);
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->correlator(), target);
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev6Msg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vrfname(), target);
  }

  // repeated .service_layer.SLRoutev6 Routes = 4;
  for (unsigned int i = 0, n = this->routes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->routes(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev6Msg)
  return target;
}

size_t SLRoutev6Msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev6Msg)
  size_t total_size = 0;

  // repeated .service_layer.SLRoutev6 Routes = 4;
  {
    unsigned int count = this->routes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->routes(i));
    }
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // uint64 Correlator = 2;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // .service_layer.SLObjectOp Oper = 1;
  if (this->oper() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev6Msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev6Msg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev6Msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev6Msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev6Msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev6Msg)
    MergeFrom(*source);
  }
}

void SLRoutev6Msg::MergeFrom(const SLRoutev6Msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev6Msg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  routes_.MergeFrom(from.routes_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.oper() != 0) {
    set_oper(from.oper());
  }
}

void SLRoutev6Msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev6Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev6Msg::CopyFrom(const SLRoutev6Msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev6Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev6Msg::IsInitialized() const {
  return true;
}

void SLRoutev6Msg::Swap(SLRoutev6Msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev6Msg::InternalSwap(SLRoutev6Msg* other) {
  routes_.UnsafeArenaSwap(&other->routes_);
  vrfname_.Swap(&other->vrfname_);
  std::swap(correlator_, other->correlator_);
  std::swap(oper_, other->oper_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev6Msg::GetMetadata() const {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev6Msg

// .service_layer.SLObjectOp Oper = 1;
void SLRoutev6Msg::clear_oper() {
  oper_ = 0;
}
::service_layer::SLObjectOp SLRoutev6Msg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.Oper)
  return static_cast< ::service_layer::SLObjectOp >(oper_);
}
void SLRoutev6Msg::set_oper(::service_layer::SLObjectOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Msg.Oper)
}

// uint64 Correlator = 2;
void SLRoutev6Msg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SLRoutev6Msg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.Correlator)
  return correlator_;
}
void SLRoutev6Msg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Msg.Correlator)
}

// string VrfName = 3;
void SLRoutev6Msg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRoutev6Msg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.VrfName)
  return vrfname_.GetNoArena();
}
void SLRoutev6Msg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Msg.VrfName)
}
#if LANG_CXX11
void SLRoutev6Msg::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6Msg.VrfName)
}
#endif
void SLRoutev6Msg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6Msg.VrfName)
}
void SLRoutev6Msg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6Msg.VrfName)
}
::std::string* SLRoutev6Msg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Msg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRoutev6Msg::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Msg.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRoutev6Msg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Msg.VrfName)
}

// repeated .service_layer.SLRoutev6 Routes = 4;
int SLRoutev6Msg::routes_size() const {
  return routes_.size();
}
void SLRoutev6Msg::clear_routes() {
  routes_.Clear();
}
const ::service_layer::SLRoutev6& SLRoutev6Msg::routes(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.Routes)
  return routes_.Get(index);
}
::service_layer::SLRoutev6* SLRoutev6Msg::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Msg.Routes)
  return routes_.Mutable(index);
}
::service_layer::SLRoutev6* SLRoutev6Msg::add_routes() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6Msg.Routes)
  return routes_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
SLRoutev6Msg::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6Msg.Routes)
  return &routes_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
SLRoutev6Msg::routes() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6Msg.Routes)
  return routes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev6Res::kErrStatusFieldNumber;
const int SLRoutev6Res::kPrefixFieldNumber;
const int SLRoutev6Res::kPrefixLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev6Res::SLRoutev6Res()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev6Res)
}
SLRoutev6Res::SLRoutev6Res(const SLRoutev6Res& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prefix().size() > 0) {
    prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefix_);
  }
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  prefixlen_ = from.prefixlen_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev6Res)
}

void SLRoutev6Res::SharedCtor() {
  prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&errstatus_, 0, reinterpret_cast<char*>(&prefixlen_) -
    reinterpret_cast<char*>(&errstatus_) + sizeof(prefixlen_));
  _cached_size_ = 0;
}

SLRoutev6Res::~SLRoutev6Res() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev6Res)
  SharedDtor();
}

void SLRoutev6Res::SharedDtor() {
  prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete errstatus_;
  }
}

void SLRoutev6Res::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev6Res::descriptor() {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[2].descriptor;
}

const SLRoutev6Res& SLRoutev6Res::default_instance() {
  protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRoutev6Res* SLRoutev6Res::New(::google::protobuf::Arena* arena) const {
  SLRoutev6Res* n = new SLRoutev6Res;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev6Res::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev6Res)
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  prefixlen_ = 0u;
}

bool SLRoutev6Res::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev6Res)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLErrorStatus ErrStatus = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Prefix = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PrefixLen = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefixlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev6Res)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev6Res)
  return false;
#undef DO_
}

void SLRoutev6Res::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev6Res)
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->errstatus_, output);
  }

  // bytes Prefix = 2;
  if (this->prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->prefix(), output);
  }

  // uint32 PrefixLen = 3;
  if (this->prefixlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->prefixlen(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev6Res)
}

::google::protobuf::uint8* SLRoutev6Res::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev6Res)
  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->errstatus_, false, target);
  }

  // bytes Prefix = 2;
  if (this->prefix().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->prefix(), target);
  }

  // uint32 PrefixLen = 3;
  if (this->prefixlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->prefixlen(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev6Res)
  return target;
}

size_t SLRoutev6Res::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev6Res)
  size_t total_size = 0;

  // bytes Prefix = 2;
  if (this->prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prefix());
  }

  // .service_layer.SLErrorStatus ErrStatus = 1;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // uint32 PrefixLen = 3;
  if (this->prefixlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefixlen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev6Res::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev6Res)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev6Res* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev6Res>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev6Res)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev6Res)
    MergeFrom(*source);
  }
}

void SLRoutev6Res::MergeFrom(const SLRoutev6Res& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev6Res)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.prefix().size() > 0) {

    prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefix_);
  }
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.prefixlen() != 0) {
    set_prefixlen(from.prefixlen());
  }
}

void SLRoutev6Res::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev6Res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev6Res::CopyFrom(const SLRoutev6Res& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev6Res)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev6Res::IsInitialized() const {
  return true;
}

void SLRoutev6Res::Swap(SLRoutev6Res* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev6Res::InternalSwap(SLRoutev6Res* other) {
  prefix_.Swap(&other->prefix_);
  std::swap(errstatus_, other->errstatus_);
  std::swap(prefixlen_, other->prefixlen_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev6Res::GetMetadata() const {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev6Res

// .service_layer.SLErrorStatus ErrStatus = 1;
bool SLRoutev6Res::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void SLRoutev6Res::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLRoutev6Res::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Res.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLRoutev6Res::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Res.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLRoutev6Res::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Res.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLRoutev6Res::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Res.ErrStatus)
}

// bytes Prefix = 2;
void SLRoutev6Res::clear_prefix() {
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRoutev6Res::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Res.Prefix)
  return prefix_.GetNoArena();
}
void SLRoutev6Res::set_prefix(const ::std::string& value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Res.Prefix)
}
#if LANG_CXX11
void SLRoutev6Res::set_prefix(::std::string&& value) {
  
  prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6Res.Prefix)
}
#endif
void SLRoutev6Res::set_prefix(const char* value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6Res.Prefix)
}
void SLRoutev6Res::set_prefix(const void* value, size_t size) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6Res.Prefix)
}
::std::string* SLRoutev6Res::mutable_prefix() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Res.Prefix)
  return prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRoutev6Res::release_prefix() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Res.Prefix)
  
  return prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRoutev6Res::set_allocated_prefix(::std::string* prefix) {
  if (prefix != NULL) {
    
  } else {
    
  }
  prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prefix);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Res.Prefix)
}

// uint32 PrefixLen = 3;
void SLRoutev6Res::clear_prefixlen() {
  prefixlen_ = 0u;
}
::google::protobuf::uint32 SLRoutev6Res::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Res.PrefixLen)
  return prefixlen_;
}
void SLRoutev6Res::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Res.PrefixLen)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev6MsgRsp::kCorrelatorFieldNumber;
const int SLRoutev6MsgRsp::kVrfNameFieldNumber;
const int SLRoutev6MsgRsp::kStatusSummaryFieldNumber;
const int SLRoutev6MsgRsp::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev6MsgRsp::SLRoutev6MsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev6MsgRsp)
}
SLRoutev6MsgRsp::SLRoutev6MsgRsp(const SLRoutev6MsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_statussummary()) {
    statussummary_ = new ::service_layer::SLErrorStatus(*from.statussummary_);
  } else {
    statussummary_ = NULL;
  }
  correlator_ = from.correlator_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev6MsgRsp)
}

void SLRoutev6MsgRsp::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&statussummary_, 0, reinterpret_cast<char*>(&correlator_) -
    reinterpret_cast<char*>(&statussummary_) + sizeof(correlator_));
  _cached_size_ = 0;
}

SLRoutev6MsgRsp::~SLRoutev6MsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev6MsgRsp)
  SharedDtor();
}

void SLRoutev6MsgRsp::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete statussummary_;
  }
}

void SLRoutev6MsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev6MsgRsp::descriptor() {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[3].descriptor;
}

const SLRoutev6MsgRsp& SLRoutev6MsgRsp::default_instance() {
  protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRoutev6MsgRsp* SLRoutev6MsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRoutev6MsgRsp* n = new SLRoutev6MsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev6MsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev6MsgRsp)
  results_.Clear();
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) {
    delete statussummary_;
  }
  statussummary_ = NULL;
  correlator_ = GOOGLE_ULONGLONG(0);
}

bool SLRoutev6MsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev6MsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev6MsgRsp.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus StatusSummary = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_statussummary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLRoutev6Res Results = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev6MsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev6MsgRsp)
  return false;
#undef DO_
}

void SLRoutev6MsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev6MsgRsp)
  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev6MsgRsp.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vrfname(), output);
  }

  // .service_layer.SLErrorStatus StatusSummary = 3;
  if (this->has_statussummary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->statussummary_, output);
  }

  // repeated .service_layer.SLRoutev6Res Results = 4;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->results(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev6MsgRsp)
}

::google::protobuf::uint8* SLRoutev6MsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev6MsgRsp)
  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev6MsgRsp.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vrfname(), target);
  }

  // .service_layer.SLErrorStatus StatusSummary = 3;
  if (this->has_statussummary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->statussummary_, false, target);
  }

  // repeated .service_layer.SLRoutev6Res Results = 4;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->results(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev6MsgRsp)
  return target;
}

size_t SLRoutev6MsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev6MsgRsp)
  size_t total_size = 0;

  // repeated .service_layer.SLRoutev6Res Results = 4;
  {
    unsigned int count = this->results_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->results(i));
    }
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // .service_layer.SLErrorStatus StatusSummary = 3;
  if (this->has_statussummary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->statussummary_);
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev6MsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev6MsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev6MsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev6MsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev6MsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev6MsgRsp)
    MergeFrom(*source);
  }
}

void SLRoutev6MsgRsp::MergeFrom(const SLRoutev6MsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev6MsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  results_.MergeFrom(from.results_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_statussummary()) {
    mutable_statussummary()->::service_layer::SLErrorStatus::MergeFrom(from.statussummary());
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
}

void SLRoutev6MsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev6MsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev6MsgRsp::CopyFrom(const SLRoutev6MsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev6MsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev6MsgRsp::IsInitialized() const {
  return true;
}

void SLRoutev6MsgRsp::Swap(SLRoutev6MsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev6MsgRsp::InternalSwap(SLRoutev6MsgRsp* other) {
  results_.UnsafeArenaSwap(&other->results_);
  vrfname_.Swap(&other->vrfname_);
  std::swap(statussummary_, other->statussummary_);
  std::swap(correlator_, other->correlator_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev6MsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev6MsgRsp

// uint64 Correlator = 1;
void SLRoutev6MsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SLRoutev6MsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.Correlator)
  return correlator_;
}
void SLRoutev6MsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6MsgRsp.Correlator)
}

// string VrfName = 2;
void SLRoutev6MsgRsp::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRoutev6MsgRsp::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.VrfName)
  return vrfname_.GetNoArena();
}
void SLRoutev6MsgRsp::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6MsgRsp.VrfName)
}
#if LANG_CXX11
void SLRoutev6MsgRsp::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6MsgRsp.VrfName)
}
#endif
void SLRoutev6MsgRsp::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6MsgRsp.VrfName)
}
void SLRoutev6MsgRsp::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6MsgRsp.VrfName)
}
::std::string* SLRoutev6MsgRsp::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6MsgRsp.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRoutev6MsgRsp::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6MsgRsp.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRoutev6MsgRsp::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6MsgRsp.VrfName)
}

// .service_layer.SLErrorStatus StatusSummary = 3;
bool SLRoutev6MsgRsp::has_statussummary() const {
  return this != internal_default_instance() && statussummary_ != NULL;
}
void SLRoutev6MsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) delete statussummary_;
  statussummary_ = NULL;
}
const ::service_layer::SLErrorStatus& SLRoutev6MsgRsp::statussummary() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.StatusSummary)
  return statussummary_ != NULL ? *statussummary_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLRoutev6MsgRsp::mutable_statussummary() {
  
  if (statussummary_ == NULL) {
    statussummary_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6MsgRsp.StatusSummary)
  return statussummary_;
}
::service_layer::SLErrorStatus* SLRoutev6MsgRsp::release_statussummary() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6MsgRsp.StatusSummary)
  
  ::service_layer::SLErrorStatus* temp = statussummary_;
  statussummary_ = NULL;
  return temp;
}
void SLRoutev6MsgRsp::set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary) {
  delete statussummary_;
  statussummary_ = statussummary;
  if (statussummary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6MsgRsp.StatusSummary)
}

// repeated .service_layer.SLRoutev6Res Results = 4;
int SLRoutev6MsgRsp::results_size() const {
  return results_.size();
}
void SLRoutev6MsgRsp::clear_results() {
  results_.Clear();
}
const ::service_layer::SLRoutev6Res& SLRoutev6MsgRsp::results(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.Results)
  return results_.Get(index);
}
::service_layer::SLRoutev6Res* SLRoutev6MsgRsp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6MsgRsp.Results)
  return results_.Mutable(index);
}
::service_layer::SLRoutev6Res* SLRoutev6MsgRsp::add_results() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6MsgRsp.Results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res >*
SLRoutev6MsgRsp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6MsgRsp.Results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res >&
SLRoutev6MsgRsp::results() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6MsgRsp.Results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev6GetMsg::kCorrelatorFieldNumber;
const int SLRoutev6GetMsg::kVrfNameFieldNumber;
const int SLRoutev6GetMsg::kPrefixFieldNumber;
const int SLRoutev6GetMsg::kPrefixLenFieldNumber;
const int SLRoutev6GetMsg::kEntriesCountFieldNumber;
const int SLRoutev6GetMsg::kGetNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev6GetMsg::SLRoutev6GetMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev6GetMsg)
}
SLRoutev6GetMsg::SLRoutev6GetMsg(const SLRoutev6GetMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prefix().size() > 0) {
    prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefix_);
  }
  ::memcpy(&correlator_, &from.correlator_,
    reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&correlator_) + sizeof(getnext_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev6GetMsg)
}

void SLRoutev6GetMsg::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&correlator_, 0, reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&correlator_) + sizeof(getnext_));
  _cached_size_ = 0;
}

SLRoutev6GetMsg::~SLRoutev6GetMsg() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev6GetMsg)
  SharedDtor();
}

void SLRoutev6GetMsg::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLRoutev6GetMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev6GetMsg::descriptor() {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[4].descriptor;
}

const SLRoutev6GetMsg& SLRoutev6GetMsg::default_instance() {
  protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRoutev6GetMsg* SLRoutev6GetMsg::New(::google::protobuf::Arena* arena) const {
  SLRoutev6GetMsg* n = new SLRoutev6GetMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev6GetMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev6GetMsg)
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&correlator_, 0, reinterpret_cast<char*>(&getnext_) -
    reinterpret_cast<char*>(&correlator_) + sizeof(getnext_));
}

bool SLRoutev6GetMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev6GetMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev6GetMsg.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Prefix = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 PrefixLen = 4;
      case 4: {
        if (tag == 32u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &prefixlen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 EntriesCount = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entriescount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool GetNext = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getnext_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev6GetMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev6GetMsg)
  return false;
#undef DO_
}

void SLRoutev6GetMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev6GetMsg)
  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev6GetMsg.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vrfname(), output);
  }

  // bytes Prefix = 3;
  if (this->prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->prefix(), output);
  }

  // uint32 PrefixLen = 4;
  if (this->prefixlen() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->prefixlen(), output);
  }

  // uint32 EntriesCount = 5;
  if (this->entriescount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->entriescount(), output);
  }

  // bool GetNext = 6;
  if (this->getnext() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->getnext(), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev6GetMsg)
}

::google::protobuf::uint8* SLRoutev6GetMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev6GetMsg)
  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev6GetMsg.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vrfname(), target);
  }

  // bytes Prefix = 3;
  if (this->prefix().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->prefix(), target);
  }

  // uint32 PrefixLen = 4;
  if (this->prefixlen() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->prefixlen(), target);
  }

  // uint32 EntriesCount = 5;
  if (this->entriescount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->entriescount(), target);
  }

  // bool GetNext = 6;
  if (this->getnext() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->getnext(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev6GetMsg)
  return target;
}

size_t SLRoutev6GetMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev6GetMsg)
  size_t total_size = 0;

  // string VrfName = 2;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // bytes Prefix = 3;
  if (this->prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->prefix());
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // uint32 PrefixLen = 4;
  if (this->prefixlen() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->prefixlen());
  }

  // uint32 EntriesCount = 5;
  if (this->entriescount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entriescount());
  }

  // bool GetNext = 6;
  if (this->getnext() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev6GetMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev6GetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev6GetMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev6GetMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev6GetMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev6GetMsg)
    MergeFrom(*source);
  }
}

void SLRoutev6GetMsg::MergeFrom(const SLRoutev6GetMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev6GetMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.prefix().size() > 0) {

    prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prefix_);
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.prefixlen() != 0) {
    set_prefixlen(from.prefixlen());
  }
  if (from.entriescount() != 0) {
    set_entriescount(from.entriescount());
  }
  if (from.getnext() != 0) {
    set_getnext(from.getnext());
  }
}

void SLRoutev6GetMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev6GetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev6GetMsg::CopyFrom(const SLRoutev6GetMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev6GetMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev6GetMsg::IsInitialized() const {
  return true;
}

void SLRoutev6GetMsg::Swap(SLRoutev6GetMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev6GetMsg::InternalSwap(SLRoutev6GetMsg* other) {
  vrfname_.Swap(&other->vrfname_);
  prefix_.Swap(&other->prefix_);
  std::swap(correlator_, other->correlator_);
  std::swap(prefixlen_, other->prefixlen_);
  std::swap(entriescount_, other->entriescount_);
  std::swap(getnext_, other->getnext_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev6GetMsg::GetMetadata() const {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev6GetMsg

// uint64 Correlator = 1;
void SLRoutev6GetMsg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SLRoutev6GetMsg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.Correlator)
  return correlator_;
}
void SLRoutev6GetMsg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.Correlator)
}

// string VrfName = 2;
void SLRoutev6GetMsg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRoutev6GetMsg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.VrfName)
  return vrfname_.GetNoArena();
}
void SLRoutev6GetMsg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.VrfName)
}
#if LANG_CXX11
void SLRoutev6GetMsg::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6GetMsg.VrfName)
}
#endif
void SLRoutev6GetMsg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6GetMsg.VrfName)
}
void SLRoutev6GetMsg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6GetMsg.VrfName)
}
::std::string* SLRoutev6GetMsg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRoutev6GetMsg::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6GetMsg.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRoutev6GetMsg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsg.VrfName)
}

// bytes Prefix = 3;
void SLRoutev6GetMsg::clear_prefix() {
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRoutev6GetMsg::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.Prefix)
  return prefix_.GetNoArena();
}
void SLRoutev6GetMsg::set_prefix(const ::std::string& value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.Prefix)
}
#if LANG_CXX11
void SLRoutev6GetMsg::set_prefix(::std::string&& value) {
  
  prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6GetMsg.Prefix)
}
#endif
void SLRoutev6GetMsg::set_prefix(const char* value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6GetMsg.Prefix)
}
void SLRoutev6GetMsg::set_prefix(const void* value, size_t size) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6GetMsg.Prefix)
}
::std::string* SLRoutev6GetMsg::mutable_prefix() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsg.Prefix)
  return prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRoutev6GetMsg::release_prefix() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6GetMsg.Prefix)
  
  return prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRoutev6GetMsg::set_allocated_prefix(::std::string* prefix) {
  if (prefix != NULL) {
    
  } else {
    
  }
  prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prefix);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsg.Prefix)
}

// uint32 PrefixLen = 4;
void SLRoutev6GetMsg::clear_prefixlen() {
  prefixlen_ = 0u;
}
::google::protobuf::uint32 SLRoutev6GetMsg::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.PrefixLen)
  return prefixlen_;
}
void SLRoutev6GetMsg::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.PrefixLen)
}

// uint32 EntriesCount = 5;
void SLRoutev6GetMsg::clear_entriescount() {
  entriescount_ = 0u;
}
::google::protobuf::uint32 SLRoutev6GetMsg::entriescount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.EntriesCount)
  return entriescount_;
}
void SLRoutev6GetMsg::set_entriescount(::google::protobuf::uint32 value) {
  
  entriescount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.EntriesCount)
}

// bool GetNext = 6;
void SLRoutev6GetMsg::clear_getnext() {
  getnext_ = false;
}
bool SLRoutev6GetMsg::getnext() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.GetNext)
  return getnext_;
}
void SLRoutev6GetMsg::set_getnext(bool value) {
  
  getnext_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.GetNext)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev6GetMsgRsp::kCorrelatorFieldNumber;
const int SLRoutev6GetMsgRsp::kEofFieldNumber;
const int SLRoutev6GetMsgRsp::kVrfNameFieldNumber;
const int SLRoutev6GetMsgRsp::kErrStatusFieldNumber;
const int SLRoutev6GetMsgRsp::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev6GetMsgRsp::SLRoutev6GetMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev6GetMsgRsp)
}
SLRoutev6GetMsgRsp::SLRoutev6GetMsgRsp(const SLRoutev6GetMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_errstatus()) {
    errstatus_ = new ::service_layer::SLErrorStatus(*from.errstatus_);
  } else {
    errstatus_ = NULL;
  }
  ::memcpy(&correlator_, &from.correlator_,
    reinterpret_cast<char*>(&eof_) -
    reinterpret_cast<char*>(&correlator_) + sizeof(eof_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev6GetMsgRsp)
}

void SLRoutev6GetMsgRsp::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&errstatus_, 0, reinterpret_cast<char*>(&eof_) -
    reinterpret_cast<char*>(&errstatus_) + sizeof(eof_));
  _cached_size_ = 0;
}

SLRoutev6GetMsgRsp::~SLRoutev6GetMsgRsp() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev6GetMsgRsp)
  SharedDtor();
}

void SLRoutev6GetMsgRsp::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete errstatus_;
  }
}

void SLRoutev6GetMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev6GetMsgRsp::descriptor() {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[5].descriptor;
}

const SLRoutev6GetMsgRsp& SLRoutev6GetMsgRsp::default_instance() {
  protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRoutev6GetMsgRsp* SLRoutev6GetMsgRsp::New(::google::protobuf::Arena* arena) const {
  SLRoutev6GetMsgRsp* n = new SLRoutev6GetMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev6GetMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev6GetMsgRsp)
  entries_.Clear();
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) {
    delete errstatus_;
  }
  errstatus_ = NULL;
  ::memset(&correlator_, 0, reinterpret_cast<char*>(&eof_) -
    reinterpret_cast<char*>(&correlator_) + sizeof(eof_));
}

bool SLRoutev6GetMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev6GetMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 Correlator = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &correlator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Eof = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &eof_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VrfName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev6GetMsgRsp.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLRoutev6 Entries = 5;
      case 5: {
        if (tag == 42u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev6GetMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev6GetMsgRsp)
  return false;
#undef DO_
}

void SLRoutev6GetMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev6GetMsgRsp)
  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->correlator(), output);
  }

  // bool Eof = 2;
  if (this->eof() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->eof(), output);
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev6GetMsgRsp.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vrfname(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 4;
  if (this->has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->errstatus_, output);
  }

  // repeated .service_layer.SLRoutev6 Entries = 5;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->entries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev6GetMsgRsp)
}

::google::protobuf::uint8* SLRoutev6GetMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev6GetMsgRsp)
  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->correlator(), target);
  }

  // bool Eof = 2;
  if (this->eof() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->eof(), target);
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev6GetMsgRsp.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vrfname(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 4;
  if (this->has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->errstatus_, false, target);
  }

  // repeated .service_layer.SLRoutev6 Entries = 5;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->entries(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev6GetMsgRsp)
  return target;
}

size_t SLRoutev6GetMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev6GetMsgRsp)
  size_t total_size = 0;

  // repeated .service_layer.SLRoutev6 Entries = 5;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  // string VrfName = 3;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  // .service_layer.SLErrorStatus ErrStatus = 4;
  if (this->has_errstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->errstatus_);
  }

  // uint64 Correlator = 1;
  if (this->correlator() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->correlator());
  }

  // bool Eof = 2;
  if (this->eof() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev6GetMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev6GetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev6GetMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev6GetMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev6GetMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev6GetMsgRsp)
    MergeFrom(*source);
  }
}

void SLRoutev6GetMsgRsp::MergeFrom(const SLRoutev6GetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev6GetMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entries_.MergeFrom(from.entries_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  if (from.has_errstatus()) {
    mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
  }
  if (from.correlator() != 0) {
    set_correlator(from.correlator());
  }
  if (from.eof() != 0) {
    set_eof(from.eof());
  }
}

void SLRoutev6GetMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev6GetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev6GetMsgRsp::CopyFrom(const SLRoutev6GetMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev6GetMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev6GetMsgRsp::IsInitialized() const {
  return true;
}

void SLRoutev6GetMsgRsp::Swap(SLRoutev6GetMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev6GetMsgRsp::InternalSwap(SLRoutev6GetMsgRsp* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  vrfname_.Swap(&other->vrfname_);
  std::swap(errstatus_, other->errstatus_);
  std::swap(correlator_, other->correlator_);
  std::swap(eof_, other->eof_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev6GetMsgRsp::GetMetadata() const {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev6GetMsgRsp

// uint64 Correlator = 1;
void SLRoutev6GetMsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SLRoutev6GetMsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.Correlator)
  return correlator_;
}
void SLRoutev6GetMsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsgRsp.Correlator)
}

// bool Eof = 2;
void SLRoutev6GetMsgRsp::clear_eof() {
  eof_ = false;
}
bool SLRoutev6GetMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.Eof)
  return eof_;
}
void SLRoutev6GetMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsgRsp.Eof)
}

// string VrfName = 3;
void SLRoutev6GetMsgRsp::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRoutev6GetMsgRsp::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.VrfName)
  return vrfname_.GetNoArena();
}
void SLRoutev6GetMsgRsp::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsgRsp.VrfName)
}
#if LANG_CXX11
void SLRoutev6GetMsgRsp::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6GetMsgRsp.VrfName)
}
#endif
void SLRoutev6GetMsgRsp::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6GetMsgRsp.VrfName)
}
void SLRoutev6GetMsgRsp::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6GetMsgRsp.VrfName)
}
::std::string* SLRoutev6GetMsgRsp::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsgRsp.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRoutev6GetMsgRsp::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6GetMsgRsp.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRoutev6GetMsgRsp::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsgRsp.VrfName)
}

// .service_layer.SLErrorStatus ErrStatus = 4;
bool SLRoutev6GetMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
void SLRoutev6GetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
const ::service_layer::SLErrorStatus& SLRoutev6GetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
::service_layer::SLErrorStatus* SLRoutev6GetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsgRsp.ErrStatus)
  return errstatus_;
}
::service_layer::SLErrorStatus* SLRoutev6GetMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6GetMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
void SLRoutev6GetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsgRsp.ErrStatus)
}

// repeated .service_layer.SLRoutev6 Entries = 5;
int SLRoutev6GetMsgRsp::entries_size() const {
  return entries_.size();
}
void SLRoutev6GetMsgRsp::clear_entries() {
  entries_.Clear();
}
const ::service_layer::SLRoutev6& SLRoutev6GetMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_.Get(index);
}
::service_layer::SLRoutev6* SLRoutev6GetMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_.Mutable(index);
}
::service_layer::SLRoutev6* SLRoutev6GetMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
SLRoutev6GetMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6GetMsgRsp.Entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
SLRoutev6GetMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev6NotifRoute::kVrfNameFieldNumber;
const int SLRoutev6NotifRoute::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev6NotifRoute::SLRoutev6NotifRoute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev6NotifRoute)
}
SLRoutev6NotifRoute::SLRoutev6NotifRoute(const SLRoutev6NotifRoute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entries_(from.entries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrfname().size() > 0) {
    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev6NotifRoute)
}

void SLRoutev6NotifRoute::SharedCtor() {
  vrfname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SLRoutev6NotifRoute::~SLRoutev6NotifRoute() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev6NotifRoute)
  SharedDtor();
}

void SLRoutev6NotifRoute::SharedDtor() {
  vrfname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SLRoutev6NotifRoute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev6NotifRoute::descriptor() {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[6].descriptor;
}

const SLRoutev6NotifRoute& SLRoutev6NotifRoute::default_instance() {
  protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRoutev6NotifRoute* SLRoutev6NotifRoute::New(::google::protobuf::Arena* arena) const {
  SLRoutev6NotifRoute* n = new SLRoutev6NotifRoute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev6NotifRoute::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev6NotifRoute)
  entries_.Clear();
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SLRoutev6NotifRoute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev6NotifRoute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string VrfName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vrfname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vrfname().data(), this->vrfname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "service_layer.SLRoutev6NotifRoute.VrfName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .service_layer.SLRoutev6 Entries = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_entries()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev6NotifRoute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev6NotifRoute)
  return false;
#undef DO_
}

void SLRoutev6NotifRoute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev6NotifRoute)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev6NotifRoute.VrfName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vrfname(), output);
  }

  // repeated .service_layer.SLRoutev6 Entries = 2;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->entries(i), output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev6NotifRoute)
}

::google::protobuf::uint8* SLRoutev6NotifRoute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev6NotifRoute)
  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vrfname().data(), this->vrfname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLRoutev6NotifRoute.VrfName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vrfname(), target);
  }

  // repeated .service_layer.SLRoutev6 Entries = 2;
  for (unsigned int i = 0, n = this->entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->entries(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev6NotifRoute)
  return target;
}

size_t SLRoutev6NotifRoute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev6NotifRoute)
  size_t total_size = 0;

  // repeated .service_layer.SLRoutev6 Entries = 2;
  {
    unsigned int count = this->entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->entries(i));
    }
  }

  // string VrfName = 1;
  if (this->vrfname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vrfname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev6NotifRoute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev6NotifRoute)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev6NotifRoute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev6NotifRoute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev6NotifRoute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev6NotifRoute)
    MergeFrom(*source);
  }
}

void SLRoutev6NotifRoute::MergeFrom(const SLRoutev6NotifRoute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev6NotifRoute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entries_.MergeFrom(from.entries_);
  if (from.vrfname().size() > 0) {

    vrfname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrfname_);
  }
}

void SLRoutev6NotifRoute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev6NotifRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev6NotifRoute::CopyFrom(const SLRoutev6NotifRoute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev6NotifRoute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev6NotifRoute::IsInitialized() const {
  return true;
}

void SLRoutev6NotifRoute::Swap(SLRoutev6NotifRoute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev6NotifRoute::InternalSwap(SLRoutev6NotifRoute* other) {
  entries_.UnsafeArenaSwap(&other->entries_);
  vrfname_.Swap(&other->vrfname_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev6NotifRoute::GetMetadata() const {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev6NotifRoute

// string VrfName = 1;
void SLRoutev6NotifRoute::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SLRoutev6NotifRoute::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6NotifRoute.VrfName)
  return vrfname_.GetNoArena();
}
void SLRoutev6NotifRoute::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6NotifRoute.VrfName)
}
#if LANG_CXX11
void SLRoutev6NotifRoute::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6NotifRoute.VrfName)
}
#endif
void SLRoutev6NotifRoute::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6NotifRoute.VrfName)
}
void SLRoutev6NotifRoute::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6NotifRoute.VrfName)
}
::std::string* SLRoutev6NotifRoute::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6NotifRoute.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SLRoutev6NotifRoute::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6NotifRoute.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SLRoutev6NotifRoute::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6NotifRoute.VrfName)
}

// repeated .service_layer.SLRoutev6 Entries = 2;
int SLRoutev6NotifRoute::entries_size() const {
  return entries_.size();
}
void SLRoutev6NotifRoute::clear_entries() {
  entries_.Clear();
}
const ::service_layer::SLRoutev6& SLRoutev6NotifRoute::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6NotifRoute.Entries)
  return entries_.Get(index);
}
::service_layer::SLRoutev6* SLRoutev6NotifRoute::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6NotifRoute.Entries)
  return entries_.Mutable(index);
}
::service_layer::SLRoutev6* SLRoutev6NotifRoute::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6NotifRoute.Entries)
  return entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
SLRoutev6NotifRoute::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6NotifRoute.Entries)
  return &entries_;
}
const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
SLRoutev6NotifRoute::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6NotifRoute.Entries)
  return entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SLRoutev6Notif::kEventTypeFieldNumber;
const int SLRoutev6Notif::kErrStatusFieldNumber;
const int SLRoutev6Notif::kNotifStatusFieldNumber;
const int SLRoutev6Notif::kRouteFieldNumber;
const int SLRoutev6Notif::kMarkerFieldNumber;
const int SLRoutev6Notif::kVrfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SLRoutev6Notif::SLRoutev6Notif()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_layer.SLRoutev6Notif)
}
SLRoutev6Notif::SLRoutev6Notif(const SLRoutev6Notif& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eventtype_ = from.eventtype_;
  clear_has_Event();
  switch (from.Event_case()) {
    case kErrStatus: {
      mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
      break;
    }
    case kNotifStatus: {
      mutable_notifstatus()->::service_layer::SLRouteNotifStatus::MergeFrom(from.notifstatus());
      break;
    }
    case kRoute: {
      mutable_route()->::service_layer::SLRoutev6NotifRoute::MergeFrom(from.route());
      break;
    }
    case kMarker: {
      mutable_marker()->::service_layer::SLRouteNotifMarker::MergeFrom(from.marker());
      break;
    }
    case kVrf: {
      mutable_vrf()->::service_layer::SLVrfNotif::MergeFrom(from.vrf());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLRoutev6Notif)
}

void SLRoutev6Notif::SharedCtor() {
  eventtype_ = 0;
  clear_has_Event();
  _cached_size_ = 0;
}

SLRoutev6Notif::~SLRoutev6Notif() {
  // @@protoc_insertion_point(destructor:service_layer.SLRoutev6Notif)
  SharedDtor();
}

void SLRoutev6Notif::SharedDtor() {
  if (has_Event()) {
    clear_Event();
  }
}

void SLRoutev6Notif::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SLRoutev6Notif::descriptor() {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[7].descriptor;
}

const SLRoutev6Notif& SLRoutev6Notif::default_instance() {
  protobuf_sl_5froute_5fipv6_2eproto::InitDefaults();
  return *internal_default_instance();
}

SLRoutev6Notif* SLRoutev6Notif::New(::google::protobuf::Arena* arena) const {
  SLRoutev6Notif* n = new SLRoutev6Notif;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SLRoutev6Notif::clear_Event() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLRoutev6Notif)
  switch (Event_case()) {
    case kErrStatus: {
      delete Event_.errstatus_;
      break;
    }
    case kNotifStatus: {
      delete Event_.notifstatus_;
      break;
    }
    case kRoute: {
      delete Event_.route_;
      break;
    }
    case kMarker: {
      delete Event_.marker_;
      break;
    }
    case kVrf: {
      delete Event_.vrf_;
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = EVENT_NOT_SET;
}


void SLRoutev6Notif::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLRoutev6Notif)
  eventtype_ = 0;
  clear_Event();
}

bool SLRoutev6Notif::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:service_layer.SLRoutev6Notif)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .service_layer.SLNotifType EventType = 1;
      case 1: {
        if (tag == 8u) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_eventtype(static_cast< ::service_layer::SLNotifType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLErrorStatus ErrStatus = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_errstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLRouteNotifStatus NotifStatus = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_notifstatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLRoutev6NotifRoute Route = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_route()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLRouteNotifMarker Marker = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_marker()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .service_layer.SLVrfNotif Vrf = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vrf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:service_layer.SLRoutev6Notif)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:service_layer.SLRoutev6Notif)
  return false;
#undef DO_
}

void SLRoutev6Notif::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:service_layer.SLRoutev6Notif)
  // .service_layer.SLNotifType EventType = 1;
  if (this->eventtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->eventtype(), output);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (has_errstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *Event_.errstatus_, output);
  }

  // .service_layer.SLRouteNotifStatus NotifStatus = 3;
  if (has_notifstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *Event_.notifstatus_, output);
  }

  // .service_layer.SLRoutev6NotifRoute Route = 4;
  if (has_route()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *Event_.route_, output);
  }

  // .service_layer.SLRouteNotifMarker Marker = 5;
  if (has_marker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *Event_.marker_, output);
  }

  // .service_layer.SLVrfNotif Vrf = 6;
  if (has_vrf()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *Event_.vrf_, output);
  }

  // @@protoc_insertion_point(serialize_end:service_layer.SLRoutev6Notif)
}

::google::protobuf::uint8* SLRoutev6Notif::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLRoutev6Notif)
  // .service_layer.SLNotifType EventType = 1;
  if (this->eventtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->eventtype(), target);
  }

  // .service_layer.SLErrorStatus ErrStatus = 2;
  if (has_errstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *Event_.errstatus_, false, target);
  }

  // .service_layer.SLRouteNotifStatus NotifStatus = 3;
  if (has_notifstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *Event_.notifstatus_, false, target);
  }

  // .service_layer.SLRoutev6NotifRoute Route = 4;
  if (has_route()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *Event_.route_, false, target);
  }

  // .service_layer.SLRouteNotifMarker Marker = 5;
  if (has_marker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *Event_.marker_, false, target);
  }

  // .service_layer.SLVrfNotif Vrf = 6;
  if (has_vrf()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *Event_.vrf_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLRoutev6Notif)
  return target;
}

size_t SLRoutev6Notif::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLRoutev6Notif)
  size_t total_size = 0;

  // .service_layer.SLNotifType EventType = 1;
  if (this->eventtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->eventtype());
  }

  switch (Event_case()) {
    // .service_layer.SLErrorStatus ErrStatus = 2;
    case kErrStatus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *Event_.errstatus_);
      break;
    }
    // .service_layer.SLRouteNotifStatus NotifStatus = 3;
    case kNotifStatus: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *Event_.notifstatus_);
      break;
    }
    // .service_layer.SLRoutev6NotifRoute Route = 4;
    case kRoute: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *Event_.route_);
      break;
    }
    // .service_layer.SLRouteNotifMarker Marker = 5;
    case kMarker: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *Event_.marker_);
      break;
    }
    // .service_layer.SLVrfNotif Vrf = 6;
    case kVrf: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *Event_.vrf_);
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SLRoutev6Notif::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_layer.SLRoutev6Notif)
  GOOGLE_DCHECK_NE(&from, this);
  const SLRoutev6Notif* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SLRoutev6Notif>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_layer.SLRoutev6Notif)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_layer.SLRoutev6Notif)
    MergeFrom(*source);
  }
}

void SLRoutev6Notif::MergeFrom(const SLRoutev6Notif& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLRoutev6Notif)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.eventtype() != 0) {
    set_eventtype(from.eventtype());
  }
  switch (from.Event_case()) {
    case kErrStatus: {
      mutable_errstatus()->::service_layer::SLErrorStatus::MergeFrom(from.errstatus());
      break;
    }
    case kNotifStatus: {
      mutable_notifstatus()->::service_layer::SLRouteNotifStatus::MergeFrom(from.notifstatus());
      break;
    }
    case kRoute: {
      mutable_route()->::service_layer::SLRoutev6NotifRoute::MergeFrom(from.route());
      break;
    }
    case kMarker: {
      mutable_marker()->::service_layer::SLRouteNotifMarker::MergeFrom(from.marker());
      break;
    }
    case kVrf: {
      mutable_vrf()->::service_layer::SLVrfNotif::MergeFrom(from.vrf());
      break;
    }
    case EVENT_NOT_SET: {
      break;
    }
  }
}

void SLRoutev6Notif::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_layer.SLRoutev6Notif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SLRoutev6Notif::CopyFrom(const SLRoutev6Notif& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLRoutev6Notif)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLRoutev6Notif::IsInitialized() const {
  return true;
}

void SLRoutev6Notif::Swap(SLRoutev6Notif* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SLRoutev6Notif::InternalSwap(SLRoutev6Notif* other) {
  std::swap(eventtype_, other->eventtype_);
  std::swap(Event_, other->Event_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SLRoutev6Notif::GetMetadata() const {
  protobuf_sl_5froute_5fipv6_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_sl_5froute_5fipv6_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev6Notif

// .service_layer.SLNotifType EventType = 1;
void SLRoutev6Notif::clear_eventtype() {
  eventtype_ = 0;
}
::service_layer::SLNotifType SLRoutev6Notif::eventtype() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.EventType)
  return static_cast< ::service_layer::SLNotifType >(eventtype_);
}
void SLRoutev6Notif::set_eventtype(::service_layer::SLNotifType value) {
  
  eventtype_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Notif.EventType)
}

// .service_layer.SLErrorStatus ErrStatus = 2;
bool SLRoutev6Notif::has_errstatus() const {
  return Event_case() == kErrStatus;
}
void SLRoutev6Notif::set_has_errstatus() {
  _oneof_case_[0] = kErrStatus;
}
void SLRoutev6Notif::clear_errstatus() {
  if (has_errstatus()) {
    delete Event_.errstatus_;
    clear_has_Event();
  }
}
 const ::service_layer::SLErrorStatus& SLRoutev6Notif::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.ErrStatus)
  return has_errstatus()
      ? *Event_.errstatus_
      : ::service_layer::SLErrorStatus::default_instance();
}
::service_layer::SLErrorStatus* SLRoutev6Notif::mutable_errstatus() {
  if (!has_errstatus()) {
    clear_Event();
    set_has_errstatus();
    Event_.errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Notif.ErrStatus)
  return Event_.errstatus_;
}
::service_layer::SLErrorStatus* SLRoutev6Notif::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Notif.ErrStatus)
  if (has_errstatus()) {
    clear_has_Event();
    ::service_layer::SLErrorStatus* temp = Event_.errstatus_;
    Event_.errstatus_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SLRoutev6Notif::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  clear_Event();
  if (errstatus) {
    set_has_errstatus();
    Event_.errstatus_ = errstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Notif.ErrStatus)
}

// .service_layer.SLRouteNotifStatus NotifStatus = 3;
bool SLRoutev6Notif::has_notifstatus() const {
  return Event_case() == kNotifStatus;
}
void SLRoutev6Notif::set_has_notifstatus() {
  _oneof_case_[0] = kNotifStatus;
}
void SLRoutev6Notif::clear_notifstatus() {
  if (has_notifstatus()) {
    delete Event_.notifstatus_;
    clear_has_Event();
  }
}
 const ::service_layer::SLRouteNotifStatus& SLRoutev6Notif::notifstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.NotifStatus)
  return has_notifstatus()
      ? *Event_.notifstatus_
      : ::service_layer::SLRouteNotifStatus::default_instance();
}
::service_layer::SLRouteNotifStatus* SLRoutev6Notif::mutable_notifstatus() {
  if (!has_notifstatus()) {
    clear_Event();
    set_has_notifstatus();
    Event_.notifstatus_ = new ::service_layer::SLRouteNotifStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Notif.NotifStatus)
  return Event_.notifstatus_;
}
::service_layer::SLRouteNotifStatus* SLRoutev6Notif::release_notifstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Notif.NotifStatus)
  if (has_notifstatus()) {
    clear_has_Event();
    ::service_layer::SLRouteNotifStatus* temp = Event_.notifstatus_;
    Event_.notifstatus_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SLRoutev6Notif::set_allocated_notifstatus(::service_layer::SLRouteNotifStatus* notifstatus) {
  clear_Event();
  if (notifstatus) {
    set_has_notifstatus();
    Event_.notifstatus_ = notifstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Notif.NotifStatus)
}

// .service_layer.SLRoutev6NotifRoute Route = 4;
bool SLRoutev6Notif::has_route() const {
  return Event_case() == kRoute;
}
void SLRoutev6Notif::set_has_route() {
  _oneof_case_[0] = kRoute;
}
void SLRoutev6Notif::clear_route() {
  if (has_route()) {
    delete Event_.route_;
    clear_has_Event();
  }
}
 const ::service_layer::SLRoutev6NotifRoute& SLRoutev6Notif::route() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.Route)
  return has_route()
      ? *Event_.route_
      : ::service_layer::SLRoutev6NotifRoute::default_instance();
}
::service_layer::SLRoutev6NotifRoute* SLRoutev6Notif::mutable_route() {
  if (!has_route()) {
    clear_Event();
    set_has_route();
    Event_.route_ = new ::service_layer::SLRoutev6NotifRoute;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Notif.Route)
  return Event_.route_;
}
::service_layer::SLRoutev6NotifRoute* SLRoutev6Notif::release_route() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Notif.Route)
  if (has_route()) {
    clear_has_Event();
    ::service_layer::SLRoutev6NotifRoute* temp = Event_.route_;
    Event_.route_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SLRoutev6Notif::set_allocated_route(::service_layer::SLRoutev6NotifRoute* route) {
  clear_Event();
  if (route) {
    set_has_route();
    Event_.route_ = route;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Notif.Route)
}

// .service_layer.SLRouteNotifMarker Marker = 5;
bool SLRoutev6Notif::has_marker() const {
  return Event_case() == kMarker;
}
void SLRoutev6Notif::set_has_marker() {
  _oneof_case_[0] = kMarker;
}
void SLRoutev6Notif::clear_marker() {
  if (has_marker()) {
    delete Event_.marker_;
    clear_has_Event();
  }
}
 const ::service_layer::SLRouteNotifMarker& SLRoutev6Notif::marker() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.Marker)
  return has_marker()
      ? *Event_.marker_
      : ::service_layer::SLRouteNotifMarker::default_instance();
}
::service_layer::SLRouteNotifMarker* SLRoutev6Notif::mutable_marker() {
  if (!has_marker()) {
    clear_Event();
    set_has_marker();
    Event_.marker_ = new ::service_layer::SLRouteNotifMarker;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Notif.Marker)
  return Event_.marker_;
}
::service_layer::SLRouteNotifMarker* SLRoutev6Notif::release_marker() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Notif.Marker)
  if (has_marker()) {
    clear_has_Event();
    ::service_layer::SLRouteNotifMarker* temp = Event_.marker_;
    Event_.marker_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SLRoutev6Notif::set_allocated_marker(::service_layer::SLRouteNotifMarker* marker) {
  clear_Event();
  if (marker) {
    set_has_marker();
    Event_.marker_ = marker;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Notif.Marker)
}

// .service_layer.SLVrfNotif Vrf = 6;
bool SLRoutev6Notif::has_vrf() const {
  return Event_case() == kVrf;
}
void SLRoutev6Notif::set_has_vrf() {
  _oneof_case_[0] = kVrf;
}
void SLRoutev6Notif::clear_vrf() {
  if (has_vrf()) {
    delete Event_.vrf_;
    clear_has_Event();
  }
}
 const ::service_layer::SLVrfNotif& SLRoutev6Notif::vrf() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.Vrf)
  return has_vrf()
      ? *Event_.vrf_
      : ::service_layer::SLVrfNotif::default_instance();
}
::service_layer::SLVrfNotif* SLRoutev6Notif::mutable_vrf() {
  if (!has_vrf()) {
    clear_Event();
    set_has_vrf();
    Event_.vrf_ = new ::service_layer::SLVrfNotif;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Notif.Vrf)
  return Event_.vrf_;
}
::service_layer::SLVrfNotif* SLRoutev6Notif::release_vrf() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Notif.Vrf)
  if (has_vrf()) {
    clear_has_Event();
    ::service_layer::SLVrfNotif* temp = Event_.vrf_;
    Event_.vrf_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SLRoutev6Notif::set_allocated_vrf(::service_layer::SLVrfNotif* vrf) {
  clear_Event();
  if (vrf) {
    set_has_vrf();
    Event_.vrf_ = vrf;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Notif.Vrf)
}

bool SLRoutev6Notif::has_Event() const {
  return Event_case() != EVENT_NOT_SET;
}
void SLRoutev6Notif::clear_has_Event() {
  _oneof_case_[0] = EVENT_NOT_SET;
}
SLRoutev6Notif::EventCase SLRoutev6Notif::Event_case() const {
  return SLRoutev6Notif::EventCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace service_layer

// @@protoc_insertion_point(global_scope)
