// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_route_ipv6.proto

#ifndef PROTOBUF_sl_5froute_5fipv6_2eproto__INCLUDED
#define PROTOBUF_sl_5froute_5fipv6_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "sl_common_types.pb.h"
#include "sl_route_common.pb.h"
// @@protoc_insertion_point(includes)
namespace service_layer {
class SLErrorStatus;
class SLErrorStatusDefaultTypeInternal;
extern SLErrorStatusDefaultTypeInternal _SLErrorStatus_default_instance_;
class SLInterface;
class SLInterfaceDefaultTypeInternal;
extern SLInterfaceDefaultTypeInternal _SLInterface_default_instance_;
class SLIpAddress;
class SLIpAddressDefaultTypeInternal;
extern SLIpAddressDefaultTypeInternal _SLIpAddress_default_instance_;
class SLRouteCommon;
class SLRouteCommonDefaultTypeInternal;
extern SLRouteCommonDefaultTypeInternal _SLRouteCommon_default_instance_;
class SLRouteGetNotifMsg;
class SLRouteGetNotifMsgDefaultTypeInternal;
extern SLRouteGetNotifMsgDefaultTypeInternal _SLRouteGetNotifMsg_default_instance_;
class SLRouteGlobalStatsGetMsg;
class SLRouteGlobalStatsGetMsgDefaultTypeInternal;
extern SLRouteGlobalStatsGetMsgDefaultTypeInternal _SLRouteGlobalStatsGetMsg_default_instance_;
class SLRouteGlobalStatsGetMsgRsp;
class SLRouteGlobalStatsGetMsgRspDefaultTypeInternal;
extern SLRouteGlobalStatsGetMsgRspDefaultTypeInternal _SLRouteGlobalStatsGetMsgRsp_default_instance_;
class SLRouteGlobalsGetMsg;
class SLRouteGlobalsGetMsgDefaultTypeInternal;
extern SLRouteGlobalsGetMsgDefaultTypeInternal _SLRouteGlobalsGetMsg_default_instance_;
class SLRouteGlobalsGetMsgRsp;
class SLRouteGlobalsGetMsgRspDefaultTypeInternal;
extern SLRouteGlobalsGetMsgRspDefaultTypeInternal _SLRouteGlobalsGetMsgRsp_default_instance_;
class SLRouteNotifMarker;
class SLRouteNotifMarkerDefaultTypeInternal;
extern SLRouteNotifMarkerDefaultTypeInternal _SLRouteNotifMarker_default_instance_;
class SLRouteNotifStatus;
class SLRouteNotifStatusDefaultTypeInternal;
extern SLRouteNotifStatusDefaultTypeInternal _SLRouteNotifStatus_default_instance_;
class SLRoutePath;
class SLRoutePathDefaultTypeInternal;
extern SLRoutePathDefaultTypeInternal _SLRoutePath_default_instance_;
class SLRoutev6;
class SLRoutev6DefaultTypeInternal;
extern SLRoutev6DefaultTypeInternal _SLRoutev6_default_instance_;
class SLRoutev6GetMsg;
class SLRoutev6GetMsgDefaultTypeInternal;
extern SLRoutev6GetMsgDefaultTypeInternal _SLRoutev6GetMsg_default_instance_;
class SLRoutev6GetMsgRsp;
class SLRoutev6GetMsgRspDefaultTypeInternal;
extern SLRoutev6GetMsgRspDefaultTypeInternal _SLRoutev6GetMsgRsp_default_instance_;
class SLRoutev6Msg;
class SLRoutev6MsgDefaultTypeInternal;
extern SLRoutev6MsgDefaultTypeInternal _SLRoutev6Msg_default_instance_;
class SLRoutev6MsgRsp;
class SLRoutev6MsgRspDefaultTypeInternal;
extern SLRoutev6MsgRspDefaultTypeInternal _SLRoutev6MsgRsp_default_instance_;
class SLRoutev6Notif;
class SLRoutev6NotifDefaultTypeInternal;
extern SLRoutev6NotifDefaultTypeInternal _SLRoutev6Notif_default_instance_;
class SLRoutev6NotifRoute;
class SLRoutev6NotifRouteDefaultTypeInternal;
extern SLRoutev6NotifRouteDefaultTypeInternal _SLRoutev6NotifRoute_default_instance_;
class SLRoutev6Res;
class SLRoutev6ResDefaultTypeInternal;
extern SLRoutev6ResDefaultTypeInternal _SLRoutev6Res_default_instance_;
class SLVRFGetStatsMsgRes;
class SLVRFGetStatsMsgResDefaultTypeInternal;
extern SLVRFGetStatsMsgResDefaultTypeInternal _SLVRFGetStatsMsgRes_default_instance_;
class SLVRFGetStatsMsgRsp;
class SLVRFGetStatsMsgRspDefaultTypeInternal;
extern SLVRFGetStatsMsgRspDefaultTypeInternal _SLVRFGetStatsMsgRsp_default_instance_;
class SLVrfNotif;
class SLVrfNotifDefaultTypeInternal;
extern SLVrfNotifDefaultTypeInternal _SLVrfNotif_default_instance_;
class SLVrfReg;
class SLVrfRegDefaultTypeInternal;
extern SLVrfRegDefaultTypeInternal _SLVrfReg_default_instance_;
class SLVrfRegGetMsg;
class SLVrfRegGetMsgDefaultTypeInternal;
extern SLVrfRegGetMsgDefaultTypeInternal _SLVrfRegGetMsg_default_instance_;
class SLVrfRegGetMsgRsp;
class SLVrfRegGetMsgRspDefaultTypeInternal;
extern SLVrfRegGetMsgRspDefaultTypeInternal _SLVrfRegGetMsgRsp_default_instance_;
class SLVrfRegMsg;
class SLVrfRegMsgDefaultTypeInternal;
extern SLVrfRegMsgDefaultTypeInternal _SLVrfRegMsg_default_instance_;
class SLVrfRegMsgRes;
class SLVrfRegMsgResDefaultTypeInternal;
extern SLVrfRegMsgResDefaultTypeInternal _SLVrfRegMsgRes_default_instance_;
class SLVrfRegMsgRsp;
class SLVrfRegMsgRspDefaultTypeInternal;
extern SLVrfRegMsgRspDefaultTypeInternal _SLVrfRegMsgRsp_default_instance_;
}  // namespace service_layer

namespace service_layer {

namespace protobuf_sl_5froute_5fipv6_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_sl_5froute_5fipv6_2eproto

// ===================================================================

class SLRoutev6 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev6) */ {
 public:
  SLRoutev6();
  virtual ~SLRoutev6();

  SLRoutev6(const SLRoutev6& from);

  inline SLRoutev6& operator=(const SLRoutev6& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6& default_instance();

  static inline const SLRoutev6* internal_default_instance() {
    return reinterpret_cast<const SLRoutev6*>(
               &_SLRoutev6_default_instance_);
  }

  void Swap(SLRoutev6* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev6* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev6& from);
  void MergeFrom(const SLRoutev6& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev6* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLRoutePath PathList = 4;
  int pathlist_size() const;
  void clear_pathlist();
  static const int kPathListFieldNumber = 4;
  const ::service_layer::SLRoutePath& pathlist(int index) const;
  ::service_layer::SLRoutePath* mutable_pathlist(int index);
  ::service_layer::SLRoutePath* add_pathlist();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >*
      mutable_pathlist();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >&
      pathlist() const;

  // bytes Prefix = 1;
  void clear_prefix();
  static const int kPrefixFieldNumber = 1;
  const ::std::string& prefix() const;
  void set_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_prefix(::std::string&& value);
  #endif
  void set_prefix(const char* value);
  void set_prefix(const void* value, size_t size);
  ::std::string* mutable_prefix();
  ::std::string* release_prefix();
  void set_allocated_prefix(::std::string* prefix);

  // .service_layer.SLRouteCommon RouteCommon = 3;
  bool has_routecommon() const;
  void clear_routecommon();
  static const int kRouteCommonFieldNumber = 3;
  const ::service_layer::SLRouteCommon& routecommon() const;
  ::service_layer::SLRouteCommon* mutable_routecommon();
  ::service_layer::SLRouteCommon* release_routecommon();
  void set_allocated_routecommon(::service_layer::SLRouteCommon* routecommon);

  // uint32 PrefixLen = 2;
  void clear_prefixlen();
  static const int kPrefixLenFieldNumber = 2;
  ::google::protobuf::uint32 prefixlen() const;
  void set_prefixlen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath > pathlist_;
  ::google::protobuf::internal::ArenaStringPtr prefix_;
  ::service_layer::SLRouteCommon* routecommon_;
  ::google::protobuf::uint32 prefixlen_;
  mutable int _cached_size_;
  friend struct  protobuf_sl_5froute_5fipv6_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SLRoutev6Msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev6Msg) */ {
 public:
  SLRoutev6Msg();
  virtual ~SLRoutev6Msg();

  SLRoutev6Msg(const SLRoutev6Msg& from);

  inline SLRoutev6Msg& operator=(const SLRoutev6Msg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6Msg& default_instance();

  static inline const SLRoutev6Msg* internal_default_instance() {
    return reinterpret_cast<const SLRoutev6Msg*>(
               &_SLRoutev6Msg_default_instance_);
  }

  void Swap(SLRoutev6Msg* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6Msg* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev6Msg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev6Msg& from);
  void MergeFrom(const SLRoutev6Msg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev6Msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLRoutev6 Routes = 4;
  int routes_size() const;
  void clear_routes();
  static const int kRoutesFieldNumber = 4;
  const ::service_layer::SLRoutev6& routes(int index) const;
  ::service_layer::SLRoutev6* mutable_routes(int index);
  ::service_layer::SLRoutev6* add_routes();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
      mutable_routes();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
      routes() const;

  // string VrfName = 3;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 3;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // uint64 Correlator = 2;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 2;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // .service_layer.SLObjectOp Oper = 1;
  void clear_oper();
  static const int kOperFieldNumber = 1;
  ::service_layer::SLObjectOp oper() const;
  void set_oper(::service_layer::SLObjectOp value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6Msg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 > routes_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::google::protobuf::uint64 correlator_;
  int oper_;
  mutable int _cached_size_;
  friend struct  protobuf_sl_5froute_5fipv6_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SLRoutev6Res : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev6Res) */ {
 public:
  SLRoutev6Res();
  virtual ~SLRoutev6Res();

  SLRoutev6Res(const SLRoutev6Res& from);

  inline SLRoutev6Res& operator=(const SLRoutev6Res& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6Res& default_instance();

  static inline const SLRoutev6Res* internal_default_instance() {
    return reinterpret_cast<const SLRoutev6Res*>(
               &_SLRoutev6Res_default_instance_);
  }

  void Swap(SLRoutev6Res* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6Res* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev6Res* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev6Res& from);
  void MergeFrom(const SLRoutev6Res& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev6Res* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes Prefix = 2;
  void clear_prefix();
  static const int kPrefixFieldNumber = 2;
  const ::std::string& prefix() const;
  void set_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_prefix(::std::string&& value);
  #endif
  void set_prefix(const char* value);
  void set_prefix(const void* value, size_t size);
  ::std::string* mutable_prefix();
  ::std::string* release_prefix();
  void set_allocated_prefix(::std::string* prefix);

  // .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // uint32 PrefixLen = 3;
  void clear_prefixlen();
  static const int kPrefixLenFieldNumber = 3;
  ::google::protobuf::uint32 prefixlen() const;
  void set_prefixlen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6Res)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr prefix_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::uint32 prefixlen_;
  mutable int _cached_size_;
  friend struct  protobuf_sl_5froute_5fipv6_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SLRoutev6MsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev6MsgRsp) */ {
 public:
  SLRoutev6MsgRsp();
  virtual ~SLRoutev6MsgRsp();

  SLRoutev6MsgRsp(const SLRoutev6MsgRsp& from);

  inline SLRoutev6MsgRsp& operator=(const SLRoutev6MsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6MsgRsp& default_instance();

  static inline const SLRoutev6MsgRsp* internal_default_instance() {
    return reinterpret_cast<const SLRoutev6MsgRsp*>(
               &_SLRoutev6MsgRsp_default_instance_);
  }

  void Swap(SLRoutev6MsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6MsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev6MsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev6MsgRsp& from);
  void MergeFrom(const SLRoutev6MsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev6MsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLRoutev6Res Results = 4;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 4;
  const ::service_layer::SLRoutev6Res& results(int index) const;
  ::service_layer::SLRoutev6Res* mutable_results(int index);
  ::service_layer::SLRoutev6Res* add_results();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res >&
      results() const;

  // string VrfName = 2;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 2;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // .service_layer.SLErrorStatus StatusSummary = 3;
  bool has_statussummary() const;
  void clear_statussummary();
  static const int kStatusSummaryFieldNumber = 3;
  const ::service_layer::SLErrorStatus& statussummary() const;
  ::service_layer::SLErrorStatus* mutable_statussummary();
  ::service_layer::SLErrorStatus* release_statussummary();
  void set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary);

  // uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6MsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res > results_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::service_layer::SLErrorStatus* statussummary_;
  ::google::protobuf::uint64 correlator_;
  mutable int _cached_size_;
  friend struct  protobuf_sl_5froute_5fipv6_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SLRoutev6GetMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev6GetMsg) */ {
 public:
  SLRoutev6GetMsg();
  virtual ~SLRoutev6GetMsg();

  SLRoutev6GetMsg(const SLRoutev6GetMsg& from);

  inline SLRoutev6GetMsg& operator=(const SLRoutev6GetMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6GetMsg& default_instance();

  static inline const SLRoutev6GetMsg* internal_default_instance() {
    return reinterpret_cast<const SLRoutev6GetMsg*>(
               &_SLRoutev6GetMsg_default_instance_);
  }

  void Swap(SLRoutev6GetMsg* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6GetMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev6GetMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev6GetMsg& from);
  void MergeFrom(const SLRoutev6GetMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev6GetMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string VrfName = 2;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 2;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // bytes Prefix = 3;
  void clear_prefix();
  static const int kPrefixFieldNumber = 3;
  const ::std::string& prefix() const;
  void set_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_prefix(::std::string&& value);
  #endif
  void set_prefix(const char* value);
  void set_prefix(const void* value, size_t size);
  ::std::string* mutable_prefix();
  ::std::string* release_prefix();
  void set_allocated_prefix(::std::string* prefix);

  // uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // uint32 PrefixLen = 4;
  void clear_prefixlen();
  static const int kPrefixLenFieldNumber = 4;
  ::google::protobuf::uint32 prefixlen() const;
  void set_prefixlen(::google::protobuf::uint32 value);

  // uint32 EntriesCount = 5;
  void clear_entriescount();
  static const int kEntriesCountFieldNumber = 5;
  ::google::protobuf::uint32 entriescount() const;
  void set_entriescount(::google::protobuf::uint32 value);

  // bool GetNext = 6;
  void clear_getnext();
  static const int kGetNextFieldNumber = 6;
  bool getnext() const;
  void set_getnext(bool value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6GetMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::google::protobuf::internal::ArenaStringPtr prefix_;
  ::google::protobuf::uint64 correlator_;
  ::google::protobuf::uint32 prefixlen_;
  ::google::protobuf::uint32 entriescount_;
  bool getnext_;
  mutable int _cached_size_;
  friend struct  protobuf_sl_5froute_5fipv6_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SLRoutev6GetMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev6GetMsgRsp) */ {
 public:
  SLRoutev6GetMsgRsp();
  virtual ~SLRoutev6GetMsgRsp();

  SLRoutev6GetMsgRsp(const SLRoutev6GetMsgRsp& from);

  inline SLRoutev6GetMsgRsp& operator=(const SLRoutev6GetMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6GetMsgRsp& default_instance();

  static inline const SLRoutev6GetMsgRsp* internal_default_instance() {
    return reinterpret_cast<const SLRoutev6GetMsgRsp*>(
               &_SLRoutev6GetMsgRsp_default_instance_);
  }

  void Swap(SLRoutev6GetMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6GetMsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev6GetMsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev6GetMsgRsp& from);
  void MergeFrom(const SLRoutev6GetMsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev6GetMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLRoutev6 Entries = 5;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 5;
  const ::service_layer::SLRoutev6& entries(int index) const;
  ::service_layer::SLRoutev6* mutable_entries(int index);
  ::service_layer::SLRoutev6* add_entries();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
      entries() const;

  // string VrfName = 3;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 3;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // .service_layer.SLErrorStatus ErrStatus = 4;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 4;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // bool Eof = 2;
  void clear_eof();
  static const int kEofFieldNumber = 2;
  bool eof() const;
  void set_eof(bool value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6GetMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 > entries_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::uint64 correlator_;
  bool eof_;
  mutable int _cached_size_;
  friend struct  protobuf_sl_5froute_5fipv6_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SLRoutev6NotifRoute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev6NotifRoute) */ {
 public:
  SLRoutev6NotifRoute();
  virtual ~SLRoutev6NotifRoute();

  SLRoutev6NotifRoute(const SLRoutev6NotifRoute& from);

  inline SLRoutev6NotifRoute& operator=(const SLRoutev6NotifRoute& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6NotifRoute& default_instance();

  static inline const SLRoutev6NotifRoute* internal_default_instance() {
    return reinterpret_cast<const SLRoutev6NotifRoute*>(
               &_SLRoutev6NotifRoute_default_instance_);
  }

  void Swap(SLRoutev6NotifRoute* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6NotifRoute* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev6NotifRoute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev6NotifRoute& from);
  void MergeFrom(const SLRoutev6NotifRoute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev6NotifRoute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .service_layer.SLRoutev6 Entries = 2;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 2;
  const ::service_layer::SLRoutev6& entries(int index) const;
  ::service_layer::SLRoutev6* mutable_entries(int index);
  ::service_layer::SLRoutev6* add_entries();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
      entries() const;

  // string VrfName = 1;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 1;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  #if LANG_CXX11
  void set_vrfname(::std::string&& value);
  #endif
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6NotifRoute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 > entries_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  mutable int _cached_size_;
  friend struct  protobuf_sl_5froute_5fipv6_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SLRoutev6Notif : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:service_layer.SLRoutev6Notif) */ {
 public:
  SLRoutev6Notif();
  virtual ~SLRoutev6Notif();

  SLRoutev6Notif(const SLRoutev6Notif& from);

  inline SLRoutev6Notif& operator=(const SLRoutev6Notif& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6Notif& default_instance();

  enum EventCase {
    kErrStatus = 2,
    kNotifStatus = 3,
    kRoute = 4,
    kMarker = 5,
    kVrf = 6,
    EVENT_NOT_SET = 0,
  };

  static inline const SLRoutev6Notif* internal_default_instance() {
    return reinterpret_cast<const SLRoutev6Notif*>(
               &_SLRoutev6Notif_default_instance_);
  }

  void Swap(SLRoutev6Notif* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6Notif* New() const PROTOBUF_FINAL { return New(NULL); }

  SLRoutev6Notif* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SLRoutev6Notif& from);
  void MergeFrom(const SLRoutev6Notif& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SLRoutev6Notif* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .service_layer.SLNotifType EventType = 1;
  void clear_eventtype();
  static const int kEventTypeFieldNumber = 1;
  ::service_layer::SLNotifType eventtype() const;
  void set_eventtype(::service_layer::SLNotifType value);

  // .service_layer.SLErrorStatus ErrStatus = 2;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 2;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // .service_layer.SLRouteNotifStatus NotifStatus = 3;
  bool has_notifstatus() const;
  void clear_notifstatus();
  static const int kNotifStatusFieldNumber = 3;
  const ::service_layer::SLRouteNotifStatus& notifstatus() const;
  ::service_layer::SLRouteNotifStatus* mutable_notifstatus();
  ::service_layer::SLRouteNotifStatus* release_notifstatus();
  void set_allocated_notifstatus(::service_layer::SLRouteNotifStatus* notifstatus);

  // .service_layer.SLRoutev6NotifRoute Route = 4;
  bool has_route() const;
  void clear_route();
  static const int kRouteFieldNumber = 4;
  const ::service_layer::SLRoutev6NotifRoute& route() const;
  ::service_layer::SLRoutev6NotifRoute* mutable_route();
  ::service_layer::SLRoutev6NotifRoute* release_route();
  void set_allocated_route(::service_layer::SLRoutev6NotifRoute* route);

  // .service_layer.SLRouteNotifMarker Marker = 5;
  bool has_marker() const;
  void clear_marker();
  static const int kMarkerFieldNumber = 5;
  const ::service_layer::SLRouteNotifMarker& marker() const;
  ::service_layer::SLRouteNotifMarker* mutable_marker();
  ::service_layer::SLRouteNotifMarker* release_marker();
  void set_allocated_marker(::service_layer::SLRouteNotifMarker* marker);

  // .service_layer.SLVrfNotif Vrf = 6;
  bool has_vrf() const;
  void clear_vrf();
  static const int kVrfFieldNumber = 6;
  const ::service_layer::SLVrfNotif& vrf() const;
  ::service_layer::SLVrfNotif* mutable_vrf();
  ::service_layer::SLVrfNotif* release_vrf();
  void set_allocated_vrf(::service_layer::SLVrfNotif* vrf);

  EventCase Event_case() const;
  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6Notif)
 private:
  void set_has_errstatus();
  void set_has_notifstatus();
  void set_has_route();
  void set_has_marker();
  void set_has_vrf();

  inline bool has_Event() const;
  void clear_Event();
  inline void clear_has_Event();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int eventtype_;
  union EventUnion {
    EventUnion() {}
    ::service_layer::SLErrorStatus* errstatus_;
    ::service_layer::SLRouteNotifStatus* notifstatus_;
    ::service_layer::SLRoutev6NotifRoute* route_;
    ::service_layer::SLRouteNotifMarker* marker_;
    ::service_layer::SLVrfNotif* vrf_;
  } Event_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct  protobuf_sl_5froute_5fipv6_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev6

// bytes Prefix = 1;
inline void SLRoutev6::clear_prefix() {
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.Prefix)
  return prefix_.GetNoArena();
}
inline void SLRoutev6::set_prefix(const ::std::string& value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6.Prefix)
}
#if LANG_CXX11
inline void SLRoutev6::set_prefix(::std::string&& value) {
  
  prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6.Prefix)
}
#endif
inline void SLRoutev6::set_prefix(const char* value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6.Prefix)
}
inline void SLRoutev6::set_prefix(const void* value, size_t size) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6.Prefix)
}
inline ::std::string* SLRoutev6::mutable_prefix() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6.Prefix)
  return prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6::release_prefix() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6.Prefix)
  
  return prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6::set_allocated_prefix(::std::string* prefix) {
  if (prefix != NULL) {
    
  } else {
    
  }
  prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prefix);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6.Prefix)
}

// uint32 PrefixLen = 2;
inline void SLRoutev6::clear_prefixlen() {
  prefixlen_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev6::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.PrefixLen)
  return prefixlen_;
}
inline void SLRoutev6::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6.PrefixLen)
}

// .service_layer.SLRouteCommon RouteCommon = 3;
inline bool SLRoutev6::has_routecommon() const {
  return this != internal_default_instance() && routecommon_ != NULL;
}
inline void SLRoutev6::clear_routecommon() {
  if (GetArenaNoVirtual() == NULL && routecommon_ != NULL) delete routecommon_;
  routecommon_ = NULL;
}
inline const ::service_layer::SLRouteCommon& SLRoutev6::routecommon() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.RouteCommon)
  return routecommon_ != NULL ? *routecommon_
                         : *::service_layer::SLRouteCommon::internal_default_instance();
}
inline ::service_layer::SLRouteCommon* SLRoutev6::mutable_routecommon() {
  
  if (routecommon_ == NULL) {
    routecommon_ = new ::service_layer::SLRouteCommon;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6.RouteCommon)
  return routecommon_;
}
inline ::service_layer::SLRouteCommon* SLRoutev6::release_routecommon() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6.RouteCommon)
  
  ::service_layer::SLRouteCommon* temp = routecommon_;
  routecommon_ = NULL;
  return temp;
}
inline void SLRoutev6::set_allocated_routecommon(::service_layer::SLRouteCommon* routecommon) {
  delete routecommon_;
  routecommon_ = routecommon;
  if (routecommon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6.RouteCommon)
}

// repeated .service_layer.SLRoutePath PathList = 4;
inline int SLRoutev6::pathlist_size() const {
  return pathlist_.size();
}
inline void SLRoutev6::clear_pathlist() {
  pathlist_.Clear();
}
inline const ::service_layer::SLRoutePath& SLRoutev6::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.PathList)
  return pathlist_.Get(index);
}
inline ::service_layer::SLRoutePath* SLRoutev6::mutable_pathlist(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6.PathList)
  return pathlist_.Mutable(index);
}
inline ::service_layer::SLRoutePath* SLRoutev6::add_pathlist() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6.PathList)
  return pathlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >*
SLRoutev6::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6.PathList)
  return &pathlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >&
SLRoutev6::pathlist() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6.PathList)
  return pathlist_;
}

// -------------------------------------------------------------------

// SLRoutev6Msg

// .service_layer.SLObjectOp Oper = 1;
inline void SLRoutev6Msg::clear_oper() {
  oper_ = 0;
}
inline ::service_layer::SLObjectOp SLRoutev6Msg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.Oper)
  return static_cast< ::service_layer::SLObjectOp >(oper_);
}
inline void SLRoutev6Msg::set_oper(::service_layer::SLObjectOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Msg.Oper)
}

// uint64 Correlator = 2;
inline void SLRoutev6Msg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev6Msg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.Correlator)
  return correlator_;
}
inline void SLRoutev6Msg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Msg.Correlator)
}

// string VrfName = 3;
inline void SLRoutev6Msg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6Msg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLRoutev6Msg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Msg.VrfName)
}
#if LANG_CXX11
inline void SLRoutev6Msg::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6Msg.VrfName)
}
#endif
inline void SLRoutev6Msg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6Msg.VrfName)
}
inline void SLRoutev6Msg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6Msg.VrfName)
}
inline ::std::string* SLRoutev6Msg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Msg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6Msg::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Msg.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6Msg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Msg.VrfName)
}

// repeated .service_layer.SLRoutev6 Routes = 4;
inline int SLRoutev6Msg::routes_size() const {
  return routes_.size();
}
inline void SLRoutev6Msg::clear_routes() {
  routes_.Clear();
}
inline const ::service_layer::SLRoutev6& SLRoutev6Msg::routes(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.Routes)
  return routes_.Get(index);
}
inline ::service_layer::SLRoutev6* SLRoutev6Msg::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Msg.Routes)
  return routes_.Mutable(index);
}
inline ::service_layer::SLRoutev6* SLRoutev6Msg::add_routes() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6Msg.Routes)
  return routes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
SLRoutev6Msg::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6Msg.Routes)
  return &routes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
SLRoutev6Msg::routes() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6Msg.Routes)
  return routes_;
}

// -------------------------------------------------------------------

// SLRoutev6Res

// .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLRoutev6Res::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
inline void SLRoutev6Res::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLRoutev6Res::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Res.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
inline ::service_layer::SLErrorStatus* SLRoutev6Res::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Res.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLRoutev6Res::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Res.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLRoutev6Res::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Res.ErrStatus)
}

// bytes Prefix = 2;
inline void SLRoutev6Res::clear_prefix() {
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6Res::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Res.Prefix)
  return prefix_.GetNoArena();
}
inline void SLRoutev6Res::set_prefix(const ::std::string& value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Res.Prefix)
}
#if LANG_CXX11
inline void SLRoutev6Res::set_prefix(::std::string&& value) {
  
  prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6Res.Prefix)
}
#endif
inline void SLRoutev6Res::set_prefix(const char* value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6Res.Prefix)
}
inline void SLRoutev6Res::set_prefix(const void* value, size_t size) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6Res.Prefix)
}
inline ::std::string* SLRoutev6Res::mutable_prefix() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Res.Prefix)
  return prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6Res::release_prefix() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Res.Prefix)
  
  return prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6Res::set_allocated_prefix(::std::string* prefix) {
  if (prefix != NULL) {
    
  } else {
    
  }
  prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prefix);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Res.Prefix)
}

// uint32 PrefixLen = 3;
inline void SLRoutev6Res::clear_prefixlen() {
  prefixlen_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev6Res::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Res.PrefixLen)
  return prefixlen_;
}
inline void SLRoutev6Res::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Res.PrefixLen)
}

// -------------------------------------------------------------------

// SLRoutev6MsgRsp

// uint64 Correlator = 1;
inline void SLRoutev6MsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev6MsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.Correlator)
  return correlator_;
}
inline void SLRoutev6MsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6MsgRsp.Correlator)
}

// string VrfName = 2;
inline void SLRoutev6MsgRsp::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6MsgRsp::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLRoutev6MsgRsp::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6MsgRsp.VrfName)
}
#if LANG_CXX11
inline void SLRoutev6MsgRsp::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6MsgRsp.VrfName)
}
#endif
inline void SLRoutev6MsgRsp::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6MsgRsp.VrfName)
}
inline void SLRoutev6MsgRsp::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6MsgRsp.VrfName)
}
inline ::std::string* SLRoutev6MsgRsp::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6MsgRsp.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6MsgRsp::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6MsgRsp.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6MsgRsp::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6MsgRsp.VrfName)
}

// .service_layer.SLErrorStatus StatusSummary = 3;
inline bool SLRoutev6MsgRsp::has_statussummary() const {
  return this != internal_default_instance() && statussummary_ != NULL;
}
inline void SLRoutev6MsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) delete statussummary_;
  statussummary_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLRoutev6MsgRsp::statussummary() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.StatusSummary)
  return statussummary_ != NULL ? *statussummary_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
inline ::service_layer::SLErrorStatus* SLRoutev6MsgRsp::mutable_statussummary() {
  
  if (statussummary_ == NULL) {
    statussummary_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6MsgRsp.StatusSummary)
  return statussummary_;
}
inline ::service_layer::SLErrorStatus* SLRoutev6MsgRsp::release_statussummary() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6MsgRsp.StatusSummary)
  
  ::service_layer::SLErrorStatus* temp = statussummary_;
  statussummary_ = NULL;
  return temp;
}
inline void SLRoutev6MsgRsp::set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary) {
  delete statussummary_;
  statussummary_ = statussummary;
  if (statussummary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6MsgRsp.StatusSummary)
}

// repeated .service_layer.SLRoutev6Res Results = 4;
inline int SLRoutev6MsgRsp::results_size() const {
  return results_.size();
}
inline void SLRoutev6MsgRsp::clear_results() {
  results_.Clear();
}
inline const ::service_layer::SLRoutev6Res& SLRoutev6MsgRsp::results(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.Results)
  return results_.Get(index);
}
inline ::service_layer::SLRoutev6Res* SLRoutev6MsgRsp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6MsgRsp.Results)
  return results_.Mutable(index);
}
inline ::service_layer::SLRoutev6Res* SLRoutev6MsgRsp::add_results() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6MsgRsp.Results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res >*
SLRoutev6MsgRsp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6MsgRsp.Results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res >&
SLRoutev6MsgRsp::results() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6MsgRsp.Results)
  return results_;
}

// -------------------------------------------------------------------

// SLRoutev6GetMsg

// uint64 Correlator = 1;
inline void SLRoutev6GetMsg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev6GetMsg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.Correlator)
  return correlator_;
}
inline void SLRoutev6GetMsg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.Correlator)
}

// string VrfName = 2;
inline void SLRoutev6GetMsg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6GetMsg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLRoutev6GetMsg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.VrfName)
}
#if LANG_CXX11
inline void SLRoutev6GetMsg::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6GetMsg.VrfName)
}
#endif
inline void SLRoutev6GetMsg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6GetMsg.VrfName)
}
inline void SLRoutev6GetMsg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6GetMsg.VrfName)
}
inline ::std::string* SLRoutev6GetMsg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6GetMsg::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6GetMsg.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6GetMsg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsg.VrfName)
}

// bytes Prefix = 3;
inline void SLRoutev6GetMsg::clear_prefix() {
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6GetMsg::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.Prefix)
  return prefix_.GetNoArena();
}
inline void SLRoutev6GetMsg::set_prefix(const ::std::string& value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.Prefix)
}
#if LANG_CXX11
inline void SLRoutev6GetMsg::set_prefix(::std::string&& value) {
  
  prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6GetMsg.Prefix)
}
#endif
inline void SLRoutev6GetMsg::set_prefix(const char* value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6GetMsg.Prefix)
}
inline void SLRoutev6GetMsg::set_prefix(const void* value, size_t size) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6GetMsg.Prefix)
}
inline ::std::string* SLRoutev6GetMsg::mutable_prefix() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsg.Prefix)
  return prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6GetMsg::release_prefix() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6GetMsg.Prefix)
  
  return prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6GetMsg::set_allocated_prefix(::std::string* prefix) {
  if (prefix != NULL) {
    
  } else {
    
  }
  prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prefix);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsg.Prefix)
}

// uint32 PrefixLen = 4;
inline void SLRoutev6GetMsg::clear_prefixlen() {
  prefixlen_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev6GetMsg::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.PrefixLen)
  return prefixlen_;
}
inline void SLRoutev6GetMsg::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.PrefixLen)
}

// uint32 EntriesCount = 5;
inline void SLRoutev6GetMsg::clear_entriescount() {
  entriescount_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev6GetMsg::entriescount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.EntriesCount)
  return entriescount_;
}
inline void SLRoutev6GetMsg::set_entriescount(::google::protobuf::uint32 value) {
  
  entriescount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.EntriesCount)
}

// bool GetNext = 6;
inline void SLRoutev6GetMsg::clear_getnext() {
  getnext_ = false;
}
inline bool SLRoutev6GetMsg::getnext() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.GetNext)
  return getnext_;
}
inline void SLRoutev6GetMsg::set_getnext(bool value) {
  
  getnext_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.GetNext)
}

// -------------------------------------------------------------------

// SLRoutev6GetMsgRsp

// uint64 Correlator = 1;
inline void SLRoutev6GetMsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev6GetMsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.Correlator)
  return correlator_;
}
inline void SLRoutev6GetMsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsgRsp.Correlator)
}

// bool Eof = 2;
inline void SLRoutev6GetMsgRsp::clear_eof() {
  eof_ = false;
}
inline bool SLRoutev6GetMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.Eof)
  return eof_;
}
inline void SLRoutev6GetMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsgRsp.Eof)
}

// string VrfName = 3;
inline void SLRoutev6GetMsgRsp::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6GetMsgRsp::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLRoutev6GetMsgRsp::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsgRsp.VrfName)
}
#if LANG_CXX11
inline void SLRoutev6GetMsgRsp::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6GetMsgRsp.VrfName)
}
#endif
inline void SLRoutev6GetMsgRsp::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6GetMsgRsp.VrfName)
}
inline void SLRoutev6GetMsgRsp::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6GetMsgRsp.VrfName)
}
inline ::std::string* SLRoutev6GetMsgRsp::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsgRsp.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6GetMsgRsp::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6GetMsgRsp.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6GetMsgRsp::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsgRsp.VrfName)
}

// .service_layer.SLErrorStatus ErrStatus = 4;
inline bool SLRoutev6GetMsgRsp::has_errstatus() const {
  return this != internal_default_instance() && errstatus_ != NULL;
}
inline void SLRoutev6GetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLRoutev6GetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_
                         : *::service_layer::SLErrorStatus::internal_default_instance();
}
inline ::service_layer::SLErrorStatus* SLRoutev6GetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsgRsp.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLRoutev6GetMsgRsp::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6GetMsgRsp.ErrStatus)
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLRoutev6GetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsgRsp.ErrStatus)
}

// repeated .service_layer.SLRoutev6 Entries = 5;
inline int SLRoutev6GetMsgRsp::entries_size() const {
  return entries_.size();
}
inline void SLRoutev6GetMsgRsp::clear_entries() {
  entries_.Clear();
}
inline const ::service_layer::SLRoutev6& SLRoutev6GetMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_.Get(index);
}
inline ::service_layer::SLRoutev6* SLRoutev6GetMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_.Mutable(index);
}
inline ::service_layer::SLRoutev6* SLRoutev6GetMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
SLRoutev6GetMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6GetMsgRsp.Entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
SLRoutev6GetMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_;
}

// -------------------------------------------------------------------

// SLRoutev6NotifRoute

// string VrfName = 1;
inline void SLRoutev6NotifRoute::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6NotifRoute::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6NotifRoute.VrfName)
  return vrfname_.GetNoArena();
}
inline void SLRoutev6NotifRoute::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6NotifRoute.VrfName)
}
#if LANG_CXX11
inline void SLRoutev6NotifRoute::set_vrfname(::std::string&& value) {
  
  vrfname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:service_layer.SLRoutev6NotifRoute.VrfName)
}
#endif
inline void SLRoutev6NotifRoute::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6NotifRoute.VrfName)
}
inline void SLRoutev6NotifRoute::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6NotifRoute.VrfName)
}
inline ::std::string* SLRoutev6NotifRoute::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6NotifRoute.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6NotifRoute::release_vrfname() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6NotifRoute.VrfName)
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6NotifRoute::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6NotifRoute.VrfName)
}

// repeated .service_layer.SLRoutev6 Entries = 2;
inline int SLRoutev6NotifRoute::entries_size() const {
  return entries_.size();
}
inline void SLRoutev6NotifRoute::clear_entries() {
  entries_.Clear();
}
inline const ::service_layer::SLRoutev6& SLRoutev6NotifRoute::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6NotifRoute.Entries)
  return entries_.Get(index);
}
inline ::service_layer::SLRoutev6* SLRoutev6NotifRoute::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6NotifRoute.Entries)
  return entries_.Mutable(index);
}
inline ::service_layer::SLRoutev6* SLRoutev6NotifRoute::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6NotifRoute.Entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
SLRoutev6NotifRoute::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6NotifRoute.Entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
SLRoutev6NotifRoute::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6NotifRoute.Entries)
  return entries_;
}

// -------------------------------------------------------------------

// SLRoutev6Notif

// .service_layer.SLNotifType EventType = 1;
inline void SLRoutev6Notif::clear_eventtype() {
  eventtype_ = 0;
}
inline ::service_layer::SLNotifType SLRoutev6Notif::eventtype() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.EventType)
  return static_cast< ::service_layer::SLNotifType >(eventtype_);
}
inline void SLRoutev6Notif::set_eventtype(::service_layer::SLNotifType value) {
  
  eventtype_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Notif.EventType)
}

// .service_layer.SLErrorStatus ErrStatus = 2;
inline bool SLRoutev6Notif::has_errstatus() const {
  return Event_case() == kErrStatus;
}
inline void SLRoutev6Notif::set_has_errstatus() {
  _oneof_case_[0] = kErrStatus;
}
inline void SLRoutev6Notif::clear_errstatus() {
  if (has_errstatus()) {
    delete Event_.errstatus_;
    clear_has_Event();
  }
}
inline  const ::service_layer::SLErrorStatus& SLRoutev6Notif::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.ErrStatus)
  return has_errstatus()
      ? *Event_.errstatus_
      : ::service_layer::SLErrorStatus::default_instance();
}
inline ::service_layer::SLErrorStatus* SLRoutev6Notif::mutable_errstatus() {
  if (!has_errstatus()) {
    clear_Event();
    set_has_errstatus();
    Event_.errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Notif.ErrStatus)
  return Event_.errstatus_;
}
inline ::service_layer::SLErrorStatus* SLRoutev6Notif::release_errstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Notif.ErrStatus)
  if (has_errstatus()) {
    clear_has_Event();
    ::service_layer::SLErrorStatus* temp = Event_.errstatus_;
    Event_.errstatus_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SLRoutev6Notif::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  clear_Event();
  if (errstatus) {
    set_has_errstatus();
    Event_.errstatus_ = errstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Notif.ErrStatus)
}

// .service_layer.SLRouteNotifStatus NotifStatus = 3;
inline bool SLRoutev6Notif::has_notifstatus() const {
  return Event_case() == kNotifStatus;
}
inline void SLRoutev6Notif::set_has_notifstatus() {
  _oneof_case_[0] = kNotifStatus;
}
inline void SLRoutev6Notif::clear_notifstatus() {
  if (has_notifstatus()) {
    delete Event_.notifstatus_;
    clear_has_Event();
  }
}
inline  const ::service_layer::SLRouteNotifStatus& SLRoutev6Notif::notifstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.NotifStatus)
  return has_notifstatus()
      ? *Event_.notifstatus_
      : ::service_layer::SLRouteNotifStatus::default_instance();
}
inline ::service_layer::SLRouteNotifStatus* SLRoutev6Notif::mutable_notifstatus() {
  if (!has_notifstatus()) {
    clear_Event();
    set_has_notifstatus();
    Event_.notifstatus_ = new ::service_layer::SLRouteNotifStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Notif.NotifStatus)
  return Event_.notifstatus_;
}
inline ::service_layer::SLRouteNotifStatus* SLRoutev6Notif::release_notifstatus() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Notif.NotifStatus)
  if (has_notifstatus()) {
    clear_has_Event();
    ::service_layer::SLRouteNotifStatus* temp = Event_.notifstatus_;
    Event_.notifstatus_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SLRoutev6Notif::set_allocated_notifstatus(::service_layer::SLRouteNotifStatus* notifstatus) {
  clear_Event();
  if (notifstatus) {
    set_has_notifstatus();
    Event_.notifstatus_ = notifstatus;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Notif.NotifStatus)
}

// .service_layer.SLRoutev6NotifRoute Route = 4;
inline bool SLRoutev6Notif::has_route() const {
  return Event_case() == kRoute;
}
inline void SLRoutev6Notif::set_has_route() {
  _oneof_case_[0] = kRoute;
}
inline void SLRoutev6Notif::clear_route() {
  if (has_route()) {
    delete Event_.route_;
    clear_has_Event();
  }
}
inline  const ::service_layer::SLRoutev6NotifRoute& SLRoutev6Notif::route() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.Route)
  return has_route()
      ? *Event_.route_
      : ::service_layer::SLRoutev6NotifRoute::default_instance();
}
inline ::service_layer::SLRoutev6NotifRoute* SLRoutev6Notif::mutable_route() {
  if (!has_route()) {
    clear_Event();
    set_has_route();
    Event_.route_ = new ::service_layer::SLRoutev6NotifRoute;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Notif.Route)
  return Event_.route_;
}
inline ::service_layer::SLRoutev6NotifRoute* SLRoutev6Notif::release_route() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Notif.Route)
  if (has_route()) {
    clear_has_Event();
    ::service_layer::SLRoutev6NotifRoute* temp = Event_.route_;
    Event_.route_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SLRoutev6Notif::set_allocated_route(::service_layer::SLRoutev6NotifRoute* route) {
  clear_Event();
  if (route) {
    set_has_route();
    Event_.route_ = route;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Notif.Route)
}

// .service_layer.SLRouteNotifMarker Marker = 5;
inline bool SLRoutev6Notif::has_marker() const {
  return Event_case() == kMarker;
}
inline void SLRoutev6Notif::set_has_marker() {
  _oneof_case_[0] = kMarker;
}
inline void SLRoutev6Notif::clear_marker() {
  if (has_marker()) {
    delete Event_.marker_;
    clear_has_Event();
  }
}
inline  const ::service_layer::SLRouteNotifMarker& SLRoutev6Notif::marker() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.Marker)
  return has_marker()
      ? *Event_.marker_
      : ::service_layer::SLRouteNotifMarker::default_instance();
}
inline ::service_layer::SLRouteNotifMarker* SLRoutev6Notif::mutable_marker() {
  if (!has_marker()) {
    clear_Event();
    set_has_marker();
    Event_.marker_ = new ::service_layer::SLRouteNotifMarker;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Notif.Marker)
  return Event_.marker_;
}
inline ::service_layer::SLRouteNotifMarker* SLRoutev6Notif::release_marker() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Notif.Marker)
  if (has_marker()) {
    clear_has_Event();
    ::service_layer::SLRouteNotifMarker* temp = Event_.marker_;
    Event_.marker_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SLRoutev6Notif::set_allocated_marker(::service_layer::SLRouteNotifMarker* marker) {
  clear_Event();
  if (marker) {
    set_has_marker();
    Event_.marker_ = marker;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Notif.Marker)
}

// .service_layer.SLVrfNotif Vrf = 6;
inline bool SLRoutev6Notif::has_vrf() const {
  return Event_case() == kVrf;
}
inline void SLRoutev6Notif::set_has_vrf() {
  _oneof_case_[0] = kVrf;
}
inline void SLRoutev6Notif::clear_vrf() {
  if (has_vrf()) {
    delete Event_.vrf_;
    clear_has_Event();
  }
}
inline  const ::service_layer::SLVrfNotif& SLRoutev6Notif::vrf() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Notif.Vrf)
  return has_vrf()
      ? *Event_.vrf_
      : ::service_layer::SLVrfNotif::default_instance();
}
inline ::service_layer::SLVrfNotif* SLRoutev6Notif::mutable_vrf() {
  if (!has_vrf()) {
    clear_Event();
    set_has_vrf();
    Event_.vrf_ = new ::service_layer::SLVrfNotif;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Notif.Vrf)
  return Event_.vrf_;
}
inline ::service_layer::SLVrfNotif* SLRoutev6Notif::release_vrf() {
  // @@protoc_insertion_point(field_release:service_layer.SLRoutev6Notif.Vrf)
  if (has_vrf()) {
    clear_has_Event();
    ::service_layer::SLVrfNotif* temp = Event_.vrf_;
    Event_.vrf_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SLRoutev6Notif::set_allocated_vrf(::service_layer::SLVrfNotif* vrf) {
  clear_Event();
  if (vrf) {
    set_has_vrf();
    Event_.vrf_ = vrf;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Notif.Vrf)
}

inline bool SLRoutev6Notif::has_Event() const {
  return Event_case() != EVENT_NOT_SET;
}
inline void SLRoutev6Notif::clear_has_Event() {
  _oneof_case_[0] = EVENT_NOT_SET;
}
inline SLRoutev6Notif::EventCase SLRoutev6Notif::Event_case() const {
  return SLRoutev6Notif::EventCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace service_layer

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sl_5froute_5fipv6_2eproto__INCLUDED
