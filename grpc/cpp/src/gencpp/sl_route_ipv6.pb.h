// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_route_ipv6.proto

#ifndef PROTOBUF_sl_5froute_5fipv6_2eproto__INCLUDED
#define PROTOBUF_sl_5froute_5fipv6_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "sl_common_types.pb.h"
#include "sl_route_common.pb.h"
// @@protoc_insertion_point(includes)

namespace service_layer {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_sl_5froute_5fipv6_2eproto();
void protobuf_AssignDesc_sl_5froute_5fipv6_2eproto();
void protobuf_ShutdownFile_sl_5froute_5fipv6_2eproto();

class SLRoutev6;
class SLRoutev6GetMsg;
class SLRoutev6GetMsgRsp;
class SLRoutev6Msg;
class SLRoutev6MsgRsp;
class SLRoutev6Res;

// ===================================================================

class SLRoutev6 : public ::google::protobuf::Message {
 public:
  SLRoutev6();
  virtual ~SLRoutev6();

  SLRoutev6(const SLRoutev6& from);

  inline SLRoutev6& operator=(const SLRoutev6& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6& default_instance();

  void Swap(SLRoutev6* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6* New() const { return New(NULL); }

  SLRoutev6* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLRoutev6& from);
  void MergeFrom(const SLRoutev6& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLRoutev6* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes Prefix = 1;
  void clear_prefix();
  static const int kPrefixFieldNumber = 1;
  const ::std::string& prefix() const;
  void set_prefix(const ::std::string& value);
  void set_prefix(const char* value);
  void set_prefix(const void* value, size_t size);
  ::std::string* mutable_prefix();
  ::std::string* release_prefix();
  void set_allocated_prefix(::std::string* prefix);

  // optional uint32 PrefixLen = 2;
  void clear_prefixlen();
  static const int kPrefixLenFieldNumber = 2;
  ::google::protobuf::uint32 prefixlen() const;
  void set_prefixlen(::google::protobuf::uint32 value);

  // optional .service_layer.SLRouteCommon RouteCommon = 3;
  bool has_routecommon() const;
  void clear_routecommon();
  static const int kRouteCommonFieldNumber = 3;
  const ::service_layer::SLRouteCommon& routecommon() const;
  ::service_layer::SLRouteCommon* mutable_routecommon();
  ::service_layer::SLRouteCommon* release_routecommon();
  void set_allocated_routecommon(::service_layer::SLRouteCommon* routecommon);

  // repeated .service_layer.SLRoutePath PathList = 4;
  int pathlist_size() const;
  void clear_pathlist();
  static const int kPathListFieldNumber = 4;
  const ::service_layer::SLRoutePath& pathlist(int index) const;
  ::service_layer::SLRoutePath* mutable_pathlist(int index);
  ::service_layer::SLRoutePath* add_pathlist();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >*
      mutable_pathlist();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >&
      pathlist() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr prefix_;
  ::service_layer::SLRouteCommon* routecommon_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath > pathlist_;
  ::google::protobuf::uint32 prefixlen_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_AssignDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_ShutdownFile_sl_5froute_5fipv6_2eproto();

  void InitAsDefaultInstance();
  static SLRoutev6* default_instance_;
};
// -------------------------------------------------------------------

class SLRoutev6Msg : public ::google::protobuf::Message {
 public:
  SLRoutev6Msg();
  virtual ~SLRoutev6Msg();

  SLRoutev6Msg(const SLRoutev6Msg& from);

  inline SLRoutev6Msg& operator=(const SLRoutev6Msg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6Msg& default_instance();

  void Swap(SLRoutev6Msg* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6Msg* New() const { return New(NULL); }

  SLRoutev6Msg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLRoutev6Msg& from);
  void MergeFrom(const SLRoutev6Msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLRoutev6Msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLObjectOp Oper = 1;
  void clear_oper();
  static const int kOperFieldNumber = 1;
  ::service_layer::SLObjectOp oper() const;
  void set_oper(::service_layer::SLObjectOp value);

  // optional uint64 Correlator = 2;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 2;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // optional string VrfName = 3;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 3;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // repeated .service_layer.SLRoutev6 Routes = 4;
  int routes_size() const;
  void clear_routes();
  static const int kRoutesFieldNumber = 4;
  const ::service_layer::SLRoutev6& routes(int index) const;
  ::service_layer::SLRoutev6* mutable_routes(int index);
  ::service_layer::SLRoutev6* add_routes();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
      mutable_routes();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
      routes() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6Msg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 correlator_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 > routes_;
  int oper_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_AssignDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_ShutdownFile_sl_5froute_5fipv6_2eproto();

  void InitAsDefaultInstance();
  static SLRoutev6Msg* default_instance_;
};
// -------------------------------------------------------------------

class SLRoutev6Res : public ::google::protobuf::Message {
 public:
  SLRoutev6Res();
  virtual ~SLRoutev6Res();

  SLRoutev6Res(const SLRoutev6Res& from);

  inline SLRoutev6Res& operator=(const SLRoutev6Res& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6Res& default_instance();

  void Swap(SLRoutev6Res* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6Res* New() const { return New(NULL); }

  SLRoutev6Res* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLRoutev6Res& from);
  void MergeFrom(const SLRoutev6Res& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLRoutev6Res* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_layer.SLErrorStatus ErrStatus = 1;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 1;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // optional bytes Prefix = 2;
  void clear_prefix();
  static const int kPrefixFieldNumber = 2;
  const ::std::string& prefix() const;
  void set_prefix(const ::std::string& value);
  void set_prefix(const char* value);
  void set_prefix(const void* value, size_t size);
  ::std::string* mutable_prefix();
  ::std::string* release_prefix();
  void set_allocated_prefix(::std::string* prefix);

  // optional uint32 PrefixLen = 3;
  void clear_prefixlen();
  static const int kPrefixLenFieldNumber = 3;
  ::google::protobuf::uint32 prefixlen() const;
  void set_prefixlen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6Res)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::internal::ArenaStringPtr prefix_;
  ::google::protobuf::uint32 prefixlen_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_AssignDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_ShutdownFile_sl_5froute_5fipv6_2eproto();

  void InitAsDefaultInstance();
  static SLRoutev6Res* default_instance_;
};
// -------------------------------------------------------------------

class SLRoutev6MsgRsp : public ::google::protobuf::Message {
 public:
  SLRoutev6MsgRsp();
  virtual ~SLRoutev6MsgRsp();

  SLRoutev6MsgRsp(const SLRoutev6MsgRsp& from);

  inline SLRoutev6MsgRsp& operator=(const SLRoutev6MsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6MsgRsp& default_instance();

  void Swap(SLRoutev6MsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6MsgRsp* New() const { return New(NULL); }

  SLRoutev6MsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLRoutev6MsgRsp& from);
  void MergeFrom(const SLRoutev6MsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLRoutev6MsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // optional string VrfName = 2;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 2;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // optional .service_layer.SLErrorStatus StatusSummary = 3;
  bool has_statussummary() const;
  void clear_statussummary();
  static const int kStatusSummaryFieldNumber = 3;
  const ::service_layer::SLErrorStatus& statussummary() const;
  ::service_layer::SLErrorStatus* mutable_statussummary();
  ::service_layer::SLErrorStatus* release_statussummary();
  void set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary);

  // repeated .service_layer.SLRoutev6Res Results = 4;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 4;
  const ::service_layer::SLRoutev6Res& results(int index) const;
  ::service_layer::SLRoutev6Res* mutable_results(int index);
  ::service_layer::SLRoutev6Res* add_results();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res >&
      results() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6MsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 correlator_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::service_layer::SLErrorStatus* statussummary_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res > results_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_AssignDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_ShutdownFile_sl_5froute_5fipv6_2eproto();

  void InitAsDefaultInstance();
  static SLRoutev6MsgRsp* default_instance_;
};
// -------------------------------------------------------------------

class SLRoutev6GetMsg : public ::google::protobuf::Message {
 public:
  SLRoutev6GetMsg();
  virtual ~SLRoutev6GetMsg();

  SLRoutev6GetMsg(const SLRoutev6GetMsg& from);

  inline SLRoutev6GetMsg& operator=(const SLRoutev6GetMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6GetMsg& default_instance();

  void Swap(SLRoutev6GetMsg* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6GetMsg* New() const { return New(NULL); }

  SLRoutev6GetMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLRoutev6GetMsg& from);
  void MergeFrom(const SLRoutev6GetMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLRoutev6GetMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // optional string VrfName = 2;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 2;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // optional bytes Prefix = 3;
  void clear_prefix();
  static const int kPrefixFieldNumber = 3;
  const ::std::string& prefix() const;
  void set_prefix(const ::std::string& value);
  void set_prefix(const char* value);
  void set_prefix(const void* value, size_t size);
  ::std::string* mutable_prefix();
  ::std::string* release_prefix();
  void set_allocated_prefix(::std::string* prefix);

  // optional uint32 PrefixLen = 4;
  void clear_prefixlen();
  static const int kPrefixLenFieldNumber = 4;
  ::google::protobuf::uint32 prefixlen() const;
  void set_prefixlen(::google::protobuf::uint32 value);

  // optional uint32 EntriesCount = 5;
  void clear_entriescount();
  static const int kEntriesCountFieldNumber = 5;
  ::google::protobuf::uint32 entriescount() const;
  void set_entriescount(::google::protobuf::uint32 value);

  // optional bool GetNext = 6;
  void clear_getnext();
  static const int kGetNextFieldNumber = 6;
  bool getnext() const;
  void set_getnext(bool value);

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6GetMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 correlator_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::google::protobuf::internal::ArenaStringPtr prefix_;
  ::google::protobuf::uint32 prefixlen_;
  ::google::protobuf::uint32 entriescount_;
  bool getnext_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_AssignDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_ShutdownFile_sl_5froute_5fipv6_2eproto();

  void InitAsDefaultInstance();
  static SLRoutev6GetMsg* default_instance_;
};
// -------------------------------------------------------------------

class SLRoutev6GetMsgRsp : public ::google::protobuf::Message {
 public:
  SLRoutev6GetMsgRsp();
  virtual ~SLRoutev6GetMsgRsp();

  SLRoutev6GetMsgRsp(const SLRoutev6GetMsgRsp& from);

  inline SLRoutev6GetMsgRsp& operator=(const SLRoutev6GetMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SLRoutev6GetMsgRsp& default_instance();

  void Swap(SLRoutev6GetMsgRsp* other);

  // implements Message ----------------------------------------------

  inline SLRoutev6GetMsgRsp* New() const { return New(NULL); }

  SLRoutev6GetMsgRsp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SLRoutev6GetMsgRsp& from);
  void MergeFrom(const SLRoutev6GetMsgRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SLRoutev6GetMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 Correlator = 1;
  void clear_correlator();
  static const int kCorrelatorFieldNumber = 1;
  ::google::protobuf::uint64 correlator() const;
  void set_correlator(::google::protobuf::uint64 value);

  // optional bool Eof = 2;
  void clear_eof();
  static const int kEofFieldNumber = 2;
  bool eof() const;
  void set_eof(bool value);

  // optional string VrfName = 3;
  void clear_vrfname();
  static const int kVrfNameFieldNumber = 3;
  const ::std::string& vrfname() const;
  void set_vrfname(const ::std::string& value);
  void set_vrfname(const char* value);
  void set_vrfname(const char* value, size_t size);
  ::std::string* mutable_vrfname();
  ::std::string* release_vrfname();
  void set_allocated_vrfname(::std::string* vrfname);

  // optional .service_layer.SLErrorStatus ErrStatus = 4;
  bool has_errstatus() const;
  void clear_errstatus();
  static const int kErrStatusFieldNumber = 4;
  const ::service_layer::SLErrorStatus& errstatus() const;
  ::service_layer::SLErrorStatus* mutable_errstatus();
  ::service_layer::SLErrorStatus* release_errstatus();
  void set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus);

  // repeated .service_layer.SLRoutev6 Entries = 5;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 5;
  const ::service_layer::SLRoutev6& entries(int index) const;
  ::service_layer::SLRoutev6* mutable_entries(int index);
  ::service_layer::SLRoutev6* add_entries();
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
      entries() const;

  // @@protoc_insertion_point(class_scope:service_layer.SLRoutev6GetMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::uint64 correlator_;
  ::google::protobuf::internal::ArenaStringPtr vrfname_;
  ::service_layer::SLErrorStatus* errstatus_;
  ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 > entries_;
  bool eof_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_AssignDesc_sl_5froute_5fipv6_2eproto();
  friend void protobuf_ShutdownFile_sl_5froute_5fipv6_2eproto();

  void InitAsDefaultInstance();
  static SLRoutev6GetMsgRsp* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SLRoutev6

// optional bytes Prefix = 1;
inline void SLRoutev6::clear_prefix() {
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.Prefix)
  return prefix_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6::set_prefix(const ::std::string& value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6.Prefix)
}
inline void SLRoutev6::set_prefix(const char* value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6.Prefix)
}
inline void SLRoutev6::set_prefix(const void* value, size_t size) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6.Prefix)
}
inline ::std::string* SLRoutev6::mutable_prefix() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6.Prefix)
  return prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6::release_prefix() {
  
  return prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6::set_allocated_prefix(::std::string* prefix) {
  if (prefix != NULL) {
    
  } else {
    
  }
  prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prefix);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6.Prefix)
}

// optional uint32 PrefixLen = 2;
inline void SLRoutev6::clear_prefixlen() {
  prefixlen_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev6::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.PrefixLen)
  return prefixlen_;
}
inline void SLRoutev6::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6.PrefixLen)
}

// optional .service_layer.SLRouteCommon RouteCommon = 3;
inline bool SLRoutev6::has_routecommon() const {
  return !_is_default_instance_ && routecommon_ != NULL;
}
inline void SLRoutev6::clear_routecommon() {
  if (GetArenaNoVirtual() == NULL && routecommon_ != NULL) delete routecommon_;
  routecommon_ = NULL;
}
inline const ::service_layer::SLRouteCommon& SLRoutev6::routecommon() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.RouteCommon)
  return routecommon_ != NULL ? *routecommon_ : *default_instance_->routecommon_;
}
inline ::service_layer::SLRouteCommon* SLRoutev6::mutable_routecommon() {
  
  if (routecommon_ == NULL) {
    routecommon_ = new ::service_layer::SLRouteCommon;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6.RouteCommon)
  return routecommon_;
}
inline ::service_layer::SLRouteCommon* SLRoutev6::release_routecommon() {
  
  ::service_layer::SLRouteCommon* temp = routecommon_;
  routecommon_ = NULL;
  return temp;
}
inline void SLRoutev6::set_allocated_routecommon(::service_layer::SLRouteCommon* routecommon) {
  delete routecommon_;
  routecommon_ = routecommon;
  if (routecommon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6.RouteCommon)
}

// repeated .service_layer.SLRoutePath PathList = 4;
inline int SLRoutev6::pathlist_size() const {
  return pathlist_.size();
}
inline void SLRoutev6::clear_pathlist() {
  pathlist_.Clear();
}
inline const ::service_layer::SLRoutePath& SLRoutev6::pathlist(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6.PathList)
  return pathlist_.Get(index);
}
inline ::service_layer::SLRoutePath* SLRoutev6::mutable_pathlist(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6.PathList)
  return pathlist_.Mutable(index);
}
inline ::service_layer::SLRoutePath* SLRoutev6::add_pathlist() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6.PathList)
  return pathlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >*
SLRoutev6::mutable_pathlist() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6.PathList)
  return &pathlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutePath >&
SLRoutev6::pathlist() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6.PathList)
  return pathlist_;
}

// -------------------------------------------------------------------

// SLRoutev6Msg

// optional .service_layer.SLObjectOp Oper = 1;
inline void SLRoutev6Msg::clear_oper() {
  oper_ = 0;
}
inline ::service_layer::SLObjectOp SLRoutev6Msg::oper() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.Oper)
  return static_cast< ::service_layer::SLObjectOp >(oper_);
}
inline void SLRoutev6Msg::set_oper(::service_layer::SLObjectOp value) {
  
  oper_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Msg.Oper)
}

// optional uint64 Correlator = 2;
inline void SLRoutev6Msg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev6Msg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.Correlator)
  return correlator_;
}
inline void SLRoutev6Msg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Msg.Correlator)
}

// optional string VrfName = 3;
inline void SLRoutev6Msg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6Msg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6Msg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Msg.VrfName)
}
inline void SLRoutev6Msg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6Msg.VrfName)
}
inline void SLRoutev6Msg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6Msg.VrfName)
}
inline ::std::string* SLRoutev6Msg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Msg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6Msg::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6Msg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Msg.VrfName)
}

// repeated .service_layer.SLRoutev6 Routes = 4;
inline int SLRoutev6Msg::routes_size() const {
  return routes_.size();
}
inline void SLRoutev6Msg::clear_routes() {
  routes_.Clear();
}
inline const ::service_layer::SLRoutev6& SLRoutev6Msg::routes(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Msg.Routes)
  return routes_.Get(index);
}
inline ::service_layer::SLRoutev6* SLRoutev6Msg::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Msg.Routes)
  return routes_.Mutable(index);
}
inline ::service_layer::SLRoutev6* SLRoutev6Msg::add_routes() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6Msg.Routes)
  return routes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
SLRoutev6Msg::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6Msg.Routes)
  return &routes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
SLRoutev6Msg::routes() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6Msg.Routes)
  return routes_;
}

// -------------------------------------------------------------------

// SLRoutev6Res

// optional .service_layer.SLErrorStatus ErrStatus = 1;
inline bool SLRoutev6Res::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLRoutev6Res::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLRoutev6Res::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Res.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLRoutev6Res::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Res.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLRoutev6Res::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLRoutev6Res::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Res.ErrStatus)
}

// optional bytes Prefix = 2;
inline void SLRoutev6Res::clear_prefix() {
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6Res::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Res.Prefix)
  return prefix_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6Res::set_prefix(const ::std::string& value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Res.Prefix)
}
inline void SLRoutev6Res::set_prefix(const char* value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6Res.Prefix)
}
inline void SLRoutev6Res::set_prefix(const void* value, size_t size) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6Res.Prefix)
}
inline ::std::string* SLRoutev6Res::mutable_prefix() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6Res.Prefix)
  return prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6Res::release_prefix() {
  
  return prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6Res::set_allocated_prefix(::std::string* prefix) {
  if (prefix != NULL) {
    
  } else {
    
  }
  prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prefix);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6Res.Prefix)
}

// optional uint32 PrefixLen = 3;
inline void SLRoutev6Res::clear_prefixlen() {
  prefixlen_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev6Res::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6Res.PrefixLen)
  return prefixlen_;
}
inline void SLRoutev6Res::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6Res.PrefixLen)
}

// -------------------------------------------------------------------

// SLRoutev6MsgRsp

// optional uint64 Correlator = 1;
inline void SLRoutev6MsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev6MsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.Correlator)
  return correlator_;
}
inline void SLRoutev6MsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6MsgRsp.Correlator)
}

// optional string VrfName = 2;
inline void SLRoutev6MsgRsp::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6MsgRsp::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6MsgRsp::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6MsgRsp.VrfName)
}
inline void SLRoutev6MsgRsp::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6MsgRsp.VrfName)
}
inline void SLRoutev6MsgRsp::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6MsgRsp.VrfName)
}
inline ::std::string* SLRoutev6MsgRsp::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6MsgRsp.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6MsgRsp::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6MsgRsp::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6MsgRsp.VrfName)
}

// optional .service_layer.SLErrorStatus StatusSummary = 3;
inline bool SLRoutev6MsgRsp::has_statussummary() const {
  return !_is_default_instance_ && statussummary_ != NULL;
}
inline void SLRoutev6MsgRsp::clear_statussummary() {
  if (GetArenaNoVirtual() == NULL && statussummary_ != NULL) delete statussummary_;
  statussummary_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLRoutev6MsgRsp::statussummary() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.StatusSummary)
  return statussummary_ != NULL ? *statussummary_ : *default_instance_->statussummary_;
}
inline ::service_layer::SLErrorStatus* SLRoutev6MsgRsp::mutable_statussummary() {
  
  if (statussummary_ == NULL) {
    statussummary_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6MsgRsp.StatusSummary)
  return statussummary_;
}
inline ::service_layer::SLErrorStatus* SLRoutev6MsgRsp::release_statussummary() {
  
  ::service_layer::SLErrorStatus* temp = statussummary_;
  statussummary_ = NULL;
  return temp;
}
inline void SLRoutev6MsgRsp::set_allocated_statussummary(::service_layer::SLErrorStatus* statussummary) {
  delete statussummary_;
  statussummary_ = statussummary;
  if (statussummary) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6MsgRsp.StatusSummary)
}

// repeated .service_layer.SLRoutev6Res Results = 4;
inline int SLRoutev6MsgRsp::results_size() const {
  return results_.size();
}
inline void SLRoutev6MsgRsp::clear_results() {
  results_.Clear();
}
inline const ::service_layer::SLRoutev6Res& SLRoutev6MsgRsp::results(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6MsgRsp.Results)
  return results_.Get(index);
}
inline ::service_layer::SLRoutev6Res* SLRoutev6MsgRsp::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6MsgRsp.Results)
  return results_.Mutable(index);
}
inline ::service_layer::SLRoutev6Res* SLRoutev6MsgRsp::add_results() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6MsgRsp.Results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res >*
SLRoutev6MsgRsp::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6MsgRsp.Results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6Res >&
SLRoutev6MsgRsp::results() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6MsgRsp.Results)
  return results_;
}

// -------------------------------------------------------------------

// SLRoutev6GetMsg

// optional uint64 Correlator = 1;
inline void SLRoutev6GetMsg::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev6GetMsg::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.Correlator)
  return correlator_;
}
inline void SLRoutev6GetMsg::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.Correlator)
}

// optional string VrfName = 2;
inline void SLRoutev6GetMsg::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6GetMsg::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6GetMsg::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.VrfName)
}
inline void SLRoutev6GetMsg::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6GetMsg.VrfName)
}
inline void SLRoutev6GetMsg::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6GetMsg.VrfName)
}
inline ::std::string* SLRoutev6GetMsg::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsg.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6GetMsg::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6GetMsg::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsg.VrfName)
}

// optional bytes Prefix = 3;
inline void SLRoutev6GetMsg::clear_prefix() {
  prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6GetMsg::prefix() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.Prefix)
  return prefix_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6GetMsg::set_prefix(const ::std::string& value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.Prefix)
}
inline void SLRoutev6GetMsg::set_prefix(const char* value) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6GetMsg.Prefix)
}
inline void SLRoutev6GetMsg::set_prefix(const void* value, size_t size) {
  
  prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6GetMsg.Prefix)
}
inline ::std::string* SLRoutev6GetMsg::mutable_prefix() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsg.Prefix)
  return prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6GetMsg::release_prefix() {
  
  return prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6GetMsg::set_allocated_prefix(::std::string* prefix) {
  if (prefix != NULL) {
    
  } else {
    
  }
  prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prefix);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsg.Prefix)
}

// optional uint32 PrefixLen = 4;
inline void SLRoutev6GetMsg::clear_prefixlen() {
  prefixlen_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev6GetMsg::prefixlen() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.PrefixLen)
  return prefixlen_;
}
inline void SLRoutev6GetMsg::set_prefixlen(::google::protobuf::uint32 value) {
  
  prefixlen_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.PrefixLen)
}

// optional uint32 EntriesCount = 5;
inline void SLRoutev6GetMsg::clear_entriescount() {
  entriescount_ = 0u;
}
inline ::google::protobuf::uint32 SLRoutev6GetMsg::entriescount() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.EntriesCount)
  return entriescount_;
}
inline void SLRoutev6GetMsg::set_entriescount(::google::protobuf::uint32 value) {
  
  entriescount_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.EntriesCount)
}

// optional bool GetNext = 6;
inline void SLRoutev6GetMsg::clear_getnext() {
  getnext_ = false;
}
inline bool SLRoutev6GetMsg::getnext() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsg.GetNext)
  return getnext_;
}
inline void SLRoutev6GetMsg::set_getnext(bool value) {
  
  getnext_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsg.GetNext)
}

// -------------------------------------------------------------------

// SLRoutev6GetMsgRsp

// optional uint64 Correlator = 1;
inline void SLRoutev6GetMsgRsp::clear_correlator() {
  correlator_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SLRoutev6GetMsgRsp::correlator() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.Correlator)
  return correlator_;
}
inline void SLRoutev6GetMsgRsp::set_correlator(::google::protobuf::uint64 value) {
  
  correlator_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsgRsp.Correlator)
}

// optional bool Eof = 2;
inline void SLRoutev6GetMsgRsp::clear_eof() {
  eof_ = false;
}
inline bool SLRoutev6GetMsgRsp::eof() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.Eof)
  return eof_;
}
inline void SLRoutev6GetMsgRsp::set_eof(bool value) {
  
  eof_ = value;
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsgRsp.Eof)
}

// optional string VrfName = 3;
inline void SLRoutev6GetMsgRsp::clear_vrfname() {
  vrfname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SLRoutev6GetMsgRsp::vrfname() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.VrfName)
  return vrfname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6GetMsgRsp::set_vrfname(const ::std::string& value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:service_layer.SLRoutev6GetMsgRsp.VrfName)
}
inline void SLRoutev6GetMsgRsp::set_vrfname(const char* value) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:service_layer.SLRoutev6GetMsgRsp.VrfName)
}
inline void SLRoutev6GetMsgRsp::set_vrfname(const char* value, size_t size) {
  
  vrfname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:service_layer.SLRoutev6GetMsgRsp.VrfName)
}
inline ::std::string* SLRoutev6GetMsgRsp::mutable_vrfname() {
  
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsgRsp.VrfName)
  return vrfname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SLRoutev6GetMsgRsp::release_vrfname() {
  
  return vrfname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SLRoutev6GetMsgRsp::set_allocated_vrfname(::std::string* vrfname) {
  if (vrfname != NULL) {
    
  } else {
    
  }
  vrfname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vrfname);
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsgRsp.VrfName)
}

// optional .service_layer.SLErrorStatus ErrStatus = 4;
inline bool SLRoutev6GetMsgRsp::has_errstatus() const {
  return !_is_default_instance_ && errstatus_ != NULL;
}
inline void SLRoutev6GetMsgRsp::clear_errstatus() {
  if (GetArenaNoVirtual() == NULL && errstatus_ != NULL) delete errstatus_;
  errstatus_ = NULL;
}
inline const ::service_layer::SLErrorStatus& SLRoutev6GetMsgRsp::errstatus() const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.ErrStatus)
  return errstatus_ != NULL ? *errstatus_ : *default_instance_->errstatus_;
}
inline ::service_layer::SLErrorStatus* SLRoutev6GetMsgRsp::mutable_errstatus() {
  
  if (errstatus_ == NULL) {
    errstatus_ = new ::service_layer::SLErrorStatus;
  }
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsgRsp.ErrStatus)
  return errstatus_;
}
inline ::service_layer::SLErrorStatus* SLRoutev6GetMsgRsp::release_errstatus() {
  
  ::service_layer::SLErrorStatus* temp = errstatus_;
  errstatus_ = NULL;
  return temp;
}
inline void SLRoutev6GetMsgRsp::set_allocated_errstatus(::service_layer::SLErrorStatus* errstatus) {
  delete errstatus_;
  errstatus_ = errstatus;
  if (errstatus) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLRoutev6GetMsgRsp.ErrStatus)
}

// repeated .service_layer.SLRoutev6 Entries = 5;
inline int SLRoutev6GetMsgRsp::entries_size() const {
  return entries_.size();
}
inline void SLRoutev6GetMsgRsp::clear_entries() {
  entries_.Clear();
}
inline const ::service_layer::SLRoutev6& SLRoutev6GetMsgRsp::entries(int index) const {
  // @@protoc_insertion_point(field_get:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_.Get(index);
}
inline ::service_layer::SLRoutev6* SLRoutev6GetMsgRsp::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_.Mutable(index);
}
inline ::service_layer::SLRoutev6* SLRoutev6GetMsgRsp::add_entries() {
  // @@protoc_insertion_point(field_add:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >*
SLRoutev6GetMsgRsp::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:service_layer.SLRoutev6GetMsgRsp.Entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::service_layer::SLRoutev6 >&
SLRoutev6GetMsgRsp::entries() const {
  // @@protoc_insertion_point(field_list:service_layer.SLRoutev6GetMsgRsp.Entries)
  return entries_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service_layer

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sl_5froute_5fipv6_2eproto__INCLUDED
