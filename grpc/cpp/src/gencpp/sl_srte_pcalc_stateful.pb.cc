// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sl_srte_pcalc_stateful.proto

#include "sl_srte_pcalc_stateful.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace service_layer {
constexpr SLSrtePathComputeRequests::SLSrtePathComputeRequests(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requests_(){}
struct SLSrtePathComputeRequestsDefaultTypeInternal {
  constexpr SLSrtePathComputeRequestsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeRequestsDefaultTypeInternal() {}
  union {
    SLSrtePathComputeRequests _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeRequestsDefaultTypeInternal _SLSrtePathComputeRequests_default_instance_;
constexpr SLSrtePathComputeResponses::SLSrtePathComputeResponses(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : responses_(){}
struct SLSrtePathComputeResponsesDefaultTypeInternal {
  constexpr SLSrtePathComputeResponsesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeResponsesDefaultTypeInternal() {}
  union {
    SLSrtePathComputeResponses _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeResponsesDefaultTypeInternal _SLSrtePathComputeResponses_default_instance_;
constexpr SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : constraints_(nullptr)
  , o_metric_(0)
{}
struct SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamicDefaultTypeInternal {
  constexpr SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamicDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamicDefaultTypeInternal() {}
  union {
    SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamicDefaultTypeInternal _SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic_default_instance_;
constexpr SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : segment_lists_()
  , constraints_(nullptr){}
struct SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicitDefaultTypeInternal {
  constexpr SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicitDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicitDefaultTypeInternal() {}
  union {
    SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicitDefaultTypeInternal _SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit_default_instance_;
constexpr SLSrtePathComputeRequest_SLSrtePathInit::SLSrtePathComputeRequest_SLSrtePathInit(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : dataplane_(0)

  , _oneof_case_{}{}
struct SLSrtePathComputeRequest_SLSrtePathInitDefaultTypeInternal {
  constexpr SLSrtePathComputeRequest_SLSrtePathInitDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeRequest_SLSrtePathInitDefaultTypeInternal() {}
  union {
    SLSrtePathComputeRequest_SLSrtePathInit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeRequest_SLSrtePathInitDefaultTypeInternal _SLSrtePathComputeRequest_SLSrtePathInit_default_instance_;
constexpr SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : constraints_(nullptr)
  , o_metric_(0)
{}
struct SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamicDefaultTypeInternal {
  constexpr SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamicDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamicDefaultTypeInternal() {}
  union {
    SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamicDefaultTypeInternal _SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic_default_instance_;
constexpr SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : segment_lists_()
  , constraints_(nullptr){}
struct SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicitDefaultTypeInternal {
  constexpr SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicitDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicitDefaultTypeInternal() {}
  union {
    SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicitDefaultTypeInternal _SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit_default_instance_;
constexpr SLSrtePathComputeRequest_SLSrtePathUpdate::SLSrtePathComputeRequest_SLSrtePathUpdate(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct SLSrtePathComputeRequest_SLSrtePathUpdateDefaultTypeInternal {
  constexpr SLSrtePathComputeRequest_SLSrtePathUpdateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeRequest_SLSrtePathUpdateDefaultTypeInternal() {}
  union {
    SLSrtePathComputeRequest_SLSrtePathUpdate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeRequest_SLSrtePathUpdateDefaultTypeInternal _SLSrtePathComputeRequest_SLSrtePathUpdate_default_instance_;
constexpr SLSrtePathComputeRequest_SLSrtePathWithdraw::SLSrtePathComputeRequest_SLSrtePathWithdraw(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct SLSrtePathComputeRequest_SLSrtePathWithdrawDefaultTypeInternal {
  constexpr SLSrtePathComputeRequest_SLSrtePathWithdrawDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeRequest_SLSrtePathWithdrawDefaultTypeInternal() {}
  union {
    SLSrtePathComputeRequest_SLSrtePathWithdraw _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeRequest_SLSrtePathWithdrawDefaultTypeInternal _SLSrtePathComputeRequest_SLSrtePathWithdraw_default_instance_;
constexpr SLSrtePathComputeRequest::SLSrtePathComputeRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : policy_key_(nullptr)
  , candidate_path_key_(nullptr)
  , seq_num_(uint64_t{0u})
  , _oneof_case_{}{}
struct SLSrtePathComputeRequestDefaultTypeInternal {
  constexpr SLSrtePathComputeRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeRequestDefaultTypeInternal() {}
  union {
    SLSrtePathComputeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeRequestDefaultTypeInternal _SLSrtePathComputeRequest_default_instance_;
constexpr SLSrtePathComputeResponse_SLSrteDynamicPathResult::SLSrtePathComputeResponse_SLSrteDynamicPathResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : segment_lists_()
  , path_cost_(0u)
  , effective_diversity_level_(0)
{}
struct SLSrtePathComputeResponse_SLSrteDynamicPathResultDefaultTypeInternal {
  constexpr SLSrtePathComputeResponse_SLSrteDynamicPathResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeResponse_SLSrteDynamicPathResultDefaultTypeInternal() {}
  union {
    SLSrtePathComputeResponse_SLSrteDynamicPathResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeResponse_SLSrteDynamicPathResultDefaultTypeInternal _SLSrtePathComputeResponse_SLSrteDynamicPathResult_default_instance_;
constexpr SLSrtePathComputeResponse_SLSrtePathError::SLSrtePathComputeResponse_SLSrtePathError(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : description_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(nullptr){}
struct SLSrtePathComputeResponse_SLSrtePathErrorDefaultTypeInternal {
  constexpr SLSrtePathComputeResponse_SLSrtePathErrorDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeResponse_SLSrtePathErrorDefaultTypeInternal() {}
  union {
    SLSrtePathComputeResponse_SLSrtePathError _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeResponse_SLSrtePathErrorDefaultTypeInternal _SLSrtePathComputeResponse_SLSrtePathError_default_instance_;
constexpr SLSrtePathComputeResponse::SLSrtePathComputeResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : policy_key_(nullptr)
  , candidate_path_key_(nullptr)
  , req_seq_num_(uint64_t{0u})
  , _oneof_case_{}{}
struct SLSrtePathComputeResponseDefaultTypeInternal {
  constexpr SLSrtePathComputeResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SLSrtePathComputeResponseDefaultTypeInternal() {}
  union {
    SLSrtePathComputeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SLSrtePathComputeResponseDefaultTypeInternal _SLSrtePathComputeResponse_default_instance_;
constexpr ConstraintSet_PathDiversity::ConstraintSet_PathDiversity(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : association_(nullptr)
  , diversity_level_(0)

  , min_diversity_level_(0)

  , shortest_path_(false){}
struct ConstraintSet_PathDiversityDefaultTypeInternal {
  constexpr ConstraintSet_PathDiversityDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConstraintSet_PathDiversityDefaultTypeInternal() {}
  union {
    ConstraintSet_PathDiversity _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConstraintSet_PathDiversityDefaultTypeInternal _ConstraintSet_PathDiversity_default_instance_;
constexpr ConstraintSet::ConstraintSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : srlg_exclude_()
  , _srlg_exclude_cached_byte_size_(0)
  , ip_exclude_()
  , affinities_(nullptr)
  , path_diversity_(nullptr)
  , corouted_association_(nullptr)
  , max_segments_(0u)
  , guaranteed_bandwidth_(0u)
  , strict_path_segments_(false)
  , unprotected_segments_(false)
  , persistent_segments_(false){}
struct ConstraintSetDefaultTypeInternal {
  constexpr ConstraintSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConstraintSetDefaultTypeInternal() {}
  union {
    ConstraintSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConstraintSetDefaultTypeInternal _ConstraintSet_default_instance_;
constexpr AssociationGroup::AssociationGroup(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : association_id_(0u){}
struct AssociationGroupDefaultTypeInternal {
  constexpr AssociationGroupDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AssociationGroupDefaultTypeInternal() {}
  union {
    AssociationGroup _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AssociationGroupDefaultTypeInternal _AssociationGroup_default_instance_;
}  // namespace service_layer
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[16];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_sl_5fsrte_5fpcalc_5fstateful_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_sl_5fsrte_5fpcalc_5fstateful_2eproto = nullptr;

const uint32_t TableStruct_sl_5fsrte_5fpcalc_5fstateful_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequests, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequests, requests_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponses, responses_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic, o_metric_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic, constraints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit, segment_lists_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit, constraints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit, dataplane_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit, path_init_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic, o_metric_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic, constraints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit, segment_lists_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit, constraints_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate, path_update_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest_SLSrtePathWithdraw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest, policy_key_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest, candidate_path_key_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest, seq_num_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeRequest, request_type_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult, segment_lists_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult, path_cost_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult, effective_diversity_level_),
  ~0u,
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse_SLSrtePathError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse_SLSrtePathError, type_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse_SLSrtePathError, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse, policy_key_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse, candidate_path_key_),
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse, req_seq_num_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service_layer::SLSrtePathComputeResponse, response_type_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet_PathDiversity, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet_PathDiversity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet_PathDiversity, association_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet_PathDiversity, diversity_level_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet_PathDiversity, min_diversity_level_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet_PathDiversity, shortest_path_),
  ~0u,
  ~0u,
  0,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, affinities_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, srlg_exclude_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, ip_exclude_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, path_diversity_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, corouted_association_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, guaranteed_bandwidth_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, strict_path_segments_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, unprotected_segments_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, persistent_segments_),
  PROTOBUF_FIELD_OFFSET(::service_layer::ConstraintSet, max_segments_),
  ~0u,
  ~0u,
  ~0u,
  0,
  1,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_layer::AssociationGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::service_layer::AssociationGroup, association_id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::service_layer::SLSrtePathComputeRequests)},
  { 7, -1, -1, sizeof(::service_layer::SLSrtePathComputeResponses)},
  { 14, -1, -1, sizeof(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic)},
  { 22, -1, -1, sizeof(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit)},
  { 30, -1, -1, sizeof(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit)},
  { 40, -1, -1, sizeof(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic)},
  { 48, -1, -1, sizeof(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit)},
  { 56, -1, -1, sizeof(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate)},
  { 65, -1, -1, sizeof(::service_layer::SLSrtePathComputeRequest_SLSrtePathWithdraw)},
  { 71, -1, -1, sizeof(::service_layer::SLSrtePathComputeRequest)},
  { 84, 93, -1, sizeof(::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult)},
  { 96, -1, -1, sizeof(::service_layer::SLSrtePathComputeResponse_SLSrtePathError)},
  { 104, -1, -1, sizeof(::service_layer::SLSrtePathComputeResponse)},
  { 116, 126, -1, sizeof(::service_layer::ConstraintSet_PathDiversity)},
  { 130, 146, -1, sizeof(::service_layer::ConstraintSet)},
  { 156, -1, -1, sizeof(::service_layer::AssociationGroup)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeRequests_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeResponses_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeRequest_SLSrtePathInit_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeRequest_SLSrtePathUpdate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeRequest_SLSrtePathWithdraw_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeResponse_SLSrteDynamicPathResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeResponse_SLSrtePathError_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_SLSrtePathComputeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_ConstraintSet_PathDiversity_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_ConstraintSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_layer::_AssociationGroup_default_instance_),
};

const char descriptor_table_protodef_sl_5fsrte_5fpcalc_5fstateful_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034sl_srte_pcalc_stateful.proto\022\rservice_"
  "layer\032\025sl_common_types.proto\032\022sl_sr_comm"
  "on.proto\"V\n\031SLSrtePathComputeRequests\0229\n"
  "\010requests\030\001 \003(\0132\'.service_layer.SLSrtePa"
  "thComputeRequest\"Y\n\032SLSrtePathComputeRes"
  "ponses\022;\n\tresponses\030\001 \003(\0132(.service_laye"
  "r.SLSrtePathComputeResponse\"\277\013\n\030SLSrtePa"
  "thComputeRequest\0220\n\npolicy_key\030\001 \001(\0132\034.s"
  "ervice_layer.SLSrPolicyKey\022\?\n\022candidate_"
  "path_key\030\002 \001(\0132#.service_layer.SLSrCandi"
  "datePathKey\022\017\n\007seq_num\030\003 \001(\004\022F\n\004init\030\004 \001"
  "(\01326.service_layer.SLSrtePathComputeRequ"
  "est.SLSrtePathInitH\000\022J\n\006update\030\005 \001(\01328.s"
  "ervice_layer.SLSrtePathComputeRequest.SL"
  "SrtePathUpdateH\000\022N\n\010withdraw\030\006 \001(\0132:.ser"
  "vice_layer.SLSrtePathComputeRequest.SLSr"
  "tePathWithdrawH\000\032\231\004\n\016SLSrtePathInit\022/\n\td"
  "ataplane\030\001 \001(\0162\034.service_layer.SLSrDatap"
  "lane\022_\n\007dynamic\030\002 \001(\0132L.service_layer.SL"
  "SrtePathComputeRequest.SLSrtePathInit.SL"
  "SrtePathInitDynamicH\000\022a\n\010explicit\030\003 \001(\0132"
  "M.service_layer.SLSrtePathComputeRequest"
  ".SLSrtePathInit.SLSrtePathInitExplicitH\000"
  "\032{\n\025SLSrtePathInitDynamic\022/\n\010o_metric\030\001 "
  "\001(\0162\035.service_layer.SLSrMetricType\0221\n\013co"
  "nstraints\030\002 \001(\0132\034.service_layer.Constrai"
  "ntSet\032\202\001\n\026SLSrtePathInitExplicit\0225\n\rsegm"
  "ent_lists\030\001 \003(\0132\036.service_layer.SLSrSegm"
  "entList\0221\n\013constraints\030\002 \001(\0132\034.service_l"
  "ayer.ConstraintSetB\020\n\016path_init_type\032\370\003\n"
  "\020SLSrtePathUpdate\022c\n\007dynamic\030\001 \001(\0132P.ser"
  "vice_layer.SLSrtePathComputeRequest.SLSr"
  "tePathUpdate.SLSrtePathUpdateDynamicH\000\022e"
  "\n\010explicit\030\002 \001(\0132Q.service_layer.SLSrteP"
  "athComputeRequest.SLSrtePathUpdate.SLSrt"
  "ePathUpdateExplicitH\000\032}\n\027SLSrtePathUpdat"
  "eDynamic\022/\n\010o_metric\030\001 \001(\0162\035.service_lay"
  "er.SLSrMetricType\0221\n\013constraints\030\002 \001(\0132\034"
  ".service_layer.ConstraintSet\032\204\001\n\030SLSrteP"
  "athUpdateExplicit\0225\n\rsegment_lists\030\001 \003(\013"
  "2\036.service_layer.SLSrSegmentList\0221\n\013cons"
  "traints\030\002 \001(\0132\034.service_layer.Constraint"
  "SetB\022\n\020path_update_type\032\024\n\022SLSrtePathWit"
  "hdrawB\016\n\014request_type\"\375\004\n\031SLSrtePathComp"
  "uteResponse\0220\n\npolicy_key\030\001 \001(\0132\034.servic"
  "e_layer.SLSrPolicyKey\022\?\n\022candidate_path_"
  "key\030\002 \001(\0132#.service_layer.SLSrCandidateP"
  "athKey\022\023\n\013req_seq_num\030\003 \001(\004\022W\n\013path_resu"
  "lt\030\004 \001(\0132@.service_layer.SLSrtePathCompu"
  "teResponse.SLSrteDynamicPathResultH\000\022I\n\005"
  "error\030\006 \001(\01328.service_layer.SLSrtePathCo"
  "mputeResponse.SLSrtePathErrorH\000\032\316\001\n\027SLSr"
  "teDynamicPathResult\0225\n\rsegment_lists\030\001 \003"
  "(\0132\036.service_layer.SLSrSegmentList\022\021\n\tpa"
  "th_cost\030\002 \001(\r\022K\n\031effective_diversity_lev"
  "el\030\003 \001(\0162#.service_layer.SLSrteDiversity"
  "LevelH\000\210\001\001B\034\n\032_effective_diversity_level"
  "\032R\n\017SLSrtePathError\022*\n\004type\030\001 \001(\0132\034.serv"
  "ice_layer.SLErrorStatus\022\023\n\013description\030\002"
  " \001(\tB\017\n\rresponse_type\"\316\005\n\rConstraintSet\022"
  "1\n\naffinities\030\001 \001(\0132\035.service_layer.SLSr"
  "Affinities\022\024\n\014srlg_exclude\030\004 \003(\r\022.\n\nip_e"
  "xclude\030\005 \003(\0132\032.service_layer.SLIpAddress"
  "\022G\n\016path_diversity\030e \001(\0132*.service_layer"
  ".ConstraintSet.PathDiversityH\000\210\001\001\022B\n\024cor"
  "outed_association\030f \001(\0132\037.service_layer."
  "AssociationGroupH\001\210\001\001\022\034\n\024guaranteed_band"
  "width\030g \001(\r\022\035\n\024strict_path_segments\030\311\001 \001"
  "(\010\022\035\n\024unprotected_segments\030\312\001 \001(\010\022\034\n\023per"
  "sistent_segments\030\313\001 \001(\010\022\025\n\014max_segments\030"
  "\314\001 \001(\r\032\371\001\n\rPathDiversity\0224\n\013association\030"
  "\001 \001(\0132\037.service_layer.AssociationGroup\022<"
  "\n\017diversity_level\030\002 \001(\0162#.service_layer."
  "SLSrteDiversityLevel\022E\n\023min_diversity_le"
  "vel\030\003 \001(\0162#.service_layer.SLSrteDiversit"
  "yLevelH\000\210\001\001\022\025\n\rshortest_path\030\004 \001(\010B\026\n\024_m"
  "in_diversity_levelB\021\n\017_path_diversityB\027\n"
  "\025_corouted_association\"*\n\020AssociationGro"
  "up\022\026\n\016association_id\030\001 \001(\r2\202\001\n\022SLSrteCal"
  "cStateful\022l\n\021SLSrtePathCompute\022(.service"
  "_layer.SLSrtePathComputeRequests\032).servi"
  "ce_layer.SLSrtePathComputeResponses(\0010\001B"
  "QZOgithub.com/Cisco-service-layer/servic"
  "e-layer-objmodel/grpc/protos;service_lay"
  "erb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_deps[2] = {
  &::descriptor_table_sl_5fcommon_5ftypes_2eproto,
  &::descriptor_table_sl_5fsr_5fcommon_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto = {
  false, false, 3370, descriptor_table_protodef_sl_5fsrte_5fpcalc_5fstateful_2eproto, "sl_srte_pcalc_stateful.proto", 
  &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once, descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_deps, 2, 16,
  schemas, file_default_instances, TableStruct_sl_5fsrte_5fpcalc_5fstateful_2eproto::offsets,
  file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto, file_level_enum_descriptors_sl_5fsrte_5fpcalc_5fstateful_2eproto, file_level_service_descriptors_sl_5fsrte_5fpcalc_5fstateful_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter() {
  return &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_sl_5fsrte_5fpcalc_5fstateful_2eproto(&descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto);
namespace service_layer {

// ===================================================================

class SLSrtePathComputeRequests::_Internal {
 public:
};

SLSrtePathComputeRequests::SLSrtePathComputeRequests(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  requests_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeRequests)
}
SLSrtePathComputeRequests::SLSrtePathComputeRequests(const SLSrtePathComputeRequests& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeRequests)
}

inline void SLSrtePathComputeRequests::SharedCtor() {
}

SLSrtePathComputeRequests::~SLSrtePathComputeRequests() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeRequests)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeRequests::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SLSrtePathComputeRequests::ArenaDtor(void* object) {
  SLSrtePathComputeRequests* _this = reinterpret_cast< SLSrtePathComputeRequests* >(object);
  (void)_this;
}
void SLSrtePathComputeRequests::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeRequests::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeRequests::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeRequests)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeRequests::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .service_layer.SLSrtePathComputeRequest requests = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_requests(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeRequests::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeRequests)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .service_layer.SLSrtePathComputeRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_requests_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_requests(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeRequests)
  return target;
}

size_t SLSrtePathComputeRequests::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeRequests)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .service_layer.SLSrtePathComputeRequest requests = 1;
  total_size += 1UL * this->_internal_requests_size();
  for (const auto& msg : this->requests_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeRequests::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeRequests::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeRequests::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeRequests::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeRequests *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeRequests &>(from));
}


void SLSrtePathComputeRequests::MergeFrom(const SLSrtePathComputeRequests& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeRequests)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeRequests::CopyFrom(const SLSrtePathComputeRequests& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeRequests::IsInitialized() const {
  return true;
}

void SLSrtePathComputeRequests::InternalSwap(SLSrtePathComputeRequests* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  requests_.InternalSwap(&other->requests_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeRequests::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[0]);
}

// ===================================================================

class SLSrtePathComputeResponses::_Internal {
 public:
};

SLSrtePathComputeResponses::SLSrtePathComputeResponses(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  responses_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeResponses)
}
SLSrtePathComputeResponses::SLSrtePathComputeResponses(const SLSrtePathComputeResponses& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeResponses)
}

inline void SLSrtePathComputeResponses::SharedCtor() {
}

SLSrtePathComputeResponses::~SLSrtePathComputeResponses() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeResponses)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeResponses::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SLSrtePathComputeResponses::ArenaDtor(void* object) {
  SLSrtePathComputeResponses* _this = reinterpret_cast< SLSrtePathComputeResponses* >(object);
  (void)_this;
}
void SLSrtePathComputeResponses::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeResponses::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeResponses)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeResponses::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .service_layer.SLSrtePathComputeResponse responses = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_responses(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeResponses::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeResponses)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .service_layer.SLSrtePathComputeResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_responses_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_responses(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeResponses)
  return target;
}

size_t SLSrtePathComputeResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeResponses)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .service_layer.SLSrtePathComputeResponse responses = 1;
  total_size += 1UL * this->_internal_responses_size();
  for (const auto& msg : this->responses_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeResponses::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeResponses::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeResponses::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeResponses::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeResponses *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeResponses &>(from));
}


void SLSrtePathComputeResponses::MergeFrom(const SLSrtePathComputeResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeResponses)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeResponses::CopyFrom(const SLSrtePathComputeResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeResponses::IsInitialized() const {
  return true;
}

void SLSrtePathComputeResponses::InternalSwap(SLSrtePathComputeResponses* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  responses_.InternalSwap(&other->responses_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeResponses::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[1]);
}

// ===================================================================

class SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::_Internal {
 public:
  static const ::service_layer::ConstraintSet& constraints(const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic* msg);
};

const ::service_layer::ConstraintSet&
SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::_Internal::constraints(const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic* msg) {
  return *msg->constraints_;
}
SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic)
}
SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic(const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_constraints()) {
    constraints_ = new ::service_layer::ConstraintSet(*from.constraints_);
  } else {
    constraints_ = nullptr;
  }
  o_metric_ = from.o_metric_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic)
}

inline void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&constraints_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&o_metric_) -
    reinterpret_cast<char*>(&constraints_)) + sizeof(o_metric_));
}

SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::~SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete constraints_;
}

void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::ArenaDtor(void* object) {
  SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic* _this = reinterpret_cast< SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic* >(object);
  (void)_this;
}
void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && constraints_ != nullptr) {
    delete constraints_;
  }
  constraints_ = nullptr;
  o_metric_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service_layer.SLSrMetricType o_metric = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_o_metric(static_cast<::service_layer::SLSrMetricType>(val));
        } else
          goto handle_unusual;
        continue;
      // .service_layer.ConstraintSet constraints = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_constraints(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLSrMetricType o_metric = 1;
  if (this->_internal_o_metric() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_o_metric(), target);
  }

  // .service_layer.ConstraintSet constraints = 2;
  if (this->_internal_has_constraints()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::constraints(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic)
  return target;
}

size_t SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.ConstraintSet constraints = 2;
  if (this->_internal_has_constraints()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *constraints_);
  }

  // .service_layer.SLSrMetricType o_metric = 1;
  if (this->_internal_o_metric() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_o_metric());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic &>(from));
}


void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::MergeFrom(const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_constraints()) {
    _internal_mutable_constraints()->::service_layer::ConstraintSet::MergeFrom(from._internal_constraints());
  }
  if (from._internal_o_metric() != 0) {
    _internal_set_o_metric(from._internal_o_metric());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::CopyFrom(const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::IsInitialized() const {
  return true;
}

void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::InternalSwap(SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic, o_metric_)
      + sizeof(SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::o_metric_)
      - PROTOBUF_FIELD_OFFSET(SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic, constraints_)>(
          reinterpret_cast<char*>(&constraints_),
          reinterpret_cast<char*>(&other->constraints_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[2]);
}

// ===================================================================

class SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::_Internal {
 public:
  static const ::service_layer::ConstraintSet& constraints(const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit* msg);
};

const ::service_layer::ConstraintSet&
SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::_Internal::constraints(const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit* msg) {
  return *msg->constraints_;
}
void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::clear_segment_lists() {
  segment_lists_.Clear();
}
SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  segment_lists_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit)
}
SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit(const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      segment_lists_(from.segment_lists_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_constraints()) {
    constraints_ = new ::service_layer::ConstraintSet(*from.constraints_);
  } else {
    constraints_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit)
}

inline void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::SharedCtor() {
constraints_ = nullptr;
}

SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::~SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete constraints_;
}

void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::ArenaDtor(void* object) {
  SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit* _this = reinterpret_cast< SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit* >(object);
  (void)_this;
}
void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  segment_lists_.Clear();
  if (GetArenaForAllocation() == nullptr && constraints_ != nullptr) {
    delete constraints_;
  }
  constraints_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .service_layer.SLSrSegmentList segment_lists = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_segment_lists(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .service_layer.ConstraintSet constraints = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_constraints(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .service_layer.SLSrSegmentList segment_lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_segment_lists_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_segment_lists(i), target, stream);
  }

  // .service_layer.ConstraintSet constraints = 2;
  if (this->_internal_has_constraints()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::constraints(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit)
  return target;
}

size_t SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .service_layer.SLSrSegmentList segment_lists = 1;
  total_size += 1UL * this->_internal_segment_lists_size();
  for (const auto& msg : this->segment_lists_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .service_layer.ConstraintSet constraints = 2;
  if (this->_internal_has_constraints()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *constraints_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit &>(from));
}


void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::MergeFrom(const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  segment_lists_.MergeFrom(from.segment_lists_);
  if (from._internal_has_constraints()) {
    _internal_mutable_constraints()->::service_layer::ConstraintSet::MergeFrom(from._internal_constraints());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::CopyFrom(const SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::IsInitialized() const {
  return true;
}

void SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::InternalSwap(SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  segment_lists_.InternalSwap(&other->segment_lists_);
  swap(constraints_, other->constraints_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[3]);
}

// ===================================================================

class SLSrtePathComputeRequest_SLSrtePathInit::_Internal {
 public:
  static const ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic& dynamic(const SLSrtePathComputeRequest_SLSrtePathInit* msg);
  static const ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit& explicit_(const SLSrtePathComputeRequest_SLSrtePathInit* msg);
};

const ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic&
SLSrtePathComputeRequest_SLSrtePathInit::_Internal::dynamic(const SLSrtePathComputeRequest_SLSrtePathInit* msg) {
  return *msg->path_init_type_.dynamic_;
}
const ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit&
SLSrtePathComputeRequest_SLSrtePathInit::_Internal::explicit_(const SLSrtePathComputeRequest_SLSrtePathInit* msg) {
  return *msg->path_init_type_.explicit__;
}
void SLSrtePathComputeRequest_SLSrtePathInit::set_allocated_dynamic(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic* dynamic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_path_init_type();
  if (dynamic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic>::GetOwningArena(dynamic);
    if (message_arena != submessage_arena) {
      dynamic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dynamic, submessage_arena);
    }
    set_has_dynamic();
    path_init_type_.dynamic_ = dynamic;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.dynamic)
}
void SLSrtePathComputeRequest_SLSrtePathInit::set_allocated_explicit_(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit* explicit_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_path_init_type();
  if (explicit_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit>::GetOwningArena(explicit_);
    if (message_arena != submessage_arena) {
      explicit_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, explicit_, submessage_arena);
    }
    set_has_explicit_();
    path_init_type_.explicit__ = explicit_;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLSrtePathComputeRequest.SLSrtePathInit.explicit)
}
SLSrtePathComputeRequest_SLSrtePathInit::SLSrtePathComputeRequest_SLSrtePathInit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathInit)
}
SLSrtePathComputeRequest_SLSrtePathInit::SLSrtePathComputeRequest_SLSrtePathInit(const SLSrtePathComputeRequest_SLSrtePathInit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dataplane_ = from.dataplane_;
  clear_has_path_init_type();
  switch (from.path_init_type_case()) {
    case kDynamic: {
      _internal_mutable_dynamic()->::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::MergeFrom(from._internal_dynamic());
      break;
    }
    case kExplicit: {
      _internal_mutable_explicit_()->::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::MergeFrom(from._internal_explicit_());
      break;
    }
    case PATH_INIT_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathInit)
}

inline void SLSrtePathComputeRequest_SLSrtePathInit::SharedCtor() {
dataplane_ = 0;
clear_has_path_init_type();
}

SLSrtePathComputeRequest_SLSrtePathInit::~SLSrtePathComputeRequest_SLSrtePathInit() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeRequest.SLSrtePathInit)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeRequest_SLSrtePathInit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_path_init_type()) {
    clear_path_init_type();
  }
}

void SLSrtePathComputeRequest_SLSrtePathInit::ArenaDtor(void* object) {
  SLSrtePathComputeRequest_SLSrtePathInit* _this = reinterpret_cast< SLSrtePathComputeRequest_SLSrtePathInit* >(object);
  (void)_this;
}
void SLSrtePathComputeRequest_SLSrtePathInit::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeRequest_SLSrtePathInit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeRequest_SLSrtePathInit::clear_path_init_type() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit)
  switch (path_init_type_case()) {
    case kDynamic: {
      if (GetArenaForAllocation() == nullptr) {
        delete path_init_type_.dynamic_;
      }
      break;
    }
    case kExplicit: {
      if (GetArenaForAllocation() == nullptr) {
        delete path_init_type_.explicit__;
      }
      break;
    }
    case PATH_INIT_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PATH_INIT_TYPE_NOT_SET;
}


void SLSrtePathComputeRequest_SLSrtePathInit::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dataplane_ = 0;
  clear_path_init_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeRequest_SLSrtePathInit::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service_layer.SLSrDataplane dataplane = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_dataplane(static_cast<::service_layer::SLSrDataplane>(val));
        } else
          goto handle_unusual;
        continue;
      // .service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic dynamic = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_dynamic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit explicit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_explicit_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeRequest_SLSrtePathInit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLSrDataplane dataplane = 1;
  if (this->_internal_dataplane() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_dataplane(), target);
  }

  // .service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic dynamic = 2;
  if (_internal_has_dynamic()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::dynamic(this), target, stream);
  }

  // .service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit explicit = 3;
  if (_internal_has_explicit_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::explicit_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeRequest.SLSrtePathInit)
  return target;
}

size_t SLSrtePathComputeRequest_SLSrtePathInit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.SLSrDataplane dataplane = 1;
  if (this->_internal_dataplane() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_dataplane());
  }

  switch (path_init_type_case()) {
    // .service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitDynamic dynamic = 2;
    case kDynamic: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *path_init_type_.dynamic_);
      break;
    }
    // .service_layer.SLSrtePathComputeRequest.SLSrtePathInit.SLSrtePathInitExplicit explicit = 3;
    case kExplicit: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *path_init_type_.explicit__);
      break;
    }
    case PATH_INIT_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeRequest_SLSrtePathInit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeRequest_SLSrtePathInit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeRequest_SLSrtePathInit::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeRequest_SLSrtePathInit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeRequest_SLSrtePathInit *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeRequest_SLSrtePathInit &>(from));
}


void SLSrtePathComputeRequest_SLSrtePathInit::MergeFrom(const SLSrtePathComputeRequest_SLSrtePathInit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_dataplane() != 0) {
    _internal_set_dataplane(from._internal_dataplane());
  }
  switch (from.path_init_type_case()) {
    case kDynamic: {
      _internal_mutable_dynamic()->::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic::MergeFrom(from._internal_dynamic());
      break;
    }
    case kExplicit: {
      _internal_mutable_explicit_()->::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit::MergeFrom(from._internal_explicit_());
      break;
    }
    case PATH_INIT_TYPE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeRequest_SLSrtePathInit::CopyFrom(const SLSrtePathComputeRequest_SLSrtePathInit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathInit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeRequest_SLSrtePathInit::IsInitialized() const {
  return true;
}

void SLSrtePathComputeRequest_SLSrtePathInit::InternalSwap(SLSrtePathComputeRequest_SLSrtePathInit* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(dataplane_, other->dataplane_);
  swap(path_init_type_, other->path_init_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeRequest_SLSrtePathInit::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[4]);
}

// ===================================================================

class SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::_Internal {
 public:
  static const ::service_layer::ConstraintSet& constraints(const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic* msg);
};

const ::service_layer::ConstraintSet&
SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::_Internal::constraints(const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic* msg) {
  return *msg->constraints_;
}
SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic)
}
SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic(const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_constraints()) {
    constraints_ = new ::service_layer::ConstraintSet(*from.constraints_);
  } else {
    constraints_ = nullptr;
  }
  o_metric_ = from.o_metric_;
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic)
}

inline void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&constraints_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&o_metric_) -
    reinterpret_cast<char*>(&constraints_)) + sizeof(o_metric_));
}

SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::~SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete constraints_;
}

void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::ArenaDtor(void* object) {
  SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic* _this = reinterpret_cast< SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic* >(object);
  (void)_this;
}
void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && constraints_ != nullptr) {
    delete constraints_;
  }
  constraints_ = nullptr;
  o_metric_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service_layer.SLSrMetricType o_metric = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_o_metric(static_cast<::service_layer::SLSrMetricType>(val));
        } else
          goto handle_unusual;
        continue;
      // .service_layer.ConstraintSet constraints = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_constraints(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLSrMetricType o_metric = 1;
  if (this->_internal_o_metric() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_o_metric(), target);
  }

  // .service_layer.ConstraintSet constraints = 2;
  if (this->_internal_has_constraints()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::constraints(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic)
  return target;
}

size_t SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.ConstraintSet constraints = 2;
  if (this->_internal_has_constraints()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *constraints_);
  }

  // .service_layer.SLSrMetricType o_metric = 1;
  if (this->_internal_o_metric() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_o_metric());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic &>(from));
}


void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::MergeFrom(const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_constraints()) {
    _internal_mutable_constraints()->::service_layer::ConstraintSet::MergeFrom(from._internal_constraints());
  }
  if (from._internal_o_metric() != 0) {
    _internal_set_o_metric(from._internal_o_metric());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::CopyFrom(const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::IsInitialized() const {
  return true;
}

void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::InternalSwap(SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic, o_metric_)
      + sizeof(SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::o_metric_)
      - PROTOBUF_FIELD_OFFSET(SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic, constraints_)>(
          reinterpret_cast<char*>(&constraints_),
          reinterpret_cast<char*>(&other->constraints_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[5]);
}

// ===================================================================

class SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::_Internal {
 public:
  static const ::service_layer::ConstraintSet& constraints(const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit* msg);
};

const ::service_layer::ConstraintSet&
SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::_Internal::constraints(const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit* msg) {
  return *msg->constraints_;
}
void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::clear_segment_lists() {
  segment_lists_.Clear();
}
SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  segment_lists_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit)
}
SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit(const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      segment_lists_(from.segment_lists_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_constraints()) {
    constraints_ = new ::service_layer::ConstraintSet(*from.constraints_);
  } else {
    constraints_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit)
}

inline void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::SharedCtor() {
constraints_ = nullptr;
}

SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::~SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete constraints_;
}

void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::ArenaDtor(void* object) {
  SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit* _this = reinterpret_cast< SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit* >(object);
  (void)_this;
}
void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  segment_lists_.Clear();
  if (GetArenaForAllocation() == nullptr && constraints_ != nullptr) {
    delete constraints_;
  }
  constraints_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .service_layer.SLSrSegmentList segment_lists = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_segment_lists(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .service_layer.ConstraintSet constraints = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_constraints(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .service_layer.SLSrSegmentList segment_lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_segment_lists_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_segment_lists(i), target, stream);
  }

  // .service_layer.ConstraintSet constraints = 2;
  if (this->_internal_has_constraints()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::constraints(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit)
  return target;
}

size_t SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .service_layer.SLSrSegmentList segment_lists = 1;
  total_size += 1UL * this->_internal_segment_lists_size();
  for (const auto& msg : this->segment_lists_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .service_layer.ConstraintSet constraints = 2;
  if (this->_internal_has_constraints()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *constraints_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit &>(from));
}


void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::MergeFrom(const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  segment_lists_.MergeFrom(from.segment_lists_);
  if (from._internal_has_constraints()) {
    _internal_mutable_constraints()->::service_layer::ConstraintSet::MergeFrom(from._internal_constraints());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::CopyFrom(const SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::IsInitialized() const {
  return true;
}

void SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::InternalSwap(SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  segment_lists_.InternalSwap(&other->segment_lists_);
  swap(constraints_, other->constraints_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[6]);
}

// ===================================================================

class SLSrtePathComputeRequest_SLSrtePathUpdate::_Internal {
 public:
  static const ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic& dynamic(const SLSrtePathComputeRequest_SLSrtePathUpdate* msg);
  static const ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit& explicit_(const SLSrtePathComputeRequest_SLSrtePathUpdate* msg);
};

const ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic&
SLSrtePathComputeRequest_SLSrtePathUpdate::_Internal::dynamic(const SLSrtePathComputeRequest_SLSrtePathUpdate* msg) {
  return *msg->path_update_type_.dynamic_;
}
const ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit&
SLSrtePathComputeRequest_SLSrtePathUpdate::_Internal::explicit_(const SLSrtePathComputeRequest_SLSrtePathUpdate* msg) {
  return *msg->path_update_type_.explicit__;
}
void SLSrtePathComputeRequest_SLSrtePathUpdate::set_allocated_dynamic(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic* dynamic) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_path_update_type();
  if (dynamic) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic>::GetOwningArena(dynamic);
    if (message_arena != submessage_arena) {
      dynamic = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, dynamic, submessage_arena);
    }
    set_has_dynamic();
    path_update_type_.dynamic_ = dynamic;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.dynamic)
}
void SLSrtePathComputeRequest_SLSrtePathUpdate::set_allocated_explicit_(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit* explicit_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_path_update_type();
  if (explicit_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit>::GetOwningArena(explicit_);
    if (message_arena != submessage_arena) {
      explicit_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, explicit_, submessage_arena);
    }
    set_has_explicit_();
    path_update_type_.explicit__ = explicit_;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.explicit)
}
SLSrtePathComputeRequest_SLSrtePathUpdate::SLSrtePathComputeRequest_SLSrtePathUpdate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate)
}
SLSrtePathComputeRequest_SLSrtePathUpdate::SLSrtePathComputeRequest_SLSrtePathUpdate(const SLSrtePathComputeRequest_SLSrtePathUpdate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_path_update_type();
  switch (from.path_update_type_case()) {
    case kDynamic: {
      _internal_mutable_dynamic()->::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::MergeFrom(from._internal_dynamic());
      break;
    }
    case kExplicit: {
      _internal_mutable_explicit_()->::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::MergeFrom(from._internal_explicit_());
      break;
    }
    case PATH_UPDATE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate)
}

inline void SLSrtePathComputeRequest_SLSrtePathUpdate::SharedCtor() {
clear_has_path_update_type();
}

SLSrtePathComputeRequest_SLSrtePathUpdate::~SLSrtePathComputeRequest_SLSrtePathUpdate() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeRequest_SLSrtePathUpdate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_path_update_type()) {
    clear_path_update_type();
  }
}

void SLSrtePathComputeRequest_SLSrtePathUpdate::ArenaDtor(void* object) {
  SLSrtePathComputeRequest_SLSrtePathUpdate* _this = reinterpret_cast< SLSrtePathComputeRequest_SLSrtePathUpdate* >(object);
  (void)_this;
}
void SLSrtePathComputeRequest_SLSrtePathUpdate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeRequest_SLSrtePathUpdate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeRequest_SLSrtePathUpdate::clear_path_update_type() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate)
  switch (path_update_type_case()) {
    case kDynamic: {
      if (GetArenaForAllocation() == nullptr) {
        delete path_update_type_.dynamic_;
      }
      break;
    }
    case kExplicit: {
      if (GetArenaForAllocation() == nullptr) {
        delete path_update_type_.explicit__;
      }
      break;
    }
    case PATH_UPDATE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PATH_UPDATE_TYPE_NOT_SET;
}


void SLSrtePathComputeRequest_SLSrtePathUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_path_update_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeRequest_SLSrtePathUpdate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic dynamic = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_dynamic(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit explicit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_explicit_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeRequest_SLSrtePathUpdate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic dynamic = 1;
  if (_internal_has_dynamic()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::dynamic(this), target, stream);
  }

  // .service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit explicit = 2;
  if (_internal_has_explicit_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::explicit_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate)
  return target;
}

size_t SLSrtePathComputeRequest_SLSrtePathUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (path_update_type_case()) {
    // .service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateDynamic dynamic = 1;
    case kDynamic: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *path_update_type_.dynamic_);
      break;
    }
    // .service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate.SLSrtePathUpdateExplicit explicit = 2;
    case kExplicit: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *path_update_type_.explicit__);
      break;
    }
    case PATH_UPDATE_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeRequest_SLSrtePathUpdate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeRequest_SLSrtePathUpdate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeRequest_SLSrtePathUpdate::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeRequest_SLSrtePathUpdate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeRequest_SLSrtePathUpdate *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeRequest_SLSrtePathUpdate &>(from));
}


void SLSrtePathComputeRequest_SLSrtePathUpdate::MergeFrom(const SLSrtePathComputeRequest_SLSrtePathUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.path_update_type_case()) {
    case kDynamic: {
      _internal_mutable_dynamic()->::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic::MergeFrom(from._internal_dynamic());
      break;
    }
    case kExplicit: {
      _internal_mutable_explicit_()->::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit::MergeFrom(from._internal_explicit_());
      break;
    }
    case PATH_UPDATE_TYPE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeRequest_SLSrtePathUpdate::CopyFrom(const SLSrtePathComputeRequest_SLSrtePathUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeRequest_SLSrtePathUpdate::IsInitialized() const {
  return true;
}

void SLSrtePathComputeRequest_SLSrtePathUpdate::InternalSwap(SLSrtePathComputeRequest_SLSrtePathUpdate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(path_update_type_, other->path_update_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeRequest_SLSrtePathUpdate::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[7]);
}

// ===================================================================

class SLSrtePathComputeRequest_SLSrtePathWithdraw::_Internal {
 public:
};

SLSrtePathComputeRequest_SLSrtePathWithdraw::SLSrtePathComputeRequest_SLSrtePathWithdraw(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathWithdraw)
}
SLSrtePathComputeRequest_SLSrtePathWithdraw::SLSrtePathComputeRequest_SLSrtePathWithdraw(const SLSrtePathComputeRequest_SLSrtePathWithdraw& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeRequest.SLSrtePathWithdraw)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeRequest_SLSrtePathWithdraw::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeRequest_SLSrtePathWithdraw::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeRequest_SLSrtePathWithdraw::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[8]);
}

// ===================================================================

class SLSrtePathComputeRequest::_Internal {
 public:
  static const ::service_layer::SLSrPolicyKey& policy_key(const SLSrtePathComputeRequest* msg);
  static const ::service_layer::SLSrCandidatePathKey& candidate_path_key(const SLSrtePathComputeRequest* msg);
  static const ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit& init(const SLSrtePathComputeRequest* msg);
  static const ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate& update(const SLSrtePathComputeRequest* msg);
  static const ::service_layer::SLSrtePathComputeRequest_SLSrtePathWithdraw& withdraw(const SLSrtePathComputeRequest* msg);
};

const ::service_layer::SLSrPolicyKey&
SLSrtePathComputeRequest::_Internal::policy_key(const SLSrtePathComputeRequest* msg) {
  return *msg->policy_key_;
}
const ::service_layer::SLSrCandidatePathKey&
SLSrtePathComputeRequest::_Internal::candidate_path_key(const SLSrtePathComputeRequest* msg) {
  return *msg->candidate_path_key_;
}
const ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit&
SLSrtePathComputeRequest::_Internal::init(const SLSrtePathComputeRequest* msg) {
  return *msg->request_type_.init_;
}
const ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate&
SLSrtePathComputeRequest::_Internal::update(const SLSrtePathComputeRequest* msg) {
  return *msg->request_type_.update_;
}
const ::service_layer::SLSrtePathComputeRequest_SLSrtePathWithdraw&
SLSrtePathComputeRequest::_Internal::withdraw(const SLSrtePathComputeRequest* msg) {
  return *msg->request_type_.withdraw_;
}
void SLSrtePathComputeRequest::clear_policy_key() {
  if (GetArenaForAllocation() == nullptr && policy_key_ != nullptr) {
    delete policy_key_;
  }
  policy_key_ = nullptr;
}
void SLSrtePathComputeRequest::clear_candidate_path_key() {
  if (GetArenaForAllocation() == nullptr && candidate_path_key_ != nullptr) {
    delete candidate_path_key_;
  }
  candidate_path_key_ = nullptr;
}
void SLSrtePathComputeRequest::set_allocated_init(::service_layer::SLSrtePathComputeRequest_SLSrtePathInit* init) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_request_type();
  if (init) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::service_layer::SLSrtePathComputeRequest_SLSrtePathInit>::GetOwningArena(init);
    if (message_arena != submessage_arena) {
      init = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, init, submessage_arena);
    }
    set_has_init();
    request_type_.init_ = init;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLSrtePathComputeRequest.init)
}
void SLSrtePathComputeRequest::set_allocated_update(::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate* update) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_request_type();
  if (update) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate>::GetOwningArena(update);
    if (message_arena != submessage_arena) {
      update = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, update, submessage_arena);
    }
    set_has_update();
    request_type_.update_ = update;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLSrtePathComputeRequest.update)
}
void SLSrtePathComputeRequest::set_allocated_withdraw(::service_layer::SLSrtePathComputeRequest_SLSrtePathWithdraw* withdraw) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_request_type();
  if (withdraw) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::service_layer::SLSrtePathComputeRequest_SLSrtePathWithdraw>::GetOwningArena(withdraw);
    if (message_arena != submessage_arena) {
      withdraw = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, withdraw, submessage_arena);
    }
    set_has_withdraw();
    request_type_.withdraw_ = withdraw;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLSrtePathComputeRequest.withdraw)
}
SLSrtePathComputeRequest::SLSrtePathComputeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeRequest)
}
SLSrtePathComputeRequest::SLSrtePathComputeRequest(const SLSrtePathComputeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_policy_key()) {
    policy_key_ = new ::service_layer::SLSrPolicyKey(*from.policy_key_);
  } else {
    policy_key_ = nullptr;
  }
  if (from._internal_has_candidate_path_key()) {
    candidate_path_key_ = new ::service_layer::SLSrCandidatePathKey(*from.candidate_path_key_);
  } else {
    candidate_path_key_ = nullptr;
  }
  seq_num_ = from.seq_num_;
  clear_has_request_type();
  switch (from.request_type_case()) {
    case kInit: {
      _internal_mutable_init()->::service_layer::SLSrtePathComputeRequest_SLSrtePathInit::MergeFrom(from._internal_init());
      break;
    }
    case kUpdate: {
      _internal_mutable_update()->::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate::MergeFrom(from._internal_update());
      break;
    }
    case kWithdraw: {
      _internal_mutable_withdraw()->::service_layer::SLSrtePathComputeRequest_SLSrtePathWithdraw::MergeFrom(from._internal_withdraw());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeRequest)
}

inline void SLSrtePathComputeRequest::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&policy_key_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&seq_num_) -
    reinterpret_cast<char*>(&policy_key_)) + sizeof(seq_num_));
clear_has_request_type();
}

SLSrtePathComputeRequest::~SLSrtePathComputeRequest() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeRequest)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete policy_key_;
  if (this != internal_default_instance()) delete candidate_path_key_;
  if (has_request_type()) {
    clear_request_type();
  }
}

void SLSrtePathComputeRequest::ArenaDtor(void* object) {
  SLSrtePathComputeRequest* _this = reinterpret_cast< SLSrtePathComputeRequest* >(object);
  (void)_this;
}
void SLSrtePathComputeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeRequest::clear_request_type() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLSrtePathComputeRequest)
  switch (request_type_case()) {
    case kInit: {
      if (GetArenaForAllocation() == nullptr) {
        delete request_type_.init_;
      }
      break;
    }
    case kUpdate: {
      if (GetArenaForAllocation() == nullptr) {
        delete request_type_.update_;
      }
      break;
    }
    case kWithdraw: {
      if (GetArenaForAllocation() == nullptr) {
        delete request_type_.withdraw_;
      }
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}


void SLSrtePathComputeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && policy_key_ != nullptr) {
    delete policy_key_;
  }
  policy_key_ = nullptr;
  if (GetArenaForAllocation() == nullptr && candidate_path_key_ != nullptr) {
    delete candidate_path_key_;
  }
  candidate_path_key_ = nullptr;
  seq_num_ = uint64_t{0u};
  clear_request_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service_layer.SLSrPolicyKey policy_key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_policy_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service_layer.SLSrCandidatePathKey candidate_path_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_candidate_path_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 seq_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          seq_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service_layer.SLSrtePathComputeRequest.SLSrtePathInit init = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_init(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate update = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_update(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service_layer.SLSrtePathComputeRequest.SLSrtePathWithdraw withdraw = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_withdraw(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLSrPolicyKey policy_key = 1;
  if (this->_internal_has_policy_key()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::policy_key(this), target, stream);
  }

  // .service_layer.SLSrCandidatePathKey candidate_path_key = 2;
  if (this->_internal_has_candidate_path_key()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::candidate_path_key(this), target, stream);
  }

  // uint64 seq_num = 3;
  if (this->_internal_seq_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_seq_num(), target);
  }

  // .service_layer.SLSrtePathComputeRequest.SLSrtePathInit init = 4;
  if (_internal_has_init()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::init(this), target, stream);
  }

  // .service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate update = 5;
  if (_internal_has_update()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::update(this), target, stream);
  }

  // .service_layer.SLSrtePathComputeRequest.SLSrtePathWithdraw withdraw = 6;
  if (_internal_has_withdraw()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::withdraw(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeRequest)
  return target;
}

size_t SLSrtePathComputeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.SLSrPolicyKey policy_key = 1;
  if (this->_internal_has_policy_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *policy_key_);
  }

  // .service_layer.SLSrCandidatePathKey candidate_path_key = 2;
  if (this->_internal_has_candidate_path_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *candidate_path_key_);
  }

  // uint64 seq_num = 3;
  if (this->_internal_seq_num() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_seq_num());
  }

  switch (request_type_case()) {
    // .service_layer.SLSrtePathComputeRequest.SLSrtePathInit init = 4;
    case kInit: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_type_.init_);
      break;
    }
    // .service_layer.SLSrtePathComputeRequest.SLSrtePathUpdate update = 5;
    case kUpdate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_type_.update_);
      break;
    }
    // .service_layer.SLSrtePathComputeRequest.SLSrtePathWithdraw withdraw = 6;
    case kWithdraw: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_type_.withdraw_);
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeRequest::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeRequest *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeRequest &>(from));
}


void SLSrtePathComputeRequest::MergeFrom(const SLSrtePathComputeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_policy_key()) {
    _internal_mutable_policy_key()->::service_layer::SLSrPolicyKey::MergeFrom(from._internal_policy_key());
  }
  if (from._internal_has_candidate_path_key()) {
    _internal_mutable_candidate_path_key()->::service_layer::SLSrCandidatePathKey::MergeFrom(from._internal_candidate_path_key());
  }
  if (from._internal_seq_num() != 0) {
    _internal_set_seq_num(from._internal_seq_num());
  }
  switch (from.request_type_case()) {
    case kInit: {
      _internal_mutable_init()->::service_layer::SLSrtePathComputeRequest_SLSrtePathInit::MergeFrom(from._internal_init());
      break;
    }
    case kUpdate: {
      _internal_mutable_update()->::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate::MergeFrom(from._internal_update());
      break;
    }
    case kWithdraw: {
      _internal_mutable_withdraw()->::service_layer::SLSrtePathComputeRequest_SLSrtePathWithdraw::MergeFrom(from._internal_withdraw());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeRequest::CopyFrom(const SLSrtePathComputeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeRequest::IsInitialized() const {
  return true;
}

void SLSrtePathComputeRequest::InternalSwap(SLSrtePathComputeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLSrtePathComputeRequest, seq_num_)
      + sizeof(SLSrtePathComputeRequest::seq_num_)
      - PROTOBUF_FIELD_OFFSET(SLSrtePathComputeRequest, policy_key_)>(
          reinterpret_cast<char*>(&policy_key_),
          reinterpret_cast<char*>(&other->policy_key_));
  swap(request_type_, other->request_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeRequest::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[9]);
}

// ===================================================================

class SLSrtePathComputeResponse_SLSrteDynamicPathResult::_Internal {
 public:
  using HasBits = decltype(std::declval<SLSrtePathComputeResponse_SLSrteDynamicPathResult>()._has_bits_);
  static void set_has_effective_diversity_level(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

void SLSrtePathComputeResponse_SLSrteDynamicPathResult::clear_segment_lists() {
  segment_lists_.Clear();
}
SLSrtePathComputeResponse_SLSrteDynamicPathResult::SLSrtePathComputeResponse_SLSrteDynamicPathResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  segment_lists_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult)
}
SLSrtePathComputeResponse_SLSrteDynamicPathResult::SLSrtePathComputeResponse_SLSrteDynamicPathResult(const SLSrtePathComputeResponse_SLSrteDynamicPathResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      segment_lists_(from.segment_lists_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&path_cost_, &from.path_cost_,
    static_cast<size_t>(reinterpret_cast<char*>(&effective_diversity_level_) -
    reinterpret_cast<char*>(&path_cost_)) + sizeof(effective_diversity_level_));
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult)
}

inline void SLSrtePathComputeResponse_SLSrteDynamicPathResult::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&path_cost_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&effective_diversity_level_) -
    reinterpret_cast<char*>(&path_cost_)) + sizeof(effective_diversity_level_));
}

SLSrtePathComputeResponse_SLSrteDynamicPathResult::~SLSrtePathComputeResponse_SLSrteDynamicPathResult() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeResponse_SLSrteDynamicPathResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SLSrtePathComputeResponse_SLSrteDynamicPathResult::ArenaDtor(void* object) {
  SLSrtePathComputeResponse_SLSrteDynamicPathResult* _this = reinterpret_cast< SLSrtePathComputeResponse_SLSrteDynamicPathResult* >(object);
  (void)_this;
}
void SLSrtePathComputeResponse_SLSrteDynamicPathResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeResponse_SLSrteDynamicPathResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeResponse_SLSrteDynamicPathResult::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  segment_lists_.Clear();
  path_cost_ = 0u;
  effective_diversity_level_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeResponse_SLSrteDynamicPathResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .service_layer.SLSrSegmentList segment_lists = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_segment_lists(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 path_cost = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          path_cost_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .service_layer.SLSrteDiversityLevel effective_diversity_level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_effective_diversity_level(static_cast<::service_layer::SLSrteDiversityLevel>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeResponse_SLSrteDynamicPathResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .service_layer.SLSrSegmentList segment_lists = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_segment_lists_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_segment_lists(i), target, stream);
  }

  // uint32 path_cost = 2;
  if (this->_internal_path_cost() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_path_cost(), target);
  }

  // optional .service_layer.SLSrteDiversityLevel effective_diversity_level = 3;
  if (_internal_has_effective_diversity_level()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_effective_diversity_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult)
  return target;
}

size_t SLSrtePathComputeResponse_SLSrteDynamicPathResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .service_layer.SLSrSegmentList segment_lists = 1;
  total_size += 1UL * this->_internal_segment_lists_size();
  for (const auto& msg : this->segment_lists_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 path_cost = 2;
  if (this->_internal_path_cost() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_path_cost());
  }

  // optional .service_layer.SLSrteDiversityLevel effective_diversity_level = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_effective_diversity_level());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeResponse_SLSrteDynamicPathResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeResponse_SLSrteDynamicPathResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeResponse_SLSrteDynamicPathResult::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeResponse_SLSrteDynamicPathResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeResponse_SLSrteDynamicPathResult *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeResponse_SLSrteDynamicPathResult &>(from));
}


void SLSrtePathComputeResponse_SLSrteDynamicPathResult::MergeFrom(const SLSrtePathComputeResponse_SLSrteDynamicPathResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  segment_lists_.MergeFrom(from.segment_lists_);
  if (from._internal_path_cost() != 0) {
    _internal_set_path_cost(from._internal_path_cost());
  }
  if (from._internal_has_effective_diversity_level()) {
    _internal_set_effective_diversity_level(from._internal_effective_diversity_level());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeResponse_SLSrteDynamicPathResult::CopyFrom(const SLSrtePathComputeResponse_SLSrteDynamicPathResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeResponse_SLSrteDynamicPathResult::IsInitialized() const {
  return true;
}

void SLSrtePathComputeResponse_SLSrteDynamicPathResult::InternalSwap(SLSrtePathComputeResponse_SLSrteDynamicPathResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  segment_lists_.InternalSwap(&other->segment_lists_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLSrtePathComputeResponse_SLSrteDynamicPathResult, effective_diversity_level_)
      + sizeof(SLSrtePathComputeResponse_SLSrteDynamicPathResult::effective_diversity_level_)
      - PROTOBUF_FIELD_OFFSET(SLSrtePathComputeResponse_SLSrteDynamicPathResult, path_cost_)>(
          reinterpret_cast<char*>(&path_cost_),
          reinterpret_cast<char*>(&other->path_cost_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeResponse_SLSrteDynamicPathResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[10]);
}

// ===================================================================

class SLSrtePathComputeResponse_SLSrtePathError::_Internal {
 public:
  static const ::service_layer::SLErrorStatus& type(const SLSrtePathComputeResponse_SLSrtePathError* msg);
};

const ::service_layer::SLErrorStatus&
SLSrtePathComputeResponse_SLSrtePathError::_Internal::type(const SLSrtePathComputeResponse_SLSrtePathError* msg) {
  return *msg->type_;
}
void SLSrtePathComputeResponse_SLSrtePathError::clear_type() {
  if (GetArenaForAllocation() == nullptr && type_ != nullptr) {
    delete type_;
  }
  type_ = nullptr;
}
SLSrtePathComputeResponse_SLSrtePathError::SLSrtePathComputeResponse_SLSrtePathError(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeResponse.SLSrtePathError)
}
SLSrtePathComputeResponse_SLSrtePathError::SLSrtePathComputeResponse_SLSrtePathError(const SLSrtePathComputeResponse_SLSrtePathError& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_type()) {
    type_ = new ::service_layer::SLErrorStatus(*from.type_);
  } else {
    type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeResponse.SLSrtePathError)
}

inline void SLSrtePathComputeResponse_SLSrtePathError::SharedCtor() {
description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_ = nullptr;
}

SLSrtePathComputeResponse_SLSrtePathError::~SLSrtePathComputeResponse_SLSrtePathError() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeResponse.SLSrtePathError)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeResponse_SLSrtePathError::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void SLSrtePathComputeResponse_SLSrtePathError::ArenaDtor(void* object) {
  SLSrtePathComputeResponse_SLSrtePathError* _this = reinterpret_cast< SLSrtePathComputeResponse_SLSrtePathError* >(object);
  (void)_this;
}
void SLSrtePathComputeResponse_SLSrtePathError::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeResponse_SLSrtePathError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeResponse_SLSrtePathError::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeResponse.SLSrtePathError)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && type_ != nullptr) {
    delete type_;
  }
  type_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeResponse_SLSrtePathError::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service_layer.SLErrorStatus type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service_layer.SLSrtePathComputeResponse.SLSrtePathError.description"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeResponse_SLSrtePathError::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeResponse.SLSrtePathError)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLErrorStatus type = 1;
  if (this->_internal_has_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::type(this), target, stream);
  }

  // string description = 2;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service_layer.SLSrtePathComputeResponse.SLSrtePathError.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeResponse.SLSrtePathError)
  return target;
}

size_t SLSrtePathComputeResponse_SLSrtePathError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeResponse.SLSrtePathError)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string description = 2;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .service_layer.SLErrorStatus type = 1;
  if (this->_internal_has_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *type_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeResponse_SLSrtePathError::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeResponse_SLSrtePathError::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeResponse_SLSrtePathError::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeResponse_SLSrtePathError::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeResponse_SLSrtePathError *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeResponse_SLSrtePathError &>(from));
}


void SLSrtePathComputeResponse_SLSrtePathError::MergeFrom(const SLSrtePathComputeResponse_SLSrtePathError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeResponse.SLSrtePathError)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_description().empty()) {
    _internal_set_description(from._internal_description());
  }
  if (from._internal_has_type()) {
    _internal_mutable_type()->::service_layer::SLErrorStatus::MergeFrom(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeResponse_SLSrtePathError::CopyFrom(const SLSrtePathComputeResponse_SLSrtePathError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeResponse.SLSrtePathError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeResponse_SLSrtePathError::IsInitialized() const {
  return true;
}

void SLSrtePathComputeResponse_SLSrtePathError::InternalSwap(SLSrtePathComputeResponse_SLSrtePathError* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &description_, lhs_arena,
      &other->description_, rhs_arena
  );
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeResponse_SLSrtePathError::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[11]);
}

// ===================================================================

class SLSrtePathComputeResponse::_Internal {
 public:
  static const ::service_layer::SLSrPolicyKey& policy_key(const SLSrtePathComputeResponse* msg);
  static const ::service_layer::SLSrCandidatePathKey& candidate_path_key(const SLSrtePathComputeResponse* msg);
  static const ::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult& path_result(const SLSrtePathComputeResponse* msg);
  static const ::service_layer::SLSrtePathComputeResponse_SLSrtePathError& error(const SLSrtePathComputeResponse* msg);
};

const ::service_layer::SLSrPolicyKey&
SLSrtePathComputeResponse::_Internal::policy_key(const SLSrtePathComputeResponse* msg) {
  return *msg->policy_key_;
}
const ::service_layer::SLSrCandidatePathKey&
SLSrtePathComputeResponse::_Internal::candidate_path_key(const SLSrtePathComputeResponse* msg) {
  return *msg->candidate_path_key_;
}
const ::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult&
SLSrtePathComputeResponse::_Internal::path_result(const SLSrtePathComputeResponse* msg) {
  return *msg->response_type_.path_result_;
}
const ::service_layer::SLSrtePathComputeResponse_SLSrtePathError&
SLSrtePathComputeResponse::_Internal::error(const SLSrtePathComputeResponse* msg) {
  return *msg->response_type_.error_;
}
void SLSrtePathComputeResponse::clear_policy_key() {
  if (GetArenaForAllocation() == nullptr && policy_key_ != nullptr) {
    delete policy_key_;
  }
  policy_key_ = nullptr;
}
void SLSrtePathComputeResponse::clear_candidate_path_key() {
  if (GetArenaForAllocation() == nullptr && candidate_path_key_ != nullptr) {
    delete candidate_path_key_;
  }
  candidate_path_key_ = nullptr;
}
void SLSrtePathComputeResponse::set_allocated_path_result(::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult* path_result) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response_type();
  if (path_result) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult>::GetOwningArena(path_result);
    if (message_arena != submessage_arena) {
      path_result = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path_result, submessage_arena);
    }
    set_has_path_result();
    response_type_.path_result_ = path_result;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLSrtePathComputeResponse.path_result)
}
void SLSrtePathComputeResponse::set_allocated_error(::service_layer::SLSrtePathComputeResponse_SLSrtePathError* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response_type();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::service_layer::SLSrtePathComputeResponse_SLSrtePathError>::GetOwningArena(error);
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    response_type_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:service_layer.SLSrtePathComputeResponse.error)
}
SLSrtePathComputeResponse::SLSrtePathComputeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.SLSrtePathComputeResponse)
}
SLSrtePathComputeResponse::SLSrtePathComputeResponse(const SLSrtePathComputeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_policy_key()) {
    policy_key_ = new ::service_layer::SLSrPolicyKey(*from.policy_key_);
  } else {
    policy_key_ = nullptr;
  }
  if (from._internal_has_candidate_path_key()) {
    candidate_path_key_ = new ::service_layer::SLSrCandidatePathKey(*from.candidate_path_key_);
  } else {
    candidate_path_key_ = nullptr;
  }
  req_seq_num_ = from.req_seq_num_;
  clear_has_response_type();
  switch (from.response_type_case()) {
    case kPathResult: {
      _internal_mutable_path_result()->::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult::MergeFrom(from._internal_path_result());
      break;
    }
    case kError: {
      _internal_mutable_error()->::service_layer::SLSrtePathComputeResponse_SLSrtePathError::MergeFrom(from._internal_error());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service_layer.SLSrtePathComputeResponse)
}

inline void SLSrtePathComputeResponse::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&policy_key_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&req_seq_num_) -
    reinterpret_cast<char*>(&policy_key_)) + sizeof(req_seq_num_));
clear_has_response_type();
}

SLSrtePathComputeResponse::~SLSrtePathComputeResponse() {
  // @@protoc_insertion_point(destructor:service_layer.SLSrtePathComputeResponse)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SLSrtePathComputeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete policy_key_;
  if (this != internal_default_instance()) delete candidate_path_key_;
  if (has_response_type()) {
    clear_response_type();
  }
}

void SLSrtePathComputeResponse::ArenaDtor(void* object) {
  SLSrtePathComputeResponse* _this = reinterpret_cast< SLSrtePathComputeResponse* >(object);
  (void)_this;
}
void SLSrtePathComputeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SLSrtePathComputeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SLSrtePathComputeResponse::clear_response_type() {
// @@protoc_insertion_point(one_of_clear_start:service_layer.SLSrtePathComputeResponse)
  switch (response_type_case()) {
    case kPathResult: {
      if (GetArenaForAllocation() == nullptr) {
        delete response_type_.path_result_;
      }
      break;
    }
    case kError: {
      if (GetArenaForAllocation() == nullptr) {
        delete response_type_.error_;
      }
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_TYPE_NOT_SET;
}


void SLSrtePathComputeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.SLSrtePathComputeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && policy_key_ != nullptr) {
    delete policy_key_;
  }
  policy_key_ = nullptr;
  if (GetArenaForAllocation() == nullptr && candidate_path_key_ != nullptr) {
    delete candidate_path_key_;
  }
  candidate_path_key_ = nullptr;
  req_seq_num_ = uint64_t{0u};
  clear_response_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SLSrtePathComputeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service_layer.SLSrPolicyKey policy_key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_policy_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service_layer.SLSrCandidatePathKey candidate_path_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_candidate_path_key(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 req_seq_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          req_seq_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult path_result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_path_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service_layer.SLSrtePathComputeResponse.SLSrtePathError error = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SLSrtePathComputeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.SLSrtePathComputeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLSrPolicyKey policy_key = 1;
  if (this->_internal_has_policy_key()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::policy_key(this), target, stream);
  }

  // .service_layer.SLSrCandidatePathKey candidate_path_key = 2;
  if (this->_internal_has_candidate_path_key()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::candidate_path_key(this), target, stream);
  }

  // uint64 req_seq_num = 3;
  if (this->_internal_req_seq_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_req_seq_num(), target);
  }

  // .service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult path_result = 4;
  if (_internal_has_path_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::path_result(this), target, stream);
  }

  // .service_layer.SLSrtePathComputeResponse.SLSrtePathError error = 6;
  if (_internal_has_error()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::error(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.SLSrtePathComputeResponse)
  return target;
}

size_t SLSrtePathComputeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.SLSrtePathComputeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.SLSrPolicyKey policy_key = 1;
  if (this->_internal_has_policy_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *policy_key_);
  }

  // .service_layer.SLSrCandidatePathKey candidate_path_key = 2;
  if (this->_internal_has_candidate_path_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *candidate_path_key_);
  }

  // uint64 req_seq_num = 3;
  if (this->_internal_req_seq_num() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_req_seq_num());
  }

  switch (response_type_case()) {
    // .service_layer.SLSrtePathComputeResponse.SLSrteDynamicPathResult path_result = 4;
    case kPathResult: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_type_.path_result_);
      break;
    }
    // .service_layer.SLSrtePathComputeResponse.SLSrtePathError error = 6;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_type_.error_);
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SLSrtePathComputeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SLSrtePathComputeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SLSrtePathComputeResponse::GetClassData() const { return &_class_data_; }

void SLSrtePathComputeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SLSrtePathComputeResponse *>(to)->MergeFrom(
      static_cast<const SLSrtePathComputeResponse &>(from));
}


void SLSrtePathComputeResponse::MergeFrom(const SLSrtePathComputeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.SLSrtePathComputeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_policy_key()) {
    _internal_mutable_policy_key()->::service_layer::SLSrPolicyKey::MergeFrom(from._internal_policy_key());
  }
  if (from._internal_has_candidate_path_key()) {
    _internal_mutable_candidate_path_key()->::service_layer::SLSrCandidatePathKey::MergeFrom(from._internal_candidate_path_key());
  }
  if (from._internal_req_seq_num() != 0) {
    _internal_set_req_seq_num(from._internal_req_seq_num());
  }
  switch (from.response_type_case()) {
    case kPathResult: {
      _internal_mutable_path_result()->::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult::MergeFrom(from._internal_path_result());
      break;
    }
    case kError: {
      _internal_mutable_error()->::service_layer::SLSrtePathComputeResponse_SLSrtePathError::MergeFrom(from._internal_error());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SLSrtePathComputeResponse::CopyFrom(const SLSrtePathComputeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.SLSrtePathComputeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SLSrtePathComputeResponse::IsInitialized() const {
  return true;
}

void SLSrtePathComputeResponse::InternalSwap(SLSrtePathComputeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SLSrtePathComputeResponse, req_seq_num_)
      + sizeof(SLSrtePathComputeResponse::req_seq_num_)
      - PROTOBUF_FIELD_OFFSET(SLSrtePathComputeResponse, policy_key_)>(
          reinterpret_cast<char*>(&policy_key_),
          reinterpret_cast<char*>(&other->policy_key_));
  swap(response_type_, other->response_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata SLSrtePathComputeResponse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[12]);
}

// ===================================================================

class ConstraintSet_PathDiversity::_Internal {
 public:
  using HasBits = decltype(std::declval<ConstraintSet_PathDiversity>()._has_bits_);
  static const ::service_layer::AssociationGroup& association(const ConstraintSet_PathDiversity* msg);
  static void set_has_min_diversity_level(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::service_layer::AssociationGroup&
ConstraintSet_PathDiversity::_Internal::association(const ConstraintSet_PathDiversity* msg) {
  return *msg->association_;
}
ConstraintSet_PathDiversity::ConstraintSet_PathDiversity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.ConstraintSet.PathDiversity)
}
ConstraintSet_PathDiversity::ConstraintSet_PathDiversity(const ConstraintSet_PathDiversity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_association()) {
    association_ = new ::service_layer::AssociationGroup(*from.association_);
  } else {
    association_ = nullptr;
  }
  ::memcpy(&diversity_level_, &from.diversity_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&shortest_path_) -
    reinterpret_cast<char*>(&diversity_level_)) + sizeof(shortest_path_));
  // @@protoc_insertion_point(copy_constructor:service_layer.ConstraintSet.PathDiversity)
}

inline void ConstraintSet_PathDiversity::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&association_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&shortest_path_) -
    reinterpret_cast<char*>(&association_)) + sizeof(shortest_path_));
}

ConstraintSet_PathDiversity::~ConstraintSet_PathDiversity() {
  // @@protoc_insertion_point(destructor:service_layer.ConstraintSet.PathDiversity)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConstraintSet_PathDiversity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete association_;
}

void ConstraintSet_PathDiversity::ArenaDtor(void* object) {
  ConstraintSet_PathDiversity* _this = reinterpret_cast< ConstraintSet_PathDiversity* >(object);
  (void)_this;
}
void ConstraintSet_PathDiversity::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConstraintSet_PathDiversity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConstraintSet_PathDiversity::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.ConstraintSet.PathDiversity)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && association_ != nullptr) {
    delete association_;
  }
  association_ = nullptr;
  diversity_level_ = 0;
  min_diversity_level_ = 0;
  shortest_path_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConstraintSet_PathDiversity::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service_layer.AssociationGroup association = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_association(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .service_layer.SLSrteDiversityLevel diversity_level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_diversity_level(static_cast<::service_layer::SLSrteDiversityLevel>(val));
        } else
          goto handle_unusual;
        continue;
      // optional .service_layer.SLSrteDiversityLevel min_diversity_level = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_min_diversity_level(static_cast<::service_layer::SLSrteDiversityLevel>(val));
        } else
          goto handle_unusual;
        continue;
      // bool shortest_path = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          shortest_path_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConstraintSet_PathDiversity::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.ConstraintSet.PathDiversity)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.AssociationGroup association = 1;
  if (this->_internal_has_association()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::association(this), target, stream);
  }

  // .service_layer.SLSrteDiversityLevel diversity_level = 2;
  if (this->_internal_diversity_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_diversity_level(), target);
  }

  // optional .service_layer.SLSrteDiversityLevel min_diversity_level = 3;
  if (_internal_has_min_diversity_level()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_min_diversity_level(), target);
  }

  // bool shortest_path = 4;
  if (this->_internal_shortest_path() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_shortest_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.ConstraintSet.PathDiversity)
  return target;
}

size_t ConstraintSet_PathDiversity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.ConstraintSet.PathDiversity)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_layer.AssociationGroup association = 1;
  if (this->_internal_has_association()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *association_);
  }

  // .service_layer.SLSrteDiversityLevel diversity_level = 2;
  if (this->_internal_diversity_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_diversity_level());
  }

  // optional .service_layer.SLSrteDiversityLevel min_diversity_level = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_min_diversity_level());
  }

  // bool shortest_path = 4;
  if (this->_internal_shortest_path() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConstraintSet_PathDiversity::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConstraintSet_PathDiversity::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConstraintSet_PathDiversity::GetClassData() const { return &_class_data_; }

void ConstraintSet_PathDiversity::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConstraintSet_PathDiversity *>(to)->MergeFrom(
      static_cast<const ConstraintSet_PathDiversity &>(from));
}


void ConstraintSet_PathDiversity::MergeFrom(const ConstraintSet_PathDiversity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.ConstraintSet.PathDiversity)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_association()) {
    _internal_mutable_association()->::service_layer::AssociationGroup::MergeFrom(from._internal_association());
  }
  if (from._internal_diversity_level() != 0) {
    _internal_set_diversity_level(from._internal_diversity_level());
  }
  if (from._internal_has_min_diversity_level()) {
    _internal_set_min_diversity_level(from._internal_min_diversity_level());
  }
  if (from._internal_shortest_path() != 0) {
    _internal_set_shortest_path(from._internal_shortest_path());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConstraintSet_PathDiversity::CopyFrom(const ConstraintSet_PathDiversity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.ConstraintSet.PathDiversity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstraintSet_PathDiversity::IsInitialized() const {
  return true;
}

void ConstraintSet_PathDiversity::InternalSwap(ConstraintSet_PathDiversity* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConstraintSet_PathDiversity, shortest_path_)
      + sizeof(ConstraintSet_PathDiversity::shortest_path_)
      - PROTOBUF_FIELD_OFFSET(ConstraintSet_PathDiversity, association_)>(
          reinterpret_cast<char*>(&association_),
          reinterpret_cast<char*>(&other->association_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConstraintSet_PathDiversity::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[13]);
}

// ===================================================================

class ConstraintSet::_Internal {
 public:
  using HasBits = decltype(std::declval<ConstraintSet>()._has_bits_);
  static const ::service_layer::SLSrAffinities& affinities(const ConstraintSet* msg);
  static const ::service_layer::ConstraintSet_PathDiversity& path_diversity(const ConstraintSet* msg);
  static void set_has_path_diversity(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::service_layer::AssociationGroup& corouted_association(const ConstraintSet* msg);
  static void set_has_corouted_association(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::service_layer::SLSrAffinities&
ConstraintSet::_Internal::affinities(const ConstraintSet* msg) {
  return *msg->affinities_;
}
const ::service_layer::ConstraintSet_PathDiversity&
ConstraintSet::_Internal::path_diversity(const ConstraintSet* msg) {
  return *msg->path_diversity_;
}
const ::service_layer::AssociationGroup&
ConstraintSet::_Internal::corouted_association(const ConstraintSet* msg) {
  return *msg->corouted_association_;
}
void ConstraintSet::clear_affinities() {
  if (GetArenaForAllocation() == nullptr && affinities_ != nullptr) {
    delete affinities_;
  }
  affinities_ = nullptr;
}
void ConstraintSet::clear_ip_exclude() {
  ip_exclude_.Clear();
}
ConstraintSet::ConstraintSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  srlg_exclude_(arena),
  ip_exclude_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.ConstraintSet)
}
ConstraintSet::ConstraintSet(const ConstraintSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      srlg_exclude_(from.srlg_exclude_),
      ip_exclude_(from.ip_exclude_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_affinities()) {
    affinities_ = new ::service_layer::SLSrAffinities(*from.affinities_);
  } else {
    affinities_ = nullptr;
  }
  if (from._internal_has_path_diversity()) {
    path_diversity_ = new ::service_layer::ConstraintSet_PathDiversity(*from.path_diversity_);
  } else {
    path_diversity_ = nullptr;
  }
  if (from._internal_has_corouted_association()) {
    corouted_association_ = new ::service_layer::AssociationGroup(*from.corouted_association_);
  } else {
    corouted_association_ = nullptr;
  }
  ::memcpy(&max_segments_, &from.max_segments_,
    static_cast<size_t>(reinterpret_cast<char*>(&persistent_segments_) -
    reinterpret_cast<char*>(&max_segments_)) + sizeof(persistent_segments_));
  // @@protoc_insertion_point(copy_constructor:service_layer.ConstraintSet)
}

inline void ConstraintSet::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&affinities_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&persistent_segments_) -
    reinterpret_cast<char*>(&affinities_)) + sizeof(persistent_segments_));
}

ConstraintSet::~ConstraintSet() {
  // @@protoc_insertion_point(destructor:service_layer.ConstraintSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConstraintSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete affinities_;
  if (this != internal_default_instance()) delete path_diversity_;
  if (this != internal_default_instance()) delete corouted_association_;
}

void ConstraintSet::ArenaDtor(void* object) {
  ConstraintSet* _this = reinterpret_cast< ConstraintSet* >(object);
  (void)_this;
}
void ConstraintSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConstraintSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConstraintSet::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.ConstraintSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  srlg_exclude_.Clear();
  ip_exclude_.Clear();
  if (GetArenaForAllocation() == nullptr && affinities_ != nullptr) {
    delete affinities_;
  }
  affinities_ = nullptr;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(path_diversity_ != nullptr);
      path_diversity_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(corouted_association_ != nullptr);
      corouted_association_->Clear();
    }
  }
  ::memset(&max_segments_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&persistent_segments_) -
      reinterpret_cast<char*>(&max_segments_)) + sizeof(persistent_segments_));
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConstraintSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .service_layer.SLSrAffinities affinities = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_affinities(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 srlg_exclude = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_srlg_exclude(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_srlg_exclude(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .service_layer.SLIpAddress ip_exclude = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ip_exclude(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional .service_layer.ConstraintSet.PathDiversity path_diversity = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_path_diversity(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional .service_layer.AssociationGroup corouted_association = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_corouted_association(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 guaranteed_bandwidth = 103;
      case 103:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          guaranteed_bandwidth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool strict_path_segments = 201;
      case 201:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          strict_path_segments_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool unprotected_segments = 202;
      case 202:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          unprotected_segments_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool persistent_segments = 203;
      case 203:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          persistent_segments_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 max_segments = 204;
      case 204:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          max_segments_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConstraintSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.ConstraintSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_layer.SLSrAffinities affinities = 1;
  if (this->_internal_has_affinities()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::affinities(this), target, stream);
  }

  // repeated uint32 srlg_exclude = 4;
  {
    int byte_size = _srlg_exclude_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          4, _internal_srlg_exclude(), byte_size, target);
    }
  }

  // repeated .service_layer.SLIpAddress ip_exclude = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ip_exclude_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_ip_exclude(i), target, stream);
  }

  // optional .service_layer.ConstraintSet.PathDiversity path_diversity = 101;
  if (_internal_has_path_diversity()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        101, _Internal::path_diversity(this), target, stream);
  }

  // optional .service_layer.AssociationGroup corouted_association = 102;
  if (_internal_has_corouted_association()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        102, _Internal::corouted_association(this), target, stream);
  }

  // uint32 guaranteed_bandwidth = 103;
  if (this->_internal_guaranteed_bandwidth() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(103, this->_internal_guaranteed_bandwidth(), target);
  }

  // bool strict_path_segments = 201;
  if (this->_internal_strict_path_segments() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(201, this->_internal_strict_path_segments(), target);
  }

  // bool unprotected_segments = 202;
  if (this->_internal_unprotected_segments() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(202, this->_internal_unprotected_segments(), target);
  }

  // bool persistent_segments = 203;
  if (this->_internal_persistent_segments() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(203, this->_internal_persistent_segments(), target);
  }

  // uint32 max_segments = 204;
  if (this->_internal_max_segments() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(204, this->_internal_max_segments(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.ConstraintSet)
  return target;
}

size_t ConstraintSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.ConstraintSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 srlg_exclude = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->srlg_exclude_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _srlg_exclude_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .service_layer.SLIpAddress ip_exclude = 5;
  total_size += 1UL * this->_internal_ip_exclude_size();
  for (const auto& msg : this->ip_exclude_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .service_layer.SLSrAffinities affinities = 1;
  if (this->_internal_has_affinities()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *affinities_);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .service_layer.ConstraintSet.PathDiversity path_diversity = 101;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *path_diversity_);
    }

    // optional .service_layer.AssociationGroup corouted_association = 102;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *corouted_association_);
    }

  }
  // uint32 max_segments = 204;
  if (this->_internal_max_segments() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_max_segments());
  }

  // uint32 guaranteed_bandwidth = 103;
  if (this->_internal_guaranteed_bandwidth() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_guaranteed_bandwidth());
  }

  // bool strict_path_segments = 201;
  if (this->_internal_strict_path_segments() != 0) {
    total_size += 2 + 1;
  }

  // bool unprotected_segments = 202;
  if (this->_internal_unprotected_segments() != 0) {
    total_size += 2 + 1;
  }

  // bool persistent_segments = 203;
  if (this->_internal_persistent_segments() != 0) {
    total_size += 2 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConstraintSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConstraintSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConstraintSet::GetClassData() const { return &_class_data_; }

void ConstraintSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConstraintSet *>(to)->MergeFrom(
      static_cast<const ConstraintSet &>(from));
}


void ConstraintSet::MergeFrom(const ConstraintSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.ConstraintSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  srlg_exclude_.MergeFrom(from.srlg_exclude_);
  ip_exclude_.MergeFrom(from.ip_exclude_);
  if (from._internal_has_affinities()) {
    _internal_mutable_affinities()->::service_layer::SLSrAffinities::MergeFrom(from._internal_affinities());
  }
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_path_diversity()->::service_layer::ConstraintSet_PathDiversity::MergeFrom(from._internal_path_diversity());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_corouted_association()->::service_layer::AssociationGroup::MergeFrom(from._internal_corouted_association());
    }
  }
  if (from._internal_max_segments() != 0) {
    _internal_set_max_segments(from._internal_max_segments());
  }
  if (from._internal_guaranteed_bandwidth() != 0) {
    _internal_set_guaranteed_bandwidth(from._internal_guaranteed_bandwidth());
  }
  if (from._internal_strict_path_segments() != 0) {
    _internal_set_strict_path_segments(from._internal_strict_path_segments());
  }
  if (from._internal_unprotected_segments() != 0) {
    _internal_set_unprotected_segments(from._internal_unprotected_segments());
  }
  if (from._internal_persistent_segments() != 0) {
    _internal_set_persistent_segments(from._internal_persistent_segments());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConstraintSet::CopyFrom(const ConstraintSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.ConstraintSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstraintSet::IsInitialized() const {
  return true;
}

void ConstraintSet::InternalSwap(ConstraintSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  srlg_exclude_.InternalSwap(&other->srlg_exclude_);
  ip_exclude_.InternalSwap(&other->ip_exclude_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConstraintSet, persistent_segments_)
      + sizeof(ConstraintSet::persistent_segments_)
      - PROTOBUF_FIELD_OFFSET(ConstraintSet, affinities_)>(
          reinterpret_cast<char*>(&affinities_),
          reinterpret_cast<char*>(&other->affinities_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConstraintSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[14]);
}

// ===================================================================

class AssociationGroup::_Internal {
 public:
};

AssociationGroup::AssociationGroup(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:service_layer.AssociationGroup)
}
AssociationGroup::AssociationGroup(const AssociationGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  association_id_ = from.association_id_;
  // @@protoc_insertion_point(copy_constructor:service_layer.AssociationGroup)
}

inline void AssociationGroup::SharedCtor() {
association_id_ = 0u;
}

AssociationGroup::~AssociationGroup() {
  // @@protoc_insertion_point(destructor:service_layer.AssociationGroup)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AssociationGroup::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AssociationGroup::ArenaDtor(void* object) {
  AssociationGroup* _this = reinterpret_cast< AssociationGroup* >(object);
  (void)_this;
}
void AssociationGroup::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AssociationGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AssociationGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:service_layer.AssociationGroup)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  association_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AssociationGroup::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 association_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          association_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AssociationGroup::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_layer.AssociationGroup)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 association_id = 1;
  if (this->_internal_association_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_association_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_layer.AssociationGroup)
  return target;
}

size_t AssociationGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_layer.AssociationGroup)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 association_id = 1;
  if (this->_internal_association_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_association_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AssociationGroup::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AssociationGroup::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AssociationGroup::GetClassData() const { return &_class_data_; }

void AssociationGroup::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AssociationGroup *>(to)->MergeFrom(
      static_cast<const AssociationGroup &>(from));
}


void AssociationGroup::MergeFrom(const AssociationGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_layer.AssociationGroup)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_association_id() != 0) {
    _internal_set_association_id(from._internal_association_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AssociationGroup::CopyFrom(const AssociationGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_layer.AssociationGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AssociationGroup::IsInitialized() const {
  return true;
}

void AssociationGroup::InternalSwap(AssociationGroup* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(association_id_, other->association_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AssociationGroup::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_getter, &descriptor_table_sl_5fsrte_5fpcalc_5fstateful_2eproto_once,
      file_level_metadata_sl_5fsrte_5fpcalc_5fstateful_2eproto[15]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace service_layer
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeRequests* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeRequests >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeRequests >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeResponses* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeResponses >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeResponses >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitDynamic >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit_SLSrtePathInitExplicit >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeRequest_SLSrtePathInit >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateDynamic >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate_SLSrtePathUpdateExplicit >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeRequest_SLSrtePathUpdate >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeRequest_SLSrtePathWithdraw* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeRequest_SLSrtePathWithdraw >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeRequest_SLSrtePathWithdraw >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeRequest* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeResponse_SLSrteDynamicPathResult >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeResponse_SLSrtePathError* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeResponse_SLSrtePathError >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeResponse_SLSrtePathError >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::SLSrtePathComputeResponse* Arena::CreateMaybeMessage< ::service_layer::SLSrtePathComputeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::SLSrtePathComputeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::ConstraintSet_PathDiversity* Arena::CreateMaybeMessage< ::service_layer::ConstraintSet_PathDiversity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::ConstraintSet_PathDiversity >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::ConstraintSet* Arena::CreateMaybeMessage< ::service_layer::ConstraintSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::ConstraintSet >(arena);
}
template<> PROTOBUF_NOINLINE ::service_layer::AssociationGroup* Arena::CreateMaybeMessage< ::service_layer::AssociationGroup >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service_layer::AssociationGroup >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
