### YamlMime:ManagedReference
items:
- uid: ServiceLayer.SLL2ImetRoute
  commentId: T:ServiceLayer.SLL2ImetRoute
  id: SLL2ImetRoute
  parent: ServiceLayer
  children:
  - ServiceLayer.SLL2ImetRoute.#ctor
  - ServiceLayer.SLL2ImetRoute.#ctor(ServiceLayer.SLL2ImetRoute)
  - ServiceLayer.SLL2ImetRoute.CalculateSize
  - ServiceLayer.SLL2ImetRoute.Clone
  - ServiceLayer.SLL2ImetRoute.Descriptor
  - ServiceLayer.SLL2ImetRoute.EncapType
  - ServiceLayer.SLL2ImetRoute.EncapTypeFieldNumber
  - ServiceLayer.SLL2ImetRoute.Equals(ServiceLayer.SLL2ImetRoute)
  - ServiceLayer.SLL2ImetRoute.Equals(System.Object)
  - ServiceLayer.SLL2ImetRoute.GetHashCode
  - ServiceLayer.SLL2ImetRoute.Label
  - ServiceLayer.SLL2ImetRoute.LabelFieldNumber
  - ServiceLayer.SLL2ImetRoute.MergeFrom(Google.Protobuf.CodedInputStream)
  - ServiceLayer.SLL2ImetRoute.MergeFrom(ServiceLayer.SLL2ImetRoute)
  - ServiceLayer.SLL2ImetRoute.Parser
  - ServiceLayer.SLL2ImetRoute.RouteKey
  - ServiceLayer.SLL2ImetRoute.RouteKeyFieldNumber
  - ServiceLayer.SLL2ImetRoute.ToString
  - ServiceLayer.SLL2ImetRoute.TunnelIdLength
  - ServiceLayer.SLL2ImetRoute.TunnelIdLengthFieldNumber
  - ServiceLayer.SLL2ImetRoute.TunnelIdValue
  - ServiceLayer.SLL2ImetRoute.TunnelIdValueFieldNumber
  - ServiceLayer.SLL2ImetRoute.TunnelType
  - ServiceLayer.SLL2ImetRoute.TunnelTypeFieldNumber
  - ServiceLayer.SLL2ImetRoute.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: SLL2ImetRoute
  nameWithType: SLL2ImetRoute
  fullName: ServiceLayer.SLL2ImetRoute
  type: Class
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2ImetRoute
    path: src/gencs/SlL2Route.cs
    startLine: 3589
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Type-3 EVPN IMET Route
  example: []
  syntax:
    content: 'public sealed class SLL2ImetRoute : IMessage<SLL2ImetRoute>, IEquatable<SLL2ImetRoute>, IDeepCloneable<SLL2ImetRoute>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class SLL2ImetRoute Implements IMessage(Of SLL2ImetRoute), IEquatable(Of SLL2ImetRoute), IDeepCloneable(Of SLL2ImetRoute), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{ServiceLayer.SLL2ImetRoute}
  - System.IEquatable{ServiceLayer.SLL2ImetRoute}
  - Google.Protobuf.IDeepCloneable{ServiceLayer.SLL2ImetRoute}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ServiceLayer.SLL2ImetRoute.Parser
  commentId: P:ServiceLayer.SLL2ImetRoute.Parser
  id: Parser
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SLL2ImetRoute.Parser
  fullName: ServiceLayer.SLL2ImetRoute.Parser
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Parser
    path: src/gencs/SlL2Route.cs
    startLine: 3596
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public static MessageParser<SLL2ImetRoute> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{ServiceLayer.SLL2ImetRoute}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of SLL2ImetRoute)
  overload: ServiceLayer.SLL2ImetRoute.Parser*
- uid: ServiceLayer.SLL2ImetRoute.Descriptor
  commentId: P:ServiceLayer.SLL2ImetRoute.Descriptor
  id: Descriptor
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SLL2ImetRoute.Descriptor
  fullName: ServiceLayer.SLL2ImetRoute.Descriptor
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Descriptor
    path: src/gencs/SlL2Route.cs
    startLine: 3600
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: ServiceLayer.SLL2ImetRoute.Descriptor*
- uid: ServiceLayer.SLL2ImetRoute.#ctor
  commentId: M:ServiceLayer.SLL2ImetRoute.#ctor
  id: '#ctor'
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: SLL2ImetRoute()
  nameWithType: SLL2ImetRoute.SLL2ImetRoute()
  fullName: ServiceLayer.SLL2ImetRoute.SLL2ImetRoute()
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlL2Route.cs
    startLine: 3612
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public SLL2ImetRoute()
    content.vb: Public Sub New()
  overload: ServiceLayer.SLL2ImetRoute.#ctor*
  nameWithType.vb: SLL2ImetRoute.New()
  fullName.vb: ServiceLayer.SLL2ImetRoute.New()
  name.vb: New()
- uid: ServiceLayer.SLL2ImetRoute.#ctor(ServiceLayer.SLL2ImetRoute)
  commentId: M:ServiceLayer.SLL2ImetRoute.#ctor(ServiceLayer.SLL2ImetRoute)
  id: '#ctor(ServiceLayer.SLL2ImetRoute)'
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: SLL2ImetRoute(SLL2ImetRoute)
  nameWithType: SLL2ImetRoute.SLL2ImetRoute(SLL2ImetRoute)
  fullName: ServiceLayer.SLL2ImetRoute.SLL2ImetRoute(ServiceLayer.SLL2ImetRoute)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlL2Route.cs
    startLine: 3620
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public SLL2ImetRoute(SLL2ImetRoute other)
    parameters:
    - id: other
      type: ServiceLayer.SLL2ImetRoute
    content.vb: Public Sub New(other As SLL2ImetRoute)
  overload: ServiceLayer.SLL2ImetRoute.#ctor*
  nameWithType.vb: SLL2ImetRoute.New(SLL2ImetRoute)
  fullName.vb: ServiceLayer.SLL2ImetRoute.New(ServiceLayer.SLL2ImetRoute)
  name.vb: New(SLL2ImetRoute)
- uid: ServiceLayer.SLL2ImetRoute.Clone
  commentId: M:ServiceLayer.SLL2ImetRoute.Clone
  id: Clone
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SLL2ImetRoute.Clone()
  fullName: ServiceLayer.SLL2ImetRoute.Clone()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Clone
    path: src/gencs/SlL2Route.cs
    startLine: 3632
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public SLL2ImetRoute Clone()
    return:
      type: ServiceLayer.SLL2ImetRoute
      description: A deep clone of this object.
    content.vb: Public Function Clone() As SLL2ImetRoute
  overload: ServiceLayer.SLL2ImetRoute.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{ServiceLayer.SLL2ImetRoute}.Clone
- uid: ServiceLayer.SLL2ImetRoute.RouteKeyFieldNumber
  commentId: F:ServiceLayer.SLL2ImetRoute.RouteKeyFieldNumber
  id: RouteKeyFieldNumber
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: RouteKeyFieldNumber
  nameWithType: SLL2ImetRoute.RouteKeyFieldNumber
  fullName: ServiceLayer.SLL2ImetRoute.RouteKeyFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: RouteKeyFieldNumber
    path: src/gencs/SlL2Route.cs
    startLine: 3639
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "RouteKey" field.
  example: []
  syntax:
    content: public const int RouteKeyFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const RouteKeyFieldNumber As Integer = 1
- uid: ServiceLayer.SLL2ImetRoute.RouteKey
  commentId: P:ServiceLayer.SLL2ImetRoute.RouteKey
  id: RouteKey
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: RouteKey
  nameWithType: SLL2ImetRoute.RouteKey
  fullName: ServiceLayer.SLL2ImetRoute.RouteKey
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: RouteKey
    path: src/gencs/SlL2Route.cs
    startLine: 3644
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: IMET Route Key
  example: []
  syntax:
    content: public SLL2ImetRouteKey RouteKey { get; set; }
    parameters: []
    return:
      type: ServiceLayer.SLL2ImetRouteKey
    content.vb: Public Property RouteKey As SLL2ImetRouteKey
  overload: ServiceLayer.SLL2ImetRoute.RouteKey*
- uid: ServiceLayer.SLL2ImetRoute.EncapTypeFieldNumber
  commentId: F:ServiceLayer.SLL2ImetRoute.EncapTypeFieldNumber
  id: EncapTypeFieldNumber
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: EncapTypeFieldNumber
  nameWithType: SLL2ImetRoute.EncapTypeFieldNumber
  fullName: ServiceLayer.SLL2ImetRoute.EncapTypeFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: EncapTypeFieldNumber
    path: src/gencs/SlL2Route.cs
    startLine: 3654
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "EncapType" field.
  example: []
  syntax:
    content: public const int EncapTypeFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const EncapTypeFieldNumber As Integer = 2
- uid: ServiceLayer.SLL2ImetRoute.EncapType
  commentId: P:ServiceLayer.SLL2ImetRoute.EncapType
  id: EncapType
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: EncapType
  nameWithType: SLL2ImetRoute.EncapType
  fullName: ServiceLayer.SLL2ImetRoute.EncapType
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: EncapType
    path: src/gencs/SlL2Route.cs
    startLine: 3659
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Encapsulation type (VXLAN or MPLS)
  example: []
  syntax:
    content: public SLEncapType EncapType { get; set; }
    parameters: []
    return:
      type: ServiceLayer.SLEncapType
    content.vb: Public Property EncapType As SLEncapType
  overload: ServiceLayer.SLL2ImetRoute.EncapType*
- uid: ServiceLayer.SLL2ImetRoute.LabelFieldNumber
  commentId: F:ServiceLayer.SLL2ImetRoute.LabelFieldNumber
  id: LabelFieldNumber
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: LabelFieldNumber
  nameWithType: SLL2ImetRoute.LabelFieldNumber
  fullName: ServiceLayer.SLL2ImetRoute.LabelFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: LabelFieldNumber
    path: src/gencs/SlL2Route.cs
    startLine: 3669
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "Label" field.
  example: []
  syntax:
    content: public const int LabelFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const LabelFieldNumber As Integer = 3
- uid: ServiceLayer.SLL2ImetRoute.Label
  commentId: P:ServiceLayer.SLL2ImetRoute.Label
  id: Label
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: SLL2ImetRoute.Label
  fullName: ServiceLayer.SLL2ImetRoute.Label
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Label
    path: src/gencs/SlL2Route.cs
    startLine: 3675
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    For ENCAP_VXLAN, this field will specify the L2 Virtual Network

    Identifier (VNI)
  example: []
  syntax:
    content: public uint Label { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Label As UInteger
  overload: ServiceLayer.SLL2ImetRoute.Label*
- uid: ServiceLayer.SLL2ImetRoute.TunnelTypeFieldNumber
  commentId: F:ServiceLayer.SLL2ImetRoute.TunnelTypeFieldNumber
  id: TunnelTypeFieldNumber
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: TunnelTypeFieldNumber
  nameWithType: SLL2ImetRoute.TunnelTypeFieldNumber
  fullName: ServiceLayer.SLL2ImetRoute.TunnelTypeFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: TunnelTypeFieldNumber
    path: src/gencs/SlL2Route.cs
    startLine: 3685
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "TunnelType" field.
  example: []
  syntax:
    content: public const int TunnelTypeFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const TunnelTypeFieldNumber As Integer = 4
- uid: ServiceLayer.SLL2ImetRoute.TunnelType
  commentId: P:ServiceLayer.SLL2ImetRoute.TunnelType
  id: TunnelType
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: TunnelType
  nameWithType: SLL2ImetRoute.TunnelType
  fullName: ServiceLayer.SLL2ImetRoute.TunnelType
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: TunnelType
    path: src/gencs/SlL2Route.cs
    startLine: 3687
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public SLL2ImetRoute.Types.PMSITunnelType TunnelType { get; set; }
    parameters: []
    return:
      type: ServiceLayer.SLL2ImetRoute.Types.PMSITunnelType
    content.vb: Public Property TunnelType As SLL2ImetRoute.Types.PMSITunnelType
  overload: ServiceLayer.SLL2ImetRoute.TunnelType*
- uid: ServiceLayer.SLL2ImetRoute.TunnelIdLengthFieldNumber
  commentId: F:ServiceLayer.SLL2ImetRoute.TunnelIdLengthFieldNumber
  id: TunnelIdLengthFieldNumber
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: TunnelIdLengthFieldNumber
  nameWithType: SLL2ImetRoute.TunnelIdLengthFieldNumber
  fullName: ServiceLayer.SLL2ImetRoute.TunnelIdLengthFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: TunnelIdLengthFieldNumber
    path: src/gencs/SlL2Route.cs
    startLine: 3697
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "TunnelIdLength" field.
  example: []
  syntax:
    content: public const int TunnelIdLengthFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const TunnelIdLengthFieldNumber As Integer = 5
- uid: ServiceLayer.SLL2ImetRoute.TunnelIdLength
  commentId: P:ServiceLayer.SLL2ImetRoute.TunnelIdLength
  id: TunnelIdLength
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: TunnelIdLength
  nameWithType: SLL2ImetRoute.TunnelIdLength
  fullName: ServiceLayer.SLL2ImetRoute.TunnelIdLength
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: TunnelIdLength
    path: src/gencs/SlL2Route.cs
    startLine: 3699
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public uint TunnelIdLength { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property TunnelIdLength As UInteger
  overload: ServiceLayer.SLL2ImetRoute.TunnelIdLength*
- uid: ServiceLayer.SLL2ImetRoute.TunnelIdValueFieldNumber
  commentId: F:ServiceLayer.SLL2ImetRoute.TunnelIdValueFieldNumber
  id: TunnelIdValueFieldNumber
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: TunnelIdValueFieldNumber
  nameWithType: SLL2ImetRoute.TunnelIdValueFieldNumber
  fullName: ServiceLayer.SLL2ImetRoute.TunnelIdValueFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: TunnelIdValueFieldNumber
    path: src/gencs/SlL2Route.cs
    startLine: 3709
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "TunnelIdValue" field.
  example: []
  syntax:
    content: public const int TunnelIdValueFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const TunnelIdValueFieldNumber As Integer = 6
- uid: ServiceLayer.SLL2ImetRoute.TunnelIdValue
  commentId: P:ServiceLayer.SLL2ImetRoute.TunnelIdValue
  id: TunnelIdValue
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: TunnelIdValue
  nameWithType: SLL2ImetRoute.TunnelIdValue
  fullName: ServiceLayer.SLL2ImetRoute.TunnelIdValue
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: TunnelIdValue
    path: src/gencs/SlL2Route.cs
    startLine: 3717
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    When the type is set to Ingress Replication the Tunnel

    Identifier carries the unicast tunnel endpoint IP

    address of the local PE that is to be this PE's receiving

    endpoint address for the tunnel.
  example: []
  syntax:
    content: public ByteString TunnelIdValue { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public Property TunnelIdValue As ByteString
  overload: ServiceLayer.SLL2ImetRoute.TunnelIdValue*
- uid: ServiceLayer.SLL2ImetRoute.Equals(System.Object)
  commentId: M:ServiceLayer.SLL2ImetRoute.Equals(System.Object)
  id: Equals(System.Object)
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: SLL2ImetRoute.Equals(object)
  fullName: ServiceLayer.SLL2ImetRoute.Equals(object)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Equals
    path: src/gencs/SlL2Route.cs
    startLine: 3726
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: ServiceLayer.SLL2ImetRoute.Equals*
  nameWithType.vb: SLL2ImetRoute.Equals(Object)
  fullName.vb: ServiceLayer.SLL2ImetRoute.Equals(Object)
  name.vb: Equals(Object)
- uid: ServiceLayer.SLL2ImetRoute.Equals(ServiceLayer.SLL2ImetRoute)
  commentId: M:ServiceLayer.SLL2ImetRoute.Equals(ServiceLayer.SLL2ImetRoute)
  id: Equals(ServiceLayer.SLL2ImetRoute)
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: Equals(SLL2ImetRoute)
  nameWithType: SLL2ImetRoute.Equals(SLL2ImetRoute)
  fullName: ServiceLayer.SLL2ImetRoute.Equals(ServiceLayer.SLL2ImetRoute)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Equals
    path: src/gencs/SlL2Route.cs
    startLine: 3732
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(SLL2ImetRoute other)
    parameters:
    - id: other
      type: ServiceLayer.SLL2ImetRoute
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As SLL2ImetRoute) As Boolean
  overload: ServiceLayer.SLL2ImetRoute.Equals*
  implements:
  - System.IEquatable{ServiceLayer.SLL2ImetRoute}.Equals(ServiceLayer.SLL2ImetRoute)
- uid: ServiceLayer.SLL2ImetRoute.GetHashCode
  commentId: M:ServiceLayer.SLL2ImetRoute.GetHashCode
  id: GetHashCode
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SLL2ImetRoute.GetHashCode()
  fullName: ServiceLayer.SLL2ImetRoute.GetHashCode()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: GetHashCode
    path: src/gencs/SlL2Route.cs
    startLine: 3750
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: ServiceLayer.SLL2ImetRoute.GetHashCode*
- uid: ServiceLayer.SLL2ImetRoute.ToString
  commentId: M:ServiceLayer.SLL2ImetRoute.ToString
  id: ToString
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SLL2ImetRoute.ToString()
  fullName: ServiceLayer.SLL2ImetRoute.ToString()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: ToString
    path: src/gencs/SlL2Route.cs
    startLine: 3766
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: ServiceLayer.SLL2ImetRoute.ToString*
- uid: ServiceLayer.SLL2ImetRoute.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:ServiceLayer.SLL2ImetRoute.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: SLL2ImetRoute.WriteTo(CodedOutputStream)
  fullName: ServiceLayer.SLL2ImetRoute.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: WriteTo
    path: src/gencs/SlL2Route.cs
    startLine: 3772
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: ServiceLayer.SLL2ImetRoute.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: ServiceLayer.SLL2ImetRoute.CalculateSize
  commentId: M:ServiceLayer.SLL2ImetRoute.CalculateSize
  id: CalculateSize
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SLL2ImetRoute.CalculateSize()
  fullName: ServiceLayer.SLL2ImetRoute.CalculateSize()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: CalculateSize
    path: src/gencs/SlL2Route.cs
    startLine: 3842
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: ServiceLayer.SLL2ImetRoute.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: ServiceLayer.SLL2ImetRoute.MergeFrom(ServiceLayer.SLL2ImetRoute)
  commentId: M:ServiceLayer.SLL2ImetRoute.MergeFrom(ServiceLayer.SLL2ImetRoute)
  id: MergeFrom(ServiceLayer.SLL2ImetRoute)
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: MergeFrom(SLL2ImetRoute)
  nameWithType: SLL2ImetRoute.MergeFrom(SLL2ImetRoute)
  fullName: ServiceLayer.SLL2ImetRoute.MergeFrom(ServiceLayer.SLL2ImetRoute)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: MergeFrom
    path: src/gencs/SlL2Route.cs
    startLine: 3870
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(SLL2ImetRoute other)
    parameters:
    - id: other
      type: ServiceLayer.SLL2ImetRoute
    content.vb: Public Sub MergeFrom(other As SLL2ImetRoute)
  overload: ServiceLayer.SLL2ImetRoute.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{ServiceLayer.SLL2ImetRoute}.MergeFrom(ServiceLayer.SLL2ImetRoute)
- uid: ServiceLayer.SLL2ImetRoute.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:ServiceLayer.SLL2ImetRoute.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: ServiceLayer.SLL2ImetRoute
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: SLL2ImetRoute.MergeFrom(CodedInputStream)
  fullName: ServiceLayer.SLL2ImetRoute.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2Route.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: MergeFrom
    path: src/gencs/SlL2Route.cs
    startLine: 3900
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: ServiceLayer.SLL2ImetRoute.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: ServiceLayer
  commentId: N:ServiceLayer
  href: ServiceLayer.html
  name: ServiceLayer
  nameWithType: ServiceLayer
  fullName: ServiceLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{ServiceLayer.SLL2ImetRoute}
  commentId: T:Google.Protobuf.IMessage{ServiceLayer.SLL2ImetRoute}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: ServiceLayer.SLL2ImetRoute.html
  name: IMessage<SLL2ImetRoute>
  nameWithType: IMessage<SLL2ImetRoute>
  fullName: Google.Protobuf.IMessage<ServiceLayer.SLL2ImetRoute>
  nameWithType.vb: IMessage(Of SLL2ImetRoute)
  fullName.vb: Google.Protobuf.IMessage(Of ServiceLayer.SLL2ImetRoute)
  name.vb: IMessage(Of SLL2ImetRoute)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: )
- uid: System.IEquatable{ServiceLayer.SLL2ImetRoute}
  commentId: T:System.IEquatable{ServiceLayer.SLL2ImetRoute}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<SLL2ImetRoute>
  nameWithType: IEquatable<SLL2ImetRoute>
  fullName: System.IEquatable<ServiceLayer.SLL2ImetRoute>
  nameWithType.vb: IEquatable(Of SLL2ImetRoute)
  fullName.vb: System.IEquatable(Of ServiceLayer.SLL2ImetRoute)
  name.vb: IEquatable(Of SLL2ImetRoute)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLL2ImetRoute}
  commentId: T:Google.Protobuf.IDeepCloneable{ServiceLayer.SLL2ImetRoute}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: ServiceLayer.SLL2ImetRoute.html
  name: IDeepCloneable<SLL2ImetRoute>
  nameWithType: IDeepCloneable<SLL2ImetRoute>
  fullName: Google.Protobuf.IDeepCloneable<ServiceLayer.SLL2ImetRoute>
  nameWithType.vb: IDeepCloneable(Of SLL2ImetRoute)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of ServiceLayer.SLL2ImetRoute)
  name.vb: IDeepCloneable(Of SLL2ImetRoute)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ServiceLayer.SLL2ImetRoute.Parser*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.Parser
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.Parser
  name: Parser
  nameWithType: SLL2ImetRoute.Parser
  fullName: ServiceLayer.SLL2ImetRoute.Parser
- uid: Google.Protobuf.MessageParser{ServiceLayer.SLL2ImetRoute}
  commentId: T:Google.Protobuf.MessageParser{ServiceLayer.SLL2ImetRoute}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: ServiceLayer.SLL2ImetRoute.html
  name: MessageParser<SLL2ImetRoute>
  nameWithType: MessageParser<SLL2ImetRoute>
  fullName: Google.Protobuf.MessageParser<ServiceLayer.SLL2ImetRoute>
  nameWithType.vb: MessageParser(Of SLL2ImetRoute)
  fullName.vb: Google.Protobuf.MessageParser(Of ServiceLayer.SLL2ImetRoute)
  name.vb: MessageParser(Of SLL2ImetRoute)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ServiceLayer.SLL2ImetRoute.Descriptor*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.Descriptor
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.Descriptor
  name: Descriptor
  nameWithType: SLL2ImetRoute.Descriptor
  fullName: ServiceLayer.SLL2ImetRoute.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: ServiceLayer.SLL2ImetRoute.#ctor*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.#ctor
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.#ctor
  name: SLL2ImetRoute
  nameWithType: SLL2ImetRoute.SLL2ImetRoute
  fullName: ServiceLayer.SLL2ImetRoute.SLL2ImetRoute
  nameWithType.vb: SLL2ImetRoute.New
  fullName.vb: ServiceLayer.SLL2ImetRoute.New
  name.vb: New
- uid: ServiceLayer.SLL2ImetRoute
  commentId: T:ServiceLayer.SLL2ImetRoute
  parent: ServiceLayer
  href: ServiceLayer.SLL2ImetRoute.html
  name: SLL2ImetRoute
  nameWithType: SLL2ImetRoute
  fullName: ServiceLayer.SLL2ImetRoute
- uid: ServiceLayer.SLL2ImetRoute.Clone*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.Clone
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.Clone
  name: Clone
  nameWithType: SLL2ImetRoute.Clone
  fullName: ServiceLayer.SLL2ImetRoute.Clone
- uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLL2ImetRoute}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{ServiceLayer.SLL2ImetRoute}.Clone
  parent: Google.Protobuf.IDeepCloneable{ServiceLayer.SLL2ImetRoute}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<SLL2ImetRoute>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<ServiceLayer.SLL2ImetRoute>.Clone()
  nameWithType.vb: IDeepCloneable(Of SLL2ImetRoute).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of ServiceLayer.SLL2ImetRoute).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLL2ImetRoute}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLL2ImetRoute}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ServiceLayer.SLL2ImetRoute.RouteKey*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.RouteKey
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.RouteKey
  name: RouteKey
  nameWithType: SLL2ImetRoute.RouteKey
  fullName: ServiceLayer.SLL2ImetRoute.RouteKey
- uid: ServiceLayer.SLL2ImetRouteKey
  commentId: T:ServiceLayer.SLL2ImetRouteKey
  parent: ServiceLayer
  href: ServiceLayer.SLL2ImetRouteKey.html
  name: SLL2ImetRouteKey
  nameWithType: SLL2ImetRouteKey
  fullName: ServiceLayer.SLL2ImetRouteKey
- uid: ServiceLayer.SLL2ImetRoute.EncapType*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.EncapType
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.EncapType
  name: EncapType
  nameWithType: SLL2ImetRoute.EncapType
  fullName: ServiceLayer.SLL2ImetRoute.EncapType
- uid: ServiceLayer.SLEncapType
  commentId: T:ServiceLayer.SLEncapType
  parent: ServiceLayer
  href: ServiceLayer.SLEncapType.html
  name: SLEncapType
  nameWithType: SLEncapType
  fullName: ServiceLayer.SLEncapType
- uid: ServiceLayer.SLL2ImetRoute.Label*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.Label
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.Label
  name: Label
  nameWithType: SLL2ImetRoute.Label
  fullName: ServiceLayer.SLL2ImetRoute.Label
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: ServiceLayer.SLL2ImetRoute.TunnelType*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.TunnelType
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.TunnelType
  name: TunnelType
  nameWithType: SLL2ImetRoute.TunnelType
  fullName: ServiceLayer.SLL2ImetRoute.TunnelType
- uid: ServiceLayer.SLL2ImetRoute.Types.PMSITunnelType
  commentId: T:ServiceLayer.SLL2ImetRoute.Types.PMSITunnelType
  parent: ServiceLayer
  href: ServiceLayer.SLL2ImetRoute.html
  name: SLL2ImetRoute.Types.PMSITunnelType
  nameWithType: SLL2ImetRoute.Types.PMSITunnelType
  fullName: ServiceLayer.SLL2ImetRoute.Types.PMSITunnelType
  spec.csharp:
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: .
  - uid: ServiceLayer.SLL2ImetRoute.Types
    name: Types
    href: ServiceLayer.SLL2ImetRoute.Types.html
  - name: .
  - uid: ServiceLayer.SLL2ImetRoute.Types.PMSITunnelType
    name: PMSITunnelType
    href: ServiceLayer.SLL2ImetRoute.Types.PMSITunnelType.html
  spec.vb:
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: .
  - uid: ServiceLayer.SLL2ImetRoute.Types
    name: Types
    href: ServiceLayer.SLL2ImetRoute.Types.html
  - name: .
  - uid: ServiceLayer.SLL2ImetRoute.Types.PMSITunnelType
    name: PMSITunnelType
    href: ServiceLayer.SLL2ImetRoute.Types.PMSITunnelType.html
- uid: ServiceLayer.SLL2ImetRoute.TunnelIdLength*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.TunnelIdLength
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.TunnelIdLength
  name: TunnelIdLength
  nameWithType: SLL2ImetRoute.TunnelIdLength
  fullName: ServiceLayer.SLL2ImetRoute.TunnelIdLength
- uid: ServiceLayer.SLL2ImetRoute.TunnelIdValue*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.TunnelIdValue
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.TunnelIdValue
  name: TunnelIdValue
  nameWithType: SLL2ImetRoute.TunnelIdValue
  fullName: ServiceLayer.SLL2ImetRoute.TunnelIdValue
- uid: Google.Protobuf.ByteString
  commentId: T:Google.Protobuf.ByteString
  parent: Google.Protobuf
  isExternal: true
  name: ByteString
  nameWithType: ByteString
  fullName: Google.Protobuf.ByteString
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ServiceLayer.SLL2ImetRoute.Equals*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.Equals
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.Equals(System.Object)
  name: Equals
  nameWithType: SLL2ImetRoute.Equals
  fullName: ServiceLayer.SLL2ImetRoute.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{ServiceLayer.SLL2ImetRoute}.Equals(ServiceLayer.SLL2ImetRoute)
  commentId: M:System.IEquatable{ServiceLayer.SLL2ImetRoute}.Equals(ServiceLayer.SLL2ImetRoute)
  parent: System.IEquatable{ServiceLayer.SLL2ImetRoute}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-servicelayer.sll2imetroute-.equals#system-iequatable((servicelayer-sll2imetroute))-equals(servicelayer-sll2imetroute)
  name: Equals(SLL2ImetRoute)
  nameWithType: IEquatable<SLL2ImetRoute>.Equals(SLL2ImetRoute)
  fullName: System.IEquatable<ServiceLayer.SLL2ImetRoute>.Equals(ServiceLayer.SLL2ImetRoute)
  nameWithType.vb: IEquatable(Of SLL2ImetRoute).Equals(SLL2ImetRoute)
  fullName.vb: System.IEquatable(Of ServiceLayer.SLL2ImetRoute).Equals(ServiceLayer.SLL2ImetRoute)
  spec.csharp:
  - uid: System.IEquatable{ServiceLayer.SLL2ImetRoute}.Equals(ServiceLayer.SLL2ImetRoute)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-servicelayer.sll2imetroute-.equals#system-iequatable((servicelayer-sll2imetroute))-equals(servicelayer-sll2imetroute)
  - name: (
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{ServiceLayer.SLL2ImetRoute}.Equals(ServiceLayer.SLL2ImetRoute)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-servicelayer.sll2imetroute-.equals#system-iequatable((servicelayer-sll2imetroute))-equals(servicelayer-sll2imetroute)
  - name: (
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: ServiceLayer.SLL2ImetRoute.GetHashCode*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.GetHashCode
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.GetHashCode
  name: GetHashCode
  nameWithType: SLL2ImetRoute.GetHashCode
  fullName: ServiceLayer.SLL2ImetRoute.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ServiceLayer.SLL2ImetRoute.ToString*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.ToString
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.ToString
  name: ToString
  nameWithType: SLL2ImetRoute.ToString
  fullName: ServiceLayer.SLL2ImetRoute.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ServiceLayer.SLL2ImetRoute.WriteTo*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.WriteTo
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.WriteTo(Google.Protobuf.CodedOutputStream)
  name: WriteTo
  nameWithType: SLL2ImetRoute.WriteTo
  fullName: ServiceLayer.SLL2ImetRoute.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: ServiceLayer.SLL2ImetRoute.CalculateSize*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.CalculateSize
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.CalculateSize
  name: CalculateSize
  nameWithType: SLL2ImetRoute.CalculateSize
  fullName: ServiceLayer.SLL2ImetRoute.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: ServiceLayer.SLL2ImetRoute.MergeFrom*
  commentId: Overload:ServiceLayer.SLL2ImetRoute.MergeFrom
  href: ServiceLayer.SLL2ImetRoute.html#ServiceLayer.SLL2ImetRoute.MergeFrom(ServiceLayer.SLL2ImetRoute)
  name: MergeFrom
  nameWithType: SLL2ImetRoute.MergeFrom
  fullName: ServiceLayer.SLL2ImetRoute.MergeFrom
- uid: Google.Protobuf.IMessage{ServiceLayer.SLL2ImetRoute}.MergeFrom(ServiceLayer.SLL2ImetRoute)
  commentId: M:Google.Protobuf.IMessage{ServiceLayer.SLL2ImetRoute}.MergeFrom(ServiceLayer.SLL2ImetRoute)
  parent: Google.Protobuf.IMessage{ServiceLayer.SLL2ImetRoute}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: ServiceLayer.SLL2ImetRoute.html
  name: MergeFrom(SLL2ImetRoute)
  nameWithType: IMessage<SLL2ImetRoute>.MergeFrom(SLL2ImetRoute)
  fullName: Google.Protobuf.IMessage<ServiceLayer.SLL2ImetRoute>.MergeFrom(ServiceLayer.SLL2ImetRoute)
  nameWithType.vb: IMessage(Of SLL2ImetRoute).MergeFrom(SLL2ImetRoute)
  fullName.vb: Google.Protobuf.IMessage(Of ServiceLayer.SLL2ImetRoute).MergeFrom(ServiceLayer.SLL2ImetRoute)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{ServiceLayer.SLL2ImetRoute}.MergeFrom(ServiceLayer.SLL2ImetRoute)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{ServiceLayer.SLL2ImetRoute}.MergeFrom(ServiceLayer.SLL2ImetRoute)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: ServiceLayer.SLL2ImetRoute
    name: SLL2ImetRoute
    href: ServiceLayer.SLL2ImetRoute.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
