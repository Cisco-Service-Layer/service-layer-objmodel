### YamlMime:ManagedReference
items:
- uid: ServiceLayer.SLL2Oper.SLL2OperClient
  commentId: T:ServiceLayer.SLL2Oper.SLL2OperClient
  id: SLL2Oper.SLL2OperClient
  parent: ServiceLayer
  children:
  - ServiceLayer.SLL2Oper.SLL2OperClient.#ctor
  - ServiceLayer.SLL2Oper.SLL2OperClient.#ctor(Grpc.Core.CallInvoker)
  - ServiceLayer.SLL2Oper.SLL2OperClient.#ctor(Grpc.Core.ChannelBase)
  - ServiceLayer.SLL2Oper.SLL2OperClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - ServiceLayer.SLL2Oper.SLL2OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Grpc.Core.CallOptions)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp(ServiceLayer.SLL2RegMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp(ServiceLayer.SLL2RegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync(ServiceLayer.SLL2RegMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync(ServiceLayer.SLL2RegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp(ServiceLayer.SLL2RouteMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp(ServiceLayer.SLL2RouteMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Grpc.Core.CallOptions)
  - ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SLL2Oper.SLL2OperClient
  nameWithType: SLL2Oper.SLL2OperClient
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient
  type: Class
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2OperClient
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 286
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Client for SLL2Oper
  example: []
  syntax:
    content: 'public class SLL2Oper.SLL2OperClient : ClientBase<SLL2Oper.SLL2OperClient>'
    content.vb: Public Class SLL2Oper.SLL2OperClient Inherits ClientBase(Of SLL2Oper.SLL2OperClient)
  inheritance:
  - System.Object
  - Grpc.Core.ClientBase
  - Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}
  inheritedMembers:
  - Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}.WithHost(System.String)
  - Grpc.Core.ClientBase.CallInvoker
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.#ctor(Grpc.Core.ChannelBase)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.#ctor(Grpc.Core.ChannelBase)
  id: '#ctor(Grpc.Core.ChannelBase)'
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2OperClient(ChannelBase)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2OperClient(ChannelBase)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2OperClient(Grpc.Core.ChannelBase)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 290
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a new client for SLL2Oper
  example: []
  syntax:
    content: public SLL2OperClient(ChannelBase channel)
    parameters:
    - id: channel
      type: Grpc.Core.ChannelBase
      description: The channel to use to make remote calls.
    content.vb: Public Sub New(channel As ChannelBase)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.#ctor*
  nameWithType.vb: SLL2Oper.SLL2OperClient.New(ChannelBase)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.New(Grpc.Core.ChannelBase)
  name.vb: New(ChannelBase)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.#ctor(Grpc.Core.CallInvoker)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.#ctor(Grpc.Core.CallInvoker)
  id: '#ctor(Grpc.Core.CallInvoker)'
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2OperClient(CallInvoker)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2OperClient(CallInvoker)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2OperClient(Grpc.Core.CallInvoker)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 296
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a new client for SLL2Oper that uses a custom <code>CallInvoker</code>.
  example: []
  syntax:
    content: public SLL2OperClient(CallInvoker callInvoker)
    parameters:
    - id: callInvoker
      type: Grpc.Core.CallInvoker
      description: The callInvoker to use to make remote calls.
    content.vb: Public Sub New(callInvoker As CallInvoker)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.#ctor*
  nameWithType.vb: SLL2Oper.SLL2OperClient.New(CallInvoker)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.New(Grpc.Core.CallInvoker)
  name.vb: New(CallInvoker)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.#ctor
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.#ctor
  id: '#ctor'
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2OperClient()
  nameWithType: SLL2Oper.SLL2OperClient.SLL2OperClient()
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2OperClient()
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 301
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Protected parameterless constructor to allow creation of test doubles.
  example: []
  syntax:
    content: protected SLL2OperClient()
    content.vb: Protected Sub New()
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.#ctor*
  nameWithType.vb: SLL2Oper.SLL2OperClient.New()
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.New()
  name.vb: New()
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: '#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)'
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2OperClient(ClientBaseConfiguration)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2OperClient(ClientBase.ClientBaseConfiguration)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2OperClient(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 307
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Protected constructor to allow creation of configured clients.
  example: []
  syntax:
    content: protected SLL2OperClient(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
      description: The client configuration.
    content.vb: Protected Sub New(configuration As ClientBase.ClientBaseConfiguration)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.#ctor*
  nameWithType.vb: SLL2Oper.SLL2OperClient.New(ClientBase.ClientBaseConfiguration)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.New(Grpc.Core.ClientBase.ClientBaseConfiguration)
  name.vb: New(ClientBaseConfiguration)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2GlobalsGet(SLL2GlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2GlobalsGet(SLL2GlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2GlobalsGet
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 320
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve global L2 info from the server.
  example: []
  syntax:
    content: public virtual SLL2GlobalsGetMsgRsp SLL2GlobalsGet(SLL2GlobalsGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLL2GlobalsGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLL2GlobalsGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLL2GlobalsGet(request As SLL2GlobalsGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLL2GlobalsGetMsgRsp
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet*
  nameWithType.vb: SLL2Oper.SLL2OperClient.SLL2GlobalsGet(SLL2GlobalsGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLL2GlobalsGet(SLL2GlobalsGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.CallOptions)
  id: SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2GlobalsGet(SLL2GlobalsGetMsg, CallOptions)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2GlobalsGet(SLL2GlobalsGetMsg, CallOptions)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2GlobalsGet
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 331
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve global L2 info from the server.
  example: []
  syntax:
    content: public virtual SLL2GlobalsGetMsgRsp SLL2GlobalsGet(SLL2GlobalsGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLL2GlobalsGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLL2GlobalsGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLL2GlobalsGet(request As SLL2GlobalsGetMsg, options As CallOptions) As SLL2GlobalsGetMsgRsp
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet*
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2GlobalsGetAsync(SLL2GlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(SLL2GlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2GlobalsGetAsync
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 344
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve global L2 info from the server.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLL2GlobalsGetMsgRsp> SLL2GlobalsGetAsync(SLL2GlobalsGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLL2GlobalsGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2GlobalsGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLL2GlobalsGetAsync(request As SLL2GlobalsGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLL2GlobalsGetMsgRsp)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync*
  nameWithType.vb: SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(SLL2GlobalsGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLL2GlobalsGetAsync(SLL2GlobalsGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.CallOptions)
  id: SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2GlobalsGetAsync(SLL2GlobalsGetMsg, CallOptions)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(SLL2GlobalsGetMsg, CallOptions)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2GlobalsGetAsync
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 355
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve global L2 info from the server.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLL2GlobalsGetMsgRsp> SLL2GlobalsGetAsync(SLL2GlobalsGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLL2GlobalsGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2GlobalsGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLL2GlobalsGetAsync(request As SLL2GlobalsGetMsg, options As CallOptions) As AsyncUnaryCall(Of SLL2GlobalsGetMsgRsp)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync*
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp(ServiceLayer.SLL2RegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp(ServiceLayer.SLL2RegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLL2RegOp(ServiceLayer.SLL2RegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2RegOp(SLL2RegMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RegOp(SLL2RegMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp(ServiceLayer.SLL2RegMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2RegOp
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 388
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2RegMsg.Oper = SL_REGOP_REGISTER:
        Global L2 registration.
        A client Must Register BEFORE sending BD registration messages
        (to add/update/delete routes) or BEFORE requesting for L2 route
        notifications.

    SLL2RegMsg.Oper = SL_REGOP_UNREGISTER:
        Global L2 un-registration.
        This call is used to convey that the client is no longer
        interested in programming L2 routes and in receiving L2 route
        notifications. All programmed L2 routes will be deleted on the
        server and the server will stop sending L2 route notifications.

    SLL2RegMsg.Oper = SL_REGOP_EOF:
        Global L2 End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known
        objects and to convey the end of requests for L2 route
        notifications.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their routes.
  example: []
  syntax:
    content: public virtual SLL2RegMsgRsp SLL2RegOp(SLL2RegMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLL2RegMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLL2RegMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLL2RegOp(request As SLL2RegMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLL2RegMsgRsp
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp*
  nameWithType.vb: SLL2Oper.SLL2OperClient.SLL2RegOp(SLL2RegMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp(ServiceLayer.SLL2RegMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLL2RegOp(SLL2RegMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp(ServiceLayer.SLL2RegMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp(ServiceLayer.SLL2RegMsg,Grpc.Core.CallOptions)
  id: SLL2RegOp(ServiceLayer.SLL2RegMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2RegOp(SLL2RegMsg, CallOptions)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RegOp(SLL2RegMsg, CallOptions)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp(ServiceLayer.SLL2RegMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2RegOp
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 419
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2RegMsg.Oper = SL_REGOP_REGISTER:
        Global L2 registration.
        A client Must Register BEFORE sending BD registration messages
        (to add/update/delete routes) or BEFORE requesting for L2 route
        notifications.

    SLL2RegMsg.Oper = SL_REGOP_UNREGISTER:
        Global L2 un-registration.
        This call is used to convey that the client is no longer
        interested in programming L2 routes and in receiving L2 route
        notifications. All programmed L2 routes will be deleted on the
        server and the server will stop sending L2 route notifications.

    SLL2RegMsg.Oper = SL_REGOP_EOF:
        Global L2 End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known
        objects and to convey the end of requests for L2 route
        notifications.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their routes.
  example: []
  syntax:
    content: public virtual SLL2RegMsgRsp SLL2RegOp(SLL2RegMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLL2RegMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLL2RegMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLL2RegOp(request As SLL2RegMsg, options As CallOptions) As SLL2RegMsgRsp
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp*
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync(ServiceLayer.SLL2RegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync(ServiceLayer.SLL2RegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLL2RegOpAsync(ServiceLayer.SLL2RegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2RegOpAsync(SLL2RegMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RegOpAsync(SLL2RegMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync(ServiceLayer.SLL2RegMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2RegOpAsync
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 452
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2RegMsg.Oper = SL_REGOP_REGISTER:
        Global L2 registration.
        A client Must Register BEFORE sending BD registration messages
        (to add/update/delete routes) or BEFORE requesting for L2 route
        notifications.

    SLL2RegMsg.Oper = SL_REGOP_UNREGISTER:
        Global L2 un-registration.
        This call is used to convey that the client is no longer
        interested in programming L2 routes and in receiving L2 route
        notifications. All programmed L2 routes will be deleted on the
        server and the server will stop sending L2 route notifications.

    SLL2RegMsg.Oper = SL_REGOP_EOF:
        Global L2 End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known
        objects and to convey the end of requests for L2 route
        notifications.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their routes.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLL2RegMsgRsp> SLL2RegOpAsync(SLL2RegMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLL2RegMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2RegMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLL2RegOpAsync(request As SLL2RegMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLL2RegMsgRsp)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync*
  nameWithType.vb: SLL2Oper.SLL2OperClient.SLL2RegOpAsync(SLL2RegMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync(ServiceLayer.SLL2RegMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLL2RegOpAsync(SLL2RegMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync(ServiceLayer.SLL2RegMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync(ServiceLayer.SLL2RegMsg,Grpc.Core.CallOptions)
  id: SLL2RegOpAsync(ServiceLayer.SLL2RegMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2RegOpAsync(SLL2RegMsg, CallOptions)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RegOpAsync(SLL2RegMsg, CallOptions)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync(ServiceLayer.SLL2RegMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2RegOpAsync
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 483
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2RegMsg.Oper = SL_REGOP_REGISTER:
        Global L2 registration.
        A client Must Register BEFORE sending BD registration messages
        (to add/update/delete routes) or BEFORE requesting for L2 route
        notifications.

    SLL2RegMsg.Oper = SL_REGOP_UNREGISTER:
        Global L2 un-registration.
        This call is used to convey that the client is no longer
        interested in programming L2 routes and in receiving L2 route
        notifications. All programmed L2 routes will be deleted on the
        server and the server will stop sending L2 route notifications.

    SLL2RegMsg.Oper = SL_REGOP_EOF:
        Global L2 End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known
        objects and to convey the end of requests for L2 route
        notifications.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their routes.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLL2RegMsgRsp> SLL2RegOpAsync(SLL2RegMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLL2RegMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2RegMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLL2RegOpAsync(request As SLL2RegMsg, options As CallOptions) As AsyncUnaryCall(Of SLL2RegMsgRsp)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync*
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2BdRegOp(SLL2BdRegMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2BdRegOp(SLL2BdRegMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2BdRegOp
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 515
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2BdRegMsg.Oper = SL_REGOP_REGISTER:
        BD registration: Sends a list of BD registration messages and
        expects a list of registration responses.
        A client Must Register a BD BEFORE L2 Routes can be added/modified
        in that BD.

    SLL2BdRegMsg.Oper = SL_REGOP_UNREGISTER:
        BD un-registration: Sends a list of BD un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer
        interested in programming routes in this BD. All installed L2
        routes will be removed.

    SLL2BdRegMsg.Oper = SL_REGOP_EOF:
        BD End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects
        in that BD.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their routes.
  example: []
  syntax:
    content: public virtual SLL2BdRegMsgRsp SLL2BdRegOp(SLL2BdRegMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLL2BdRegMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLL2BdRegMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLL2BdRegOp(request As SLL2BdRegMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLL2BdRegMsgRsp
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp*
  nameWithType.vb: SLL2Oper.SLL2OperClient.SLL2BdRegOp(SLL2BdRegMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLL2BdRegOp(SLL2BdRegMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg,Grpc.Core.CallOptions)
  id: SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2BdRegOp(SLL2BdRegMsg, CallOptions)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2BdRegOp(SLL2BdRegMsg, CallOptions)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2BdRegOp
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 545
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2BdRegMsg.Oper = SL_REGOP_REGISTER:
        BD registration: Sends a list of BD registration messages and
        expects a list of registration responses.
        A client Must Register a BD BEFORE L2 Routes can be added/modified
        in that BD.

    SLL2BdRegMsg.Oper = SL_REGOP_UNREGISTER:
        BD un-registration: Sends a list of BD un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer
        interested in programming routes in this BD. All installed L2
        routes will be removed.

    SLL2BdRegMsg.Oper = SL_REGOP_EOF:
        BD End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects
        in that BD.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their routes.
  example: []
  syntax:
    content: public virtual SLL2BdRegMsgRsp SLL2BdRegOp(SLL2BdRegMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLL2BdRegMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLL2BdRegMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLL2BdRegOp(request As SLL2BdRegMsg, options As CallOptions) As SLL2BdRegMsgRsp
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp*
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2BdRegOpAsync(SLL2BdRegMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(SLL2BdRegMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2BdRegOpAsync
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 577
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2BdRegMsg.Oper = SL_REGOP_REGISTER:
        BD registration: Sends a list of BD registration messages and
        expects a list of registration responses.
        A client Must Register a BD BEFORE L2 Routes can be added/modified
        in that BD.

    SLL2BdRegMsg.Oper = SL_REGOP_UNREGISTER:
        BD un-registration: Sends a list of BD un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer
        interested in programming routes in this BD. All installed L2
        routes will be removed.

    SLL2BdRegMsg.Oper = SL_REGOP_EOF:
        BD End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects
        in that BD.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their routes.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLL2BdRegMsgRsp> SLL2BdRegOpAsync(SLL2BdRegMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLL2BdRegMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2BdRegMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLL2BdRegOpAsync(request As SLL2BdRegMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLL2BdRegMsgRsp)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync*
  nameWithType.vb: SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(SLL2BdRegMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLL2BdRegOpAsync(SLL2BdRegMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg,Grpc.Core.CallOptions)
  id: SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2BdRegOpAsync(SLL2BdRegMsg, CallOptions)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(SLL2BdRegMsg, CallOptions)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2BdRegOpAsync
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 607
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2BdRegMsg.Oper = SL_REGOP_REGISTER:
        BD registration: Sends a list of BD registration messages and
        expects a list of registration responses.
        A client Must Register a BD BEFORE L2 Routes can be added/modified
        in that BD.

    SLL2BdRegMsg.Oper = SL_REGOP_UNREGISTER:
        BD un-registration: Sends a list of BD un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer
        interested in programming routes in this BD. All installed L2
        routes will be removed.

    SLL2BdRegMsg.Oper = SL_REGOP_EOF:
        BD End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects
        in that BD.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their routes.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLL2BdRegMsgRsp> SLL2BdRegOpAsync(SLL2BdRegMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLL2BdRegMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2BdRegMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLL2BdRegOpAsync(request As SLL2BdRegMsg, options As CallOptions) As AsyncUnaryCall(Of SLL2BdRegMsgRsp)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync*
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp(ServiceLayer.SLL2RouteMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp(ServiceLayer.SLL2RouteMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLL2RouteOp(ServiceLayer.SLL2RouteMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2RouteOp(SLL2RouteMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RouteOp(SLL2RouteMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp(ServiceLayer.SLL2RouteMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2RouteOp
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 627
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2RouteMsg.Oper = SL_OBJOP_ADD:

    Route add. Fails if the route already exists.


    SLL2RouteMsg.Oper = SL_OBJOP_UPDATE:

    Route update. Creates or updates the route.


    SLL2RouteMsg.Oper = SL_OBJOP_DELETE:

    Route delete. The route path is not necessary to delete the route.
  example: []
  syntax:
    content: public virtual SLL2RouteMsgRsp SLL2RouteOp(SLL2RouteMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLL2RouteMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLL2RouteMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLL2RouteOp(request As SLL2RouteMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLL2RouteMsgRsp
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp*
  nameWithType.vb: SLL2Oper.SLL2OperClient.SLL2RouteOp(SLL2RouteMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp(ServiceLayer.SLL2RouteMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLL2RouteOp(SLL2RouteMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp(ServiceLayer.SLL2RouteMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp(ServiceLayer.SLL2RouteMsg,Grpc.Core.CallOptions)
  id: SLL2RouteOp(ServiceLayer.SLL2RouteMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2RouteOp(SLL2RouteMsg, CallOptions)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RouteOp(SLL2RouteMsg, CallOptions)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp(ServiceLayer.SLL2RouteMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2RouteOp
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 645
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2RouteMsg.Oper = SL_OBJOP_ADD:

    Route add. Fails if the route already exists.


    SLL2RouteMsg.Oper = SL_OBJOP_UPDATE:

    Route update. Creates or updates the route.


    SLL2RouteMsg.Oper = SL_OBJOP_DELETE:

    Route delete. The route path is not necessary to delete the route.
  example: []
  syntax:
    content: public virtual SLL2RouteMsgRsp SLL2RouteOp(SLL2RouteMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLL2RouteMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLL2RouteMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLL2RouteOp(request As SLL2RouteMsg, options As CallOptions) As SLL2RouteMsgRsp
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp*
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2RouteOpAsync(SLL2RouteMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(SLL2RouteMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2RouteOpAsync
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 665
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2RouteMsg.Oper = SL_OBJOP_ADD:

    Route add. Fails if the route already exists.


    SLL2RouteMsg.Oper = SL_OBJOP_UPDATE:

    Route update. Creates or updates the route.


    SLL2RouteMsg.Oper = SL_OBJOP_DELETE:

    Route delete. The route path is not necessary to delete the route.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLL2RouteMsgRsp> SLL2RouteOpAsync(SLL2RouteMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLL2RouteMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2RouteMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLL2RouteOpAsync(request As SLL2RouteMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLL2RouteMsgRsp)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync*
  nameWithType.vb: SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(SLL2RouteMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLL2RouteOpAsync(SLL2RouteMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg,Grpc.Core.CallOptions)
  id: SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2RouteOpAsync(SLL2RouteMsg, CallOptions)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(SLL2RouteMsg, CallOptions)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2RouteOpAsync
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 683
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLL2RouteMsg.Oper = SL_OBJOP_ADD:

    Route add. Fails if the route already exists.


    SLL2RouteMsg.Oper = SL_OBJOP_UPDATE:

    Route update. Creates or updates the route.


    SLL2RouteMsg.Oper = SL_OBJOP_DELETE:

    Route delete. The route path is not necessary to delete the route.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLL2RouteMsgRsp> SLL2RouteOpAsync(SLL2RouteMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLL2RouteMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2RouteMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLL2RouteOpAsync(request As SLL2RouteMsg, options As CallOptions) As AsyncUnaryCall(Of SLL2RouteMsgRsp)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync*
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLL2RouteOpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2RouteOpStream(Metadata, DateTime?, CancellationToken)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2RouteOpStream
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 695
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Stream adds/updates/deletes of L2 Routes.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLL2RouteMsg, SLL2RouteMsgRsp> SLL2RouteOpStream(Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLL2RouteMsg,ServiceLayer.SLL2RouteMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLL2RouteOpStream(headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncDuplexStreamingCall(Of SLL2RouteMsg, SLL2RouteMsgRsp)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream*
  nameWithType.vb: SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLL2RouteOpStream(Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Grpc.Core.CallOptions)
  id: SLL2RouteOpStream(Grpc.Core.CallOptions)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2RouteOpStream(CallOptions)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RouteOpStream(CallOptions)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2RouteOpStream
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 705
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Stream adds/updates/deletes of L2 Routes.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLL2RouteMsg, SLL2RouteMsgRsp> SLL2RouteOpStream(CallOptions options)
    parameters:
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLL2RouteMsg,ServiceLayer.SLL2RouteMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLL2RouteOpStream(options As CallOptions) As AsyncDuplexStreamingCall(Of SLL2RouteMsg, SLL2RouteMsgRsp)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream*
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLL2GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2GetNotifStream(Metadata, DateTime?, CancellationToken)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2GetNotifStream
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 735
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    This call is used to get a stream of BD state and route notifications.

    It can be used to get "push" notifications for route

    adds/updates/deletes.

    The caller must maintain the GRPC channel as long as there is

    interest in route notifications.


    The call takes 3 types of notification requests:

    1. Request for BD state notifications only (pass only Oper and
       Correlator).
    2. Request for BD state and Route notifications in all BDs.

    3. Request for Route notifications per-BD.
       This should be sent after requesting for BD state notifications
       and after receiving BD-ready notification.

    The success/failure of the notification request is relayed in the

    SLL2NotifStatusMsg followed by a Start marker, any routes if present,

    and an End Marker.


    After all requests are sent, client should send GetNotifEof = TRUE.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLL2GetNotifMsg, SLL2Notif> SLL2GetNotifStream(Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLL2GetNotifMsg,ServiceLayer.SLL2Notif}
      description: The call object.
    content.vb: Public Overridable Function SLL2GetNotifStream(headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncDuplexStreamingCall(Of SLL2GetNotifMsg, SLL2Notif)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream*
  nameWithType.vb: SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLL2GetNotifStream(Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Grpc.Core.CallOptions)
  id: SLL2GetNotifStream(Grpc.Core.CallOptions)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: SLL2GetNotifStream(CallOptions)
  nameWithType: SLL2Oper.SLL2OperClient.SLL2GetNotifStream(CallOptions)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLL2GetNotifStream
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 763
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    This call is used to get a stream of BD state and route notifications.

    It can be used to get "push" notifications for route

    adds/updates/deletes.

    The caller must maintain the GRPC channel as long as there is

    interest in route notifications.


    The call takes 3 types of notification requests:

    1. Request for BD state notifications only (pass only Oper and
       Correlator).
    2. Request for BD state and Route notifications in all BDs.

    3. Request for Route notifications per-BD.
       This should be sent after requesting for BD state notifications
       and after receiving BD-ready notification.

    The success/failure of the notification request is relayed in the

    SLL2NotifStatusMsg followed by a Start marker, any routes if present,

    and an End Marker.


    After all requests are sent, client should send GetNotifEof = TRUE.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLL2GetNotifMsg, SLL2Notif> SLL2GetNotifStream(CallOptions options)
    parameters:
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLL2GetNotifMsg,ServiceLayer.SLL2Notif}
      description: The call object.
    content.vb: Public Overridable Function SLL2GetNotifStream(options As CallOptions) As AsyncDuplexStreamingCall(Of SLL2GetNotifMsg, SLL2Notif)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream*
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:ServiceLayer.SLL2Oper.SLL2OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: ServiceLayer.SLL2Oper.SLL2OperClient
  langs:
  - csharp
  - vb
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: SLL2Oper.SLL2OperClient.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlL2RouteGrpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: NewInstance
    path: src/gencs/SlL2RouteGrpc.cs
    startLine: 769
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
  example: []
  syntax:
    content: protected override SLL2Oper.SLL2OperClient NewInstance(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
    return:
      type: ServiceLayer.SLL2Oper.SLL2OperClient
    content.vb: Protected Overrides Function NewInstance(configuration As ClientBase.ClientBaseConfiguration) As SLL2Oper.SLL2OperClient
  overridden: Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  overload: ServiceLayer.SLL2Oper.SLL2OperClient.NewInstance*
references:
- uid: ServiceLayer
  commentId: N:ServiceLayer
  href: ServiceLayer.html
  name: ServiceLayer
  nameWithType: ServiceLayer
  fullName: ServiceLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Grpc.Core.ClientBase
  commentId: T:Grpc.Core.ClientBase
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase
  nameWithType: ClientBase
  fullName: Grpc.Core.ClientBase
- uid: Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}
  commentId: T:Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}
  parent: Grpc.Core
  definition: Grpc.Core.ClientBase`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase<SLL2Oper.SLL2OperClient>
  nameWithType: ClientBase<SLL2Oper.SLL2OperClient>
  fullName: Grpc.Core.ClientBase<ServiceLayer.SLL2Oper.SLL2OperClient>
  nameWithType.vb: ClientBase(Of SLL2Oper.SLL2OperClient)
  fullName.vb: Grpc.Core.ClientBase(Of ServiceLayer.SLL2Oper.SLL2OperClient)
  name.vb: ClientBase(Of SLL2Oper.SLL2OperClient)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: <
  - uid: ServiceLayer.SLL2Oper
    name: SLL2Oper
    href: ServiceLayer.SLL2Oper.html
  - name: .
  - uid: ServiceLayer.SLL2Oper.SLL2OperClient
    name: SLL2OperClient
    href: ServiceLayer.SLL2Oper.SLL2OperClient.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLL2Oper
    name: SLL2Oper
    href: ServiceLayer.SLL2Oper.html
  - name: .
  - uid: ServiceLayer.SLL2Oper.SLL2OperClient
    name: SLL2OperClient
    href: ServiceLayer.SLL2Oper.SLL2OperClient.html
  - name: )
- uid: Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}.WithHost(System.String)
  parent: Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}
  definition: Grpc.Core.ClientBase`1.WithHost(System.String)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: WithHost(string)
  nameWithType: ClientBase<SLL2Oper.SLL2OperClient>.WithHost(string)
  fullName: Grpc.Core.ClientBase<ServiceLayer.SLL2Oper.SLL2OperClient>.WithHost(string)
  nameWithType.vb: ClientBase(Of SLL2Oper.SLL2OperClient).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of ServiceLayer.SLL2Oper.SLL2OperClient).WithHost(String)
  name.vb: WithHost(String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}.WithHost(System.String)
    name: WithHost
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}.WithHost(System.String)
    name: WithHost
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Grpc.Core.ClientBase.CallInvoker
  commentId: P:Grpc.Core.ClientBase.CallInvoker
  parent: Grpc.Core.ClientBase
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: CallInvoker
  nameWithType: ClientBase.CallInvoker
  fullName: Grpc.Core.ClientBase.CallInvoker
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
  spec.csharp:
  - uid: Grpc
    name: Grpc
    isExternal: true
  - name: .
  - uid: Grpc.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Grpc
    name: Grpc
    isExternal: true
  - name: .
  - uid: Grpc.Core
    name: Core
    isExternal: true
- uid: Grpc.Core.ClientBase`1
  commentId: T:Grpc.Core.ClientBase`1
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase<T>
  nameWithType: ClientBase<T>
  fullName: Grpc.Core.ClientBase<T>
  nameWithType.vb: ClientBase(Of T)
  fullName.vb: Grpc.Core.ClientBase(Of T)
  name.vb: ClientBase(Of T)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Grpc.Core.ClientBase`1.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase`1.WithHost(System.String)
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: WithHost(string)
  nameWithType: ClientBase<T>.WithHost(string)
  fullName: Grpc.Core.ClientBase<T>.WithHost(string)
  nameWithType.vb: ClientBase(Of T).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of T).WithHost(String)
  name.vb: WithHost(String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.#ctor*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.#ctor
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.#ctor(Grpc.Core.ChannelBase)
  name: SLL2OperClient
  nameWithType: SLL2Oper.SLL2OperClient.SLL2OperClient
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2OperClient
  nameWithType.vb: SLL2Oper.SLL2OperClient.New
  fullName.vb: ServiceLayer.SLL2Oper.SLL2OperClient.New
  name.vb: New
- uid: Grpc.Core.ChannelBase
  commentId: T:Grpc.Core.ChannelBase
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ChannelBase.cs
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: Grpc.Core.ChannelBase
- uid: Grpc.Core.CallInvoker
  commentId: T:Grpc.Core.CallInvoker
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/CallInvoker.cs
  name: CallInvoker
  nameWithType: CallInvoker
  fullName: Grpc.Core.CallInvoker
- uid: Grpc.Core.ClientBase.ClientBaseConfiguration
  commentId: T:Grpc.Core.ClientBase.ClientBaseConfiguration
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase.ClientBaseConfiguration
  nameWithType: ClientBase.ClientBaseConfiguration
  fullName: Grpc.Core.ClientBase.ClientBaseConfiguration
  spec.csharp:
  - uid: Grpc.Core.ClientBase
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: .
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  spec.vb:
  - uid: Grpc.Core.ClientBase
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: .
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLL2GlobalsGet
  nameWithType: SLL2Oper.SLL2OperClient.SLL2GlobalsGet
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGet
- uid: ServiceLayer.SLL2GlobalsGetMsg
  commentId: T:ServiceLayer.SLL2GlobalsGetMsg
  parent: ServiceLayer
  href: ServiceLayer.SLL2GlobalsGetMsg.html
  name: SLL2GlobalsGetMsg
  nameWithType: SLL2GlobalsGetMsg
  fullName: ServiceLayer.SLL2GlobalsGetMsg
- uid: Grpc.Core.Metadata
  commentId: T:Grpc.Core.Metadata
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/Metadata.cs
  name: Metadata
  nameWithType: Metadata
  fullName: Grpc.Core.Metadata
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: ServiceLayer.SLL2GlobalsGetMsgRsp
  commentId: T:ServiceLayer.SLL2GlobalsGetMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLL2GlobalsGetMsgRsp.html
  name: SLL2GlobalsGetMsgRsp
  nameWithType: SLL2GlobalsGetMsgRsp
  fullName: ServiceLayer.SLL2GlobalsGetMsgRsp
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: Grpc.Core.CallOptions
  commentId: T:Grpc.Core.CallOptions
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/CallOptions.cs
  name: CallOptions
  nameWithType: CallOptions
  fullName: Grpc.Core.CallOptions
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync(ServiceLayer.SLL2GlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLL2GlobalsGetAsync
  nameWithType: SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GlobalsGetAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2GlobalsGetMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2GlobalsGetMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLL2GlobalsGetMsgRsp>
  nameWithType: AsyncUnaryCall<SLL2GlobalsGetMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLL2GlobalsGetMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLL2GlobalsGetMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLL2GlobalsGetMsgRsp)
  name.vb: AsyncUnaryCall(Of SLL2GlobalsGetMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLL2GlobalsGetMsgRsp
    name: SLL2GlobalsGetMsgRsp
    href: ServiceLayer.SLL2GlobalsGetMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLL2GlobalsGetMsgRsp
    name: SLL2GlobalsGetMsgRsp
    href: ServiceLayer.SLL2GlobalsGetMsgRsp.html
  - name: )
- uid: Grpc.Core.AsyncUnaryCall`1
  commentId: T:Grpc.Core.AsyncUnaryCall`1
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<TResponse>
  nameWithType: AsyncUnaryCall<TResponse>
  fullName: Grpc.Core.AsyncUnaryCall<TResponse>
  nameWithType.vb: AsyncUnaryCall(Of TResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of TResponse)
  name.vb: AsyncUnaryCall(Of TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp(ServiceLayer.SLL2RegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLL2RegOp
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RegOp
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOp
- uid: ServiceLayer.SLL2RegMsg
  commentId: T:ServiceLayer.SLL2RegMsg
  parent: ServiceLayer
  href: ServiceLayer.SLL2RegMsg.html
  name: SLL2RegMsg
  nameWithType: SLL2RegMsg
  fullName: ServiceLayer.SLL2RegMsg
- uid: ServiceLayer.SLL2RegMsgRsp
  commentId: T:ServiceLayer.SLL2RegMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLL2RegMsgRsp.html
  name: SLL2RegMsgRsp
  nameWithType: SLL2RegMsgRsp
  fullName: ServiceLayer.SLL2RegMsgRsp
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync(ServiceLayer.SLL2RegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLL2RegOpAsync
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RegOpAsync
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RegOpAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2RegMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2RegMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLL2RegMsgRsp>
  nameWithType: AsyncUnaryCall<SLL2RegMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLL2RegMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLL2RegMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLL2RegMsgRsp)
  name.vb: AsyncUnaryCall(Of SLL2RegMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLL2RegMsgRsp
    name: SLL2RegMsgRsp
    href: ServiceLayer.SLL2RegMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLL2RegMsgRsp
    name: SLL2RegMsgRsp
    href: ServiceLayer.SLL2RegMsgRsp.html
  - name: )
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp(ServiceLayer.SLL2BdRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLL2BdRegOp
  nameWithType: SLL2Oper.SLL2OperClient.SLL2BdRegOp
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOp
- uid: ServiceLayer.SLL2BdRegMsg
  commentId: T:ServiceLayer.SLL2BdRegMsg
  parent: ServiceLayer
  href: ServiceLayer.SLL2BdRegMsg.html
  name: SLL2BdRegMsg
  nameWithType: SLL2BdRegMsg
  fullName: ServiceLayer.SLL2BdRegMsg
- uid: ServiceLayer.SLL2BdRegMsgRsp
  commentId: T:ServiceLayer.SLL2BdRegMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLL2BdRegMsgRsp.html
  name: SLL2BdRegMsgRsp
  nameWithType: SLL2BdRegMsgRsp
  fullName: ServiceLayer.SLL2BdRegMsgRsp
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync(ServiceLayer.SLL2BdRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLL2BdRegOpAsync
  nameWithType: SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2BdRegOpAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2BdRegMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2BdRegMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLL2BdRegMsgRsp>
  nameWithType: AsyncUnaryCall<SLL2BdRegMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLL2BdRegMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLL2BdRegMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLL2BdRegMsgRsp)
  name.vb: AsyncUnaryCall(Of SLL2BdRegMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLL2BdRegMsgRsp
    name: SLL2BdRegMsgRsp
    href: ServiceLayer.SLL2BdRegMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLL2BdRegMsgRsp
    name: SLL2BdRegMsgRsp
    href: ServiceLayer.SLL2BdRegMsgRsp.html
  - name: )
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp(ServiceLayer.SLL2RouteMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLL2RouteOp
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RouteOp
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOp
- uid: ServiceLayer.SLL2RouteMsg
  commentId: T:ServiceLayer.SLL2RouteMsg
  parent: ServiceLayer
  href: ServiceLayer.SLL2RouteMsg.html
  name: SLL2RouteMsg
  nameWithType: SLL2RouteMsg
  fullName: ServiceLayer.SLL2RouteMsg
- uid: ServiceLayer.SLL2RouteMsgRsp
  commentId: T:ServiceLayer.SLL2RouteMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLL2RouteMsgRsp.html
  name: SLL2RouteMsgRsp
  nameWithType: SLL2RouteMsgRsp
  fullName: ServiceLayer.SLL2RouteMsgRsp
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync(ServiceLayer.SLL2RouteMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLL2RouteOpAsync
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RouteOpAsync
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2RouteMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLL2RouteMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLL2RouteMsgRsp>
  nameWithType: AsyncUnaryCall<SLL2RouteMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLL2RouteMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLL2RouteMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLL2RouteMsgRsp)
  name.vb: AsyncUnaryCall(Of SLL2RouteMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLL2RouteMsgRsp
    name: SLL2RouteMsgRsp
    href: ServiceLayer.SLL2RouteMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLL2RouteMsgRsp
    name: SLL2RouteMsgRsp
    href: ServiceLayer.SLL2RouteMsgRsp.html
  - name: )
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLL2RouteOpStream
  nameWithType: SLL2Oper.SLL2OperClient.SLL2RouteOpStream
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2RouteOpStream
- uid: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLL2RouteMsg,ServiceLayer.SLL2RouteMsgRsp}
  commentId: T:Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLL2RouteMsg,ServiceLayer.SLL2RouteMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncDuplexStreamingCall`2
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  name: AsyncDuplexStreamingCall<SLL2RouteMsg, SLL2RouteMsgRsp>
  nameWithType: AsyncDuplexStreamingCall<SLL2RouteMsg, SLL2RouteMsgRsp>
  fullName: Grpc.Core.AsyncDuplexStreamingCall<ServiceLayer.SLL2RouteMsg, ServiceLayer.SLL2RouteMsgRsp>
  nameWithType.vb: AsyncDuplexStreamingCall(Of SLL2RouteMsg, SLL2RouteMsgRsp)
  fullName.vb: Grpc.Core.AsyncDuplexStreamingCall(Of ServiceLayer.SLL2RouteMsg, ServiceLayer.SLL2RouteMsgRsp)
  name.vb: AsyncDuplexStreamingCall(Of SLL2RouteMsg, SLL2RouteMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: <
  - uid: ServiceLayer.SLL2RouteMsg
    name: SLL2RouteMsg
    href: ServiceLayer.SLL2RouteMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLL2RouteMsgRsp
    name: SLL2RouteMsgRsp
    href: ServiceLayer.SLL2RouteMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLL2RouteMsg
    name: SLL2RouteMsg
    href: ServiceLayer.SLL2RouteMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLL2RouteMsgRsp
    name: SLL2RouteMsgRsp
    href: ServiceLayer.SLL2RouteMsgRsp.html
  - name: )
- uid: Grpc.Core.AsyncDuplexStreamingCall`2
  commentId: T:Grpc.Core.AsyncDuplexStreamingCall`2
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  name: AsyncDuplexStreamingCall<TRequest, TResponse>
  nameWithType: AsyncDuplexStreamingCall<TRequest, TResponse>
  fullName: Grpc.Core.AsyncDuplexStreamingCall<TRequest, TResponse>
  nameWithType.vb: AsyncDuplexStreamingCall(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.AsyncDuplexStreamingCall(Of TRequest, TResponse)
  name.vb: AsyncDuplexStreamingCall(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLL2GetNotifStream
  nameWithType: SLL2Oper.SLL2OperClient.SLL2GetNotifStream
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.SLL2GetNotifStream
- uid: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLL2GetNotifMsg,ServiceLayer.SLL2Notif}
  commentId: T:Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLL2GetNotifMsg,ServiceLayer.SLL2Notif}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncDuplexStreamingCall`2
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  name: AsyncDuplexStreamingCall<SLL2GetNotifMsg, SLL2Notif>
  nameWithType: AsyncDuplexStreamingCall<SLL2GetNotifMsg, SLL2Notif>
  fullName: Grpc.Core.AsyncDuplexStreamingCall<ServiceLayer.SLL2GetNotifMsg, ServiceLayer.SLL2Notif>
  nameWithType.vb: AsyncDuplexStreamingCall(Of SLL2GetNotifMsg, SLL2Notif)
  fullName.vb: Grpc.Core.AsyncDuplexStreamingCall(Of ServiceLayer.SLL2GetNotifMsg, ServiceLayer.SLL2Notif)
  name.vb: AsyncDuplexStreamingCall(Of SLL2GetNotifMsg, SLL2Notif)
  spec.csharp:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: <
  - uid: ServiceLayer.SLL2GetNotifMsg
    name: SLL2GetNotifMsg
    href: ServiceLayer.SLL2GetNotifMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLL2Notif
    name: SLL2Notif
    href: ServiceLayer.SLL2Notif.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLL2GetNotifMsg
    name: SLL2GetNotifMsg
    href: ServiceLayer.SLL2GetNotifMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLL2Notif
    name: SLL2Notif
    href: ServiceLayer.SLL2Notif.html
  - name: )
- uid: Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}
  definition: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: ClientBase<SLL2Oper.SLL2OperClient>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<ServiceLayer.SLL2Oper.SLL2OperClient>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of SLL2Oper.SLL2OperClient).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of ServiceLayer.SLL2Oper.SLL2OperClient).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLL2Oper.SLL2OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
- uid: ServiceLayer.SLL2Oper.SLL2OperClient.NewInstance*
  commentId: Overload:ServiceLayer.SLL2Oper.SLL2OperClient.NewInstance
  href: ServiceLayer.SLL2Oper.SLL2OperClient.html#ServiceLayer.SLL2Oper.SLL2OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  name: NewInstance
  nameWithType: SLL2Oper.SLL2OperClient.NewInstance
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient.NewInstance
- uid: ServiceLayer.SLL2Oper.SLL2OperClient
  commentId: T:ServiceLayer.SLL2Oper.SLL2OperClient
  parent: ServiceLayer
  href: ServiceLayer.SLL2Oper.html
  name: SLL2Oper.SLL2OperClient
  nameWithType: SLL2Oper.SLL2OperClient
  fullName: ServiceLayer.SLL2Oper.SLL2OperClient
  spec.csharp:
  - uid: ServiceLayer.SLL2Oper
    name: SLL2Oper
    href: ServiceLayer.SLL2Oper.html
  - name: .
  - uid: ServiceLayer.SLL2Oper.SLL2OperClient
    name: SLL2OperClient
    href: ServiceLayer.SLL2Oper.SLL2OperClient.html
  spec.vb:
  - uid: ServiceLayer.SLL2Oper
    name: SLL2Oper
    href: ServiceLayer.SLL2Oper.html
  - name: .
  - uid: ServiceLayer.SLL2Oper.SLL2OperClient
    name: SLL2OperClient
    href: ServiceLayer.SLL2Oper.SLL2OperClient.html
- uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: ClientBase<T>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<T>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of T).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of T).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
