### YamlMime:ManagedReference
items:
- uid: ServiceLayer.SLRouteCommon
  commentId: T:ServiceLayer.SLRouteCommon
  id: SLRouteCommon
  parent: ServiceLayer
  children:
  - ServiceLayer.SLRouteCommon.#ctor
  - ServiceLayer.SLRouteCommon.#ctor(ServiceLayer.SLRouteCommon)
  - ServiceLayer.SLRouteCommon.AdminDistance
  - ServiceLayer.SLRouteCommon.AdminDistanceFieldNumber
  - ServiceLayer.SLRouteCommon.CalculateSize
  - ServiceLayer.SLRouteCommon.Clone
  - ServiceLayer.SLRouteCommon.Descriptor
  - ServiceLayer.SLRouteCommon.Equals(ServiceLayer.SLRouteCommon)
  - ServiceLayer.SLRouteCommon.Equals(System.Object)
  - ServiceLayer.SLRouteCommon.Flags
  - ServiceLayer.SLRouteCommon.FlagsFieldNumber
  - ServiceLayer.SLRouteCommon.GetHashCode
  - ServiceLayer.SLRouteCommon.LocalLabel
  - ServiceLayer.SLRouteCommon.LocalLabelFieldNumber
  - ServiceLayer.SLRouteCommon.MergeFrom(Google.Protobuf.CodedInputStream)
  - ServiceLayer.SLRouteCommon.MergeFrom(ServiceLayer.SLRouteCommon)
  - ServiceLayer.SLRouteCommon.Parser
  - ServiceLayer.SLRouteCommon.SrcProto
  - ServiceLayer.SLRouteCommon.SrcProtoFieldNumber
  - ServiceLayer.SLRouteCommon.SrcProtoTag
  - ServiceLayer.SLRouteCommon.SrcProtoTagFieldNumber
  - ServiceLayer.SLRouteCommon.Tag
  - ServiceLayer.SLRouteCommon.TagFieldNumber
  - ServiceLayer.SLRouteCommon.ToString
  - ServiceLayer.SLRouteCommon.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: SLRouteCommon
  nameWithType: SLRouteCommon
  fullName: ServiceLayer.SLRouteCommon
  type: Class
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRouteCommon
    path: src/gencs/SlRouteCommon.cs
    startLine: 4180
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Common IPv4/IPv6 route attributes.
  example: []
  syntax:
    content: 'public sealed class SLRouteCommon : IMessage<SLRouteCommon>, IEquatable<SLRouteCommon>, IDeepCloneable<SLRouteCommon>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class SLRouteCommon Implements IMessage(Of SLRouteCommon), IEquatable(Of SLRouteCommon), IDeepCloneable(Of SLRouteCommon), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{ServiceLayer.SLRouteCommon}
  - System.IEquatable{ServiceLayer.SLRouteCommon}
  - Google.Protobuf.IDeepCloneable{ServiceLayer.SLRouteCommon}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ServiceLayer.SLRouteCommon.Parser
  commentId: P:ServiceLayer.SLRouteCommon.Parser
  id: Parser
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SLRouteCommon.Parser
  fullName: ServiceLayer.SLRouteCommon.Parser
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Parser
    path: src/gencs/SlRouteCommon.cs
    startLine: 4187
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public static MessageParser<SLRouteCommon> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{ServiceLayer.SLRouteCommon}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of SLRouteCommon)
  overload: ServiceLayer.SLRouteCommon.Parser*
- uid: ServiceLayer.SLRouteCommon.Descriptor
  commentId: P:ServiceLayer.SLRouteCommon.Descriptor
  id: Descriptor
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SLRouteCommon.Descriptor
  fullName: ServiceLayer.SLRouteCommon.Descriptor
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Descriptor
    path: src/gencs/SlRouteCommon.cs
    startLine: 4191
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: ServiceLayer.SLRouteCommon.Descriptor*
- uid: ServiceLayer.SLRouteCommon.#ctor
  commentId: M:ServiceLayer.SLRouteCommon.#ctor
  id: '#ctor'
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: SLRouteCommon()
  nameWithType: SLRouteCommon.SLRouteCommon()
  fullName: ServiceLayer.SLRouteCommon.SLRouteCommon()
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteCommon.cs
    startLine: 4203
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public SLRouteCommon()
    content.vb: Public Sub New()
  overload: ServiceLayer.SLRouteCommon.#ctor*
  nameWithType.vb: SLRouteCommon.New()
  fullName.vb: ServiceLayer.SLRouteCommon.New()
  name.vb: New()
- uid: ServiceLayer.SLRouteCommon.#ctor(ServiceLayer.SLRouteCommon)
  commentId: M:ServiceLayer.SLRouteCommon.#ctor(ServiceLayer.SLRouteCommon)
  id: '#ctor(ServiceLayer.SLRouteCommon)'
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: SLRouteCommon(SLRouteCommon)
  nameWithType: SLRouteCommon.SLRouteCommon(SLRouteCommon)
  fullName: ServiceLayer.SLRouteCommon.SLRouteCommon(ServiceLayer.SLRouteCommon)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteCommon.cs
    startLine: 4211
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public SLRouteCommon(SLRouteCommon other)
    parameters:
    - id: other
      type: ServiceLayer.SLRouteCommon
    content.vb: Public Sub New(other As SLRouteCommon)
  overload: ServiceLayer.SLRouteCommon.#ctor*
  nameWithType.vb: SLRouteCommon.New(SLRouteCommon)
  fullName.vb: ServiceLayer.SLRouteCommon.New(ServiceLayer.SLRouteCommon)
  name.vb: New(SLRouteCommon)
- uid: ServiceLayer.SLRouteCommon.Clone
  commentId: M:ServiceLayer.SLRouteCommon.Clone
  id: Clone
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SLRouteCommon.Clone()
  fullName: ServiceLayer.SLRouteCommon.Clone()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Clone
    path: src/gencs/SlRouteCommon.cs
    startLine: 4223
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public SLRouteCommon Clone()
    return:
      type: ServiceLayer.SLRouteCommon
      description: A deep clone of this object.
    content.vb: Public Function Clone() As SLRouteCommon
  overload: ServiceLayer.SLRouteCommon.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{ServiceLayer.SLRouteCommon}.Clone
- uid: ServiceLayer.SLRouteCommon.AdminDistanceFieldNumber
  commentId: F:ServiceLayer.SLRouteCommon.AdminDistanceFieldNumber
  id: AdminDistanceFieldNumber
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: AdminDistanceFieldNumber
  nameWithType: SLRouteCommon.AdminDistanceFieldNumber
  fullName: ServiceLayer.SLRouteCommon.AdminDistanceFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: AdminDistanceFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 4230
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "AdminDistance" field.
  example: []
  syntax:
    content: public const int AdminDistanceFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const AdminDistanceFieldNumber As Integer = 1
- uid: ServiceLayer.SLRouteCommon.AdminDistance
  commentId: P:ServiceLayer.SLRouteCommon.AdminDistance
  id: AdminDistance
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: AdminDistance
  nameWithType: SLRouteCommon.AdminDistance
  fullName: ServiceLayer.SLRouteCommon.AdminDistance
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: AdminDistance
    path: src/gencs/SlRouteCommon.cs
    startLine: 4240
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Adminstrative distance of the route. [0-255].

    RIB uses this field to break the tie when multiple

    sources install the same route.

    Lower distance is preferred over higher distance.

    The per route object admin distance overrides the default's admin

    distance set at VRF registration. see SLVrfReg
  example: []
  syntax:
    content: public uint AdminDistance { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property AdminDistance As UInteger
  overload: ServiceLayer.SLRouteCommon.AdminDistance*
- uid: ServiceLayer.SLRouteCommon.LocalLabelFieldNumber
  commentId: F:ServiceLayer.SLRouteCommon.LocalLabelFieldNumber
  id: LocalLabelFieldNumber
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: LocalLabelFieldNumber
  nameWithType: SLRouteCommon.LocalLabelFieldNumber
  fullName: ServiceLayer.SLRouteCommon.LocalLabelFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: LocalLabelFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 4250
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "LocalLabel" field.
  example: []
  syntax:
    content: public const int LocalLabelFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const LocalLabelFieldNumber As Integer = 2
- uid: ServiceLayer.SLRouteCommon.LocalLabel
  commentId: P:ServiceLayer.SLRouteCommon.LocalLabel
  id: LocalLabel
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: LocalLabel
  nameWithType: SLRouteCommon.LocalLabel
  fullName: ServiceLayer.SLRouteCommon.LocalLabel
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: LocalLabel
    path: src/gencs/SlRouteCommon.cs
    startLine: 4263
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Local label associated with this route.

    This is an optional field that can be used to simulatenously setup an 

    ILM entry (e.g. head end of an MPLS LSP) for the same route.

    This is especially useful when setting up an MPLS LSP (a /32-route 

    towards the remote LSP peer e.g. 2.2.2.2/32) which is required for MPLS

    VPN labeled routes.


    Note: MPLS VPN labeled routes can resolve only on:
       - /32-routes with valid LocalLabel and a valid egress MPLS path label
  example: []
  syntax:
    content: public uint LocalLabel { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property LocalLabel As UInteger
  overload: ServiceLayer.SLRouteCommon.LocalLabel*
- uid: ServiceLayer.SLRouteCommon.TagFieldNumber
  commentId: F:ServiceLayer.SLRouteCommon.TagFieldNumber
  id: TagFieldNumber
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: TagFieldNumber
  nameWithType: SLRouteCommon.TagFieldNumber
  fullName: ServiceLayer.SLRouteCommon.TagFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: TagFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 4273
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "Tag" field.
  example: []
  syntax:
    content: public const int TagFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const TagFieldNumber As Integer = 3
- uid: ServiceLayer.SLRouteCommon.Tag
  commentId: P:ServiceLayer.SLRouteCommon.Tag
  id: Tag
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: Tag
  nameWithType: SLRouteCommon.Tag
  fullName: ServiceLayer.SLRouteCommon.Tag
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Tag
    path: src/gencs/SlRouteCommon.cs
    startLine: 4280
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Route Tag.

    Routes are usually tagged to prevent loops during redistribution between

    protocols.
  example: []
  syntax:
    content: public uint Tag { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Tag As UInteger
  overload: ServiceLayer.SLRouteCommon.Tag*
- uid: ServiceLayer.SLRouteCommon.SrcProtoFieldNumber
  commentId: F:ServiceLayer.SLRouteCommon.SrcProtoFieldNumber
  id: SrcProtoFieldNumber
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: SrcProtoFieldNumber
  nameWithType: SLRouteCommon.SrcProtoFieldNumber
  fullName: ServiceLayer.SLRouteCommon.SrcProtoFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SrcProtoFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 4290
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "SrcProto" field.
  example: []
  syntax:
    content: public const int SrcProtoFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const SrcProtoFieldNumber As Integer = 4
- uid: ServiceLayer.SLRouteCommon.SrcProto
  commentId: P:ServiceLayer.SLRouteCommon.SrcProto
  id: SrcProto
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: SrcProto
  nameWithType: SLRouteCommon.SrcProto
  fullName: ServiceLayer.SLRouteCommon.SrcProto
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SrcProto
    path: src/gencs/SlRouteCommon.cs
    startLine: 4298
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Source Protocol.

    For redistributed messages via notification stream only,

    ignored otherwise.

    Contact Cisco for supported protocol string names.
  example: []
  syntax:
    content: public string SrcProto { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SrcProto As String
  overload: ServiceLayer.SLRouteCommon.SrcProto*
- uid: ServiceLayer.SLRouteCommon.SrcProtoTagFieldNumber
  commentId: F:ServiceLayer.SLRouteCommon.SrcProtoTagFieldNumber
  id: SrcProtoTagFieldNumber
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: SrcProtoTagFieldNumber
  nameWithType: SLRouteCommon.SrcProtoTagFieldNumber
  fullName: ServiceLayer.SLRouteCommon.SrcProtoTagFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SrcProtoTagFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 4308
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "SrcProtoTag" field.
  example: []
  syntax:
    content: public const int SrcProtoTagFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const SrcProtoTagFieldNumber As Integer = 5
- uid: ServiceLayer.SLRouteCommon.SrcProtoTag
  commentId: P:ServiceLayer.SLRouteCommon.SrcProtoTag
  id: SrcProtoTag
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: SrcProtoTag
  nameWithType: SLRouteCommon.SrcProtoTag
  fullName: ServiceLayer.SLRouteCommon.SrcProtoTag
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SrcProtoTag
    path: src/gencs/SlRouteCommon.cs
    startLine: 4316
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Source Protocol Tag. This can be empty if N/A.

    For redistributed messages via notification stream only,

    ignored otherwise.

    Contact Cisco for supported protocol tags.
  example: []
  syntax:
    content: public string SrcProtoTag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SrcProtoTag As String
  overload: ServiceLayer.SLRouteCommon.SrcProtoTag*
- uid: ServiceLayer.SLRouteCommon.FlagsFieldNumber
  commentId: F:ServiceLayer.SLRouteCommon.FlagsFieldNumber
  id: FlagsFieldNumber
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: FlagsFieldNumber
  nameWithType: SLRouteCommon.FlagsFieldNumber
  fullName: ServiceLayer.SLRouteCommon.FlagsFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: FlagsFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 4326
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "Flags" field.
  example: []
  syntax:
    content: public const int FlagsFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const FlagsFieldNumber As Integer = 6
- uid: ServiceLayer.SLRouteCommon.Flags
  commentId: P:ServiceLayer.SLRouteCommon.Flags
  id: Flags
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: SLRouteCommon.Flags
  fullName: ServiceLayer.SLRouteCommon.Flags
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Flags
    path: src/gencs/SlRouteCommon.cs
    startLine: 4334
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Route Flags.

    Flags to control programming of the route to Routing Information Base.

    Each flag is indicated as a bit field. Supported values are:

    0x1 - This route takes precedence over a route learnt by LDP.
  example: []
  syntax:
    content: public uint Flags { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Flags As UInteger
  overload: ServiceLayer.SLRouteCommon.Flags*
- uid: ServiceLayer.SLRouteCommon.Equals(System.Object)
  commentId: M:ServiceLayer.SLRouteCommon.Equals(System.Object)
  id: Equals(System.Object)
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: SLRouteCommon.Equals(object)
  fullName: ServiceLayer.SLRouteCommon.Equals(object)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Equals
    path: src/gencs/SlRouteCommon.cs
    startLine: 4343
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: ServiceLayer.SLRouteCommon.Equals*
  nameWithType.vb: SLRouteCommon.Equals(Object)
  fullName.vb: ServiceLayer.SLRouteCommon.Equals(Object)
  name.vb: Equals(Object)
- uid: ServiceLayer.SLRouteCommon.Equals(ServiceLayer.SLRouteCommon)
  commentId: M:ServiceLayer.SLRouteCommon.Equals(ServiceLayer.SLRouteCommon)
  id: Equals(ServiceLayer.SLRouteCommon)
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: Equals(SLRouteCommon)
  nameWithType: SLRouteCommon.Equals(SLRouteCommon)
  fullName: ServiceLayer.SLRouteCommon.Equals(ServiceLayer.SLRouteCommon)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Equals
    path: src/gencs/SlRouteCommon.cs
    startLine: 4349
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(SLRouteCommon other)
    parameters:
    - id: other
      type: ServiceLayer.SLRouteCommon
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As SLRouteCommon) As Boolean
  overload: ServiceLayer.SLRouteCommon.Equals*
  implements:
  - System.IEquatable{ServiceLayer.SLRouteCommon}.Equals(ServiceLayer.SLRouteCommon)
- uid: ServiceLayer.SLRouteCommon.GetHashCode
  commentId: M:ServiceLayer.SLRouteCommon.GetHashCode
  id: GetHashCode
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SLRouteCommon.GetHashCode()
  fullName: ServiceLayer.SLRouteCommon.GetHashCode()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: GetHashCode
    path: src/gencs/SlRouteCommon.cs
    startLine: 4367
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: ServiceLayer.SLRouteCommon.GetHashCode*
- uid: ServiceLayer.SLRouteCommon.ToString
  commentId: M:ServiceLayer.SLRouteCommon.ToString
  id: ToString
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SLRouteCommon.ToString()
  fullName: ServiceLayer.SLRouteCommon.ToString()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: ToString
    path: src/gencs/SlRouteCommon.cs
    startLine: 4383
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: ServiceLayer.SLRouteCommon.ToString*
- uid: ServiceLayer.SLRouteCommon.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:ServiceLayer.SLRouteCommon.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: SLRouteCommon.WriteTo(CodedOutputStream)
  fullName: ServiceLayer.SLRouteCommon.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: WriteTo
    path: src/gencs/SlRouteCommon.cs
    startLine: 4389
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: ServiceLayer.SLRouteCommon.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: ServiceLayer.SLRouteCommon.CalculateSize
  commentId: M:ServiceLayer.SLRouteCommon.CalculateSize
  id: CalculateSize
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SLRouteCommon.CalculateSize()
  fullName: ServiceLayer.SLRouteCommon.CalculateSize()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: CalculateSize
    path: src/gencs/SlRouteCommon.cs
    startLine: 4459
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: ServiceLayer.SLRouteCommon.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: ServiceLayer.SLRouteCommon.MergeFrom(ServiceLayer.SLRouteCommon)
  commentId: M:ServiceLayer.SLRouteCommon.MergeFrom(ServiceLayer.SLRouteCommon)
  id: MergeFrom(ServiceLayer.SLRouteCommon)
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: MergeFrom(SLRouteCommon)
  nameWithType: SLRouteCommon.MergeFrom(SLRouteCommon)
  fullName: ServiceLayer.SLRouteCommon.MergeFrom(ServiceLayer.SLRouteCommon)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: MergeFrom
    path: src/gencs/SlRouteCommon.cs
    startLine: 4487
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(SLRouteCommon other)
    parameters:
    - id: other
      type: ServiceLayer.SLRouteCommon
    content.vb: Public Sub MergeFrom(other As SLRouteCommon)
  overload: ServiceLayer.SLRouteCommon.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{ServiceLayer.SLRouteCommon}.MergeFrom(ServiceLayer.SLRouteCommon)
- uid: ServiceLayer.SLRouteCommon.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:ServiceLayer.SLRouteCommon.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: ServiceLayer.SLRouteCommon
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: SLRouteCommon.MergeFrom(CodedInputStream)
  fullName: ServiceLayer.SLRouteCommon.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: MergeFrom
    path: src/gencs/SlRouteCommon.cs
    startLine: 4514
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: ServiceLayer.SLRouteCommon.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: ServiceLayer
  commentId: N:ServiceLayer
  href: ServiceLayer.html
  name: ServiceLayer
  nameWithType: ServiceLayer
  fullName: ServiceLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{ServiceLayer.SLRouteCommon}
  commentId: T:Google.Protobuf.IMessage{ServiceLayer.SLRouteCommon}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: ServiceLayer.SLRouteCommon.html
  name: IMessage<SLRouteCommon>
  nameWithType: IMessage<SLRouteCommon>
  fullName: Google.Protobuf.IMessage<ServiceLayer.SLRouteCommon>
  nameWithType.vb: IMessage(Of SLRouteCommon)
  fullName.vb: Google.Protobuf.IMessage(Of ServiceLayer.SLRouteCommon)
  name.vb: IMessage(Of SLRouteCommon)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: )
- uid: System.IEquatable{ServiceLayer.SLRouteCommon}
  commentId: T:System.IEquatable{ServiceLayer.SLRouteCommon}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<SLRouteCommon>
  nameWithType: IEquatable<SLRouteCommon>
  fullName: System.IEquatable<ServiceLayer.SLRouteCommon>
  nameWithType.vb: IEquatable(Of SLRouteCommon)
  fullName.vb: System.IEquatable(Of ServiceLayer.SLRouteCommon)
  name.vb: IEquatable(Of SLRouteCommon)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLRouteCommon}
  commentId: T:Google.Protobuf.IDeepCloneable{ServiceLayer.SLRouteCommon}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: ServiceLayer.SLRouteCommon.html
  name: IDeepCloneable<SLRouteCommon>
  nameWithType: IDeepCloneable<SLRouteCommon>
  fullName: Google.Protobuf.IDeepCloneable<ServiceLayer.SLRouteCommon>
  nameWithType.vb: IDeepCloneable(Of SLRouteCommon)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of ServiceLayer.SLRouteCommon)
  name.vb: IDeepCloneable(Of SLRouteCommon)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ServiceLayer.SLRouteCommon.Parser*
  commentId: Overload:ServiceLayer.SLRouteCommon.Parser
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.Parser
  name: Parser
  nameWithType: SLRouteCommon.Parser
  fullName: ServiceLayer.SLRouteCommon.Parser
- uid: Google.Protobuf.MessageParser{ServiceLayer.SLRouteCommon}
  commentId: T:Google.Protobuf.MessageParser{ServiceLayer.SLRouteCommon}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: ServiceLayer.SLRouteCommon.html
  name: MessageParser<SLRouteCommon>
  nameWithType: MessageParser<SLRouteCommon>
  fullName: Google.Protobuf.MessageParser<ServiceLayer.SLRouteCommon>
  nameWithType.vb: MessageParser(Of SLRouteCommon)
  fullName.vb: Google.Protobuf.MessageParser(Of ServiceLayer.SLRouteCommon)
  name.vb: MessageParser(Of SLRouteCommon)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ServiceLayer.SLRouteCommon.Descriptor*
  commentId: Overload:ServiceLayer.SLRouteCommon.Descriptor
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.Descriptor
  name: Descriptor
  nameWithType: SLRouteCommon.Descriptor
  fullName: ServiceLayer.SLRouteCommon.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: ServiceLayer.SLRouteCommon.#ctor*
  commentId: Overload:ServiceLayer.SLRouteCommon.#ctor
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.#ctor
  name: SLRouteCommon
  nameWithType: SLRouteCommon.SLRouteCommon
  fullName: ServiceLayer.SLRouteCommon.SLRouteCommon
  nameWithType.vb: SLRouteCommon.New
  fullName.vb: ServiceLayer.SLRouteCommon.New
  name.vb: New
- uid: ServiceLayer.SLRouteCommon
  commentId: T:ServiceLayer.SLRouteCommon
  parent: ServiceLayer
  href: ServiceLayer.SLRouteCommon.html
  name: SLRouteCommon
  nameWithType: SLRouteCommon
  fullName: ServiceLayer.SLRouteCommon
- uid: ServiceLayer.SLRouteCommon.Clone*
  commentId: Overload:ServiceLayer.SLRouteCommon.Clone
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.Clone
  name: Clone
  nameWithType: SLRouteCommon.Clone
  fullName: ServiceLayer.SLRouteCommon.Clone
- uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLRouteCommon}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{ServiceLayer.SLRouteCommon}.Clone
  parent: Google.Protobuf.IDeepCloneable{ServiceLayer.SLRouteCommon}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<SLRouteCommon>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<ServiceLayer.SLRouteCommon>.Clone()
  nameWithType.vb: IDeepCloneable(Of SLRouteCommon).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of ServiceLayer.SLRouteCommon).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLRouteCommon}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLRouteCommon}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ServiceLayer.SLRouteCommon.AdminDistance*
  commentId: Overload:ServiceLayer.SLRouteCommon.AdminDistance
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.AdminDistance
  name: AdminDistance
  nameWithType: SLRouteCommon.AdminDistance
  fullName: ServiceLayer.SLRouteCommon.AdminDistance
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: ServiceLayer.SLRouteCommon.LocalLabel*
  commentId: Overload:ServiceLayer.SLRouteCommon.LocalLabel
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.LocalLabel
  name: LocalLabel
  nameWithType: SLRouteCommon.LocalLabel
  fullName: ServiceLayer.SLRouteCommon.LocalLabel
- uid: ServiceLayer.SLRouteCommon.Tag*
  commentId: Overload:ServiceLayer.SLRouteCommon.Tag
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.Tag
  name: Tag
  nameWithType: SLRouteCommon.Tag
  fullName: ServiceLayer.SLRouteCommon.Tag
- uid: ServiceLayer.SLRouteCommon.SrcProto*
  commentId: Overload:ServiceLayer.SLRouteCommon.SrcProto
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.SrcProto
  name: SrcProto
  nameWithType: SLRouteCommon.SrcProto
  fullName: ServiceLayer.SLRouteCommon.SrcProto
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ServiceLayer.SLRouteCommon.SrcProtoTag*
  commentId: Overload:ServiceLayer.SLRouteCommon.SrcProtoTag
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.SrcProtoTag
  name: SrcProtoTag
  nameWithType: SLRouteCommon.SrcProtoTag
  fullName: ServiceLayer.SLRouteCommon.SrcProtoTag
- uid: ServiceLayer.SLRouteCommon.Flags*
  commentId: Overload:ServiceLayer.SLRouteCommon.Flags
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.Flags
  name: Flags
  nameWithType: SLRouteCommon.Flags
  fullName: ServiceLayer.SLRouteCommon.Flags
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ServiceLayer.SLRouteCommon.Equals*
  commentId: Overload:ServiceLayer.SLRouteCommon.Equals
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.Equals(System.Object)
  name: Equals
  nameWithType: SLRouteCommon.Equals
  fullName: ServiceLayer.SLRouteCommon.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{ServiceLayer.SLRouteCommon}.Equals(ServiceLayer.SLRouteCommon)
  commentId: M:System.IEquatable{ServiceLayer.SLRouteCommon}.Equals(ServiceLayer.SLRouteCommon)
  parent: System.IEquatable{ServiceLayer.SLRouteCommon}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-servicelayer.slroutecommon-.equals#system-iequatable((servicelayer-slroutecommon))-equals(servicelayer-slroutecommon)
  name: Equals(SLRouteCommon)
  nameWithType: IEquatable<SLRouteCommon>.Equals(SLRouteCommon)
  fullName: System.IEquatable<ServiceLayer.SLRouteCommon>.Equals(ServiceLayer.SLRouteCommon)
  nameWithType.vb: IEquatable(Of SLRouteCommon).Equals(SLRouteCommon)
  fullName.vb: System.IEquatable(Of ServiceLayer.SLRouteCommon).Equals(ServiceLayer.SLRouteCommon)
  spec.csharp:
  - uid: System.IEquatable{ServiceLayer.SLRouteCommon}.Equals(ServiceLayer.SLRouteCommon)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-servicelayer.slroutecommon-.equals#system-iequatable((servicelayer-slroutecommon))-equals(servicelayer-slroutecommon)
  - name: (
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{ServiceLayer.SLRouteCommon}.Equals(ServiceLayer.SLRouteCommon)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-servicelayer.slroutecommon-.equals#system-iequatable((servicelayer-slroutecommon))-equals(servicelayer-slroutecommon)
  - name: (
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: ServiceLayer.SLRouteCommon.GetHashCode*
  commentId: Overload:ServiceLayer.SLRouteCommon.GetHashCode
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.GetHashCode
  name: GetHashCode
  nameWithType: SLRouteCommon.GetHashCode
  fullName: ServiceLayer.SLRouteCommon.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ServiceLayer.SLRouteCommon.ToString*
  commentId: Overload:ServiceLayer.SLRouteCommon.ToString
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.ToString
  name: ToString
  nameWithType: SLRouteCommon.ToString
  fullName: ServiceLayer.SLRouteCommon.ToString
- uid: ServiceLayer.SLRouteCommon.WriteTo*
  commentId: Overload:ServiceLayer.SLRouteCommon.WriteTo
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.WriteTo(Google.Protobuf.CodedOutputStream)
  name: WriteTo
  nameWithType: SLRouteCommon.WriteTo
  fullName: ServiceLayer.SLRouteCommon.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: ServiceLayer.SLRouteCommon.CalculateSize*
  commentId: Overload:ServiceLayer.SLRouteCommon.CalculateSize
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.CalculateSize
  name: CalculateSize
  nameWithType: SLRouteCommon.CalculateSize
  fullName: ServiceLayer.SLRouteCommon.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: ServiceLayer.SLRouteCommon.MergeFrom*
  commentId: Overload:ServiceLayer.SLRouteCommon.MergeFrom
  href: ServiceLayer.SLRouteCommon.html#ServiceLayer.SLRouteCommon.MergeFrom(ServiceLayer.SLRouteCommon)
  name: MergeFrom
  nameWithType: SLRouteCommon.MergeFrom
  fullName: ServiceLayer.SLRouteCommon.MergeFrom
- uid: Google.Protobuf.IMessage{ServiceLayer.SLRouteCommon}.MergeFrom(ServiceLayer.SLRouteCommon)
  commentId: M:Google.Protobuf.IMessage{ServiceLayer.SLRouteCommon}.MergeFrom(ServiceLayer.SLRouteCommon)
  parent: Google.Protobuf.IMessage{ServiceLayer.SLRouteCommon}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: ServiceLayer.SLRouteCommon.html
  name: MergeFrom(SLRouteCommon)
  nameWithType: IMessage<SLRouteCommon>.MergeFrom(SLRouteCommon)
  fullName: Google.Protobuf.IMessage<ServiceLayer.SLRouteCommon>.MergeFrom(ServiceLayer.SLRouteCommon)
  nameWithType.vb: IMessage(Of SLRouteCommon).MergeFrom(SLRouteCommon)
  fullName.vb: Google.Protobuf.IMessage(Of ServiceLayer.SLRouteCommon).MergeFrom(ServiceLayer.SLRouteCommon)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{ServiceLayer.SLRouteCommon}.MergeFrom(ServiceLayer.SLRouteCommon)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{ServiceLayer.SLRouteCommon}.MergeFrom(ServiceLayer.SLRouteCommon)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: ServiceLayer.SLRouteCommon
    name: SLRouteCommon
    href: ServiceLayer.SLRouteCommon.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
