### YamlMime:ManagedReference
items:
- uid: ServiceLayer.SLRoutePath
  commentId: T:ServiceLayer.SLRoutePath
  id: SLRoutePath
  parent: ServiceLayer
  children:
  - ServiceLayer.SLRoutePath.#ctor
  - ServiceLayer.SLRoutePath.#ctor(ServiceLayer.SLRoutePath)
  - ServiceLayer.SLRoutePath.CalculateSize
  - ServiceLayer.SLRoutePath.Clone
  - ServiceLayer.SLRoutePath.Descriptor
  - ServiceLayer.SLRoutePath.EncapType
  - ServiceLayer.SLRoutePath.EncapTypeFieldNumber
  - ServiceLayer.SLRoutePath.Equals(ServiceLayer.SLRoutePath)
  - ServiceLayer.SLRoutePath.Equals(System.Object)
  - ServiceLayer.SLRoutePath.Flags
  - ServiceLayer.SLRoutePath.FlagsFieldNumber
  - ServiceLayer.SLRoutePath.GetHashCode
  - ServiceLayer.SLRoutePath.LabelStack
  - ServiceLayer.SLRoutePath.LabelStackFieldNumber
  - ServiceLayer.SLRoutePath.LoadMetric
  - ServiceLayer.SLRoutePath.LoadMetricFieldNumber
  - ServiceLayer.SLRoutePath.MergeFrom(Google.Protobuf.CodedInputStream)
  - ServiceLayer.SLRoutePath.MergeFrom(ServiceLayer.SLRoutePath)
  - ServiceLayer.SLRoutePath.Metric
  - ServiceLayer.SLRoutePath.MetricFieldNumber
  - ServiceLayer.SLRoutePath.NexthopAddress
  - ServiceLayer.SLRoutePath.NexthopAddressFieldNumber
  - ServiceLayer.SLRoutePath.NexthopInterface
  - ServiceLayer.SLRoutePath.NexthopInterfaceFieldNumber
  - ServiceLayer.SLRoutePath.Parser
  - ServiceLayer.SLRoutePath.PathId
  - ServiceLayer.SLRoutePath.PathIdFieldNumber
  - ServiceLayer.SLRoutePath.ProtectedPathBitmap
  - ServiceLayer.SLRoutePath.ProtectedPathBitmapFieldNumber
  - ServiceLayer.SLRoutePath.RemoteAddress
  - ServiceLayer.SLRoutePath.RemoteAddressFieldNumber
  - ServiceLayer.SLRoutePath.ToString
  - ServiceLayer.SLRoutePath.VrfName
  - ServiceLayer.SLRoutePath.VrfNameFieldNumber
  - ServiceLayer.SLRoutePath.VtepRouterMacAddress
  - ServiceLayer.SLRoutePath.VtepRouterMacAddressFieldNumber
  - ServiceLayer.SLRoutePath.VxLANPath
  - ServiceLayer.SLRoutePath.VxLANPathFieldNumber
  - ServiceLayer.SLRoutePath.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: SLRoutePath
  nameWithType: SLRoutePath
  fullName: ServiceLayer.SLRoutePath
  type: Class
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutePath
    path: src/gencs/SlRouteCommon.cs
    startLine: 4977
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Route Path attributes.


    FRR Note:

    Failover from primary to backup is based on the trigger used (e.g.

    link down, BFD, etc.). Revertion is mainly timeout based. The timeout

    value is platform specific and is not configurable.
  example: []
  syntax:
    content: 'public sealed class SLRoutePath : IMessage<SLRoutePath>, IEquatable<SLRoutePath>, IDeepCloneable<SLRoutePath>, IBufferMessage, IMessage'
    content.vb: Public NotInheritable Class SLRoutePath Implements IMessage(Of SLRoutePath), IEquatable(Of SLRoutePath), IDeepCloneable(Of SLRoutePath), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{ServiceLayer.SLRoutePath}
  - System.IEquatable{ServiceLayer.SLRoutePath}
  - Google.Protobuf.IDeepCloneable{ServiceLayer.SLRoutePath}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ServiceLayer.SLRoutePath.Parser
  commentId: P:ServiceLayer.SLRoutePath.Parser
  id: Parser
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: SLRoutePath.Parser
  fullName: ServiceLayer.SLRoutePath.Parser
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Parser
    path: src/gencs/SlRouteCommon.cs
    startLine: 4984
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public static MessageParser<SLRoutePath> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{ServiceLayer.SLRoutePath}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of SLRoutePath)
  overload: ServiceLayer.SLRoutePath.Parser*
- uid: ServiceLayer.SLRoutePath.Descriptor
  commentId: P:ServiceLayer.SLRoutePath.Descriptor
  id: Descriptor
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: SLRoutePath.Descriptor
  fullName: ServiceLayer.SLRoutePath.Descriptor
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Descriptor
    path: src/gencs/SlRouteCommon.cs
    startLine: 4988
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: ServiceLayer.SLRoutePath.Descriptor*
- uid: ServiceLayer.SLRoutePath.#ctor
  commentId: M:ServiceLayer.SLRoutePath.#ctor
  id: '#ctor'
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: SLRoutePath()
  nameWithType: SLRoutePath.SLRoutePath()
  fullName: ServiceLayer.SLRoutePath.SLRoutePath()
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteCommon.cs
    startLine: 5000
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public SLRoutePath()
    content.vb: Public Sub New()
  overload: ServiceLayer.SLRoutePath.#ctor*
  nameWithType.vb: SLRoutePath.New()
  fullName.vb: ServiceLayer.SLRoutePath.New()
  name.vb: New()
- uid: ServiceLayer.SLRoutePath.#ctor(ServiceLayer.SLRoutePath)
  commentId: M:ServiceLayer.SLRoutePath.#ctor(ServiceLayer.SLRoutePath)
  id: '#ctor(ServiceLayer.SLRoutePath)'
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: SLRoutePath(SLRoutePath)
  nameWithType: SLRoutePath.SLRoutePath(SLRoutePath)
  fullName: ServiceLayer.SLRoutePath.SLRoutePath(ServiceLayer.SLRoutePath)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteCommon.cs
    startLine: 5008
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  syntax:
    content: public SLRoutePath(SLRoutePath other)
    parameters:
    - id: other
      type: ServiceLayer.SLRoutePath
    content.vb: Public Sub New(other As SLRoutePath)
  overload: ServiceLayer.SLRoutePath.#ctor*
  nameWithType.vb: SLRoutePath.New(SLRoutePath)
  fullName.vb: ServiceLayer.SLRoutePath.New(ServiceLayer.SLRoutePath)
  name.vb: New(SLRoutePath)
- uid: ServiceLayer.SLRoutePath.Clone
  commentId: M:ServiceLayer.SLRoutePath.Clone
  id: Clone
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SLRoutePath.Clone()
  fullName: ServiceLayer.SLRoutePath.Clone()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Clone
    path: src/gencs/SlRouteCommon.cs
    startLine: 5027
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a deep clone of this object.
  example: []
  syntax:
    content: public SLRoutePath Clone()
    return:
      type: ServiceLayer.SLRoutePath
      description: A deep clone of this object.
    content.vb: Public Function Clone() As SLRoutePath
  overload: ServiceLayer.SLRoutePath.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{ServiceLayer.SLRoutePath}.Clone
- uid: ServiceLayer.SLRoutePath.NexthopAddressFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.NexthopAddressFieldNumber
  id: NexthopAddressFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: NexthopAddressFieldNumber
  nameWithType: SLRoutePath.NexthopAddressFieldNumber
  fullName: ServiceLayer.SLRoutePath.NexthopAddressFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: NexthopAddressFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5034
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "NexthopAddress" field.
  example: []
  syntax:
    content: public const int NexthopAddressFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const NexthopAddressFieldNumber As Integer = 1
- uid: ServiceLayer.SLRoutePath.NexthopAddress
  commentId: P:ServiceLayer.SLRoutePath.NexthopAddress
  id: NexthopAddress
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: NexthopAddress
  nameWithType: SLRoutePath.NexthopAddress
  fullName: ServiceLayer.SLRoutePath.NexthopAddress
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: NexthopAddress
    path: src/gencs/SlRouteCommon.cs
    startLine: 5040
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    One of IPv4 or IPv6 address

    For ENCAP_VXLAN, this field is not supported and will be ignored
  example: []
  syntax:
    content: public SLIpAddress NexthopAddress { get; set; }
    parameters: []
    return:
      type: ServiceLayer.SLIpAddress
    content.vb: Public Property NexthopAddress As SLIpAddress
  overload: ServiceLayer.SLRoutePath.NexthopAddress*
- uid: ServiceLayer.SLRoutePath.NexthopInterfaceFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.NexthopInterfaceFieldNumber
  id: NexthopInterfaceFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: NexthopInterfaceFieldNumber
  nameWithType: SLRoutePath.NexthopInterfaceFieldNumber
  fullName: ServiceLayer.SLRoutePath.NexthopInterfaceFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: NexthopInterfaceFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5050
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "NexthopInterface" field.
  example: []
  syntax:
    content: public const int NexthopInterfaceFieldNumber = 2
    return:
      type: System.Int32
    content.vb: Public Const NexthopInterfaceFieldNumber As Integer = 2
- uid: ServiceLayer.SLRoutePath.NexthopInterface
  commentId: P:ServiceLayer.SLRoutePath.NexthopInterface
  id: NexthopInterface
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: NexthopInterface
  nameWithType: SLRoutePath.NexthopInterface
  fullName: ServiceLayer.SLRoutePath.NexthopInterface
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: NexthopInterface
    path: src/gencs/SlRouteCommon.cs
    startLine: 5056
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Outgoing interface name for the path.

    For ENCAP_VXLAN, this field is not supported and will be ignored
  example: []
  syntax:
    content: public SLInterface NexthopInterface { get; set; }
    parameters: []
    return:
      type: ServiceLayer.SLInterface
    content.vb: Public Property NexthopInterface As SLInterface
  overload: ServiceLayer.SLRoutePath.NexthopInterface*
- uid: ServiceLayer.SLRoutePath.LoadMetricFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.LoadMetricFieldNumber
  id: LoadMetricFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: LoadMetricFieldNumber
  nameWithType: SLRoutePath.LoadMetricFieldNumber
  fullName: ServiceLayer.SLRoutePath.LoadMetricFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: LoadMetricFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5066
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "LoadMetric" field.
  example: []
  syntax:
    content: public const int LoadMetricFieldNumber = 3
    return:
      type: System.Int32
    content.vb: Public Const LoadMetricFieldNumber As Integer = 3
- uid: ServiceLayer.SLRoutePath.LoadMetric
  commentId: P:ServiceLayer.SLRoutePath.LoadMetric
  id: LoadMetric
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: LoadMetric
  nameWithType: SLRoutePath.LoadMetric
  fullName: ServiceLayer.SLRoutePath.LoadMetric
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: LoadMetric
    path: src/gencs/SlRouteCommon.cs
    startLine: 5076
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Load metric for this path.

    Used for equal/unequal cost load balancing of traffic distribution.

    For equal cost load balancing, all paths associated with the

    route must have LoadMetric value of 0. For unequal cost load

    balancing, all paths must have non-zero LoadMetricvalue, otherwise

    system defaults to equal cost load balancing.
  example: []
  syntax:
    content: public uint LoadMetric { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property LoadMetric As UInteger
  overload: ServiceLayer.SLRoutePath.LoadMetric*
- uid: ServiceLayer.SLRoutePath.VrfNameFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.VrfNameFieldNumber
  id: VrfNameFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: VrfNameFieldNumber
  nameWithType: SLRoutePath.VrfNameFieldNumber
  fullName: ServiceLayer.SLRoutePath.VrfNameFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: VrfNameFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5086
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "VrfName" field.
  example: []
  syntax:
    content: public const int VrfNameFieldNumber = 4
    return:
      type: System.Int32
    content.vb: Public Const VrfNameFieldNumber As Integer = 4
- uid: ServiceLayer.SLRoutePath.VrfName
  commentId: P:ServiceLayer.SLRoutePath.VrfName
  id: VrfName
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: VrfName
  nameWithType: SLRoutePath.VrfName
  fullName: ServiceLayer.SLRoutePath.VrfName
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: VrfName
    path: src/gencs/SlRouteCommon.cs
    startLine: 5092
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Path VRF name. This field is used ONLY if the path is in a different

    VRF than the route (e.g. VPN cases)
  example: []
  syntax:
    content: public string VrfName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VrfName As String
  overload: ServiceLayer.SLRoutePath.VrfName*
- uid: ServiceLayer.SLRoutePath.MetricFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.MetricFieldNumber
  id: MetricFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: MetricFieldNumber
  nameWithType: SLRoutePath.MetricFieldNumber
  fullName: ServiceLayer.SLRoutePath.MetricFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: MetricFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5102
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "Metric" field.
  example: []
  syntax:
    content: public const int MetricFieldNumber = 5
    return:
      type: System.Int32
    content.vb: Public Const MetricFieldNumber As Integer = 5
- uid: ServiceLayer.SLRoutePath.Metric
  commentId: P:ServiceLayer.SLRoutePath.Metric
  id: Metric
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: Metric
  nameWithType: SLRoutePath.Metric
  fullName: ServiceLayer.SLRoutePath.Metric
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Metric
    path: src/gencs/SlRouteCommon.cs
    startLine: 5109
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Route Metric.

    The metric is typically based on information like load, hop count,

    MTU, reliability of the path, etc.
  example: []
  syntax:
    content: public uint Metric { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Metric As UInteger
  overload: ServiceLayer.SLRoutePath.Metric*
- uid: ServiceLayer.SLRoutePath.PathIdFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.PathIdFieldNumber
  id: PathIdFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: PathIdFieldNumber
  nameWithType: SLRoutePath.PathIdFieldNumber
  fullName: ServiceLayer.SLRoutePath.PathIdFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: PathIdFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5119
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "PathId" field.
  example: []
  syntax:
    content: public const int PathIdFieldNumber = 6
    return:
      type: System.Int32
    content.vb: Public Const PathIdFieldNumber As Integer = 6
- uid: ServiceLayer.SLRoutePath.PathId
  commentId: P:ServiceLayer.SLRoutePath.PathId
  id: PathId
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: PathId
  nameWithType: SLRoutePath.PathId
  fullName: ServiceLayer.SLRoutePath.PathId
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: PathId
    path: src/gencs/SlRouteCommon.cs
    startLine: 5152
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Path identifier.

    Path-id is used to uniquely identify a path when it comes to

    protection (Fast Re-Route - FRR). It is not used otherwise.


    In general, for FRR, There are 3 main path attributes:
       1. Primary. The path is the main path to carry traffic.
       2. Protected. A primary path with a configured backup path.
       3. Backup. The path is protecting a primary path.

    NOTE1: a primary path (A) can be simultaneously protected (by B), and

    acting as a backup for another path (C).

    In this example, the primary path C is protected by A (which happens to

    be primary). So the primary path (A) is Primary, Protected, and Backup.


    The following are various path types based on combinations of attributes:
       1. Pure Primary i.e. Not Protected and is not a Backup.
          =&gt; PathId is optional. ProtectedPathBitmap = 0x0
       2. Primary and Protected. Path is not a Backup.
          =&gt; PathId is mandatory. ProtectedPathBitmap = 0x0
       3. Primary and Not Protected. Path is also a Backup.
          =&gt; PathId is mandatory. ProtectedPathBitmap = 0xYYYY
       4. Primary and Protected. Path is also a Backup.
          =&gt; PathId is mandatory. ProtectedPathBitmap = 0xYYYY
       5. Pure Backup. Protection is not allowed for backup paths.
          =&gt; PathId is mandatory. ProtectedPathBitmap = 0xYYYY

    NOTE2: Pure backup path-id uses a different range than primary path-ids.

    The valid range of primary path IDs, and pure backup path IDS are

    platform dependent and can be retrieved through the client init message.
  example: []
  syntax:
    content: public uint PathId { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property PathId As UInteger
  overload: ServiceLayer.SLRoutePath.PathId*
- uid: ServiceLayer.SLRoutePath.ProtectedPathBitmapFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.ProtectedPathBitmapFieldNumber
  id: ProtectedPathBitmapFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: ProtectedPathBitmapFieldNumber
  nameWithType: SLRoutePath.ProtectedPathBitmapFieldNumber
  fullName: ServiceLayer.SLRoutePath.ProtectedPathBitmapFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: ProtectedPathBitmapFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5162
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "ProtectedPathBitmap" field.
  example: []
  syntax:
    content: public const int ProtectedPathBitmapFieldNumber = 7
    return:
      type: System.Int32
    content.vb: Public Const ProtectedPathBitmapFieldNumber As Integer = 7
- uid: ServiceLayer.SLRoutePath.ProtectedPathBitmap
  commentId: P:ServiceLayer.SLRoutePath.ProtectedPathBitmap
  id: ProtectedPathBitmap
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: ProtectedPathBitmap
  nameWithType: SLRoutePath.ProtectedPathBitmap
  fullName: ServiceLayer.SLRoutePath.ProtectedPathBitmap
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: ProtectedPathBitmap
    path: src/gencs/SlRouteCommon.cs
    startLine: 5177
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Path protection bitmap.

    The bitmap of paths this Backup path is protecting.

    Example: If this path is protecting paths with IDs 4, 5 and 6, then

    set bitmap to:

    0x38 ==&gt; 0011 1000
               || |-- path 4
               ||-- path 5
               |-- path 6
    (1 &lt;&lt; (pathId_1 - 1))  | (1 &lt;&lt; (pathId_2 - 1)) | (1 &lt;&lt; (pathId_3 - 1))
  example: []
  syntax:
    content: public RepeatedField<ulong> ProtectedPathBitmap { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.UInt64}
    content.vb: Public ReadOnly Property ProtectedPathBitmap As RepeatedField(Of ULong)
  overload: ServiceLayer.SLRoutePath.ProtectedPathBitmap*
- uid: ServiceLayer.SLRoutePath.LabelStackFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.LabelStackFieldNumber
  id: LabelStackFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: LabelStackFieldNumber
  nameWithType: SLRoutePath.LabelStackFieldNumber
  fullName: ServiceLayer.SLRoutePath.LabelStackFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: LabelStackFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5184
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "LabelStack" field.
  example: []
  syntax:
    content: public const int LabelStackFieldNumber = 8
    return:
      type: System.Int32
    content.vb: Public Const LabelStackFieldNumber As Integer = 8
- uid: ServiceLayer.SLRoutePath.LabelStack
  commentId: P:ServiceLayer.SLRoutePath.LabelStack
  id: LabelStack
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: LabelStack
  nameWithType: SLRoutePath.LabelStack
  fullName: ServiceLayer.SLRoutePath.LabelStack
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: LabelStack
    path: src/gencs/SlRouteCommon.cs
    startLine: 5198
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    MPLS label stack.

    Stack of labels that is pushed when the packet is switched out.

    Label size is LSB 20 bits. Forwarding will set EXP, TTL and BOS.

    For primary path, typically only 1 label is used.

    For backup paths, more than 1 label can be used. If more than one label

    is used, remote backup addresses must be specified.

    The maximum number of labels pushed for primary and backup are

    platform dependent.
  example: []
  syntax:
    content: public RepeatedField<uint> LabelStack { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{System.UInt32}
    content.vb: Public ReadOnly Property LabelStack As RepeatedField(Of UInteger)
  overload: ServiceLayer.SLRoutePath.LabelStack*
- uid: ServiceLayer.SLRoutePath.RemoteAddressFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.RemoteAddressFieldNumber
  id: RemoteAddressFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: RemoteAddressFieldNumber
  nameWithType: SLRoutePath.RemoteAddressFieldNumber
  fullName: ServiceLayer.SLRoutePath.RemoteAddressFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: RemoteAddressFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5205
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "RemoteAddress" field.
  example: []
  syntax:
    content: public const int RemoteAddressFieldNumber = 9
    return:
      type: System.Int32
    content.vb: Public Const RemoteAddressFieldNumber As Integer = 9
- uid: ServiceLayer.SLRoutePath.RemoteAddress
  commentId: P:ServiceLayer.SLRoutePath.RemoteAddress
  id: RemoteAddress
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: RemoteAddress
  nameWithType: SLRoutePath.RemoteAddress
  fullName: ServiceLayer.SLRoutePath.RemoteAddress
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: RemoteAddress
    path: src/gencs/SlRouteCommon.cs
    startLine: 5214
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    MPLS Remote router backup address.

    This field is used only for backup MPLS path with more than one label

    For N+1 backup labels, N remote backup addresses must be specified.
  example: []
  syntax:
    content: public RepeatedField<SLIpAddress> RemoteAddress { get; }
    parameters: []
    return:
      type: Google.Protobuf.Collections.RepeatedField{ServiceLayer.SLIpAddress}
    content.vb: Public ReadOnly Property RemoteAddress As RepeatedField(Of SLIpAddress)
  overload: ServiceLayer.SLRoutePath.RemoteAddress*
- uid: ServiceLayer.SLRoutePath.EncapTypeFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.EncapTypeFieldNumber
  id: EncapTypeFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: EncapTypeFieldNumber
  nameWithType: SLRoutePath.EncapTypeFieldNumber
  fullName: ServiceLayer.SLRoutePath.EncapTypeFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: EncapTypeFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5221
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "EncapType" field.
  example: []
  syntax:
    content: public const int EncapTypeFieldNumber = 10
    return:
      type: System.Int32
    content.vb: Public Const EncapTypeFieldNumber As Integer = 10
- uid: ServiceLayer.SLRoutePath.EncapType
  commentId: P:ServiceLayer.SLRoutePath.EncapType
  id: EncapType
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: EncapType
  nameWithType: SLRoutePath.EncapType
  fullName: ServiceLayer.SLRoutePath.EncapType
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: EncapType
    path: src/gencs/SlRouteCommon.cs
    startLine: 5226
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Encapsulation type (VXLAN or MPLS)
  example: []
  syntax:
    content: public SLEncapType EncapType { get; set; }
    parameters: []
    return:
      type: ServiceLayer.SLEncapType
    content.vb: Public Property EncapType As SLEncapType
  overload: ServiceLayer.SLRoutePath.EncapType*
- uid: ServiceLayer.SLRoutePath.VtepRouterMacAddressFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.VtepRouterMacAddressFieldNumber
  id: VtepRouterMacAddressFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: VtepRouterMacAddressFieldNumber
  nameWithType: SLRoutePath.VtepRouterMacAddressFieldNumber
  fullName: ServiceLayer.SLRoutePath.VtepRouterMacAddressFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: VtepRouterMacAddressFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5236
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "VtepRouterMacAddress" field.
  example: []
  syntax:
    content: public const int VtepRouterMacAddressFieldNumber = 11
    return:
      type: System.Int32
    content.vb: Public Const VtepRouterMacAddressFieldNumber As Integer = 11
- uid: ServiceLayer.SLRoutePath.VtepRouterMacAddress
  commentId: P:ServiceLayer.SLRoutePath.VtepRouterMacAddress
  id: VtepRouterMacAddress
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: VtepRouterMacAddress
  nameWithType: SLRoutePath.VtepRouterMacAddress
  fullName: ServiceLayer.SLRoutePath.VtepRouterMacAddress
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: VtepRouterMacAddress
    path: src/gencs/SlRouteCommon.cs
    startLine: 5249
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    VTEP (VxLAN tunnel end point) router MAC address.

    A unique system MAC address that other VTEPs can use for inter-VNI

    routing. The router MAC address is used as the inner destination MAC

    address for routed VXLAN packet. If this attribute

    is set, route can be only be signalled via BGP for EVPN use and

    local tunnel endpoint is not created.


    This field and VxLANPath are mutually exclusive. This field

    is deprecated and will eventually be removed.
  example: []
  syntax:
    content: public ByteString VtepRouterMacAddress { get; set; }
    parameters: []
    return:
      type: Google.Protobuf.ByteString
    content.vb: Public Property VtepRouterMacAddress As ByteString
  overload: ServiceLayer.SLRoutePath.VtepRouterMacAddress*
- uid: ServiceLayer.SLRoutePath.VxLANPathFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.VxLANPathFieldNumber
  id: VxLANPathFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: VxLANPathFieldNumber
  nameWithType: SLRoutePath.VxLANPathFieldNumber
  fullName: ServiceLayer.SLRoutePath.VxLANPathFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: VxLANPathFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5259
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "VxLANPath" field.
  example: []
  syntax:
    content: public const int VxLANPathFieldNumber = 12
    return:
      type: System.Int32
    content.vb: Public Const VxLANPathFieldNumber As Integer = 12
- uid: ServiceLayer.SLRoutePath.VxLANPath
  commentId: P:ServiceLayer.SLRoutePath.VxLANPath
  id: VxLANPath
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: VxLANPath
  nameWithType: SLRoutePath.VxLANPath
  fullName: ServiceLayer.SLRoutePath.VxLANPath
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: VxLANPath
    path: src/gencs/SlRouteCommon.cs
    startLine: 5265
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Create L3 VxLAN tunnel endpoint. Apply VxLAN encapsulation

    on the IP packet.
  example: []
  syntax:
    content: public SLVxLANPath VxLANPath { get; set; }
    parameters: []
    return:
      type: ServiceLayer.SLVxLANPath
    content.vb: Public Property VxLANPath As SLVxLANPath
  overload: ServiceLayer.SLRoutePath.VxLANPath*
- uid: ServiceLayer.SLRoutePath.FlagsFieldNumber
  commentId: F:ServiceLayer.SLRoutePath.FlagsFieldNumber
  id: FlagsFieldNumber
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: FlagsFieldNumber
  nameWithType: SLRoutePath.FlagsFieldNumber
  fullName: ServiceLayer.SLRoutePath.FlagsFieldNumber
  type: Field
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: FlagsFieldNumber
    path: src/gencs/SlRouteCommon.cs
    startLine: 5275
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Field number for the "Flags" field.
  example: []
  syntax:
    content: public const int FlagsFieldNumber = 13
    return:
      type: System.Int32
    content.vb: Public Const FlagsFieldNumber As Integer = 13
- uid: ServiceLayer.SLRoutePath.Flags
  commentId: P:ServiceLayer.SLRoutePath.Flags
  id: Flags
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: SLRoutePath.Flags
  fullName: ServiceLayer.SLRoutePath.Flags
  type: Property
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Flags
    path: src/gencs/SlRouteCommon.cs
    startLine: 5282
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    Path Flags.

    Each flag is indicated as a bit field. Supported values are:

    0x00000001 = SINGLE_PATH_OPT Enables hardware optimization for single path VxLAN tunnels
  example: []
  syntax:
    content: public uint Flags { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property Flags As UInteger
  overload: ServiceLayer.SLRoutePath.Flags*
- uid: ServiceLayer.SLRoutePath.Equals(System.Object)
  commentId: M:ServiceLayer.SLRoutePath.Equals(System.Object)
  id: Equals(System.Object)
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: SLRoutePath.Equals(object)
  fullName: ServiceLayer.SLRoutePath.Equals(object)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Equals
    path: src/gencs/SlRouteCommon.cs
    startLine: 5291
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Determines whether the specified object is equal to the current object.
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the specified object  is equal to the current object; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: ServiceLayer.SLRoutePath.Equals*
  nameWithType.vb: SLRoutePath.Equals(Object)
  fullName.vb: ServiceLayer.SLRoutePath.Equals(Object)
  name.vb: Equals(Object)
- uid: ServiceLayer.SLRoutePath.Equals(ServiceLayer.SLRoutePath)
  commentId: M:ServiceLayer.SLRoutePath.Equals(ServiceLayer.SLRoutePath)
  id: Equals(ServiceLayer.SLRoutePath)
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: Equals(SLRoutePath)
  nameWithType: SLRoutePath.Equals(SLRoutePath)
  fullName: ServiceLayer.SLRoutePath.Equals(ServiceLayer.SLRoutePath)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: Equals
    path: src/gencs/SlRouteCommon.cs
    startLine: 5297
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(SLRoutePath other)
    parameters:
    - id: other
      type: ServiceLayer.SLRoutePath
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As SLRoutePath) As Boolean
  overload: ServiceLayer.SLRoutePath.Equals*
  implements:
  - System.IEquatable{ServiceLayer.SLRoutePath}.Equals(ServiceLayer.SLRoutePath)
- uid: ServiceLayer.SLRoutePath.GetHashCode
  commentId: M:ServiceLayer.SLRoutePath.GetHashCode
  id: GetHashCode
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SLRoutePath.GetHashCode()
  fullName: ServiceLayer.SLRoutePath.GetHashCode()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: GetHashCode
    path: src/gencs/SlRouteCommon.cs
    startLine: 5322
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: ServiceLayer.SLRoutePath.GetHashCode*
- uid: ServiceLayer.SLRoutePath.ToString
  commentId: M:ServiceLayer.SLRoutePath.ToString
  id: ToString
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SLRoutePath.ToString()
  fullName: ServiceLayer.SLRoutePath.ToString()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: ToString
    path: src/gencs/SlRouteCommon.cs
    startLine: 5345
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: ServiceLayer.SLRoutePath.ToString*
- uid: ServiceLayer.SLRoutePath.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:ServiceLayer.SLRoutePath.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: SLRoutePath.WriteTo(CodedOutputStream)
  fullName: ServiceLayer.SLRoutePath.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: WriteTo
    path: src/gencs/SlRouteCommon.cs
    startLine: 5351
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Writes the data to the given coded output stream.
  example: []
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
      description: Coded output stream to write the data to. Must not be null.
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: ServiceLayer.SLRoutePath.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
- uid: ServiceLayer.SLRoutePath.CalculateSize
  commentId: M:ServiceLayer.SLRoutePath.CalculateSize
  id: CalculateSize
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: SLRoutePath.CalculateSize()
  fullName: ServiceLayer.SLRoutePath.CalculateSize()
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: CalculateSize
    path: src/gencs/SlRouteCommon.cs
    startLine: 5459
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Calculates the size of this message in Protocol Buffer wire format, in bytes.
  example: []
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
      description: >-
        The number of bytes required to write this message
                    to a coded output stream.
    content.vb: Public Function CalculateSize() As Integer
  overload: ServiceLayer.SLRoutePath.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
- uid: ServiceLayer.SLRoutePath.MergeFrom(ServiceLayer.SLRoutePath)
  commentId: M:ServiceLayer.SLRoutePath.MergeFrom(ServiceLayer.SLRoutePath)
  id: MergeFrom(ServiceLayer.SLRoutePath)
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: MergeFrom(SLRoutePath)
  nameWithType: SLRoutePath.MergeFrom(SLRoutePath)
  fullName: ServiceLayer.SLRoutePath.MergeFrom(ServiceLayer.SLRoutePath)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: MergeFrom
    path: src/gencs/SlRouteCommon.cs
    startLine: 5502
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Merges the given message into this one.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(SLRoutePath other)
    parameters:
    - id: other
      type: ServiceLayer.SLRoutePath
    content.vb: Public Sub MergeFrom(other As SLRoutePath)
  overload: ServiceLayer.SLRoutePath.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{ServiceLayer.SLRoutePath}.MergeFrom(ServiceLayer.SLRoutePath)
- uid: ServiceLayer.SLRoutePath.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:ServiceLayer.SLRoutePath.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: ServiceLayer.SLRoutePath
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: SLRoutePath.MergeFrom(CodedInputStream)
  fullName: ServiceLayer.SLRoutePath.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteCommon.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: MergeFrom
    path: src/gencs/SlRouteCommon.cs
    startLine: 5553
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Merges the data from the specified coded input stream with the current message.
  remarks: See the user guide for precise merge semantics.
  example: []
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
      description: ''
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: ServiceLayer.SLRoutePath.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
references:
- uid: ServiceLayer
  commentId: N:ServiceLayer
  href: ServiceLayer.html
  name: ServiceLayer
  nameWithType: ServiceLayer
  fullName: ServiceLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Google.Protobuf.IMessage{ServiceLayer.SLRoutePath}
  commentId: T:Google.Protobuf.IMessage{ServiceLayer.SLRoutePath}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  href: ServiceLayer.SLRoutePath.html
  name: IMessage<SLRoutePath>
  nameWithType: IMessage<SLRoutePath>
  fullName: Google.Protobuf.IMessage<ServiceLayer.SLRoutePath>
  nameWithType.vb: IMessage(Of SLRoutePath)
  fullName.vb: Google.Protobuf.IMessage(Of ServiceLayer.SLRoutePath)
  name.vb: IMessage(Of SLRoutePath)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: )
- uid: System.IEquatable{ServiceLayer.SLRoutePath}
  commentId: T:System.IEquatable{ServiceLayer.SLRoutePath}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<SLRoutePath>
  nameWithType: IEquatable<SLRoutePath>
  fullName: System.IEquatable<ServiceLayer.SLRoutePath>
  nameWithType.vb: IEquatable(Of SLRoutePath)
  fullName.vb: System.IEquatable(Of ServiceLayer.SLRoutePath)
  name.vb: IEquatable(Of SLRoutePath)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: )
- uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLRoutePath}
  commentId: T:Google.Protobuf.IDeepCloneable{ServiceLayer.SLRoutePath}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  href: ServiceLayer.SLRoutePath.html
  name: IDeepCloneable<SLRoutePath>
  nameWithType: IDeepCloneable<SLRoutePath>
  fullName: Google.Protobuf.IDeepCloneable<ServiceLayer.SLRoutePath>
  nameWithType.vb: IDeepCloneable(Of SLRoutePath)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of ServiceLayer.SLRoutePath)
  name.vb: IDeepCloneable(Of SLRoutePath)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ServiceLayer.SLRoutePath.Parser*
  commentId: Overload:ServiceLayer.SLRoutePath.Parser
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.Parser
  name: Parser
  nameWithType: SLRoutePath.Parser
  fullName: ServiceLayer.SLRoutePath.Parser
- uid: Google.Protobuf.MessageParser{ServiceLayer.SLRoutePath}
  commentId: T:Google.Protobuf.MessageParser{ServiceLayer.SLRoutePath}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  href: ServiceLayer.SLRoutePath.html
  name: MessageParser<SLRoutePath>
  nameWithType: MessageParser<SLRoutePath>
  fullName: Google.Protobuf.MessageParser<ServiceLayer.SLRoutePath>
  nameWithType.vb: MessageParser(Of SLRoutePath)
  fullName.vb: Google.Protobuf.MessageParser(Of ServiceLayer.SLRoutePath)
  name.vb: MessageParser(Of SLRoutePath)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ServiceLayer.SLRoutePath.Descriptor*
  commentId: Overload:ServiceLayer.SLRoutePath.Descriptor
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.Descriptor
  name: Descriptor
  nameWithType: SLRoutePath.Descriptor
  fullName: ServiceLayer.SLRoutePath.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Reflection
    name: Reflection
    isExternal: true
- uid: ServiceLayer.SLRoutePath.#ctor*
  commentId: Overload:ServiceLayer.SLRoutePath.#ctor
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.#ctor
  name: SLRoutePath
  nameWithType: SLRoutePath.SLRoutePath
  fullName: ServiceLayer.SLRoutePath.SLRoutePath
  nameWithType.vb: SLRoutePath.New
  fullName.vb: ServiceLayer.SLRoutePath.New
  name.vb: New
- uid: ServiceLayer.SLRoutePath
  commentId: T:ServiceLayer.SLRoutePath
  parent: ServiceLayer
  href: ServiceLayer.SLRoutePath.html
  name: SLRoutePath
  nameWithType: SLRoutePath
  fullName: ServiceLayer.SLRoutePath
- uid: ServiceLayer.SLRoutePath.Clone*
  commentId: Overload:ServiceLayer.SLRoutePath.Clone
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.Clone
  name: Clone
  nameWithType: SLRoutePath.Clone
  fullName: ServiceLayer.SLRoutePath.Clone
- uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLRoutePath}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{ServiceLayer.SLRoutePath}.Clone
  parent: Google.Protobuf.IDeepCloneable{ServiceLayer.SLRoutePath}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<SLRoutePath>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<ServiceLayer.SLRoutePath>.Clone()
  nameWithType.vb: IDeepCloneable(Of SLRoutePath).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of ServiceLayer.SLRoutePath).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLRoutePath}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable{ServiceLayer.SLRoutePath}.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ServiceLayer.SLRoutePath.NexthopAddress*
  commentId: Overload:ServiceLayer.SLRoutePath.NexthopAddress
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.NexthopAddress
  name: NexthopAddress
  nameWithType: SLRoutePath.NexthopAddress
  fullName: ServiceLayer.SLRoutePath.NexthopAddress
- uid: ServiceLayer.SLIpAddress
  commentId: T:ServiceLayer.SLIpAddress
  parent: ServiceLayer
  href: ServiceLayer.SLIpAddress.html
  name: SLIpAddress
  nameWithType: SLIpAddress
  fullName: ServiceLayer.SLIpAddress
- uid: ServiceLayer.SLRoutePath.NexthopInterface*
  commentId: Overload:ServiceLayer.SLRoutePath.NexthopInterface
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.NexthopInterface
  name: NexthopInterface
  nameWithType: SLRoutePath.NexthopInterface
  fullName: ServiceLayer.SLRoutePath.NexthopInterface
- uid: ServiceLayer.SLInterface
  commentId: T:ServiceLayer.SLInterface
  parent: ServiceLayer
  href: ServiceLayer.SLInterface.html
  name: SLInterface
  nameWithType: SLInterface
  fullName: ServiceLayer.SLInterface
- uid: ServiceLayer.SLRoutePath.LoadMetric*
  commentId: Overload:ServiceLayer.SLRoutePath.LoadMetric
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.LoadMetric
  name: LoadMetric
  nameWithType: SLRoutePath.LoadMetric
  fullName: ServiceLayer.SLRoutePath.LoadMetric
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: ServiceLayer.SLRoutePath.VrfName*
  commentId: Overload:ServiceLayer.SLRoutePath.VrfName
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.VrfName
  name: VrfName
  nameWithType: SLRoutePath.VrfName
  fullName: ServiceLayer.SLRoutePath.VrfName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ServiceLayer.SLRoutePath.Metric*
  commentId: Overload:ServiceLayer.SLRoutePath.Metric
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.Metric
  name: Metric
  nameWithType: SLRoutePath.Metric
  fullName: ServiceLayer.SLRoutePath.Metric
- uid: ServiceLayer.SLRoutePath.PathId*
  commentId: Overload:ServiceLayer.SLRoutePath.PathId
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.PathId
  name: PathId
  nameWithType: SLRoutePath.PathId
  fullName: ServiceLayer.SLRoutePath.PathId
- uid: ServiceLayer.SLRoutePath.ProtectedPathBitmap*
  commentId: Overload:ServiceLayer.SLRoutePath.ProtectedPathBitmap
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.ProtectedPathBitmap
  name: ProtectedPathBitmap
  nameWithType: SLRoutePath.ProtectedPathBitmap
  fullName: ServiceLayer.SLRoutePath.ProtectedPathBitmap
- uid: Google.Protobuf.Collections.RepeatedField{System.UInt64}
  commentId: T:Google.Protobuf.Collections.RepeatedField{System.UInt64}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: RepeatedField<ulong>
  nameWithType: RepeatedField<ulong>
  fullName: Google.Protobuf.Collections.RepeatedField<ulong>
  nameWithType.vb: RepeatedField(Of ULong)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of ULong)
  name.vb: RepeatedField(Of ULong)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: Google.Protobuf.Collections.RepeatedField`1
  commentId: T:Google.Protobuf.Collections.RepeatedField`1
  isExternal: true
  name: RepeatedField<T>
  nameWithType: RepeatedField<T>
  fullName: Google.Protobuf.Collections.RepeatedField<T>
  nameWithType.vb: RepeatedField(Of T)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of T)
  name.vb: RepeatedField(Of T)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Google.Protobuf.Collections
  commentId: N:Google.Protobuf.Collections
  isExternal: true
  name: Google.Protobuf.Collections
  nameWithType: Google.Protobuf.Collections
  fullName: Google.Protobuf.Collections
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Collections
    name: Collections
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.Protobuf
    name: Protobuf
    isExternal: true
  - name: .
  - uid: Google.Protobuf.Collections
    name: Collections
    isExternal: true
- uid: ServiceLayer.SLRoutePath.LabelStack*
  commentId: Overload:ServiceLayer.SLRoutePath.LabelStack
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.LabelStack
  name: LabelStack
  nameWithType: SLRoutePath.LabelStack
  fullName: ServiceLayer.SLRoutePath.LabelStack
- uid: Google.Protobuf.Collections.RepeatedField{System.UInt32}
  commentId: T:Google.Protobuf.Collections.RepeatedField{System.UInt32}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: RepeatedField<uint>
  nameWithType: RepeatedField<uint>
  fullName: Google.Protobuf.Collections.RepeatedField<uint>
  nameWithType.vb: RepeatedField(Of UInteger)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of UInteger)
  name.vb: RepeatedField(Of UInteger)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: ServiceLayer.SLRoutePath.RemoteAddress*
  commentId: Overload:ServiceLayer.SLRoutePath.RemoteAddress
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.RemoteAddress
  name: RemoteAddress
  nameWithType: SLRoutePath.RemoteAddress
  fullName: ServiceLayer.SLRoutePath.RemoteAddress
- uid: Google.Protobuf.Collections.RepeatedField{ServiceLayer.SLIpAddress}
  commentId: T:Google.Protobuf.Collections.RepeatedField{ServiceLayer.SLIpAddress}
  parent: Google.Protobuf.Collections
  definition: Google.Protobuf.Collections.RepeatedField`1
  href: ServiceLayer.SLIpAddress.html
  name: RepeatedField<SLIpAddress>
  nameWithType: RepeatedField<SLIpAddress>
  fullName: Google.Protobuf.Collections.RepeatedField<ServiceLayer.SLIpAddress>
  nameWithType.vb: RepeatedField(Of SLIpAddress)
  fullName.vb: Google.Protobuf.Collections.RepeatedField(Of ServiceLayer.SLIpAddress)
  name.vb: RepeatedField(Of SLIpAddress)
  spec.csharp:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: <
  - uid: ServiceLayer.SLIpAddress
    name: SLIpAddress
    href: ServiceLayer.SLIpAddress.html
  - name: '>'
  spec.vb:
  - uid: Google.Protobuf.Collections.RepeatedField`1
    name: RepeatedField
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLIpAddress
    name: SLIpAddress
    href: ServiceLayer.SLIpAddress.html
  - name: )
- uid: ServiceLayer.SLRoutePath.EncapType*
  commentId: Overload:ServiceLayer.SLRoutePath.EncapType
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.EncapType
  name: EncapType
  nameWithType: SLRoutePath.EncapType
  fullName: ServiceLayer.SLRoutePath.EncapType
- uid: ServiceLayer.SLEncapType
  commentId: T:ServiceLayer.SLEncapType
  parent: ServiceLayer
  href: ServiceLayer.SLEncapType.html
  name: SLEncapType
  nameWithType: SLEncapType
  fullName: ServiceLayer.SLEncapType
- uid: ServiceLayer.SLRoutePath.VtepRouterMacAddress*
  commentId: Overload:ServiceLayer.SLRoutePath.VtepRouterMacAddress
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.VtepRouterMacAddress
  name: VtepRouterMacAddress
  nameWithType: SLRoutePath.VtepRouterMacAddress
  fullName: ServiceLayer.SLRoutePath.VtepRouterMacAddress
- uid: Google.Protobuf.ByteString
  commentId: T:Google.Protobuf.ByteString
  parent: Google.Protobuf
  isExternal: true
  name: ByteString
  nameWithType: ByteString
  fullName: Google.Protobuf.ByteString
- uid: ServiceLayer.SLRoutePath.VxLANPath*
  commentId: Overload:ServiceLayer.SLRoutePath.VxLANPath
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.VxLANPath
  name: VxLANPath
  nameWithType: SLRoutePath.VxLANPath
  fullName: ServiceLayer.SLRoutePath.VxLANPath
- uid: ServiceLayer.SLVxLANPath
  commentId: T:ServiceLayer.SLVxLANPath
  parent: ServiceLayer
  href: ServiceLayer.SLVxLANPath.html
  name: SLVxLANPath
  nameWithType: SLVxLANPath
  fullName: ServiceLayer.SLVxLANPath
- uid: ServiceLayer.SLRoutePath.Flags*
  commentId: Overload:ServiceLayer.SLRoutePath.Flags
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.Flags
  name: Flags
  nameWithType: SLRoutePath.Flags
  fullName: ServiceLayer.SLRoutePath.Flags
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ServiceLayer.SLRoutePath.Equals*
  commentId: Overload:ServiceLayer.SLRoutePath.Equals
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.Equals(System.Object)
  name: Equals
  nameWithType: SLRoutePath.Equals
  fullName: ServiceLayer.SLRoutePath.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable{ServiceLayer.SLRoutePath}.Equals(ServiceLayer.SLRoutePath)
  commentId: M:System.IEquatable{ServiceLayer.SLRoutePath}.Equals(ServiceLayer.SLRoutePath)
  parent: System.IEquatable{ServiceLayer.SLRoutePath}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-servicelayer.slroutepath-.equals#system-iequatable((servicelayer-slroutepath))-equals(servicelayer-slroutepath)
  name: Equals(SLRoutePath)
  nameWithType: IEquatable<SLRoutePath>.Equals(SLRoutePath)
  fullName: System.IEquatable<ServiceLayer.SLRoutePath>.Equals(ServiceLayer.SLRoutePath)
  nameWithType.vb: IEquatable(Of SLRoutePath).Equals(SLRoutePath)
  fullName.vb: System.IEquatable(Of ServiceLayer.SLRoutePath).Equals(ServiceLayer.SLRoutePath)
  spec.csharp:
  - uid: System.IEquatable{ServiceLayer.SLRoutePath}.Equals(ServiceLayer.SLRoutePath)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-servicelayer.slroutepath-.equals#system-iequatable((servicelayer-slroutepath))-equals(servicelayer-slroutepath)
  - name: (
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{ServiceLayer.SLRoutePath}.Equals(ServiceLayer.SLRoutePath)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-servicelayer.slroutepath-.equals#system-iequatable((servicelayer-slroutepath))-equals(servicelayer-slroutepath)
  - name: (
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: ServiceLayer.SLRoutePath.GetHashCode*
  commentId: Overload:ServiceLayer.SLRoutePath.GetHashCode
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.GetHashCode
  name: GetHashCode
  nameWithType: SLRoutePath.GetHashCode
  fullName: ServiceLayer.SLRoutePath.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ServiceLayer.SLRoutePath.ToString*
  commentId: Overload:ServiceLayer.SLRoutePath.ToString
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.ToString
  name: ToString
  nameWithType: SLRoutePath.ToString
  fullName: ServiceLayer.SLRoutePath.ToString
- uid: ServiceLayer.SLRoutePath.WriteTo*
  commentId: Overload:ServiceLayer.SLRoutePath.WriteTo
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.WriteTo(Google.Protobuf.CodedOutputStream)
  name: WriteTo
  nameWithType: SLRoutePath.WriteTo
  fullName: ServiceLayer.SLRoutePath.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: ServiceLayer.SLRoutePath.CalculateSize*
  commentId: Overload:ServiceLayer.SLRoutePath.CalculateSize
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.CalculateSize
  name: CalculateSize
  nameWithType: SLRoutePath.CalculateSize
  fullName: ServiceLayer.SLRoutePath.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    isExternal: true
  - name: (
  - name: )
- uid: ServiceLayer.SLRoutePath.MergeFrom*
  commentId: Overload:ServiceLayer.SLRoutePath.MergeFrom
  href: ServiceLayer.SLRoutePath.html#ServiceLayer.SLRoutePath.MergeFrom(ServiceLayer.SLRoutePath)
  name: MergeFrom
  nameWithType: SLRoutePath.MergeFrom
  fullName: ServiceLayer.SLRoutePath.MergeFrom
- uid: Google.Protobuf.IMessage{ServiceLayer.SLRoutePath}.MergeFrom(ServiceLayer.SLRoutePath)
  commentId: M:Google.Protobuf.IMessage{ServiceLayer.SLRoutePath}.MergeFrom(ServiceLayer.SLRoutePath)
  parent: Google.Protobuf.IMessage{ServiceLayer.SLRoutePath}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  href: ServiceLayer.SLRoutePath.html
  name: MergeFrom(SLRoutePath)
  nameWithType: IMessage<SLRoutePath>.MergeFrom(SLRoutePath)
  fullName: Google.Protobuf.IMessage<ServiceLayer.SLRoutePath>.MergeFrom(ServiceLayer.SLRoutePath)
  nameWithType.vb: IMessage(Of SLRoutePath).MergeFrom(SLRoutePath)
  fullName.vb: Google.Protobuf.IMessage(Of ServiceLayer.SLRoutePath).MergeFrom(ServiceLayer.SLRoutePath)
  spec.csharp:
  - uid: Google.Protobuf.IMessage{ServiceLayer.SLRoutePath}.MergeFrom(ServiceLayer.SLRoutePath)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage{ServiceLayer.SLRoutePath}.MergeFrom(ServiceLayer.SLRoutePath)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: ServiceLayer.SLRoutePath
    name: SLRoutePath
    href: ServiceLayer.SLRoutePath.html
  - name: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    isExternal: true
  - name: (
  - name: T
  - name: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    isExternal: true
  - name: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    isExternal: true
  - name: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
