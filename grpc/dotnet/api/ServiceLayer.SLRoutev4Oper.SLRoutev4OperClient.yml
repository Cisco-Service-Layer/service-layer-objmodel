### YamlMime:ManagedReference
items:
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  commentId: T:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  id: SLRoutev4Oper.SLRoutev4OperClient
  parent: ServiceLayer
  children:
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor(Grpc.Core.CallInvoker)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor(Grpc.Core.ChannelBase)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(ServiceLayer.SLRoutev4Msg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(ServiceLayer.SLRoutev4Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SLRoutev4Oper.SLRoutev4OperClient
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  type: Class
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4OperClient
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 370
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Client for SLRoutev4Oper
  example: []
  syntax:
    content: 'public class SLRoutev4Oper.SLRoutev4OperClient : ClientBase<SLRoutev4Oper.SLRoutev4OperClient>'
    content.vb: Public Class SLRoutev4Oper.SLRoutev4OperClient Inherits ClientBase(Of SLRoutev4Oper.SLRoutev4OperClient)
  inheritance:
  - System.Object
  - Grpc.Core.ClientBase
  - Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}
  inheritedMembers:
  - Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}.WithHost(System.String)
  - Grpc.Core.ClientBase.CallInvoker
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor(Grpc.Core.ChannelBase)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor(Grpc.Core.ChannelBase)
  id: '#ctor(Grpc.Core.ChannelBase)'
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4OperClient(ChannelBase)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OperClient(ChannelBase)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OperClient(Grpc.Core.ChannelBase)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 374
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a new client for SLRoutev4Oper
  example: []
  syntax:
    content: public SLRoutev4OperClient(ChannelBase channel)
    parameters:
    - id: channel
      type: Grpc.Core.ChannelBase
      description: The channel to use to make remote calls.
    content.vb: Public Sub New(channel As ChannelBase)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.New(ChannelBase)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.New(Grpc.Core.ChannelBase)
  name.vb: New(ChannelBase)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor(Grpc.Core.CallInvoker)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor(Grpc.Core.CallInvoker)
  id: '#ctor(Grpc.Core.CallInvoker)'
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4OperClient(CallInvoker)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OperClient(CallInvoker)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OperClient(Grpc.Core.CallInvoker)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 380
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a new client for SLRoutev4Oper that uses a custom <code>CallInvoker</code>.
  example: []
  syntax:
    content: public SLRoutev4OperClient(CallInvoker callInvoker)
    parameters:
    - id: callInvoker
      type: Grpc.Core.CallInvoker
      description: The callInvoker to use to make remote calls.
    content.vb: Public Sub New(callInvoker As CallInvoker)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.New(CallInvoker)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.New(Grpc.Core.CallInvoker)
  name.vb: New(CallInvoker)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor
  id: '#ctor'
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4OperClient()
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OperClient()
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OperClient()
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 385
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Protected parameterless constructor to allow creation of test doubles.
  example: []
  syntax:
    content: protected SLRoutev4OperClient()
    content.vb: Protected Sub New()
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.New()
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.New()
  name.vb: New()
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: '#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)'
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4OperClient(ClientBaseConfiguration)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OperClient(ClientBase.ClientBaseConfiguration)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OperClient(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 391
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Protected constructor to allow creation of configured clients.
  example: []
  syntax:
    content: protected SLRoutev4OperClient(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
      description: The client configuration.
    content.vb: Protected Sub New(configuration As ClientBase.ClientBaseConfiguration)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.New(ClientBase.ClientBaseConfiguration)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.New(Grpc.Core.ClientBase.ClientBaseConfiguration)
  name.vb: New(ClientBaseConfiguration)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GlobalsGet(SLRouteGlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(SLRouteGlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GlobalsGet
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 404
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route information
  example: []
  syntax:
    content: public virtual SLRouteGlobalsGetMsgRsp SLRoutev4GlobalsGet(SLRouteGlobalsGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalsGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLRouteGlobalsGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4GlobalsGet(request As SLRouteGlobalsGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLRouteGlobalsGetMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(SLRouteGlobalsGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4GlobalsGet(SLRouteGlobalsGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GlobalsGet(SLRouteGlobalsGetMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(SLRouteGlobalsGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GlobalsGet
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 415
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route information
  example: []
  syntax:
    content: public virtual SLRouteGlobalsGetMsgRsp SLRoutev4GlobalsGet(SLRouteGlobalsGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalsGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLRouteGlobalsGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4GlobalsGet(request As SLRouteGlobalsGetMsg, options As CallOptions) As SLRouteGlobalsGetMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GlobalsGetAsync(SLRouteGlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(SLRouteGlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GlobalsGetAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 428
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route information
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRouteGlobalsGetMsgRsp> SLRoutev4GlobalsGetAsync(SLRouteGlobalsGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalsGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalsGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4GlobalsGetAsync(request As SLRouteGlobalsGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLRouteGlobalsGetMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(SLRouteGlobalsGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4GlobalsGetAsync(SLRouteGlobalsGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GlobalsGetAsync(SLRouteGlobalsGetMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(SLRouteGlobalsGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GlobalsGetAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 439
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route information
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRouteGlobalsGetMsgRsp> SLRoutev4GlobalsGetAsync(SLRouteGlobalsGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalsGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalsGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4GlobalsGetAsync(request As SLRouteGlobalsGetMsg, options As CallOptions) As AsyncUnaryCall(Of SLRouteGlobalsGetMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GlobalStatsGet(SLRouteGlobalStatsGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(SLRouteGlobalStatsGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GlobalStatsGet
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 452
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route Stats
  example: []
  syntax:
    content: public virtual SLRouteGlobalStatsGetMsgRsp SLRoutev4GlobalStatsGet(SLRouteGlobalStatsGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalStatsGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4GlobalStatsGet(request As SLRouteGlobalStatsGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLRouteGlobalStatsGetMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(SLRouteGlobalStatsGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4GlobalStatsGet(SLRouteGlobalStatsGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GlobalStatsGet(SLRouteGlobalStatsGetMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(SLRouteGlobalStatsGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GlobalStatsGet
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 463
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route Stats
  example: []
  syntax:
    content: public virtual SLRouteGlobalStatsGetMsgRsp SLRoutev4GlobalStatsGet(SLRouteGlobalStatsGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalStatsGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4GlobalStatsGet(request As SLRouteGlobalStatsGetMsg, options As CallOptions) As SLRouteGlobalStatsGetMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GlobalStatsGetAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 476
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route Stats
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRouteGlobalStatsGetMsgRsp> SLRoutev4GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalStatsGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalStatsGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4GlobalStatsGetAsync(request As SLRouteGlobalStatsGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLRouteGlobalStatsGetMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GlobalStatsGetAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 487
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route Stats
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRouteGlobalStatsGetMsgRsp> SLRoutev4GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalStatsGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalStatsGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4GlobalStatsGetAsync(request As SLRouteGlobalStatsGetMsg, options As CallOptions) As AsyncUnaryCall(Of SLRouteGlobalStatsGetMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfRegOp(SLVrfRegMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(SLVrfRegMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfRegOp
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 527
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLVrfRegMsg.Oper = SL_REGOP_REGISTER:
        VRF registration: Sends a list of VRF registration messages
        and expects a list of registration responses.
        A client Must Register a VRF BEFORE routes can be added/modified in
       the associated VRF.

    SLVrfRegMsg.Oper = SL_REGOP_UNREGISTER:
        VRF Un-registration: Sends a list of VRF un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer interested
        in these VRFs. All previously installed routes would be removed.

    SLVrfRegMsg.Oper = SL_REGOP_EOF:
        VRF End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their Routes.

    The VRF registration operations can be used by the client to

    synchronize routes with the device. When the client re-registers the VRF

    with the server using SL_REGOP_REGISTER, server marks routes as stale.

    Client then must reprogram routes it is interested in.

    When client sends SL_REGOP_EOF, any routes not reprogrammed

    are removed from the device.


    The client must perform all operations (VRF registration, routes)

    from a single execution context.
  example: []
  syntax:
    content: public virtual SLVrfRegMsgRsp SLRoutev4VrfRegOp(SLVrfRegMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLVrfRegMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4VrfRegOp(request As SLVrfRegMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLVrfRegMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(SLVrfRegMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4VrfRegOp(SLVrfRegMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  id: SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfRegOp(SLVrfRegMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(SLVrfRegMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfRegOp
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 565
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLVrfRegMsg.Oper = SL_REGOP_REGISTER:
        VRF registration: Sends a list of VRF registration messages
        and expects a list of registration responses.
        A client Must Register a VRF BEFORE routes can be added/modified in
       the associated VRF.

    SLVrfRegMsg.Oper = SL_REGOP_UNREGISTER:
        VRF Un-registration: Sends a list of VRF un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer interested
        in these VRFs. All previously installed routes would be removed.

    SLVrfRegMsg.Oper = SL_REGOP_EOF:
        VRF End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their Routes.

    The VRF registration operations can be used by the client to

    synchronize routes with the device. When the client re-registers the VRF

    with the server using SL_REGOP_REGISTER, server marks routes as stale.

    Client then must reprogram routes it is interested in.

    When client sends SL_REGOP_EOF, any routes not reprogrammed

    are removed from the device.


    The client must perform all operations (VRF registration, routes)

    from a single execution context.
  example: []
  syntax:
    content: public virtual SLVrfRegMsgRsp SLRoutev4VrfRegOp(SLVrfRegMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLVrfRegMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4VrfRegOp(request As SLVrfRegMsg, options As CallOptions) As SLVrfRegMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfRegOpAsync(SLVrfRegMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(SLVrfRegMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfRegOpAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 605
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLVrfRegMsg.Oper = SL_REGOP_REGISTER:
        VRF registration: Sends a list of VRF registration messages
        and expects a list of registration responses.
        A client Must Register a VRF BEFORE routes can be added/modified in
       the associated VRF.

    SLVrfRegMsg.Oper = SL_REGOP_UNREGISTER:
        VRF Un-registration: Sends a list of VRF un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer interested
        in these VRFs. All previously installed routes would be removed.

    SLVrfRegMsg.Oper = SL_REGOP_EOF:
        VRF End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their Routes.

    The VRF registration operations can be used by the client to

    synchronize routes with the device. When the client re-registers the VRF

    with the server using SL_REGOP_REGISTER, server marks routes as stale.

    Client then must reprogram routes it is interested in.

    When client sends SL_REGOP_EOF, any routes not reprogrammed

    are removed from the device.


    The client must perform all operations (VRF registration, routes)

    from a single execution context.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVrfRegMsgRsp> SLRoutev4VrfRegOpAsync(SLVrfRegMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4VrfRegOpAsync(request As SLVrfRegMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLVrfRegMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(SLVrfRegMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4VrfRegOpAsync(SLVrfRegMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  id: SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfRegOpAsync(SLVrfRegMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(SLVrfRegMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfRegOpAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 643
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLVrfRegMsg.Oper = SL_REGOP_REGISTER:
        VRF registration: Sends a list of VRF registration messages
        and expects a list of registration responses.
        A client Must Register a VRF BEFORE routes can be added/modified in
       the associated VRF.

    SLVrfRegMsg.Oper = SL_REGOP_UNREGISTER:
        VRF Un-registration: Sends a list of VRF un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer interested
        in these VRFs. All previously installed routes would be removed.

    SLVrfRegMsg.Oper = SL_REGOP_EOF:
        VRF End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their Routes.

    The VRF registration operations can be used by the client to

    synchronize routes with the device. When the client re-registers the VRF

    with the server using SL_REGOP_REGISTER, server marks routes as stale.

    Client then must reprogram routes it is interested in.

    When client sends SL_REGOP_EOF, any routes not reprogrammed

    are removed from the device.


    The client must perform all operations (VRF registration, routes)

    from a single execution context.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVrfRegMsgRsp> SLRoutev4VrfRegOpAsync(SLVrfRegMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4VrfRegOpAsync(request As SLVrfRegMsg, options As CallOptions) As AsyncUnaryCall(Of SLVrfRegMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfRegGet(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfRegGet
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 656
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: VRF get. Used to retrieve VRF attributes from the server.
  example: []
  syntax:
    content: public virtual SLVrfRegGetMsgRsp SLRoutev4VrfRegGet(SLVrfRegGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLVrfRegGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4VrfRegGet(request As SLVrfRegGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLVrfRegGetMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4VrfRegGet(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfRegGet(SLVrfRegGetMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(SLVrfRegGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfRegGet
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 667
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: VRF get. Used to retrieve VRF attributes from the server.
  example: []
  syntax:
    content: public virtual SLVrfRegGetMsgRsp SLRoutev4VrfRegGet(SLVrfRegGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLVrfRegGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4VrfRegGet(request As SLVrfRegGetMsg, options As CallOptions) As SLVrfRegGetMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfRegGetAsync(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfRegGetAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 680
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: VRF get. Used to retrieve VRF attributes from the server.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVrfRegGetMsgRsp> SLRoutev4VrfRegGetAsync(SLVrfRegGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4VrfRegGetAsync(request As SLVrfRegGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLVrfRegGetMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4VrfRegGetAsync(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfRegGetAsync(SLVrfRegGetMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(SLVrfRegGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfRegGetAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 691
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: VRF get. Used to retrieve VRF attributes from the server.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVrfRegGetMsgRsp> SLRoutev4VrfRegGetAsync(SLVrfRegGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4VrfRegGetAsync(request As SLVrfRegGetMsg, options As CallOptions) As AsyncUnaryCall(Of SLVrfRegGetMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfGetStats(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfGetStats
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 704
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve VRF Stats from the server.
  example: []
  syntax:
    content: public virtual SLVRFGetStatsMsgRsp SLRoutev4VrfGetStats(SLVrfRegGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLVRFGetStatsMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4VrfGetStats(request As SLVrfRegGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLVRFGetStatsMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4VrfGetStats(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfGetStats(SLVrfRegGetMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(SLVrfRegGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfGetStats
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 715
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve VRF Stats from the server.
  example: []
  syntax:
    content: public virtual SLVRFGetStatsMsgRsp SLRoutev4VrfGetStats(SLVrfRegGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLVRFGetStatsMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4VrfGetStats(request As SLVrfRegGetMsg, options As CallOptions) As SLVRFGetStatsMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfGetStatsAsync(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfGetStatsAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 728
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve VRF Stats from the server.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVRFGetStatsMsgRsp> SLRoutev4VrfGetStatsAsync(SLVrfRegGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVRFGetStatsMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4VrfGetStatsAsync(request As SLVrfRegGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLVRFGetStatsMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4VrfGetStatsAsync(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4VrfGetStatsAsync(SLVrfRegGetMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(SLVrfRegGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4VrfGetStatsAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 739
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve VRF Stats from the server.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVRFGetStatsMsgRsp> SLRoutev4VrfGetStatsAsync(SLVrfRegGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVRFGetStatsMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4VrfGetStatsAsync(request As SLVrfRegGetMsg, options As CallOptions) As AsyncUnaryCall(Of SLVRFGetStatsMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(ServiceLayer.SLRoutev4Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(ServiceLayer.SLRoutev4Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4Op(ServiceLayer.SLRoutev4Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4Op(SLRoutev4Msg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(SLRoutev4Msg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(ServiceLayer.SLRoutev4Msg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4Op
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 762
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev4Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists. First
        ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev4Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev4Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual SLRoutev4MsgRsp SLRoutev4Op(SLRoutev4Msg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev4Msg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLRoutev4MsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4Op(request As SLRoutev4Msg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLRoutev4MsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(SLRoutev4Msg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(ServiceLayer.SLRoutev4Msg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4Op(SLRoutev4Msg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(ServiceLayer.SLRoutev4Msg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(ServiceLayer.SLRoutev4Msg,Grpc.Core.CallOptions)
  id: SLRoutev4Op(ServiceLayer.SLRoutev4Msg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4Op(SLRoutev4Msg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(SLRoutev4Msg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(ServiceLayer.SLRoutev4Msg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4Op
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 783
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev4Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists. First
        ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev4Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev4Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual SLRoutev4MsgRsp SLRoutev4Op(SLRoutev4Msg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev4Msg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLRoutev4MsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4Op(request As SLRoutev4Msg, options As CallOptions) As SLRoutev4MsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4OpAsync(SLRoutev4Msg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(SLRoutev4Msg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4OpAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 806
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev4Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists. First
        ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev4Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev4Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRoutev4MsgRsp> SLRoutev4OpAsync(SLRoutev4Msg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev4Msg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev4MsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4OpAsync(request As SLRoutev4Msg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLRoutev4MsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(SLRoutev4Msg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4OpAsync(SLRoutev4Msg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg,Grpc.Core.CallOptions)
  id: SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4OpAsync(SLRoutev4Msg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(SLRoutev4Msg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4OpAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 827
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev4Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists. First
        ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev4Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev4Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRoutev4MsgRsp> SLRoutev4OpAsync(SLRoutev4Msg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev4Msg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev4MsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4OpAsync(request As SLRoutev4Msg, options As CallOptions) As AsyncUnaryCall(Of SLRoutev4MsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4Get(SLRoutev4GetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(SLRoutev4GetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4Get
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 840
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual SLRoutev4GetMsgRsp SLRoutev4Get(SLRoutev4GetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev4GetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLRoutev4GetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4Get(request As SLRoutev4GetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLRoutev4GetMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(SLRoutev4GetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4Get(SLRoutev4GetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.CallOptions)
  id: SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4Get(SLRoutev4GetMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(SLRoutev4GetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4Get
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 851
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual SLRoutev4GetMsgRsp SLRoutev4Get(SLRoutev4GetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev4GetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLRoutev4GetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev4Get(request As SLRoutev4GetMsg, options As CallOptions) As SLRoutev4GetMsgRsp
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GetAsync(SLRoutev4GetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(SLRoutev4GetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GetAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 864
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRoutev4GetMsgRsp> SLRoutev4GetAsync(SLRoutev4GetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev4GetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev4GetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4GetAsync(request As SLRoutev4GetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLRoutev4GetMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(SLRoutev4GetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4GetAsync(SLRoutev4GetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.CallOptions)
  id: SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GetAsync(SLRoutev4GetMsg, CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(SLRoutev4GetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GetAsync
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 875
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRoutev4GetMsgRsp> SLRoutev4GetAsync(SLRoutev4GetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev4GetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev4GetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4GetAsync(request As SLRoutev4GetMsg, options As CallOptions) As AsyncUnaryCall(Of SLRoutev4GetMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4OpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4OpStream(Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4OpStream
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 897
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev4Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists. First
        ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev4Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev4Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRoutev4Msg, SLRoutev4MsgRsp> SLRoutev4OpStream(Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev4Msg,ServiceLayer.SLRoutev4MsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4OpStream(headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncDuplexStreamingCall(Of SLRoutev4Msg, SLRoutev4MsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4OpStream(Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Grpc.Core.CallOptions)
  id: SLRoutev4OpStream(Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4OpStream(CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4OpStream
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 917
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev4Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists. First
        ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev4Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev4Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRoutev4Msg, SLRoutev4MsgRsp> SLRoutev4OpStream(CallOptions options)
    parameters:
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev4Msg,ServiceLayer.SLRoutev4MsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4OpStream(options As CallOptions) As AsyncDuplexStreamingCall(Of SLRoutev4Msg, SLRoutev4MsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4GetStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GetStream(Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GetStream
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 929
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRoutev4GetMsg, SLRoutev4GetMsgRsp> SLRoutev4GetStream(Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev4GetMsg,ServiceLayer.SLRoutev4GetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4GetStream(headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncDuplexStreamingCall(Of SLRoutev4GetMsg, SLRoutev4GetMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4GetStream(Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Grpc.Core.CallOptions)
  id: SLRoutev4GetStream(Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GetStream(CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GetStream
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 939
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRoutev4GetMsg, SLRoutev4GetMsgRsp> SLRoutev4GetStream(CallOptions options)
    parameters:
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev4GetMsg,ServiceLayer.SLRoutev4GetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4GetStream(options As CallOptions) As AsyncDuplexStreamingCall(Of SLRoutev4GetMsg, SLRoutev4GetMsgRsp)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev4GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GetNotifStream(Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GetNotifStream
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 960
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    This call is used to get a stream of route notifications.

    It can be used to get "push" notifications for route

    adds/updates/deletes.

    The caller must maintain the GRPC channel as long as there is

    interest in route notifications.


    The call takes a stream of per-VRF notification requests.

    The success/failure of the notification request is relayed in the

    SLRouteNotifStatus followed by a Start marker, any routes if present,

    and an End Marker.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRouteGetNotifMsg, SLRoutev4Notif> SLRoutev4GetNotifStream(Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRouteGetNotifMsg,ServiceLayer.SLRoutev4Notif}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4GetNotifStream(headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncDuplexStreamingCall(Of SLRouteGetNotifMsg, SLRoutev4Notif)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream*
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev4GetNotifStream(Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Grpc.Core.CallOptions)
  id: SLRoutev4GetNotifStream(Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev4GetNotifStream(CallOptions)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(CallOptions)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev4GetNotifStream
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 979
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    This call is used to get a stream of route notifications.

    It can be used to get "push" notifications for route

    adds/updates/deletes.

    The caller must maintain the GRPC channel as long as there is

    interest in route notifications.


    The call takes a stream of per-VRF notification requests.

    The success/failure of the notification request is relayed in the

    SLRouteNotifStatus followed by a Start marker, any routes if present,

    and an End Marker.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRouteGetNotifMsg, SLRoutev4Notif> SLRoutev4GetNotifStream(CallOptions options)
    parameters:
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRouteGetNotifMsg,ServiceLayer.SLRoutev4Notif}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev4GetNotifStream(options As CallOptions) As AsyncDuplexStreamingCall(Of SLRouteGetNotifMsg, SLRoutev4Notif)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream*
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  langs:
  - csharp
  - vb
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv4Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: NewInstance
    path: src/gencs/SlRouteIpv4Grpc.cs
    startLine: 985
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
  example: []
  syntax:
    content: protected override SLRoutev4Oper.SLRoutev4OperClient NewInstance(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
    return:
      type: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
    content.vb: Protected Overrides Function NewInstance(configuration As ClientBase.ClientBaseConfiguration) As SLRoutev4Oper.SLRoutev4OperClient
  overridden: Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  overload: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.NewInstance*
references:
- uid: ServiceLayer
  commentId: N:ServiceLayer
  href: ServiceLayer.html
  name: ServiceLayer
  nameWithType: ServiceLayer
  fullName: ServiceLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Grpc.Core.ClientBase
  commentId: T:Grpc.Core.ClientBase
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase
  nameWithType: ClientBase
  fullName: Grpc.Core.ClientBase
- uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}
  commentId: T:Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}
  parent: Grpc.Core
  definition: Grpc.Core.ClientBase`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase<SLRoutev4Oper.SLRoutev4OperClient>
  nameWithType: ClientBase<SLRoutev4Oper.SLRoutev4OperClient>
  fullName: Grpc.Core.ClientBase<ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient>
  nameWithType.vb: ClientBase(Of SLRoutev4Oper.SLRoutev4OperClient)
  fullName.vb: Grpc.Core.ClientBase(Of ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient)
  name.vb: ClientBase(Of SLRoutev4Oper.SLRoutev4OperClient)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: <
  - uid: ServiceLayer.SLRoutev4Oper
    name: SLRoutev4Oper
    href: ServiceLayer.SLRoutev4Oper.html
  - name: .
  - uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
    name: SLRoutev4OperClient
    href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutev4Oper
    name: SLRoutev4Oper
    href: ServiceLayer.SLRoutev4Oper.html
  - name: .
  - uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
    name: SLRoutev4OperClient
    href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html
  - name: )
- uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}.WithHost(System.String)
  parent: Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}
  definition: Grpc.Core.ClientBase`1.WithHost(System.String)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: WithHost(string)
  nameWithType: ClientBase<SLRoutev4Oper.SLRoutev4OperClient>.WithHost(string)
  fullName: Grpc.Core.ClientBase<ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient>.WithHost(string)
  nameWithType.vb: ClientBase(Of SLRoutev4Oper.SLRoutev4OperClient).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient).WithHost(String)
  name.vb: WithHost(String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}.WithHost(System.String)
    name: WithHost
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}.WithHost(System.String)
    name: WithHost
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Grpc.Core.ClientBase.CallInvoker
  commentId: P:Grpc.Core.ClientBase.CallInvoker
  parent: Grpc.Core.ClientBase
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: CallInvoker
  nameWithType: ClientBase.CallInvoker
  fullName: Grpc.Core.ClientBase.CallInvoker
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
  spec.csharp:
  - uid: Grpc
    name: Grpc
    isExternal: true
  - name: .
  - uid: Grpc.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Grpc
    name: Grpc
    isExternal: true
  - name: .
  - uid: Grpc.Core
    name: Core
    isExternal: true
- uid: Grpc.Core.ClientBase`1
  commentId: T:Grpc.Core.ClientBase`1
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase<T>
  nameWithType: ClientBase<T>
  fullName: Grpc.Core.ClientBase<T>
  nameWithType.vb: ClientBase(Of T)
  fullName.vb: Grpc.Core.ClientBase(Of T)
  name.vb: ClientBase(Of T)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Grpc.Core.ClientBase`1.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase`1.WithHost(System.String)
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: WithHost(string)
  nameWithType: ClientBase<T>.WithHost(string)
  fullName: Grpc.Core.ClientBase<T>.WithHost(string)
  nameWithType.vb: ClientBase(Of T).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of T).WithHost(String)
  name.vb: WithHost(String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.#ctor(Grpc.Core.ChannelBase)
  name: SLRoutev4OperClient
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OperClient
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OperClient
  nameWithType.vb: SLRoutev4Oper.SLRoutev4OperClient.New
  fullName.vb: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.New
  name.vb: New
- uid: Grpc.Core.ChannelBase
  commentId: T:Grpc.Core.ChannelBase
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ChannelBase.cs
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: Grpc.Core.ChannelBase
- uid: Grpc.Core.CallInvoker
  commentId: T:Grpc.Core.CallInvoker
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/CallInvoker.cs
  name: CallInvoker
  nameWithType: CallInvoker
  fullName: Grpc.Core.CallInvoker
- uid: Grpc.Core.ClientBase.ClientBaseConfiguration
  commentId: T:Grpc.Core.ClientBase.ClientBaseConfiguration
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase.ClientBaseConfiguration
  nameWithType: ClientBase.ClientBaseConfiguration
  fullName: Grpc.Core.ClientBase.ClientBaseConfiguration
  spec.csharp:
  - uid: Grpc.Core.ClientBase
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: .
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  spec.vb:
  - uid: Grpc.Core.ClientBase
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: .
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4GlobalsGet
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGet
- uid: ServiceLayer.SLRouteGlobalsGetMsg
  commentId: T:ServiceLayer.SLRouteGlobalsGetMsg
  parent: ServiceLayer
  href: ServiceLayer.SLRouteGlobalsGetMsg.html
  name: SLRouteGlobalsGetMsg
  nameWithType: SLRouteGlobalsGetMsg
  fullName: ServiceLayer.SLRouteGlobalsGetMsg
- uid: Grpc.Core.Metadata
  commentId: T:Grpc.Core.Metadata
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/Metadata.cs
  name: Metadata
  nameWithType: Metadata
  fullName: Grpc.Core.Metadata
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: ServiceLayer.SLRouteGlobalsGetMsgRsp
  commentId: T:ServiceLayer.SLRouteGlobalsGetMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLRouteGlobalsGetMsgRsp.html
  name: SLRouteGlobalsGetMsgRsp
  nameWithType: SLRouteGlobalsGetMsgRsp
  fullName: ServiceLayer.SLRouteGlobalsGetMsgRsp
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: Grpc.Core.CallOptions
  commentId: T:Grpc.Core.CallOptions
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/CallOptions.cs
  name: CallOptions
  nameWithType: CallOptions
  fullName: Grpc.Core.CallOptions
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4GlobalsGetAsync
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalsGetAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalsGetMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalsGetMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLRouteGlobalsGetMsgRsp>
  nameWithType: AsyncUnaryCall<SLRouteGlobalsGetMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLRouteGlobalsGetMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLRouteGlobalsGetMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLRouteGlobalsGetMsgRsp)
  name.vb: AsyncUnaryCall(Of SLRouteGlobalsGetMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLRouteGlobalsGetMsgRsp
    name: SLRouteGlobalsGetMsgRsp
    href: ServiceLayer.SLRouteGlobalsGetMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRouteGlobalsGetMsgRsp
    name: SLRouteGlobalsGetMsgRsp
    href: ServiceLayer.SLRouteGlobalsGetMsgRsp.html
  - name: )
- uid: Grpc.Core.AsyncUnaryCall`1
  commentId: T:Grpc.Core.AsyncUnaryCall`1
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<TResponse>
  nameWithType: AsyncUnaryCall<TResponse>
  fullName: Grpc.Core.AsyncUnaryCall<TResponse>
  nameWithType.vb: AsyncUnaryCall(Of TResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of TResponse)
  name.vb: AsyncUnaryCall(Of TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4GlobalStatsGet
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGet
- uid: ServiceLayer.SLRouteGlobalStatsGetMsg
  commentId: T:ServiceLayer.SLRouteGlobalStatsGetMsg
  parent: ServiceLayer
  href: ServiceLayer.SLRouteGlobalStatsGetMsg.html
  name: SLRouteGlobalStatsGetMsg
  nameWithType: SLRouteGlobalStatsGetMsg
  fullName: ServiceLayer.SLRouteGlobalStatsGetMsg
- uid: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
  commentId: T:ServiceLayer.SLRouteGlobalStatsGetMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLRouteGlobalStatsGetMsgRsp.html
  name: SLRouteGlobalStatsGetMsgRsp
  nameWithType: SLRouteGlobalStatsGetMsgRsp
  fullName: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4GlobalStatsGetAsync
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GlobalStatsGetAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalStatsGetMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalStatsGetMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLRouteGlobalStatsGetMsgRsp>
  nameWithType: AsyncUnaryCall<SLRouteGlobalStatsGetMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLRouteGlobalStatsGetMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLRouteGlobalStatsGetMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLRouteGlobalStatsGetMsgRsp)
  name.vb: AsyncUnaryCall(Of SLRouteGlobalStatsGetMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
    name: SLRouteGlobalStatsGetMsgRsp
    href: ServiceLayer.SLRouteGlobalStatsGetMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
    name: SLRouteGlobalStatsGetMsgRsp
    href: ServiceLayer.SLRouteGlobalStatsGetMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4VrfRegOp
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOp
- uid: ServiceLayer.SLVrfRegMsg
  commentId: T:ServiceLayer.SLVrfRegMsg
  parent: ServiceLayer
  href: ServiceLayer.SLVrfRegMsg.html
  name: SLVrfRegMsg
  nameWithType: SLVrfRegMsg
  fullName: ServiceLayer.SLVrfRegMsg
- uid: ServiceLayer.SLVrfRegMsgRsp
  commentId: T:ServiceLayer.SLVrfRegMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLVrfRegMsgRsp.html
  name: SLVrfRegMsgRsp
  nameWithType: SLVrfRegMsgRsp
  fullName: ServiceLayer.SLVrfRegMsgRsp
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4VrfRegOpAsync
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegOpAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLVrfRegMsgRsp>
  nameWithType: AsyncUnaryCall<SLVrfRegMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLVrfRegMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLVrfRegMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLVrfRegMsgRsp)
  name.vb: AsyncUnaryCall(Of SLVrfRegMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLVrfRegMsgRsp
    name: SLVrfRegMsgRsp
    href: ServiceLayer.SLVrfRegMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLVrfRegMsgRsp
    name: SLVrfRegMsgRsp
    href: ServiceLayer.SLVrfRegMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4VrfRegGet
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGet
- uid: ServiceLayer.SLVrfRegGetMsg
  commentId: T:ServiceLayer.SLVrfRegGetMsg
  parent: ServiceLayer
  href: ServiceLayer.SLVrfRegGetMsg.html
  name: SLVrfRegGetMsg
  nameWithType: SLVrfRegGetMsg
  fullName: ServiceLayer.SLVrfRegGetMsg
- uid: ServiceLayer.SLVrfRegGetMsgRsp
  commentId: T:ServiceLayer.SLVrfRegGetMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLVrfRegGetMsgRsp.html
  name: SLVrfRegGetMsgRsp
  nameWithType: SLVrfRegGetMsgRsp
  fullName: ServiceLayer.SLVrfRegGetMsgRsp
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4VrfRegGetAsync
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfRegGetAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegGetMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegGetMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLVrfRegGetMsgRsp>
  nameWithType: AsyncUnaryCall<SLVrfRegGetMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLVrfRegGetMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLVrfRegGetMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLVrfRegGetMsgRsp)
  name.vb: AsyncUnaryCall(Of SLVrfRegGetMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLVrfRegGetMsgRsp
    name: SLVrfRegGetMsgRsp
    href: ServiceLayer.SLVrfRegGetMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLVrfRegGetMsgRsp
    name: SLVrfRegGetMsgRsp
    href: ServiceLayer.SLVrfRegGetMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4VrfGetStats
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStats
- uid: ServiceLayer.SLVRFGetStatsMsgRsp
  commentId: T:ServiceLayer.SLVRFGetStatsMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLVRFGetStatsMsgRsp.html
  name: SLVRFGetStatsMsgRsp
  nameWithType: SLVRFGetStatsMsgRsp
  fullName: ServiceLayer.SLVRFGetStatsMsgRsp
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4VrfGetStatsAsync
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4VrfGetStatsAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVRFGetStatsMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVRFGetStatsMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLVRFGetStatsMsgRsp>
  nameWithType: AsyncUnaryCall<SLVRFGetStatsMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLVRFGetStatsMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLVRFGetStatsMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLVRFGetStatsMsgRsp)
  name.vb: AsyncUnaryCall(Of SLVRFGetStatsMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLVRFGetStatsMsgRsp
    name: SLVRFGetStatsMsgRsp
    href: ServiceLayer.SLVRFGetStatsMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLVRFGetStatsMsgRsp
    name: SLVRFGetStatsMsgRsp
    href: ServiceLayer.SLVRFGetStatsMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op(ServiceLayer.SLRoutev4Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4Op
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Op
- uid: ServiceLayer.SLRoutev4Msg
  commentId: T:ServiceLayer.SLRoutev4Msg
  parent: ServiceLayer
  href: ServiceLayer.SLRoutev4Msg.html
  name: SLRoutev4Msg
  nameWithType: SLRoutev4Msg
  fullName: ServiceLayer.SLRoutev4Msg
- uid: ServiceLayer.SLRoutev4MsgRsp
  commentId: T:ServiceLayer.SLRoutev4MsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLRoutev4MsgRsp.html
  name: SLRoutev4MsgRsp
  nameWithType: SLRoutev4MsgRsp
  fullName: ServiceLayer.SLRoutev4MsgRsp
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync(ServiceLayer.SLRoutev4Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4OpAsync
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev4MsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev4MsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLRoutev4MsgRsp>
  nameWithType: AsyncUnaryCall<SLRoutev4MsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLRoutev4MsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLRoutev4MsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLRoutev4MsgRsp)
  name.vb: AsyncUnaryCall(Of SLRoutev4MsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLRoutev4MsgRsp
    name: SLRoutev4MsgRsp
    href: ServiceLayer.SLRoutev4MsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutev4MsgRsp
    name: SLRoutev4MsgRsp
    href: ServiceLayer.SLRoutev4MsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4Get
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4Get
- uid: ServiceLayer.SLRoutev4GetMsg
  commentId: T:ServiceLayer.SLRoutev4GetMsg
  parent: ServiceLayer
  href: ServiceLayer.SLRoutev4GetMsg.html
  name: SLRoutev4GetMsg
  nameWithType: SLRoutev4GetMsg
  fullName: ServiceLayer.SLRoutev4GetMsg
- uid: ServiceLayer.SLRoutev4GetMsgRsp
  commentId: T:ServiceLayer.SLRoutev4GetMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLRoutev4GetMsgRsp.html
  name: SLRoutev4GetMsgRsp
  nameWithType: SLRoutev4GetMsgRsp
  fullName: ServiceLayer.SLRoutev4GetMsgRsp
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync(ServiceLayer.SLRoutev4GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4GetAsync
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev4GetMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev4GetMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLRoutev4GetMsgRsp>
  nameWithType: AsyncUnaryCall<SLRoutev4GetMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLRoutev4GetMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLRoutev4GetMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLRoutev4GetMsgRsp)
  name.vb: AsyncUnaryCall(Of SLRoutev4GetMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLRoutev4GetMsgRsp
    name: SLRoutev4GetMsgRsp
    href: ServiceLayer.SLRoutev4GetMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutev4GetMsgRsp
    name: SLRoutev4GetMsgRsp
    href: ServiceLayer.SLRoutev4GetMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4OpStream
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4OpStream
- uid: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev4Msg,ServiceLayer.SLRoutev4MsgRsp}
  commentId: T:Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev4Msg,ServiceLayer.SLRoutev4MsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncDuplexStreamingCall`2
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  name: AsyncDuplexStreamingCall<SLRoutev4Msg, SLRoutev4MsgRsp>
  nameWithType: AsyncDuplexStreamingCall<SLRoutev4Msg, SLRoutev4MsgRsp>
  fullName: Grpc.Core.AsyncDuplexStreamingCall<ServiceLayer.SLRoutev4Msg, ServiceLayer.SLRoutev4MsgRsp>
  nameWithType.vb: AsyncDuplexStreamingCall(Of SLRoutev4Msg, SLRoutev4MsgRsp)
  fullName.vb: Grpc.Core.AsyncDuplexStreamingCall(Of ServiceLayer.SLRoutev4Msg, ServiceLayer.SLRoutev4MsgRsp)
  name.vb: AsyncDuplexStreamingCall(Of SLRoutev4Msg, SLRoutev4MsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: <
  - uid: ServiceLayer.SLRoutev4Msg
    name: SLRoutev4Msg
    href: ServiceLayer.SLRoutev4Msg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev4MsgRsp
    name: SLRoutev4MsgRsp
    href: ServiceLayer.SLRoutev4MsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutev4Msg
    name: SLRoutev4Msg
    href: ServiceLayer.SLRoutev4Msg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev4MsgRsp
    name: SLRoutev4MsgRsp
    href: ServiceLayer.SLRoutev4MsgRsp.html
  - name: )
- uid: Grpc.Core.AsyncDuplexStreamingCall`2
  commentId: T:Grpc.Core.AsyncDuplexStreamingCall`2
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  name: AsyncDuplexStreamingCall<TRequest, TResponse>
  nameWithType: AsyncDuplexStreamingCall<TRequest, TResponse>
  fullName: Grpc.Core.AsyncDuplexStreamingCall<TRequest, TResponse>
  nameWithType.vb: AsyncDuplexStreamingCall(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.AsyncDuplexStreamingCall(Of TRequest, TResponse)
  name.vb: AsyncDuplexStreamingCall(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4GetStream
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetStream
- uid: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev4GetMsg,ServiceLayer.SLRoutev4GetMsgRsp}
  commentId: T:Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev4GetMsg,ServiceLayer.SLRoutev4GetMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncDuplexStreamingCall`2
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  name: AsyncDuplexStreamingCall<SLRoutev4GetMsg, SLRoutev4GetMsgRsp>
  nameWithType: AsyncDuplexStreamingCall<SLRoutev4GetMsg, SLRoutev4GetMsgRsp>
  fullName: Grpc.Core.AsyncDuplexStreamingCall<ServiceLayer.SLRoutev4GetMsg, ServiceLayer.SLRoutev4GetMsgRsp>
  nameWithType.vb: AsyncDuplexStreamingCall(Of SLRoutev4GetMsg, SLRoutev4GetMsgRsp)
  fullName.vb: Grpc.Core.AsyncDuplexStreamingCall(Of ServiceLayer.SLRoutev4GetMsg, ServiceLayer.SLRoutev4GetMsgRsp)
  name.vb: AsyncDuplexStreamingCall(Of SLRoutev4GetMsg, SLRoutev4GetMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: <
  - uid: ServiceLayer.SLRoutev4GetMsg
    name: SLRoutev4GetMsg
    href: ServiceLayer.SLRoutev4GetMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev4GetMsgRsp
    name: SLRoutev4GetMsgRsp
    href: ServiceLayer.SLRoutev4GetMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutev4GetMsg
    name: SLRoutev4GetMsg
    href: ServiceLayer.SLRoutev4GetMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev4GetMsgRsp
    name: SLRoutev4GetMsgRsp
    href: ServiceLayer.SLRoutev4GetMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev4GetNotifStream
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.SLRoutev4GetNotifStream
- uid: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRouteGetNotifMsg,ServiceLayer.SLRoutev4Notif}
  commentId: T:Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRouteGetNotifMsg,ServiceLayer.SLRoutev4Notif}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncDuplexStreamingCall`2
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  name: AsyncDuplexStreamingCall<SLRouteGetNotifMsg, SLRoutev4Notif>
  nameWithType: AsyncDuplexStreamingCall<SLRouteGetNotifMsg, SLRoutev4Notif>
  fullName: Grpc.Core.AsyncDuplexStreamingCall<ServiceLayer.SLRouteGetNotifMsg, ServiceLayer.SLRoutev4Notif>
  nameWithType.vb: AsyncDuplexStreamingCall(Of SLRouteGetNotifMsg, SLRoutev4Notif)
  fullName.vb: Grpc.Core.AsyncDuplexStreamingCall(Of ServiceLayer.SLRouteGetNotifMsg, ServiceLayer.SLRoutev4Notif)
  name.vb: AsyncDuplexStreamingCall(Of SLRouteGetNotifMsg, SLRoutev4Notif)
  spec.csharp:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: <
  - uid: ServiceLayer.SLRouteGetNotifMsg
    name: SLRouteGetNotifMsg
    href: ServiceLayer.SLRouteGetNotifMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev4Notif
    name: SLRoutev4Notif
    href: ServiceLayer.SLRoutev4Notif.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRouteGetNotifMsg
    name: SLRouteGetNotifMsg
    href: ServiceLayer.SLRouteGetNotifMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev4Notif
    name: SLRoutev4Notif
    href: ServiceLayer.SLRoutev4Notif.html
  - name: )
- uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}
  definition: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: ClientBase<SLRoutev4Oper.SLRoutev4OperClient>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of SLRoutev4Oper.SLRoutev4OperClient).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.NewInstance*
  commentId: Overload:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.NewInstance
  href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html#ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  name: NewInstance
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient.NewInstance
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.NewInstance
- uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  commentId: T:ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  parent: ServiceLayer
  href: ServiceLayer.SLRoutev4Oper.html
  name: SLRoutev4Oper.SLRoutev4OperClient
  nameWithType: SLRoutev4Oper.SLRoutev4OperClient
  fullName: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
  spec.csharp:
  - uid: ServiceLayer.SLRoutev4Oper
    name: SLRoutev4Oper
    href: ServiceLayer.SLRoutev4Oper.html
  - name: .
  - uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
    name: SLRoutev4OperClient
    href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html
  spec.vb:
  - uid: ServiceLayer.SLRoutev4Oper
    name: SLRoutev4Oper
    href: ServiceLayer.SLRoutev4Oper.html
  - name: .
  - uid: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient
    name: SLRoutev4OperClient
    href: ServiceLayer.SLRoutev4Oper.SLRoutev4OperClient.html
- uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: ClientBase<T>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<T>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of T).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of T).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
