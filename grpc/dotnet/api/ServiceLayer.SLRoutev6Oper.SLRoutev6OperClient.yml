### YamlMime:ManagedReference
items:
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  commentId: T:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  id: SLRoutev6Oper.SLRoutev6OperClient
  parent: ServiceLayer
  children:
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor(Grpc.Core.CallInvoker)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor(Grpc.Core.ChannelBase)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(ServiceLayer.SLRoutev6Msg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(ServiceLayer.SLRoutev6Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  - ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SLRoutev6Oper.SLRoutev6OperClient
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  type: Class
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6OperClient
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 369
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Client for SLRoutev6Oper
  example: []
  syntax:
    content: 'public class SLRoutev6Oper.SLRoutev6OperClient : ClientBase<SLRoutev6Oper.SLRoutev6OperClient>'
    content.vb: Public Class SLRoutev6Oper.SLRoutev6OperClient Inherits ClientBase(Of SLRoutev6Oper.SLRoutev6OperClient)
  inheritance:
  - System.Object
  - Grpc.Core.ClientBase
  - Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}
  inheritedMembers:
  - Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}.WithHost(System.String)
  - Grpc.Core.ClientBase.CallInvoker
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor(Grpc.Core.ChannelBase)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor(Grpc.Core.ChannelBase)
  id: '#ctor(Grpc.Core.ChannelBase)'
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6OperClient(ChannelBase)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OperClient(ChannelBase)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OperClient(Grpc.Core.ChannelBase)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 373
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a new client for SLRoutev6Oper
  example: []
  syntax:
    content: public SLRoutev6OperClient(ChannelBase channel)
    parameters:
    - id: channel
      type: Grpc.Core.ChannelBase
      description: The channel to use to make remote calls.
    content.vb: Public Sub New(channel As ChannelBase)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.New(ChannelBase)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.New(Grpc.Core.ChannelBase)
  name.vb: New(ChannelBase)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor(Grpc.Core.CallInvoker)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor(Grpc.Core.CallInvoker)
  id: '#ctor(Grpc.Core.CallInvoker)'
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6OperClient(CallInvoker)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OperClient(CallInvoker)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OperClient(Grpc.Core.CallInvoker)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 379
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a new client for SLRoutev6Oper that uses a custom <code>CallInvoker</code>.
  example: []
  syntax:
    content: public SLRoutev6OperClient(CallInvoker callInvoker)
    parameters:
    - id: callInvoker
      type: Grpc.Core.CallInvoker
      description: The callInvoker to use to make remote calls.
    content.vb: Public Sub New(callInvoker As CallInvoker)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.New(CallInvoker)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.New(Grpc.Core.CallInvoker)
  name.vb: New(CallInvoker)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor
  id: '#ctor'
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6OperClient()
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OperClient()
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OperClient()
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 384
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Protected parameterless constructor to allow creation of test doubles.
  example: []
  syntax:
    content: protected SLRoutev6OperClient()
    content.vb: Protected Sub New()
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.New()
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.New()
  name.vb: New()
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: '#ctor(Grpc.Core.ClientBase.ClientBaseConfiguration)'
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6OperClient(ClientBaseConfiguration)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OperClient(ClientBase.ClientBaseConfiguration)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OperClient(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Constructor
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: .ctor
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 390
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Protected constructor to allow creation of configured clients.
  example: []
  syntax:
    content: protected SLRoutev6OperClient(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
      description: The client configuration.
    content.vb: Protected Sub New(configuration As ClientBase.ClientBaseConfiguration)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.New(ClientBase.ClientBaseConfiguration)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.New(Grpc.Core.ClientBase.ClientBaseConfiguration)
  name.vb: New(ClientBaseConfiguration)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GlobalsGet(SLRouteGlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(SLRouteGlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GlobalsGet
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 403
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route information
  example: []
  syntax:
    content: public virtual SLRouteGlobalsGetMsgRsp SLRoutev6GlobalsGet(SLRouteGlobalsGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalsGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLRouteGlobalsGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6GlobalsGet(request As SLRouteGlobalsGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLRouteGlobalsGetMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(SLRouteGlobalsGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6GlobalsGet(SLRouteGlobalsGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GlobalsGet(SLRouteGlobalsGetMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(SLRouteGlobalsGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GlobalsGet
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 414
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route information
  example: []
  syntax:
    content: public virtual SLRouteGlobalsGetMsgRsp SLRoutev6GlobalsGet(SLRouteGlobalsGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalsGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLRouteGlobalsGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6GlobalsGet(request As SLRouteGlobalsGetMsg, options As CallOptions) As SLRouteGlobalsGetMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GlobalsGetAsync(SLRouteGlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(SLRouteGlobalsGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GlobalsGetAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 427
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route information
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRouteGlobalsGetMsgRsp> SLRoutev6GlobalsGetAsync(SLRouteGlobalsGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalsGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalsGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6GlobalsGetAsync(request As SLRouteGlobalsGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLRouteGlobalsGetMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(SLRouteGlobalsGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6GlobalsGetAsync(SLRouteGlobalsGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GlobalsGetAsync(SLRouteGlobalsGetMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(SLRouteGlobalsGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GlobalsGetAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 438
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route information
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRouteGlobalsGetMsgRsp> SLRoutev6GlobalsGetAsync(SLRouteGlobalsGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalsGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalsGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6GlobalsGetAsync(request As SLRouteGlobalsGetMsg, options As CallOptions) As AsyncUnaryCall(Of SLRouteGlobalsGetMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GlobalStatsGet(SLRouteGlobalStatsGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(SLRouteGlobalStatsGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GlobalStatsGet
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 451
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route Stats
  example: []
  syntax:
    content: public virtual SLRouteGlobalStatsGetMsgRsp SLRoutev6GlobalStatsGet(SLRouteGlobalStatsGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalStatsGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6GlobalStatsGet(request As SLRouteGlobalStatsGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLRouteGlobalStatsGetMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(SLRouteGlobalStatsGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6GlobalStatsGet(SLRouteGlobalStatsGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GlobalStatsGet(SLRouteGlobalStatsGetMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(SLRouteGlobalStatsGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GlobalStatsGet
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 462
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route Stats
  example: []
  syntax:
    content: public virtual SLRouteGlobalStatsGetMsgRsp SLRoutev6GlobalStatsGet(SLRouteGlobalStatsGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalStatsGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6GlobalStatsGet(request As SLRouteGlobalStatsGetMsg, options As CallOptions) As SLRouteGlobalStatsGetMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GlobalStatsGetAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 475
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route Stats
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRouteGlobalStatsGetMsgRsp> SLRoutev6GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalStatsGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalStatsGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6GlobalStatsGetAsync(request As SLRouteGlobalStatsGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLRouteGlobalStatsGetMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GlobalStatsGetAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 486
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve Global Route Stats
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRouteGlobalStatsGetMsgRsp> SLRoutev6GlobalStatsGetAsync(SLRouteGlobalStatsGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRouteGlobalStatsGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalStatsGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6GlobalStatsGetAsync(request As SLRouteGlobalStatsGetMsg, options As CallOptions) As AsyncUnaryCall(Of SLRouteGlobalStatsGetMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfRegOp(SLVrfRegMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(SLVrfRegMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfRegOp
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 526
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLVrfRegMsg.Oper = SL_REGOP_REGISTER:
        VRF registration: Sends a list of VRF registration messages
        and expects a list of registration responses.
        A client Must Register a VRF BEFORE routes can be added/modified in
       the associated VRF.

    SLVrfRegMsg.Oper = SL_REGOP_UNREGISTER:
        VRF Un-registration: Sends a list of VRF un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer interested
        in these VRFs. All previously installed routes would be removed.

    SLVrfRegMsg.Oper = SL_REGOP_EOF:
        VRF End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their Routes.

    The VRF registration operations can be used by the client to

    synchronize routes with the device. When the client re-registers the VRF

    with the server using SL_REGOP_REGISTER, server marks routes as stale.

    Client then must reprogram routes it is interested in.

    When client sends SL_REGOP_EOF, any routes not reprogrammed

    are removed from the device.


    The client must perform all operations (VRF registration, routes)

    from a single execution context.
  example: []
  syntax:
    content: public virtual SLVrfRegMsgRsp SLRoutev6VrfRegOp(SLVrfRegMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLVrfRegMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6VrfRegOp(request As SLVrfRegMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLVrfRegMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(SLVrfRegMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6VrfRegOp(SLVrfRegMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  id: SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfRegOp(SLVrfRegMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(SLVrfRegMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfRegOp
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 564
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLVrfRegMsg.Oper = SL_REGOP_REGISTER:
        VRF registration: Sends a list of VRF registration messages
        and expects a list of registration responses.
        A client Must Register a VRF BEFORE routes can be added/modified in
       the associated VRF.

    SLVrfRegMsg.Oper = SL_REGOP_UNREGISTER:
        VRF Un-registration: Sends a list of VRF un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer interested
        in these VRFs. All previously installed routes would be removed.

    SLVrfRegMsg.Oper = SL_REGOP_EOF:
        VRF End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their Routes.

    The VRF registration operations can be used by the client to

    synchronize routes with the device. When the client re-registers the VRF

    with the server using SL_REGOP_REGISTER, server marks routes as stale.

    Client then must reprogram routes it is interested in.

    When client sends SL_REGOP_EOF, any routes not reprogrammed

    are removed from the device.


    The client must perform all operations (VRF registration, routes)

    from a single execution context.
  example: []
  syntax:
    content: public virtual SLVrfRegMsgRsp SLRoutev6VrfRegOp(SLVrfRegMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLVrfRegMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6VrfRegOp(request As SLVrfRegMsg, options As CallOptions) As SLVrfRegMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfRegOpAsync(SLVrfRegMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(SLVrfRegMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfRegOpAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 604
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLVrfRegMsg.Oper = SL_REGOP_REGISTER:
        VRF registration: Sends a list of VRF registration messages
        and expects a list of registration responses.
        A client Must Register a VRF BEFORE routes can be added/modified in
       the associated VRF.

    SLVrfRegMsg.Oper = SL_REGOP_UNREGISTER:
        VRF Un-registration: Sends a list of VRF un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer interested
        in these VRFs. All previously installed routes would be removed.

    SLVrfRegMsg.Oper = SL_REGOP_EOF:
        VRF End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their Routes.

    The VRF registration operations can be used by the client to

    synchronize routes with the device. When the client re-registers the VRF

    with the server using SL_REGOP_REGISTER, server marks routes as stale.

    Client then must reprogram routes it is interested in.

    When client sends SL_REGOP_EOF, any routes not reprogrammed

    are removed from the device.


    The client must perform all operations (VRF registration, routes)

    from a single execution context.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVrfRegMsgRsp> SLRoutev6VrfRegOpAsync(SLVrfRegMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6VrfRegOpAsync(request As SLVrfRegMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLVrfRegMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(SLVrfRegMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6VrfRegOpAsync(SLVrfRegMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  id: SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfRegOpAsync(SLVrfRegMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(SLVrfRegMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfRegOpAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 642
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLVrfRegMsg.Oper = SL_REGOP_REGISTER:
        VRF registration: Sends a list of VRF registration messages
        and expects a list of registration responses.
        A client Must Register a VRF BEFORE routes can be added/modified in
       the associated VRF.

    SLVrfRegMsg.Oper = SL_REGOP_UNREGISTER:
        VRF Un-registration: Sends a list of VRF un-registration messages
        and expects a list of un-registration responses.
        This can be used to convey that the client is no longer interested
        in these VRFs. All previously installed routes would be removed.

    SLVrfRegMsg.Oper = SL_REGOP_EOF:
        VRF End Of File message.
        After Registration, the client is expected to send an EOF
        message to convey the end of replay of the client's known objects.
        This is especially useful under certain restart scenarios when the
        client and the server are trying to synchronize their Routes.

    The VRF registration operations can be used by the client to

    synchronize routes with the device. When the client re-registers the VRF

    with the server using SL_REGOP_REGISTER, server marks routes as stale.

    Client then must reprogram routes it is interested in.

    When client sends SL_REGOP_EOF, any routes not reprogrammed

    are removed from the device.


    The client must perform all operations (VRF registration, routes)

    from a single execution context.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVrfRegMsgRsp> SLRoutev6VrfRegOpAsync(SLVrfRegMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6VrfRegOpAsync(request As SLVrfRegMsg, options As CallOptions) As AsyncUnaryCall(Of SLVrfRegMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfRegGet(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfRegGet
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 655
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: VRF get. Used to retrieve VRF attributes from the server.
  example: []
  syntax:
    content: public virtual SLVrfRegGetMsgRsp SLRoutev6VrfRegGet(SLVrfRegGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLVrfRegGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6VrfRegGet(request As SLVrfRegGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLVrfRegGetMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6VrfRegGet(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfRegGet(SLVrfRegGetMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(SLVrfRegGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfRegGet
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 666
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: VRF get. Used to retrieve VRF attributes from the server.
  example: []
  syntax:
    content: public virtual SLVrfRegGetMsgRsp SLRoutev6VrfRegGet(SLVrfRegGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLVrfRegGetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6VrfRegGet(request As SLVrfRegGetMsg, options As CallOptions) As SLVrfRegGetMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfRegGetAsync(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfRegGetAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 679
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: VRF get. Used to retrieve VRF attributes from the server.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVrfRegGetMsgRsp> SLRoutev6VrfRegGetAsync(SLVrfRegGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6VrfRegGetAsync(request As SLVrfRegGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLVrfRegGetMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6VrfRegGetAsync(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfRegGetAsync(SLVrfRegGetMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(SLVrfRegGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfRegGetAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 690
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: VRF get. Used to retrieve VRF attributes from the server.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVrfRegGetMsgRsp> SLRoutev6VrfRegGetAsync(SLVrfRegGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegGetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6VrfRegGetAsync(request As SLVrfRegGetMsg, options As CallOptions) As AsyncUnaryCall(Of SLVrfRegGetMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfGetStats(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfGetStats
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 703
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve VRF Stats from the server.
  example: []
  syntax:
    content: public virtual SLVRFGetStatsMsgRsp SLRoutev6VrfGetStats(SLVrfRegGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLVRFGetStatsMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6VrfGetStats(request As SLVrfRegGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLVRFGetStatsMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6VrfGetStats(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfGetStats(SLVrfRegGetMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(SLVrfRegGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfGetStats
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 714
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve VRF Stats from the server.
  example: []
  syntax:
    content: public virtual SLVRFGetStatsMsgRsp SLRoutev6VrfGetStats(SLVrfRegGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLVRFGetStatsMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6VrfGetStats(request As SLVrfRegGetMsg, options As CallOptions) As SLVRFGetStatsMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfGetStatsAsync(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(SLVrfRegGetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfGetStatsAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 727
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve VRF Stats from the server.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVRFGetStatsMsgRsp> SLRoutev6VrfGetStatsAsync(SLVrfRegGetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVRFGetStatsMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6VrfGetStatsAsync(request As SLVrfRegGetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLVRFGetStatsMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6VrfGetStatsAsync(SLVrfRegGetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  id: SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6VrfGetStatsAsync(SLVrfRegGetMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(SLVrfRegGetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6VrfGetStatsAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 738
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Used to retrieve VRF Stats from the server.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLVRFGetStatsMsgRsp> SLRoutev6VrfGetStatsAsync(SLVrfRegGetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLVrfRegGetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVRFGetStatsMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6VrfGetStatsAsync(request As SLVrfRegGetMsg, options As CallOptions) As AsyncUnaryCall(Of SLVRFGetStatsMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(ServiceLayer.SLRoutev6Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(ServiceLayer.SLRoutev6Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6Op(ServiceLayer.SLRoutev6Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6Op(SLRoutev6Msg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(SLRoutev6Msg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(ServiceLayer.SLRoutev6Msg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6Op
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 761
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev6Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists and not stale.
        First ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev6Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev6Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual SLRoutev6MsgRsp SLRoutev6Op(SLRoutev6Msg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev6Msg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLRoutev6MsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6Op(request As SLRoutev6Msg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLRoutev6MsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(SLRoutev6Msg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(ServiceLayer.SLRoutev6Msg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6Op(SLRoutev6Msg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(ServiceLayer.SLRoutev6Msg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(ServiceLayer.SLRoutev6Msg,Grpc.Core.CallOptions)
  id: SLRoutev6Op(ServiceLayer.SLRoutev6Msg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6Op(SLRoutev6Msg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(SLRoutev6Msg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(ServiceLayer.SLRoutev6Msg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6Op
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 782
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev6Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists and not stale.
        First ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev6Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev6Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual SLRoutev6MsgRsp SLRoutev6Op(SLRoutev6Msg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev6Msg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLRoutev6MsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6Op(request As SLRoutev6Msg, options As CallOptions) As SLRoutev6MsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6OpAsync(SLRoutev6Msg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(SLRoutev6Msg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6OpAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 805
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev6Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists and not stale.
        First ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev6Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev6Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRoutev6MsgRsp> SLRoutev6OpAsync(SLRoutev6Msg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev6Msg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev6MsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6OpAsync(request As SLRoutev6Msg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLRoutev6MsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(SLRoutev6Msg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6OpAsync(SLRoutev6Msg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg,Grpc.Core.CallOptions)
  id: SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6OpAsync(SLRoutev6Msg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(SLRoutev6Msg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6OpAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 826
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev6Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists and not stale.
        First ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev6Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev6Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRoutev6MsgRsp> SLRoutev6OpAsync(SLRoutev6Msg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev6Msg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev6MsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6OpAsync(request As SLRoutev6Msg, options As CallOptions) As AsyncUnaryCall(Of SLRoutev6MsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6Get(SLRoutev6GetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(SLRoutev6GetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6Get
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 839
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual SLRoutev6GetMsgRsp SLRoutev6Get(SLRoutev6GetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev6GetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: ServiceLayer.SLRoutev6GetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6Get(request As SLRoutev6GetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As SLRoutev6GetMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(SLRoutev6GetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6Get(SLRoutev6GetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.CallOptions)
  id: SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6Get(SLRoutev6GetMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(SLRoutev6GetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6Get
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 850
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual SLRoutev6GetMsgRsp SLRoutev6Get(SLRoutev6GetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev6GetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: ServiceLayer.SLRoutev6GetMsgRsp
      description: The response received from the server.
    content.vb: Public Overridable Function SLRoutev6Get(request As SLRoutev6GetMsg, options As CallOptions) As SLRoutev6GetMsgRsp
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GetAsync(SLRoutev6GetMsg, Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(SLRoutev6GetMsg, Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg, Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GetAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 863
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRoutev6GetMsgRsp> SLRoutev6GetAsync(SLRoutev6GetMsg request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev6GetMsg
      description: The request to send to the server.
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev6GetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6GetAsync(request As SLRoutev6GetMsg, headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncUnaryCall(Of SLRoutev6GetMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(SLRoutev6GetMsg, Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg, Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6GetAsync(SLRoutev6GetMsg, Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.CallOptions)
  id: SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GetAsync(SLRoutev6GetMsg, CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(SLRoutev6GetMsg, CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg, Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GetAsync
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 874
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual AsyncUnaryCall<SLRoutev6GetMsgRsp> SLRoutev6GetAsync(SLRoutev6GetMsg request, CallOptions options)
    parameters:
    - id: request
      type: ServiceLayer.SLRoutev6GetMsg
      description: The request to send to the server.
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev6GetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6GetAsync(request As SLRoutev6GetMsg, options As CallOptions) As AsyncUnaryCall(Of SLRoutev6GetMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6OpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6OpStream(Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6OpStream
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 896
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev6Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists and not stale.
        First ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev6Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev6Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRoutev6Msg, SLRoutev6MsgRsp> SLRoutev6OpStream(Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev6Msg,ServiceLayer.SLRoutev6MsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6OpStream(headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncDuplexStreamingCall(Of SLRoutev6Msg, SLRoutev6MsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6OpStream(Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Grpc.Core.CallOptions)
  id: SLRoutev6OpStream(Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6OpStream(CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6OpStream
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 916
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    SLRoutev6Msg.Oper = SL_OBJOP_ADD:
        Route add. Fails if the route already exists and not stale.
        First ADD operation on a stale route is allowed and the route
        is no longer considered stale.

    SLRoutev6Msg.Oper = SL_OBJOP_UPDATE:
        Route update. Creates or updates the route.

    SLRoutev6Msg.Oper = SL_OBJOP_DELETE:
        Route delete. The route path is not necessary to delete the route.
        Delete of a non-existant route is returned as success.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRoutev6Msg, SLRoutev6MsgRsp> SLRoutev6OpStream(CallOptions options)
    parameters:
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev6Msg,ServiceLayer.SLRoutev6MsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6OpStream(options As CallOptions) As AsyncDuplexStreamingCall(Of SLRoutev6Msg, SLRoutev6MsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6GetStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GetStream(Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GetStream
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 928
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRoutev6GetMsg, SLRoutev6GetMsgRsp> SLRoutev6GetStream(Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev6GetMsg,ServiceLayer.SLRoutev6GetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6GetStream(headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncDuplexStreamingCall(Of SLRoutev6GetMsg, SLRoutev6GetMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6GetStream(Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Grpc.Core.CallOptions)
  id: SLRoutev6GetStream(Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GetStream(CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GetStream
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 938
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Retrieves route attributes.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRoutev6GetMsg, SLRoutev6GetMsgRsp> SLRoutev6GetStream(CallOptions options)
    parameters:
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev6GetMsg,ServiceLayer.SLRoutev6GetMsgRsp}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6GetStream(options As CallOptions) As AsyncDuplexStreamingCall(Of SLRoutev6GetMsg, SLRoutev6GetMsgRsp)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: SLRoutev6GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GetNotifStream(Metadata, DateTime?, CancellationToken)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Metadata, DateTime?, CancellationToken)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Grpc.Core.Metadata, System.DateTime?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GetNotifStream
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 959
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    This call is used to get a stream of route notifications.

    It can be used to get "push" notifications for route

    adds/updates/deletes.

    The caller must maintain the GRPC channel as long as there is

    interest in route notifications.


    The call takes a stream of per-VRF notification requests.

    The success/failure of the notification request is relayed in the

    SLRouteNotifStatus followed by a Start marker, any routes if present,

    and an End Marker.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRouteGetNotifMsg, SLRoutev6Notif> SLRoutev6GetNotifStream(Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default)
    parameters:
    - id: headers
      type: Grpc.Core.Metadata
      description: The initial metadata to send with the call. This parameter is optional.
    - id: deadline
      type: System.Nullable{System.DateTime}
      description: An optional deadline for the call. The call will be cancelled if deadline is hit.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: An optional token for canceling the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRouteGetNotifMsg,ServiceLayer.SLRoutev6Notif}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6GetNotifStream(headers As Metadata = Nothing, deadline As Date? = Nothing, cancellationToken As CancellationToken = Nothing) As AsyncDuplexStreamingCall(Of SLRouteGetNotifMsg, SLRoutev6Notif)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream*
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Metadata, Date?, CancellationToken)
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Grpc.Core.Metadata, Date?, System.Threading.CancellationToken)
  name.vb: SLRoutev6GetNotifStream(Metadata, Date?, CancellationToken)
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Grpc.Core.CallOptions)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Grpc.Core.CallOptions)
  id: SLRoutev6GetNotifStream(Grpc.Core.CallOptions)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: SLRoutev6GetNotifStream(CallOptions)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(CallOptions)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Grpc.Core.CallOptions)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: SLRoutev6GetNotifStream
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 978
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: >-
    This call is used to get a stream of route notifications.

    It can be used to get "push" notifications for route

    adds/updates/deletes.

    The caller must maintain the GRPC channel as long as there is

    interest in route notifications.


    The call takes a stream of per-VRF notification requests.

    The success/failure of the notification request is relayed in the

    SLRouteNotifStatus followed by a Start marker, any routes if present,

    and an End Marker.
  example: []
  syntax:
    content: public virtual AsyncDuplexStreamingCall<SLRouteGetNotifMsg, SLRoutev6Notif> SLRoutev6GetNotifStream(CallOptions options)
    parameters:
    - id: options
      type: Grpc.Core.CallOptions
      description: The options for the call.
    return:
      type: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRouteGetNotifMsg,ServiceLayer.SLRoutev6Notif}
      description: The call object.
    content.vb: Public Overridable Function SLRoutev6GetNotifStream(options As CallOptions) As AsyncDuplexStreamingCall(Of SLRouteGetNotifMsg, SLRoutev6Notif)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream*
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  id: NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  langs:
  - csharp
  - vb
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  type: Method
  source:
    remote:
      path: grpc/dotnet/src/gencs/SlRouteIpv6Grpc.cs
      branch: dotnet.master.yasser
      repo: git@wwwin-github.cisco.com:ios-xr/service-layer-objmodel.git
    id: NewInstance
    path: src/gencs/SlRouteIpv6Grpc.cs
    startLine: 984
  assemblies:
  - ServiceLayer
  namespace: ServiceLayer
  summary: Creates a new instance of client from given <code>ClientBaseConfiguration</code>.
  example: []
  syntax:
    content: protected override SLRoutev6Oper.SLRoutev6OperClient NewInstance(ClientBase.ClientBaseConfiguration configuration)
    parameters:
    - id: configuration
      type: Grpc.Core.ClientBase.ClientBaseConfiguration
    return:
      type: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
    content.vb: Protected Overrides Function NewInstance(configuration As ClientBase.ClientBaseConfiguration) As SLRoutev6Oper.SLRoutev6OperClient
  overridden: Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  overload: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.NewInstance*
references:
- uid: ServiceLayer
  commentId: N:ServiceLayer
  href: ServiceLayer.html
  name: ServiceLayer
  nameWithType: ServiceLayer
  fullName: ServiceLayer
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Grpc.Core.ClientBase
  commentId: T:Grpc.Core.ClientBase
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase
  nameWithType: ClientBase
  fullName: Grpc.Core.ClientBase
- uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}
  commentId: T:Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}
  parent: Grpc.Core
  definition: Grpc.Core.ClientBase`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase<SLRoutev6Oper.SLRoutev6OperClient>
  nameWithType: ClientBase<SLRoutev6Oper.SLRoutev6OperClient>
  fullName: Grpc.Core.ClientBase<ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient>
  nameWithType.vb: ClientBase(Of SLRoutev6Oper.SLRoutev6OperClient)
  fullName.vb: Grpc.Core.ClientBase(Of ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient)
  name.vb: ClientBase(Of SLRoutev6Oper.SLRoutev6OperClient)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: <
  - uid: ServiceLayer.SLRoutev6Oper
    name: SLRoutev6Oper
    href: ServiceLayer.SLRoutev6Oper.html
  - name: .
  - uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
    name: SLRoutev6OperClient
    href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutev6Oper
    name: SLRoutev6Oper
    href: ServiceLayer.SLRoutev6Oper.html
  - name: .
  - uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
    name: SLRoutev6OperClient
    href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html
  - name: )
- uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}.WithHost(System.String)
  parent: Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}
  definition: Grpc.Core.ClientBase`1.WithHost(System.String)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: WithHost(string)
  nameWithType: ClientBase<SLRoutev6Oper.SLRoutev6OperClient>.WithHost(string)
  fullName: Grpc.Core.ClientBase<ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient>.WithHost(string)
  nameWithType.vb: ClientBase(Of SLRoutev6Oper.SLRoutev6OperClient).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient).WithHost(String)
  name.vb: WithHost(String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}.WithHost(System.String)
    name: WithHost
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}.WithHost(System.String)
    name: WithHost
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Grpc.Core.ClientBase.CallInvoker
  commentId: P:Grpc.Core.ClientBase.CallInvoker
  parent: Grpc.Core.ClientBase
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: CallInvoker
  nameWithType: ClientBase.CallInvoker
  fullName: Grpc.Core.ClientBase.CallInvoker
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Grpc.Core
  commentId: N:Grpc.Core
  isExternal: true
  name: Grpc.Core
  nameWithType: Grpc.Core
  fullName: Grpc.Core
  spec.csharp:
  - uid: Grpc
    name: Grpc
    isExternal: true
  - name: .
  - uid: Grpc.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Grpc
    name: Grpc
    isExternal: true
  - name: .
  - uid: Grpc.Core
    name: Core
    isExternal: true
- uid: Grpc.Core.ClientBase`1
  commentId: T:Grpc.Core.ClientBase`1
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase<T>
  nameWithType: ClientBase<T>
  fullName: Grpc.Core.ClientBase<T>
  nameWithType.vb: ClientBase(Of T)
  fullName.vb: Grpc.Core.ClientBase(Of T)
  name.vb: ClientBase(Of T)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.ClientBase`1
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Grpc.Core.ClientBase`1.WithHost(System.String)
  commentId: M:Grpc.Core.ClientBase`1.WithHost(System.String)
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: WithHost(string)
  nameWithType: ClientBase<T>.WithHost(string)
  fullName: Grpc.Core.ClientBase<T>.WithHost(string)
  nameWithType.vb: ClientBase(Of T).WithHost(String)
  fullName.vb: Grpc.Core.ClientBase(Of T).WithHost(String)
  name.vb: WithHost(String)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.WithHost(System.String)
    name: WithHost
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.#ctor(Grpc.Core.ChannelBase)
  name: SLRoutev6OperClient
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OperClient
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OperClient
  nameWithType.vb: SLRoutev6Oper.SLRoutev6OperClient.New
  fullName.vb: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.New
  name.vb: New
- uid: Grpc.Core.ChannelBase
  commentId: T:Grpc.Core.ChannelBase
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ChannelBase.cs
  name: ChannelBase
  nameWithType: ChannelBase
  fullName: Grpc.Core.ChannelBase
- uid: Grpc.Core.CallInvoker
  commentId: T:Grpc.Core.CallInvoker
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/CallInvoker.cs
  name: CallInvoker
  nameWithType: CallInvoker
  fullName: Grpc.Core.CallInvoker
- uid: Grpc.Core.ClientBase.ClientBaseConfiguration
  commentId: T:Grpc.Core.ClientBase.ClientBaseConfiguration
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: ClientBase.ClientBaseConfiguration
  nameWithType: ClientBase.ClientBaseConfiguration
  fullName: Grpc.Core.ClientBase.ClientBaseConfiguration
  spec.csharp:
  - uid: Grpc.Core.ClientBase
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: .
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  spec.vb:
  - uid: Grpc.Core.ClientBase
    name: ClientBase
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: .
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6GlobalsGet
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGet
- uid: ServiceLayer.SLRouteGlobalsGetMsg
  commentId: T:ServiceLayer.SLRouteGlobalsGetMsg
  parent: ServiceLayer
  href: ServiceLayer.SLRouteGlobalsGetMsg.html
  name: SLRouteGlobalsGetMsg
  nameWithType: SLRouteGlobalsGetMsg
  fullName: ServiceLayer.SLRouteGlobalsGetMsg
- uid: Grpc.Core.Metadata
  commentId: T:Grpc.Core.Metadata
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/Metadata.cs
  name: Metadata
  nameWithType: Metadata
  fullName: Grpc.Core.Metadata
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: ServiceLayer.SLRouteGlobalsGetMsgRsp
  commentId: T:ServiceLayer.SLRouteGlobalsGetMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLRouteGlobalsGetMsgRsp.html
  name: SLRouteGlobalsGetMsgRsp
  nameWithType: SLRouteGlobalsGetMsgRsp
  fullName: ServiceLayer.SLRouteGlobalsGetMsgRsp
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: Grpc.Core.CallOptions
  commentId: T:Grpc.Core.CallOptions
  parent: Grpc.Core
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/CallOptions.cs
  name: CallOptions
  nameWithType: CallOptions
  fullName: Grpc.Core.CallOptions
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync(ServiceLayer.SLRouteGlobalsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6GlobalsGetAsync
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalsGetAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalsGetMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalsGetMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLRouteGlobalsGetMsgRsp>
  nameWithType: AsyncUnaryCall<SLRouteGlobalsGetMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLRouteGlobalsGetMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLRouteGlobalsGetMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLRouteGlobalsGetMsgRsp)
  name.vb: AsyncUnaryCall(Of SLRouteGlobalsGetMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLRouteGlobalsGetMsgRsp
    name: SLRouteGlobalsGetMsgRsp
    href: ServiceLayer.SLRouteGlobalsGetMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRouteGlobalsGetMsgRsp
    name: SLRouteGlobalsGetMsgRsp
    href: ServiceLayer.SLRouteGlobalsGetMsgRsp.html
  - name: )
- uid: Grpc.Core.AsyncUnaryCall`1
  commentId: T:Grpc.Core.AsyncUnaryCall`1
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<TResponse>
  nameWithType: AsyncUnaryCall<TResponse>
  fullName: Grpc.Core.AsyncUnaryCall<TResponse>
  nameWithType.vb: AsyncUnaryCall(Of TResponse)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of TResponse)
  name.vb: AsyncUnaryCall(Of TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6GlobalStatsGet
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGet
- uid: ServiceLayer.SLRouteGlobalStatsGetMsg
  commentId: T:ServiceLayer.SLRouteGlobalStatsGetMsg
  parent: ServiceLayer
  href: ServiceLayer.SLRouteGlobalStatsGetMsg.html
  name: SLRouteGlobalStatsGetMsg
  nameWithType: SLRouteGlobalStatsGetMsg
  fullName: ServiceLayer.SLRouteGlobalStatsGetMsg
- uid: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
  commentId: T:ServiceLayer.SLRouteGlobalStatsGetMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLRouteGlobalStatsGetMsgRsp.html
  name: SLRouteGlobalStatsGetMsgRsp
  nameWithType: SLRouteGlobalStatsGetMsgRsp
  fullName: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync(ServiceLayer.SLRouteGlobalStatsGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6GlobalStatsGetAsync
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GlobalStatsGetAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalStatsGetMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRouteGlobalStatsGetMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLRouteGlobalStatsGetMsgRsp>
  nameWithType: AsyncUnaryCall<SLRouteGlobalStatsGetMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLRouteGlobalStatsGetMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLRouteGlobalStatsGetMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLRouteGlobalStatsGetMsgRsp)
  name.vb: AsyncUnaryCall(Of SLRouteGlobalStatsGetMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
    name: SLRouteGlobalStatsGetMsgRsp
    href: ServiceLayer.SLRouteGlobalStatsGetMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRouteGlobalStatsGetMsgRsp
    name: SLRouteGlobalStatsGetMsgRsp
    href: ServiceLayer.SLRouteGlobalStatsGetMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6VrfRegOp
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOp
- uid: ServiceLayer.SLVrfRegMsg
  commentId: T:ServiceLayer.SLVrfRegMsg
  parent: ServiceLayer
  href: ServiceLayer.SLVrfRegMsg.html
  name: SLVrfRegMsg
  nameWithType: SLVrfRegMsg
  fullName: ServiceLayer.SLVrfRegMsg
- uid: ServiceLayer.SLVrfRegMsgRsp
  commentId: T:ServiceLayer.SLVrfRegMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLVrfRegMsgRsp.html
  name: SLVrfRegMsgRsp
  nameWithType: SLVrfRegMsgRsp
  fullName: ServiceLayer.SLVrfRegMsgRsp
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync(ServiceLayer.SLVrfRegMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6VrfRegOpAsync
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegOpAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLVrfRegMsgRsp>
  nameWithType: AsyncUnaryCall<SLVrfRegMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLVrfRegMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLVrfRegMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLVrfRegMsgRsp)
  name.vb: AsyncUnaryCall(Of SLVrfRegMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLVrfRegMsgRsp
    name: SLVrfRegMsgRsp
    href: ServiceLayer.SLVrfRegMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLVrfRegMsgRsp
    name: SLVrfRegMsgRsp
    href: ServiceLayer.SLVrfRegMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6VrfRegGet
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGet
- uid: ServiceLayer.SLVrfRegGetMsg
  commentId: T:ServiceLayer.SLVrfRegGetMsg
  parent: ServiceLayer
  href: ServiceLayer.SLVrfRegGetMsg.html
  name: SLVrfRegGetMsg
  nameWithType: SLVrfRegGetMsg
  fullName: ServiceLayer.SLVrfRegGetMsg
- uid: ServiceLayer.SLVrfRegGetMsgRsp
  commentId: T:ServiceLayer.SLVrfRegGetMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLVrfRegGetMsgRsp.html
  name: SLVrfRegGetMsgRsp
  nameWithType: SLVrfRegGetMsgRsp
  fullName: ServiceLayer.SLVrfRegGetMsgRsp
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6VrfRegGetAsync
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfRegGetAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegGetMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVrfRegGetMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLVrfRegGetMsgRsp>
  nameWithType: AsyncUnaryCall<SLVrfRegGetMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLVrfRegGetMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLVrfRegGetMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLVrfRegGetMsgRsp)
  name.vb: AsyncUnaryCall(Of SLVrfRegGetMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLVrfRegGetMsgRsp
    name: SLVrfRegGetMsgRsp
    href: ServiceLayer.SLVrfRegGetMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLVrfRegGetMsgRsp
    name: SLVrfRegGetMsgRsp
    href: ServiceLayer.SLVrfRegGetMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6VrfGetStats
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStats
- uid: ServiceLayer.SLVRFGetStatsMsgRsp
  commentId: T:ServiceLayer.SLVRFGetStatsMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLVRFGetStatsMsgRsp.html
  name: SLVRFGetStatsMsgRsp
  nameWithType: SLVRFGetStatsMsgRsp
  fullName: ServiceLayer.SLVRFGetStatsMsgRsp
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync(ServiceLayer.SLVrfRegGetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6VrfGetStatsAsync
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6VrfGetStatsAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVRFGetStatsMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLVRFGetStatsMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLVRFGetStatsMsgRsp>
  nameWithType: AsyncUnaryCall<SLVRFGetStatsMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLVRFGetStatsMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLVRFGetStatsMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLVRFGetStatsMsgRsp)
  name.vb: AsyncUnaryCall(Of SLVRFGetStatsMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLVRFGetStatsMsgRsp
    name: SLVRFGetStatsMsgRsp
    href: ServiceLayer.SLVRFGetStatsMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLVRFGetStatsMsgRsp
    name: SLVRFGetStatsMsgRsp
    href: ServiceLayer.SLVRFGetStatsMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op(ServiceLayer.SLRoutev6Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6Op
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Op
- uid: ServiceLayer.SLRoutev6Msg
  commentId: T:ServiceLayer.SLRoutev6Msg
  parent: ServiceLayer
  href: ServiceLayer.SLRoutev6Msg.html
  name: SLRoutev6Msg
  nameWithType: SLRoutev6Msg
  fullName: ServiceLayer.SLRoutev6Msg
- uid: ServiceLayer.SLRoutev6MsgRsp
  commentId: T:ServiceLayer.SLRoutev6MsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLRoutev6MsgRsp.html
  name: SLRoutev6MsgRsp
  nameWithType: SLRoutev6MsgRsp
  fullName: ServiceLayer.SLRoutev6MsgRsp
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync(ServiceLayer.SLRoutev6Msg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6OpAsync
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev6MsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev6MsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLRoutev6MsgRsp>
  nameWithType: AsyncUnaryCall<SLRoutev6MsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLRoutev6MsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLRoutev6MsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLRoutev6MsgRsp)
  name.vb: AsyncUnaryCall(Of SLRoutev6MsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLRoutev6MsgRsp
    name: SLRoutev6MsgRsp
    href: ServiceLayer.SLRoutev6MsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutev6MsgRsp
    name: SLRoutev6MsgRsp
    href: ServiceLayer.SLRoutev6MsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6Get
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6Get
- uid: ServiceLayer.SLRoutev6GetMsg
  commentId: T:ServiceLayer.SLRoutev6GetMsg
  parent: ServiceLayer
  href: ServiceLayer.SLRoutev6GetMsg.html
  name: SLRoutev6GetMsg
  nameWithType: SLRoutev6GetMsg
  fullName: ServiceLayer.SLRoutev6GetMsg
- uid: ServiceLayer.SLRoutev6GetMsgRsp
  commentId: T:ServiceLayer.SLRoutev6GetMsgRsp
  parent: ServiceLayer
  href: ServiceLayer.SLRoutev6GetMsgRsp.html
  name: SLRoutev6GetMsgRsp
  nameWithType: SLRoutev6GetMsgRsp
  fullName: ServiceLayer.SLRoutev6GetMsgRsp
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync(ServiceLayer.SLRoutev6GetMsg,Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6GetAsync
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetAsync
- uid: Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev6GetMsgRsp}
  commentId: T:Grpc.Core.AsyncUnaryCall{ServiceLayer.SLRoutev6GetMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncUnaryCall`1
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  name: AsyncUnaryCall<SLRoutev6GetMsgRsp>
  nameWithType: AsyncUnaryCall<SLRoutev6GetMsgRsp>
  fullName: Grpc.Core.AsyncUnaryCall<ServiceLayer.SLRoutev6GetMsgRsp>
  nameWithType.vb: AsyncUnaryCall(Of SLRoutev6GetMsgRsp)
  fullName.vb: Grpc.Core.AsyncUnaryCall(Of ServiceLayer.SLRoutev6GetMsgRsp)
  name.vb: AsyncUnaryCall(Of SLRoutev6GetMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: <
  - uid: ServiceLayer.SLRoutev6GetMsgRsp
    name: SLRoutev6GetMsgRsp
    href: ServiceLayer.SLRoutev6GetMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncUnaryCall`1
    name: AsyncUnaryCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncUnaryCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutev6GetMsgRsp
    name: SLRoutev6GetMsgRsp
    href: ServiceLayer.SLRoutev6GetMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6OpStream
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6OpStream
- uid: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev6Msg,ServiceLayer.SLRoutev6MsgRsp}
  commentId: T:Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev6Msg,ServiceLayer.SLRoutev6MsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncDuplexStreamingCall`2
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  name: AsyncDuplexStreamingCall<SLRoutev6Msg, SLRoutev6MsgRsp>
  nameWithType: AsyncDuplexStreamingCall<SLRoutev6Msg, SLRoutev6MsgRsp>
  fullName: Grpc.Core.AsyncDuplexStreamingCall<ServiceLayer.SLRoutev6Msg, ServiceLayer.SLRoutev6MsgRsp>
  nameWithType.vb: AsyncDuplexStreamingCall(Of SLRoutev6Msg, SLRoutev6MsgRsp)
  fullName.vb: Grpc.Core.AsyncDuplexStreamingCall(Of ServiceLayer.SLRoutev6Msg, ServiceLayer.SLRoutev6MsgRsp)
  name.vb: AsyncDuplexStreamingCall(Of SLRoutev6Msg, SLRoutev6MsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: <
  - uid: ServiceLayer.SLRoutev6Msg
    name: SLRoutev6Msg
    href: ServiceLayer.SLRoutev6Msg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev6MsgRsp
    name: SLRoutev6MsgRsp
    href: ServiceLayer.SLRoutev6MsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutev6Msg
    name: SLRoutev6Msg
    href: ServiceLayer.SLRoutev6Msg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev6MsgRsp
    name: SLRoutev6MsgRsp
    href: ServiceLayer.SLRoutev6MsgRsp.html
  - name: )
- uid: Grpc.Core.AsyncDuplexStreamingCall`2
  commentId: T:Grpc.Core.AsyncDuplexStreamingCall`2
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  name: AsyncDuplexStreamingCall<TRequest, TResponse>
  nameWithType: AsyncDuplexStreamingCall<TRequest, TResponse>
  fullName: Grpc.Core.AsyncDuplexStreamingCall<TRequest, TResponse>
  nameWithType.vb: AsyncDuplexStreamingCall(Of TRequest, TResponse)
  fullName.vb: Grpc.Core.AsyncDuplexStreamingCall(Of TRequest, TResponse)
  name.vb: AsyncDuplexStreamingCall(Of TRequest, TResponse)
  spec.csharp:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: <
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - name: TRequest
  - name: ','
  - name: " "
  - name: TResponse
  - name: )
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6GetStream
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetStream
- uid: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev6GetMsg,ServiceLayer.SLRoutev6GetMsgRsp}
  commentId: T:Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRoutev6GetMsg,ServiceLayer.SLRoutev6GetMsgRsp}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncDuplexStreamingCall`2
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  name: AsyncDuplexStreamingCall<SLRoutev6GetMsg, SLRoutev6GetMsgRsp>
  nameWithType: AsyncDuplexStreamingCall<SLRoutev6GetMsg, SLRoutev6GetMsgRsp>
  fullName: Grpc.Core.AsyncDuplexStreamingCall<ServiceLayer.SLRoutev6GetMsg, ServiceLayer.SLRoutev6GetMsgRsp>
  nameWithType.vb: AsyncDuplexStreamingCall(Of SLRoutev6GetMsg, SLRoutev6GetMsgRsp)
  fullName.vb: Grpc.Core.AsyncDuplexStreamingCall(Of ServiceLayer.SLRoutev6GetMsg, ServiceLayer.SLRoutev6GetMsgRsp)
  name.vb: AsyncDuplexStreamingCall(Of SLRoutev6GetMsg, SLRoutev6GetMsgRsp)
  spec.csharp:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: <
  - uid: ServiceLayer.SLRoutev6GetMsg
    name: SLRoutev6GetMsg
    href: ServiceLayer.SLRoutev6GetMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev6GetMsgRsp
    name: SLRoutev6GetMsgRsp
    href: ServiceLayer.SLRoutev6GetMsgRsp.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRoutev6GetMsg
    name: SLRoutev6GetMsg
    href: ServiceLayer.SLRoutev6GetMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev6GetMsgRsp
    name: SLRoutev6GetMsgRsp
    href: ServiceLayer.SLRoutev6GetMsgRsp.html
  - name: )
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream(Grpc.Core.Metadata,System.Nullable{System.DateTime},System.Threading.CancellationToken)
  name: SLRoutev6GetNotifStream
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.SLRoutev6GetNotifStream
- uid: Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRouteGetNotifMsg,ServiceLayer.SLRoutev6Notif}
  commentId: T:Grpc.Core.AsyncDuplexStreamingCall{ServiceLayer.SLRouteGetNotifMsg,ServiceLayer.SLRoutev6Notif}
  parent: Grpc.Core
  definition: Grpc.Core.AsyncDuplexStreamingCall`2
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  name: AsyncDuplexStreamingCall<SLRouteGetNotifMsg, SLRoutev6Notif>
  nameWithType: AsyncDuplexStreamingCall<SLRouteGetNotifMsg, SLRoutev6Notif>
  fullName: Grpc.Core.AsyncDuplexStreamingCall<ServiceLayer.SLRouteGetNotifMsg, ServiceLayer.SLRoutev6Notif>
  nameWithType.vb: AsyncDuplexStreamingCall(Of SLRouteGetNotifMsg, SLRoutev6Notif)
  fullName.vb: Grpc.Core.AsyncDuplexStreamingCall(Of ServiceLayer.SLRouteGetNotifMsg, ServiceLayer.SLRoutev6Notif)
  name.vb: AsyncDuplexStreamingCall(Of SLRouteGetNotifMsg, SLRoutev6Notif)
  spec.csharp:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: <
  - uid: ServiceLayer.SLRouteGetNotifMsg
    name: SLRouteGetNotifMsg
    href: ServiceLayer.SLRouteGetNotifMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev6Notif
    name: SLRoutev6Notif
    href: ServiceLayer.SLRoutev6Notif.html
  - name: '>'
  spec.vb:
  - uid: Grpc.Core.AsyncDuplexStreamingCall`2
    name: AsyncDuplexStreamingCall
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/AsyncDuplexStreamingCall.cs
  - name: (
  - name: Of
  - name: " "
  - uid: ServiceLayer.SLRouteGetNotifMsg
    name: SLRouteGetNotifMsg
    href: ServiceLayer.SLRouteGetNotifMsg.html
  - name: ','
  - name: " "
  - uid: ServiceLayer.SLRoutev6Notif
    name: SLRoutev6Notif
    href: ServiceLayer.SLRoutev6Notif.html
  - name: )
- uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  parent: Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}
  definition: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: ClientBase<SLRoutev6Oper.SLRoutev6OperClient>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of SLRoutev6Oper.SLRoutev6OperClient).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase{ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient}.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.NewInstance*
  commentId: Overload:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.NewInstance
  href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html#ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  name: NewInstance
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient.NewInstance
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.NewInstance
- uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  commentId: T:ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  parent: ServiceLayer
  href: ServiceLayer.SLRoutev6Oper.html
  name: SLRoutev6Oper.SLRoutev6OperClient
  nameWithType: SLRoutev6Oper.SLRoutev6OperClient
  fullName: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
  spec.csharp:
  - uid: ServiceLayer.SLRoutev6Oper
    name: SLRoutev6Oper
    href: ServiceLayer.SLRoutev6Oper.html
  - name: .
  - uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
    name: SLRoutev6OperClient
    href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html
  spec.vb:
  - uid: ServiceLayer.SLRoutev6Oper
    name: SLRoutev6Oper
    href: ServiceLayer.SLRoutev6Oper.html
  - name: .
  - uid: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient
    name: SLRoutev6OperClient
    href: ServiceLayer.SLRoutev6Oper.SLRoutev6OperClient.html
- uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  commentId: M:Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  isExternal: true
  href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  name: NewInstance(ClientBaseConfiguration)
  nameWithType: ClientBase<T>.NewInstance(ClientBase.ClientBaseConfiguration)
  fullName: Grpc.Core.ClientBase<T>.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  nameWithType.vb: ClientBase(Of T).NewInstance(ClientBase.ClientBaseConfiguration)
  fullName.vb: Grpc.Core.ClientBase(Of T).NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
  spec.csharp:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
  spec.vb:
  - uid: Grpc.Core.ClientBase`1.NewInstance(Grpc.Core.ClientBase.ClientBaseConfiguration)
    name: NewInstance
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: (
  - uid: Grpc.Core.ClientBase.ClientBaseConfiguration
    name: ClientBaseConfiguration
    isExternal: true
    href: https://github.com/grpc/grpc/blob/cdc97245c7977e85bb0234941f5c6cd9cb7accdf/src/csharp/Grpc.Core.Api/ClientBase.cs
  - name: )
