// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: sl_global.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ServiceLayer {

  /// <summary>Holder for reflection information generated from sl_global.proto</summary>
  public static partial class SlGlobalReflection {

    #region Descriptor
    /// <summary>File descriptor for sl_global.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SlGlobalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9zbF9nbG9iYWwucHJvdG8SDXNlcnZpY2VfbGF5ZXIaFXNsX2NvbW1vbl90",
            "eXBlcy5wcm90byI/CglTTEluaXRNc2cSEAoITWFqb3JWZXIYASABKA0SEAoI",
            "TWlub3JWZXIYAiABKA0SDgoGU3ViVmVyGAMgASgNIkIKDFNMSW5pdE1zZ1Jz",
            "cBIQCghNYWpvclZlchgBIAEoDRIQCghNaW5vclZlchgCIAEoDRIOCgZTdWJW",
            "ZXIYAyABKA0iLQoaU0xWcmZSb3V0ZVJlcGxheUVycm9yTm90aWYSDwoHVnJm",
            "TmFtZRgBIAEoCSL/AQoNU0xHbG9iYWxOb3RpZhIzCglFdmVudFR5cGUYASAB",
            "KA4yIC5zZXJ2aWNlX2xheWVyLlNMR2xvYmFsTm90aWZUeXBlEi8KCUVyclN0",
            "YXR1cxgCIAEoCzIcLnNlcnZpY2VfbGF5ZXIuU0xFcnJvclN0YXR1cxIxCgpJ",
            "bml0UnNwTXNnGAMgASgLMhsuc2VydmljZV9sYXllci5TTEluaXRNc2dSc3BI",
            "ABJMChNWcmZSZXBsYXlFcnJvck5vdGlmGAQgASgLMikuc2VydmljZV9sYXll",
            "ci5TTFZyZlJvdXRlUmVwbGF5RXJyb3JOb3RpZkICGAFIAEIHCgVFdmVudCIR",
            "Cg9TTEdsb2JhbHNHZXRNc2cihQUKElNMR2xvYmFsc0dldE1zZ1JzcBIvCglF",
            "cnJTdGF0dXMYASABKAsyHC5zZXJ2aWNlX2xheWVyLlNMRXJyb3JTdGF0dXMS",
            "GAoQTWF4VnJmTmFtZUxlbmd0aBgCIAEoDRIeChZNYXhJbnRlcmZhY2VOYW1l",
            "TGVuZ3RoGAMgASgNEhgKEE1heFBhdGhzUGVyRW50cnkYBCABKA0SHgoWTWF4",
            "UHJpbWFyeVBhdGhQZXJFbnRyeRgFIAEoDRIdChVNYXhCYWNrdXBQYXRoUGVy",
            "RW50cnkYBiABKA0SHAoUTWF4TXBsc0xhYmVsc1BlclBhdGgYByABKA0SGwoT",
            "TWluUHJpbWFyeVBhdGhJZE51bRgIIAEoDRIbChNNYXhQcmltYXJ5UGF0aElk",
            "TnVtGAkgASgNEhoKEk1pbkJhY2t1cFBhdGhJZE51bRgKIAEoDRIaChJNYXhC",
            "YWNrdXBQYXRoSWROdW0YCyABKA0SGwoTTWF4UmVtb3RlQWRkcmVzc051bRgM",
            "IAEoDRIZChFNYXhMMkJkTmFtZUxlbmd0aBgNIAEoDRIfChdNYXhMMlBtc2lU",
            "dW5uZWxJZExlbmd0aBgOIAEoDRIlCh1NYXhMYWJlbEJsb2NrQ2xpZW50TmFt",
            "ZUxlbmd0aBgPIAEoDRIeChZNYXhQYXRoc0luTmV4dGhvcE5vdGlmGBAgASgN",
            "EhcKD01heFZyZlJlZ1Blck1zZxgRIAEoDRIWCg5NYXhBRk9wc1Blck1zZxgS",
            "IAEoDRIiChpNYXhOb3RpZlJlcVBlclNMQUZOb3RpZlJlcRgTIAEoDRImCh5N",
            "YXhNYXRjaEZpbHRlckluQmdwbHNUb3BvTm90aWYYFCABKA0qnAEKEVNMR2xv",
            "YmFsTm90aWZUeXBlEiEKHVNMX0dMT0JBTF9FVkVOVF9UWVBFX1JFU0VSVkVE",
            "EAASHgoaU0xfR0xPQkFMX0VWRU5UX1RZUEVfRVJST1IQARIiCh5TTF9HTE9C",
            "QUxfRVZFTlRfVFlQRV9IRUFSVEJFQVQQAhIgChxTTF9HTE9CQUxfRVZFTlRf",
            "VFlQRV9WRVJTSU9OEAMyrAEKCFNMR2xvYmFsEk0KEVNMR2xvYmFsSW5pdE5v",
            "dGlmEhguc2VydmljZV9sYXllci5TTEluaXRNc2caHC5zZXJ2aWNlX2xheWVy",
            "LlNMR2xvYmFsTm90aWYwARJRCgxTTEdsb2JhbHNHZXQSHi5zZXJ2aWNlX2xh",
            "eWVyLlNMR2xvYmFsc0dldE1zZxohLnNlcnZpY2VfbGF5ZXIuU0xHbG9iYWxz",
            "R2V0TXNnUnNwQlFaT2dpdGh1Yi5jb20vQ2lzY28tc2VydmljZS1sYXllci9z",
            "ZXJ2aWNlLWxheWVyLW9iam1vZGVsL2dycGMvcHJvdG9zO3NlcnZpY2VfbGF5",
            "ZXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ServiceLayer.SlCommonTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ServiceLayer.SLGlobalNotifType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLInitMsg), global::ServiceLayer.SLInitMsg.Parser, new[]{ "MajorVer", "MinorVer", "SubVer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLInitMsgRsp), global::ServiceLayer.SLInitMsgRsp.Parser, new[]{ "MajorVer", "MinorVer", "SubVer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLVrfRouteReplayErrorNotif), global::ServiceLayer.SLVrfRouteReplayErrorNotif.Parser, new[]{ "VrfName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLGlobalNotif), global::ServiceLayer.SLGlobalNotif.Parser, new[]{ "EventType", "ErrStatus", "InitRspMsg", "VrfReplayErrorNotif" }, new[]{ "Event" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLGlobalsGetMsg), global::ServiceLayer.SLGlobalsGetMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLGlobalsGetMsgRsp), global::ServiceLayer.SLGlobalsGetMsgRsp.Parser, new[]{ "ErrStatus", "MaxVrfNameLength", "MaxInterfaceNameLength", "MaxPathsPerEntry", "MaxPrimaryPathPerEntry", "MaxBackupPathPerEntry", "MaxMplsLabelsPerPath", "MinPrimaryPathIdNum", "MaxPrimaryPathIdNum", "MinBackupPathIdNum", "MaxBackupPathIdNum", "MaxRemoteAddressNum", "MaxL2BdNameLength", "MaxL2PmsiTunnelIdLength", "MaxLabelBlockClientNameLength", "MaxPathsInNexthopNotif", "MaxVrfRegPerMsg", "MaxAFOpsPerMsg", "MaxNotifReqPerSLAFNotifReq", "MaxMatchFilterInBgplsTopoNotif" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Global Event Notification types.
  /// </summary>
  public enum SLGlobalNotifType {
    /// <summary>
    /// Reserved. 0x0
    /// </summary>
    [pbr::OriginalName("SL_GLOBAL_EVENT_TYPE_RESERVED")] SlGlobalEventTypeReserved = 0,
    /// <summary>
    /// Error. ErrStatus field elaborates on the message. 0x1
    /// </summary>
    [pbr::OriginalName("SL_GLOBAL_EVENT_TYPE_ERROR")] SlGlobalEventTypeError = 1,
    /// <summary>
    /// HeartBeat. 0x2
    /// </summary>
    [pbr::OriginalName("SL_GLOBAL_EVENT_TYPE_HEARTBEAT")] SlGlobalEventTypeHeartbeat = 2,
    /// <summary>
    /// Version. SLInitMsgRsp field elaborates on the server version. 0x3
    /// </summary>
    [pbr::OriginalName("SL_GLOBAL_EVENT_TYPE_VERSION")] SlGlobalEventTypeVersion = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Initialization message sent to the server.
  /// If the client and server are running compatible version numbers, a
  /// connection will be made and the server response will be received
  /// with a successful status code.
  /// </summary>
  public sealed partial class SLInitMsg : pb::IMessage<SLInitMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLInitMsg> _parser = new pb::MessageParser<SLInitMsg>(() => new SLInitMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLInitMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlGlobalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLInitMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLInitMsg(SLInitMsg other) : this() {
      majorVer_ = other.majorVer_;
      minorVer_ = other.minorVer_;
      subVer_ = other.subVer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLInitMsg Clone() {
      return new SLInitMsg(this);
    }

    /// <summary>Field number for the "MajorVer" field.</summary>
    public const int MajorVerFieldNumber = 1;
    private uint majorVer_;
    /// <summary>
    /// Client's Major version of service-layer API (refer to sl_version.proto)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MajorVer {
      get { return majorVer_; }
      set {
        majorVer_ = value;
      }
    }

    /// <summary>Field number for the "MinorVer" field.</summary>
    public const int MinorVerFieldNumber = 2;
    private uint minorVer_;
    /// <summary>
    /// Minor Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinorVer {
      get { return minorVer_; }
      set {
        minorVer_ = value;
      }
    }

    /// <summary>Field number for the "SubVer" field.</summary>
    public const int SubVerFieldNumber = 3;
    private uint subVer_;
    /// <summary>
    /// Sub-Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SubVer {
      get { return subVer_; }
      set {
        subVer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLInitMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLInitMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MajorVer != other.MajorVer) return false;
      if (MinorVer != other.MinorVer) return false;
      if (SubVer != other.SubVer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MajorVer != 0) hash ^= MajorVer.GetHashCode();
      if (MinorVer != 0) hash ^= MinorVer.GetHashCode();
      if (SubVer != 0) hash ^= SubVer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MajorVer != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MajorVer);
      }
      if (MinorVer != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MinorVer);
      }
      if (SubVer != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SubVer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MajorVer != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MajorVer);
      }
      if (MinorVer != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MinorVer);
      }
      if (SubVer != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SubVer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MajorVer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MajorVer);
      }
      if (MinorVer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinorVer);
      }
      if (SubVer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubVer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLInitMsg other) {
      if (other == null) {
        return;
      }
      if (other.MajorVer != 0) {
        MajorVer = other.MajorVer;
      }
      if (other.MinorVer != 0) {
        MinorVer = other.MinorVer;
      }
      if (other.SubVer != 0) {
        SubVer = other.SubVer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MajorVer = input.ReadUInt32();
            break;
          }
          case 16: {
            MinorVer = input.ReadUInt32();
            break;
          }
          case 24: {
            SubVer = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MajorVer = input.ReadUInt32();
            break;
          }
          case 16: {
            MinorVer = input.ReadUInt32();
            break;
          }
          case 24: {
            SubVer = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Server's response to the SLInitMsg.
  /// On Success (ErrStatus), the session with the server is established
  /// and the client is allowed to proceed.
  /// </summary>
  public sealed partial class SLInitMsgRsp : pb::IMessage<SLInitMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLInitMsgRsp> _parser = new pb::MessageParser<SLInitMsgRsp>(() => new SLInitMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLInitMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlGlobalReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLInitMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLInitMsgRsp(SLInitMsgRsp other) : this() {
      majorVer_ = other.majorVer_;
      minorVer_ = other.minorVer_;
      subVer_ = other.subVer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLInitMsgRsp Clone() {
      return new SLInitMsgRsp(this);
    }

    /// <summary>Field number for the "MajorVer" field.</summary>
    public const int MajorVerFieldNumber = 1;
    private uint majorVer_;
    /// <summary>
    /// Server's version of service-layer API (refer to sl_version.proto)
    /// Major-number revisions are NOT backwards compatible,
    /// unless otherwise specified. The Server may reject a session if there
    /// is a version number mismatch or non-backwards compatibility.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MajorVer {
      get { return majorVer_; }
      set {
        majorVer_ = value;
      }
    }

    /// <summary>Field number for the "MinorVer" field.</summary>
    public const int MinorVerFieldNumber = 2;
    private uint minorVer_;
    /// <summary>
    /// Minor Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinorVer {
      get { return minorVer_; }
      set {
        minorVer_ = value;
      }
    }

    /// <summary>Field number for the "SubVer" field.</summary>
    public const int SubVerFieldNumber = 3;
    private uint subVer_;
    /// <summary>
    /// Sub-Version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SubVer {
      get { return subVer_; }
      set {
        subVer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLInitMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLInitMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MajorVer != other.MajorVer) return false;
      if (MinorVer != other.MinorVer) return false;
      if (SubVer != other.SubVer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MajorVer != 0) hash ^= MajorVer.GetHashCode();
      if (MinorVer != 0) hash ^= MinorVer.GetHashCode();
      if (SubVer != 0) hash ^= SubVer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MajorVer != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MajorVer);
      }
      if (MinorVer != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MinorVer);
      }
      if (SubVer != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SubVer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MajorVer != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(MajorVer);
      }
      if (MinorVer != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MinorVer);
      }
      if (SubVer != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(SubVer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MajorVer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MajorVer);
      }
      if (MinorVer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinorVer);
      }
      if (SubVer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SubVer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLInitMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.MajorVer != 0) {
        MajorVer = other.MajorVer;
      }
      if (other.MinorVer != 0) {
        MinorVer = other.MinorVer;
      }
      if (other.SubVer != 0) {
        SubVer = other.SubVer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MajorVer = input.ReadUInt32();
            break;
          }
          case 16: {
            MinorVer = input.ReadUInt32();
            break;
          }
          case 24: {
            SubVer = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MajorVer = input.ReadUInt32();
            break;
          }
          case 16: {
            MinorVer = input.ReadUInt32();
            break;
          }
          case 24: {
            SubVer = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Routes replay error notification.
  /// </summary>
  public sealed partial class SLVrfRouteReplayErrorNotif : pb::IMessage<SLVrfRouteReplayErrorNotif>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLVrfRouteReplayErrorNotif> _parser = new pb::MessageParser<SLVrfRouteReplayErrorNotif>(() => new SLVrfRouteReplayErrorNotif());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLVrfRouteReplayErrorNotif> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlGlobalReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRouteReplayErrorNotif() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRouteReplayErrorNotif(SLVrfRouteReplayErrorNotif other) : this() {
      vrfName_ = other.vrfName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRouteReplayErrorNotif Clone() {
      return new SLVrfRouteReplayErrorNotif(this);
    }

    /// <summary>Field number for the "VrfName" field.</summary>
    public const int VrfNameFieldNumber = 1;
    private string vrfName_ = "";
    /// <summary>
    /// VRF Name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrfName {
      get { return vrfName_; }
      set {
        vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLVrfRouteReplayErrorNotif);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLVrfRouteReplayErrorNotif other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VrfName != other.VrfName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VrfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLVrfRouteReplayErrorNotif other) {
      if (other == null) {
        return;
      }
      if (other.VrfName.Length != 0) {
        VrfName = other.VrfName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Globals query message.
  /// </summary>
  public sealed partial class SLGlobalNotif : pb::IMessage<SLGlobalNotif>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLGlobalNotif> _parser = new pb::MessageParser<SLGlobalNotif>(() => new SLGlobalNotif());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLGlobalNotif> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlGlobalReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLGlobalNotif() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLGlobalNotif(SLGlobalNotif other) : this() {
      eventType_ = other.eventType_;
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      switch (other.EventCase) {
        case EventOneofCase.InitRspMsg:
          InitRspMsg = other.InitRspMsg.Clone();
          break;
        case EventOneofCase.VrfReplayErrorNotif:
          VrfReplayErrorNotif = other.VrfReplayErrorNotif.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLGlobalNotif Clone() {
      return new SLGlobalNotif(this);
    }

    /// <summary>Field number for the "EventType" field.</summary>
    public const int EventTypeFieldNumber = 1;
    private global::ServiceLayer.SLGlobalNotifType eventType_ = global::ServiceLayer.SLGlobalNotifType.SlGlobalEventTypeReserved;
    /// <summary>
    /// Event Type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLGlobalNotifType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 2;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Status code, interpreted based on the Event Type.
    ///
    ///   case EventType == SL_GLOBAL_EVENT_TYPE_ERROR:
    ///       case ErrStatus == (some error from SLErrorStatus)
    ///          => Client must look into the specific error message returned.
    ///
    ///   case EventType == SL_GLOBAL_EVENT_TYPE_HEARTBEAT:
    ///       case ErrStatus == SL_SUCCESS
    ///          => Client can safely ignore this heartbeat message.
    ///
    ///   case EventType == SL_GLOBAL_EVENT_TYPE_VERSION:
    ///       case ErrStatus == SL_SUCCESS
    ///          => Client version accepted.
    ///       case ErrStatus == SL_INIT_STATE_READY
    ///          => Client version accepted.
    ///             Any previous state was sucessfully recovered.
    ///       case ErrStatus == SL_INIT_STATE_CLEAR
    ///          => Client version accepted. Any previous state was lost.
    ///             Client must replay all previous objects to server.
    ///       case ErrStatus == SL_UNSUPPORTED_VER
    ///          => Client and Server version mismatch. The client is not
    ///             allowed to proceed, and the channel will be closed.
    ///       case ErrStatus == (some error from SLErrorStatus)
    ///          => Client must either try again, or look into the specific
    ///             error message returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "InitRspMsg" field.</summary>
    public const int InitRspMsgFieldNumber = 3;
    /// <summary>
    /// case EventType == SL_GLOBAL_EVENT_TYPE_VERSION:
    ///     => this field carries the Server version number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLInitMsgRsp InitRspMsg {
      get { return eventCase_ == EventOneofCase.InitRspMsg ? (global::ServiceLayer.SLInitMsgRsp) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.InitRspMsg;
      }
    }

    /// <summary>Field number for the "VrfReplayErrorNotif" field.</summary>
    public const int VrfReplayErrorNotifFieldNumber = 4;
    /// <summary>
    /// case EventType == SL_GLOBAL_EVENT_TYPE_ERROR:
    ///     case ErrStatus == SL_VRF_V4_ROUTE_REPLAY_FATAL_ERROR:
    ///     case ErrStatus == SL_VRF_V6_ROUTE_REPLAY_FATAL_ERROR:
    ///     case ErrStatus == SL_VRF_V4_ROUTE_REPLAY_OK:
    ///     case ErrStatus == SL_VRF_V6_ROUTE_REPLAY_OK:
    ///     => this field carries the failed VRF information.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLVrfRouteReplayErrorNotif VrfReplayErrorNotif {
      get { return eventCase_ == EventOneofCase.VrfReplayErrorNotif ? (global::ServiceLayer.SLVrfRouteReplayErrorNotif) event_ : null; }
      set {
        event_ = value;
        eventCase_ = value == null ? EventOneofCase.None : EventOneofCase.VrfReplayErrorNotif;
      }
    }

    private object event_;
    /// <summary>Enum of possible cases for the "Event" oneof.</summary>
    public enum EventOneofCase {
      None = 0,
      InitRspMsg = 3,
      VrfReplayErrorNotif = 4,
    }
    private EventOneofCase eventCase_ = EventOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventOneofCase EventCase {
      get { return eventCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEvent() {
      eventCase_ = EventOneofCase.None;
      event_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLGlobalNotif);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLGlobalNotif other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventType != other.EventType) return false;
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if (!object.Equals(InitRspMsg, other.InitRspMsg)) return false;
      if (!object.Equals(VrfReplayErrorNotif, other.VrfReplayErrorNotif)) return false;
      if (EventCase != other.EventCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EventType != global::ServiceLayer.SLGlobalNotifType.SlGlobalEventTypeReserved) hash ^= EventType.GetHashCode();
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      if (eventCase_ == EventOneofCase.InitRspMsg) hash ^= InitRspMsg.GetHashCode();
      if (eventCase_ == EventOneofCase.VrfReplayErrorNotif) hash ^= VrfReplayErrorNotif.GetHashCode();
      hash ^= (int) eventCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EventType != global::ServiceLayer.SLGlobalNotifType.SlGlobalEventTypeReserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      if (errStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrStatus);
      }
      if (eventCase_ == EventOneofCase.InitRspMsg) {
        output.WriteRawTag(26);
        output.WriteMessage(InitRspMsg);
      }
      if (eventCase_ == EventOneofCase.VrfReplayErrorNotif) {
        output.WriteRawTag(34);
        output.WriteMessage(VrfReplayErrorNotif);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EventType != global::ServiceLayer.SLGlobalNotifType.SlGlobalEventTypeReserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      if (errStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrStatus);
      }
      if (eventCase_ == EventOneofCase.InitRspMsg) {
        output.WriteRawTag(26);
        output.WriteMessage(InitRspMsg);
      }
      if (eventCase_ == EventOneofCase.VrfReplayErrorNotif) {
        output.WriteRawTag(34);
        output.WriteMessage(VrfReplayErrorNotif);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EventType != global::ServiceLayer.SLGlobalNotifType.SlGlobalEventTypeReserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      if (eventCase_ == EventOneofCase.InitRspMsg) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InitRspMsg);
      }
      if (eventCase_ == EventOneofCase.VrfReplayErrorNotif) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VrfReplayErrorNotif);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLGlobalNotif other) {
      if (other == null) {
        return;
      }
      if (other.EventType != global::ServiceLayer.SLGlobalNotifType.SlGlobalEventTypeReserved) {
        EventType = other.EventType;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      switch (other.EventCase) {
        case EventOneofCase.InitRspMsg:
          if (InitRspMsg == null) {
            InitRspMsg = new global::ServiceLayer.SLInitMsgRsp();
          }
          InitRspMsg.MergeFrom(other.InitRspMsg);
          break;
        case EventOneofCase.VrfReplayErrorNotif:
          if (VrfReplayErrorNotif == null) {
            VrfReplayErrorNotif = new global::ServiceLayer.SLVrfRouteReplayErrorNotif();
          }
          VrfReplayErrorNotif.MergeFrom(other.VrfReplayErrorNotif);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventType = (global::ServiceLayer.SLGlobalNotifType) input.ReadEnum();
            break;
          }
          case 18: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 26: {
            global::ServiceLayer.SLInitMsgRsp subBuilder = new global::ServiceLayer.SLInitMsgRsp();
            if (eventCase_ == EventOneofCase.InitRspMsg) {
              subBuilder.MergeFrom(InitRspMsg);
            }
            input.ReadMessage(subBuilder);
            InitRspMsg = subBuilder;
            break;
          }
          case 34: {
            global::ServiceLayer.SLVrfRouteReplayErrorNotif subBuilder = new global::ServiceLayer.SLVrfRouteReplayErrorNotif();
            if (eventCase_ == EventOneofCase.VrfReplayErrorNotif) {
              subBuilder.MergeFrom(VrfReplayErrorNotif);
            }
            input.ReadMessage(subBuilder);
            VrfReplayErrorNotif = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            EventType = (global::ServiceLayer.SLGlobalNotifType) input.ReadEnum();
            break;
          }
          case 18: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 26: {
            global::ServiceLayer.SLInitMsgRsp subBuilder = new global::ServiceLayer.SLInitMsgRsp();
            if (eventCase_ == EventOneofCase.InitRspMsg) {
              subBuilder.MergeFrom(InitRspMsg);
            }
            input.ReadMessage(subBuilder);
            InitRspMsg = subBuilder;
            break;
          }
          case 34: {
            global::ServiceLayer.SLVrfRouteReplayErrorNotif subBuilder = new global::ServiceLayer.SLVrfRouteReplayErrorNotif();
            if (eventCase_ == EventOneofCase.VrfReplayErrorNotif) {
              subBuilder.MergeFrom(VrfReplayErrorNotif);
            }
            input.ReadMessage(subBuilder);
            VrfReplayErrorNotif = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Globals query message.
  /// </summary>
  public sealed partial class SLGlobalsGetMsg : pb::IMessage<SLGlobalsGetMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLGlobalsGetMsg> _parser = new pb::MessageParser<SLGlobalsGetMsg>(() => new SLGlobalsGetMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLGlobalsGetMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlGlobalReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLGlobalsGetMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLGlobalsGetMsg(SLGlobalsGetMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLGlobalsGetMsg Clone() {
      return new SLGlobalsGetMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLGlobalsGetMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLGlobalsGetMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLGlobalsGetMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Platform specific globals Response.
  /// </summary>
  public sealed partial class SLGlobalsGetMsgRsp : pb::IMessage<SLGlobalsGetMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLGlobalsGetMsgRsp> _parser = new pb::MessageParser<SLGlobalsGetMsgRsp>(() => new SLGlobalsGetMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLGlobalsGetMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlGlobalReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLGlobalsGetMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLGlobalsGetMsgRsp(SLGlobalsGetMsgRsp other) : this() {
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      maxVrfNameLength_ = other.maxVrfNameLength_;
      maxInterfaceNameLength_ = other.maxInterfaceNameLength_;
      maxPathsPerEntry_ = other.maxPathsPerEntry_;
      maxPrimaryPathPerEntry_ = other.maxPrimaryPathPerEntry_;
      maxBackupPathPerEntry_ = other.maxBackupPathPerEntry_;
      maxMplsLabelsPerPath_ = other.maxMplsLabelsPerPath_;
      minPrimaryPathIdNum_ = other.minPrimaryPathIdNum_;
      maxPrimaryPathIdNum_ = other.maxPrimaryPathIdNum_;
      minBackupPathIdNum_ = other.minBackupPathIdNum_;
      maxBackupPathIdNum_ = other.maxBackupPathIdNum_;
      maxRemoteAddressNum_ = other.maxRemoteAddressNum_;
      maxL2BdNameLength_ = other.maxL2BdNameLength_;
      maxL2PmsiTunnelIdLength_ = other.maxL2PmsiTunnelIdLength_;
      maxLabelBlockClientNameLength_ = other.maxLabelBlockClientNameLength_;
      maxPathsInNexthopNotif_ = other.maxPathsInNexthopNotif_;
      maxVrfRegPerMsg_ = other.maxVrfRegPerMsg_;
      maxAFOpsPerMsg_ = other.maxAFOpsPerMsg_;
      maxNotifReqPerSLAFNotifReq_ = other.maxNotifReqPerSLAFNotifReq_;
      maxMatchFilterInBgplsTopoNotif_ = other.maxMatchFilterInBgplsTopoNotif_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLGlobalsGetMsgRsp Clone() {
      return new SLGlobalsGetMsgRsp(this);
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 1;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Corresponding error code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "MaxVrfNameLength" field.</summary>
    public const int MaxVrfNameLengthFieldNumber = 2;
    private uint maxVrfNameLength_;
    /// <summary>
    /// Maximum vrf name length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxVrfNameLength {
      get { return maxVrfNameLength_; }
      set {
        maxVrfNameLength_ = value;
      }
    }

    /// <summary>Field number for the "MaxInterfaceNameLength" field.</summary>
    public const int MaxInterfaceNameLengthFieldNumber = 3;
    private uint maxInterfaceNameLength_;
    /// <summary>
    /// Maximum interface name length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxInterfaceNameLength {
      get { return maxInterfaceNameLength_; }
      set {
        maxInterfaceNameLength_ = value;
      }
    }

    /// <summary>Field number for the "MaxPathsPerEntry" field.</summary>
    public const int MaxPathsPerEntryFieldNumber = 4;
    private uint maxPathsPerEntry_;
    /// <summary>
    /// Maximum paths per Route/ILM Entry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxPathsPerEntry {
      get { return maxPathsPerEntry_; }
      set {
        maxPathsPerEntry_ = value;
      }
    }

    /// <summary>Field number for the "MaxPrimaryPathPerEntry" field.</summary>
    public const int MaxPrimaryPathPerEntryFieldNumber = 5;
    private uint maxPrimaryPathPerEntry_;
    /// <summary>
    /// Maximum primary paths per Route/ILM Entry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxPrimaryPathPerEntry {
      get { return maxPrimaryPathPerEntry_; }
      set {
        maxPrimaryPathPerEntry_ = value;
      }
    }

    /// <summary>Field number for the "MaxBackupPathPerEntry" field.</summary>
    public const int MaxBackupPathPerEntryFieldNumber = 6;
    private uint maxBackupPathPerEntry_;
    /// <summary>
    /// Maximum backup paths per Route/ILM Entry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxBackupPathPerEntry {
      get { return maxBackupPathPerEntry_; }
      set {
        maxBackupPathPerEntry_ = value;
      }
    }

    /// <summary>Field number for the "MaxMplsLabelsPerPath" field.</summary>
    public const int MaxMplsLabelsPerPathFieldNumber = 7;
    private uint maxMplsLabelsPerPath_;
    /// <summary>
    /// Maximum MPLS labels per Route/ILM Entry.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxMplsLabelsPerPath {
      get { return maxMplsLabelsPerPath_; }
      set {
        maxMplsLabelsPerPath_ = value;
      }
    }

    /// <summary>Field number for the "MinPrimaryPathIdNum" field.</summary>
    public const int MinPrimaryPathIdNumFieldNumber = 8;
    private uint minPrimaryPathIdNum_;
    /// <summary>
    /// Minimum Primary path id number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinPrimaryPathIdNum {
      get { return minPrimaryPathIdNum_; }
      set {
        minPrimaryPathIdNum_ = value;
      }
    }

    /// <summary>Field number for the "MaxPrimaryPathIdNum" field.</summary>
    public const int MaxPrimaryPathIdNumFieldNumber = 9;
    private uint maxPrimaryPathIdNum_;
    /// <summary>
    /// Maximum Primary path id number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxPrimaryPathIdNum {
      get { return maxPrimaryPathIdNum_; }
      set {
        maxPrimaryPathIdNum_ = value;
      }
    }

    /// <summary>Field number for the "MinBackupPathIdNum" field.</summary>
    public const int MinBackupPathIdNumFieldNumber = 10;
    private uint minBackupPathIdNum_;
    /// <summary>
    /// Minimum Pure Backup path id number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinBackupPathIdNum {
      get { return minBackupPathIdNum_; }
      set {
        minBackupPathIdNum_ = value;
      }
    }

    /// <summary>Field number for the "MaxBackupPathIdNum" field.</summary>
    public const int MaxBackupPathIdNumFieldNumber = 11;
    private uint maxBackupPathIdNum_;
    /// <summary>
    /// Maximum Pure Backup path id number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxBackupPathIdNum {
      get { return maxBackupPathIdNum_; }
      set {
        maxBackupPathIdNum_ = value;
      }
    }

    /// <summary>Field number for the "MaxRemoteAddressNum" field.</summary>
    public const int MaxRemoteAddressNumFieldNumber = 12;
    private uint maxRemoteAddressNum_;
    /// <summary>
    /// Maximum number of remote addresses
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxRemoteAddressNum {
      get { return maxRemoteAddressNum_; }
      set {
        maxRemoteAddressNum_ = value;
      }
    }

    /// <summary>Field number for the "MaxL2BdNameLength" field.</summary>
    public const int MaxL2BdNameLengthFieldNumber = 13;
    private uint maxL2BdNameLength_;
    /// <summary>
    /// Maximum Bridge Domain name length - used for L2 routes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxL2BdNameLength {
      get { return maxL2BdNameLength_; }
      set {
        maxL2BdNameLength_ = value;
      }
    }

    /// <summary>Field number for the "MaxL2PmsiTunnelIdLength" field.</summary>
    public const int MaxL2PmsiTunnelIdLengthFieldNumber = 14;
    private uint maxL2PmsiTunnelIdLength_;
    /// <summary>
    /// Maximum Provider Multicast Service Interface (PMSI) tunnel ID length.
    /// Used for L2 Inclusive Multicast Ethernet Tag (IMET) routes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxL2PmsiTunnelIdLength {
      get { return maxL2PmsiTunnelIdLength_; }
      set {
        maxL2PmsiTunnelIdLength_ = value;
      }
    }

    /// <summary>Field number for the "MaxLabelBlockClientNameLength" field.</summary>
    public const int MaxLabelBlockClientNameLengthFieldNumber = 15;
    private uint maxLabelBlockClientNameLength_;
    /// <summary>
    /// Maximum label block client name length.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxLabelBlockClientNameLength {
      get { return maxLabelBlockClientNameLength_; }
      set {
        maxLabelBlockClientNameLength_ = value;
      }
    }

    /// <summary>Field number for the "MaxPathsInNexthopNotif" field.</summary>
    public const int MaxPathsInNexthopNotifFieldNumber = 16;
    private uint maxPathsInNexthopNotif_;
    /// <summary>
    /// Maximum paths returned by the network element for a next hop notification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxPathsInNexthopNotif {
      get { return maxPathsInNexthopNotif_; }
      set {
        maxPathsInNexthopNotif_ = value;
      }
    }

    /// <summary>Field number for the "MaxVrfRegPerMsg" field.</summary>
    public const int MaxVrfRegPerMsgFieldNumber = 17;
    private uint maxVrfRegPerMsg_;
    /// <summary>
    /// Max SLVrfReg objects within a SLVrfRegMsg or SLAFVrfRegMsg.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxVrfRegPerMsg {
      get { return maxVrfRegPerMsg_; }
      set {
        maxVrfRegPerMsg_ = value;
      }
    }

    /// <summary>Field number for the "MaxAFOpsPerMsg" field.</summary>
    public const int MaxAFOpsPerMsgFieldNumber = 18;
    private uint maxAFOpsPerMsg_;
    /// <summary>
    /// Max Route or AF objects within a single RouteMsg or SLAFMsg.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxAFOpsPerMsg {
      get { return maxAFOpsPerMsg_; }
      set {
        maxAFOpsPerMsg_ = value;
      }
    }

    /// <summary>Field number for the "MaxNotifReqPerSLAFNotifReq" field.</summary>
    public const int MaxNotifReqPerSLAFNotifReqFieldNumber = 19;
    private uint maxNotifReqPerSLAFNotifReq_;
    /// <summary>
    /// Max SLAFNotifRegReq requests in SLAFNotifReq.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxNotifReqPerSLAFNotifReq {
      get { return maxNotifReqPerSLAFNotifReq_; }
      set {
        maxNotifReqPerSLAFNotifReq_ = value;
      }
    }

    /// <summary>Field number for the "MaxMatchFilterInBgplsTopoNotif" field.</summary>
    public const int MaxMatchFilterInBgplsTopoNotifFieldNumber = 20;
    private uint maxMatchFilterInBgplsTopoNotif_;
    /// <summary>
    /// Maximum match filters that can be added to Bgpls Topology Service
    /// Notification message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxMatchFilterInBgplsTopoNotif {
      get { return maxMatchFilterInBgplsTopoNotif_; }
      set {
        maxMatchFilterInBgplsTopoNotif_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLGlobalsGetMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLGlobalsGetMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if (MaxVrfNameLength != other.MaxVrfNameLength) return false;
      if (MaxInterfaceNameLength != other.MaxInterfaceNameLength) return false;
      if (MaxPathsPerEntry != other.MaxPathsPerEntry) return false;
      if (MaxPrimaryPathPerEntry != other.MaxPrimaryPathPerEntry) return false;
      if (MaxBackupPathPerEntry != other.MaxBackupPathPerEntry) return false;
      if (MaxMplsLabelsPerPath != other.MaxMplsLabelsPerPath) return false;
      if (MinPrimaryPathIdNum != other.MinPrimaryPathIdNum) return false;
      if (MaxPrimaryPathIdNum != other.MaxPrimaryPathIdNum) return false;
      if (MinBackupPathIdNum != other.MinBackupPathIdNum) return false;
      if (MaxBackupPathIdNum != other.MaxBackupPathIdNum) return false;
      if (MaxRemoteAddressNum != other.MaxRemoteAddressNum) return false;
      if (MaxL2BdNameLength != other.MaxL2BdNameLength) return false;
      if (MaxL2PmsiTunnelIdLength != other.MaxL2PmsiTunnelIdLength) return false;
      if (MaxLabelBlockClientNameLength != other.MaxLabelBlockClientNameLength) return false;
      if (MaxPathsInNexthopNotif != other.MaxPathsInNexthopNotif) return false;
      if (MaxVrfRegPerMsg != other.MaxVrfRegPerMsg) return false;
      if (MaxAFOpsPerMsg != other.MaxAFOpsPerMsg) return false;
      if (MaxNotifReqPerSLAFNotifReq != other.MaxNotifReqPerSLAFNotifReq) return false;
      if (MaxMatchFilterInBgplsTopoNotif != other.MaxMatchFilterInBgplsTopoNotif) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      if (MaxVrfNameLength != 0) hash ^= MaxVrfNameLength.GetHashCode();
      if (MaxInterfaceNameLength != 0) hash ^= MaxInterfaceNameLength.GetHashCode();
      if (MaxPathsPerEntry != 0) hash ^= MaxPathsPerEntry.GetHashCode();
      if (MaxPrimaryPathPerEntry != 0) hash ^= MaxPrimaryPathPerEntry.GetHashCode();
      if (MaxBackupPathPerEntry != 0) hash ^= MaxBackupPathPerEntry.GetHashCode();
      if (MaxMplsLabelsPerPath != 0) hash ^= MaxMplsLabelsPerPath.GetHashCode();
      if (MinPrimaryPathIdNum != 0) hash ^= MinPrimaryPathIdNum.GetHashCode();
      if (MaxPrimaryPathIdNum != 0) hash ^= MaxPrimaryPathIdNum.GetHashCode();
      if (MinBackupPathIdNum != 0) hash ^= MinBackupPathIdNum.GetHashCode();
      if (MaxBackupPathIdNum != 0) hash ^= MaxBackupPathIdNum.GetHashCode();
      if (MaxRemoteAddressNum != 0) hash ^= MaxRemoteAddressNum.GetHashCode();
      if (MaxL2BdNameLength != 0) hash ^= MaxL2BdNameLength.GetHashCode();
      if (MaxL2PmsiTunnelIdLength != 0) hash ^= MaxL2PmsiTunnelIdLength.GetHashCode();
      if (MaxLabelBlockClientNameLength != 0) hash ^= MaxLabelBlockClientNameLength.GetHashCode();
      if (MaxPathsInNexthopNotif != 0) hash ^= MaxPathsInNexthopNotif.GetHashCode();
      if (MaxVrfRegPerMsg != 0) hash ^= MaxVrfRegPerMsg.GetHashCode();
      if (MaxAFOpsPerMsg != 0) hash ^= MaxAFOpsPerMsg.GetHashCode();
      if (MaxNotifReqPerSLAFNotifReq != 0) hash ^= MaxNotifReqPerSLAFNotifReq.GetHashCode();
      if (MaxMatchFilterInBgplsTopoNotif != 0) hash ^= MaxMatchFilterInBgplsTopoNotif.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (MaxVrfNameLength != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxVrfNameLength);
      }
      if (MaxInterfaceNameLength != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxInterfaceNameLength);
      }
      if (MaxPathsPerEntry != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaxPathsPerEntry);
      }
      if (MaxPrimaryPathPerEntry != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MaxPrimaryPathPerEntry);
      }
      if (MaxBackupPathPerEntry != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxBackupPathPerEntry);
      }
      if (MaxMplsLabelsPerPath != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(MaxMplsLabelsPerPath);
      }
      if (MinPrimaryPathIdNum != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(MinPrimaryPathIdNum);
      }
      if (MaxPrimaryPathIdNum != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MaxPrimaryPathIdNum);
      }
      if (MinBackupPathIdNum != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(MinBackupPathIdNum);
      }
      if (MaxBackupPathIdNum != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(MaxBackupPathIdNum);
      }
      if (MaxRemoteAddressNum != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MaxRemoteAddressNum);
      }
      if (MaxL2BdNameLength != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(MaxL2BdNameLength);
      }
      if (MaxL2PmsiTunnelIdLength != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(MaxL2PmsiTunnelIdLength);
      }
      if (MaxLabelBlockClientNameLength != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(MaxLabelBlockClientNameLength);
      }
      if (MaxPathsInNexthopNotif != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(MaxPathsInNexthopNotif);
      }
      if (MaxVrfRegPerMsg != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(MaxVrfRegPerMsg);
      }
      if (MaxAFOpsPerMsg != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(MaxAFOpsPerMsg);
      }
      if (MaxNotifReqPerSLAFNotifReq != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(MaxNotifReqPerSLAFNotifReq);
      }
      if (MaxMatchFilterInBgplsTopoNotif != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(MaxMatchFilterInBgplsTopoNotif);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (MaxVrfNameLength != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxVrfNameLength);
      }
      if (MaxInterfaceNameLength != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxInterfaceNameLength);
      }
      if (MaxPathsPerEntry != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaxPathsPerEntry);
      }
      if (MaxPrimaryPathPerEntry != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MaxPrimaryPathPerEntry);
      }
      if (MaxBackupPathPerEntry != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxBackupPathPerEntry);
      }
      if (MaxMplsLabelsPerPath != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(MaxMplsLabelsPerPath);
      }
      if (MinPrimaryPathIdNum != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(MinPrimaryPathIdNum);
      }
      if (MaxPrimaryPathIdNum != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MaxPrimaryPathIdNum);
      }
      if (MinBackupPathIdNum != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(MinBackupPathIdNum);
      }
      if (MaxBackupPathIdNum != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(MaxBackupPathIdNum);
      }
      if (MaxRemoteAddressNum != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MaxRemoteAddressNum);
      }
      if (MaxL2BdNameLength != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(MaxL2BdNameLength);
      }
      if (MaxL2PmsiTunnelIdLength != 0) {
        output.WriteRawTag(112);
        output.WriteUInt32(MaxL2PmsiTunnelIdLength);
      }
      if (MaxLabelBlockClientNameLength != 0) {
        output.WriteRawTag(120);
        output.WriteUInt32(MaxLabelBlockClientNameLength);
      }
      if (MaxPathsInNexthopNotif != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(MaxPathsInNexthopNotif);
      }
      if (MaxVrfRegPerMsg != 0) {
        output.WriteRawTag(136, 1);
        output.WriteUInt32(MaxVrfRegPerMsg);
      }
      if (MaxAFOpsPerMsg != 0) {
        output.WriteRawTag(144, 1);
        output.WriteUInt32(MaxAFOpsPerMsg);
      }
      if (MaxNotifReqPerSLAFNotifReq != 0) {
        output.WriteRawTag(152, 1);
        output.WriteUInt32(MaxNotifReqPerSLAFNotifReq);
      }
      if (MaxMatchFilterInBgplsTopoNotif != 0) {
        output.WriteRawTag(160, 1);
        output.WriteUInt32(MaxMatchFilterInBgplsTopoNotif);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      if (MaxVrfNameLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxVrfNameLength);
      }
      if (MaxInterfaceNameLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxInterfaceNameLength);
      }
      if (MaxPathsPerEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxPathsPerEntry);
      }
      if (MaxPrimaryPathPerEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxPrimaryPathPerEntry);
      }
      if (MaxBackupPathPerEntry != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxBackupPathPerEntry);
      }
      if (MaxMplsLabelsPerPath != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxMplsLabelsPerPath);
      }
      if (MinPrimaryPathIdNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinPrimaryPathIdNum);
      }
      if (MaxPrimaryPathIdNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxPrimaryPathIdNum);
      }
      if (MinBackupPathIdNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinBackupPathIdNum);
      }
      if (MaxBackupPathIdNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxBackupPathIdNum);
      }
      if (MaxRemoteAddressNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxRemoteAddressNum);
      }
      if (MaxL2BdNameLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxL2BdNameLength);
      }
      if (MaxL2PmsiTunnelIdLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxL2PmsiTunnelIdLength);
      }
      if (MaxLabelBlockClientNameLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxLabelBlockClientNameLength);
      }
      if (MaxPathsInNexthopNotif != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxPathsInNexthopNotif);
      }
      if (MaxVrfRegPerMsg != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxVrfRegPerMsg);
      }
      if (MaxAFOpsPerMsg != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxAFOpsPerMsg);
      }
      if (MaxNotifReqPerSLAFNotifReq != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxNotifReqPerSLAFNotifReq);
      }
      if (MaxMatchFilterInBgplsTopoNotif != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(MaxMatchFilterInBgplsTopoNotif);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLGlobalsGetMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      if (other.MaxVrfNameLength != 0) {
        MaxVrfNameLength = other.MaxVrfNameLength;
      }
      if (other.MaxInterfaceNameLength != 0) {
        MaxInterfaceNameLength = other.MaxInterfaceNameLength;
      }
      if (other.MaxPathsPerEntry != 0) {
        MaxPathsPerEntry = other.MaxPathsPerEntry;
      }
      if (other.MaxPrimaryPathPerEntry != 0) {
        MaxPrimaryPathPerEntry = other.MaxPrimaryPathPerEntry;
      }
      if (other.MaxBackupPathPerEntry != 0) {
        MaxBackupPathPerEntry = other.MaxBackupPathPerEntry;
      }
      if (other.MaxMplsLabelsPerPath != 0) {
        MaxMplsLabelsPerPath = other.MaxMplsLabelsPerPath;
      }
      if (other.MinPrimaryPathIdNum != 0) {
        MinPrimaryPathIdNum = other.MinPrimaryPathIdNum;
      }
      if (other.MaxPrimaryPathIdNum != 0) {
        MaxPrimaryPathIdNum = other.MaxPrimaryPathIdNum;
      }
      if (other.MinBackupPathIdNum != 0) {
        MinBackupPathIdNum = other.MinBackupPathIdNum;
      }
      if (other.MaxBackupPathIdNum != 0) {
        MaxBackupPathIdNum = other.MaxBackupPathIdNum;
      }
      if (other.MaxRemoteAddressNum != 0) {
        MaxRemoteAddressNum = other.MaxRemoteAddressNum;
      }
      if (other.MaxL2BdNameLength != 0) {
        MaxL2BdNameLength = other.MaxL2BdNameLength;
      }
      if (other.MaxL2PmsiTunnelIdLength != 0) {
        MaxL2PmsiTunnelIdLength = other.MaxL2PmsiTunnelIdLength;
      }
      if (other.MaxLabelBlockClientNameLength != 0) {
        MaxLabelBlockClientNameLength = other.MaxLabelBlockClientNameLength;
      }
      if (other.MaxPathsInNexthopNotif != 0) {
        MaxPathsInNexthopNotif = other.MaxPathsInNexthopNotif;
      }
      if (other.MaxVrfRegPerMsg != 0) {
        MaxVrfRegPerMsg = other.MaxVrfRegPerMsg;
      }
      if (other.MaxAFOpsPerMsg != 0) {
        MaxAFOpsPerMsg = other.MaxAFOpsPerMsg;
      }
      if (other.MaxNotifReqPerSLAFNotifReq != 0) {
        MaxNotifReqPerSLAFNotifReq = other.MaxNotifReqPerSLAFNotifReq;
      }
      if (other.MaxMatchFilterInBgplsTopoNotif != 0) {
        MaxMatchFilterInBgplsTopoNotif = other.MaxMatchFilterInBgplsTopoNotif;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 16: {
            MaxVrfNameLength = input.ReadUInt32();
            break;
          }
          case 24: {
            MaxInterfaceNameLength = input.ReadUInt32();
            break;
          }
          case 32: {
            MaxPathsPerEntry = input.ReadUInt32();
            break;
          }
          case 40: {
            MaxPrimaryPathPerEntry = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxBackupPathPerEntry = input.ReadUInt32();
            break;
          }
          case 56: {
            MaxMplsLabelsPerPath = input.ReadUInt32();
            break;
          }
          case 64: {
            MinPrimaryPathIdNum = input.ReadUInt32();
            break;
          }
          case 72: {
            MaxPrimaryPathIdNum = input.ReadUInt32();
            break;
          }
          case 80: {
            MinBackupPathIdNum = input.ReadUInt32();
            break;
          }
          case 88: {
            MaxBackupPathIdNum = input.ReadUInt32();
            break;
          }
          case 96: {
            MaxRemoteAddressNum = input.ReadUInt32();
            break;
          }
          case 104: {
            MaxL2BdNameLength = input.ReadUInt32();
            break;
          }
          case 112: {
            MaxL2PmsiTunnelIdLength = input.ReadUInt32();
            break;
          }
          case 120: {
            MaxLabelBlockClientNameLength = input.ReadUInt32();
            break;
          }
          case 128: {
            MaxPathsInNexthopNotif = input.ReadUInt32();
            break;
          }
          case 136: {
            MaxVrfRegPerMsg = input.ReadUInt32();
            break;
          }
          case 144: {
            MaxAFOpsPerMsg = input.ReadUInt32();
            break;
          }
          case 152: {
            MaxNotifReqPerSLAFNotifReq = input.ReadUInt32();
            break;
          }
          case 160: {
            MaxMatchFilterInBgplsTopoNotif = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 16: {
            MaxVrfNameLength = input.ReadUInt32();
            break;
          }
          case 24: {
            MaxInterfaceNameLength = input.ReadUInt32();
            break;
          }
          case 32: {
            MaxPathsPerEntry = input.ReadUInt32();
            break;
          }
          case 40: {
            MaxPrimaryPathPerEntry = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxBackupPathPerEntry = input.ReadUInt32();
            break;
          }
          case 56: {
            MaxMplsLabelsPerPath = input.ReadUInt32();
            break;
          }
          case 64: {
            MinPrimaryPathIdNum = input.ReadUInt32();
            break;
          }
          case 72: {
            MaxPrimaryPathIdNum = input.ReadUInt32();
            break;
          }
          case 80: {
            MinBackupPathIdNum = input.ReadUInt32();
            break;
          }
          case 88: {
            MaxBackupPathIdNum = input.ReadUInt32();
            break;
          }
          case 96: {
            MaxRemoteAddressNum = input.ReadUInt32();
            break;
          }
          case 104: {
            MaxL2BdNameLength = input.ReadUInt32();
            break;
          }
          case 112: {
            MaxL2PmsiTunnelIdLength = input.ReadUInt32();
            break;
          }
          case 120: {
            MaxLabelBlockClientNameLength = input.ReadUInt32();
            break;
          }
          case 128: {
            MaxPathsInNexthopNotif = input.ReadUInt32();
            break;
          }
          case 136: {
            MaxVrfRegPerMsg = input.ReadUInt32();
            break;
          }
          case 144: {
            MaxAFOpsPerMsg = input.ReadUInt32();
            break;
          }
          case 152: {
            MaxNotifReqPerSLAFNotifReq = input.ReadUInt32();
            break;
          }
          case 160: {
            MaxMatchFilterInBgplsTopoNotif = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
