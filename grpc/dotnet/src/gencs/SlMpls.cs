// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: sl_mpls.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ServiceLayer {

  /// <summary>Holder for reflection information generated from sl_mpls.proto</summary>
  public static partial class SlMplsReflection {

    #region Descriptor
    /// <summary>File descriptor for sl_mpls.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SlMplsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1zbF9tcGxzLnByb3RvEg1zZXJ2aWNlX2xheWVyGhVzbF9jb21tb25fdHlw",
            "ZXMucHJvdG8ijQEKE1NMTXBsc0xhYmVsQmxvY2tLZXkSEgoKU3RhcnRMYWJl",
            "bBgBIAEoDRIWCg5MYWJlbEJsb2NrU2l6ZRgCIAEoDRI2CglCbG9ja1R5cGUY",
            "AyABKA4yIy5zZXJ2aWNlX2xheWVyLlNMTXBsc0xhYmVsQmxvY2tUeXBlEhIK",
            "CkNsaWVudE5hbWUYBCABKAkidgoTU0xNcGxzTGFiZWxCbG9ja01zZxInCgRP",
            "cGVyGAEgASgOMhkuc2VydmljZV9sYXllci5TTE9iamVjdE9wEjYKCk1wbHNC",
            "bG9ja3MYAiADKAsyIi5zZXJ2aWNlX2xheWVyLlNMTXBsc0xhYmVsQmxvY2tL",
            "ZXkiegoWU0xNcGxzTGFiZWxCbG9ja01zZ1JlcxIvCglFcnJTdGF0dXMYASAB",
            "KAsyHC5zZXJ2aWNlX2xheWVyLlNMRXJyb3JTdGF0dXMSLwoDS2V5GAIgASgL",
            "MiIuc2VydmljZV9sYXllci5TTE1wbHNMYWJlbEJsb2NrS2V5IoUBChZTTE1w",
            "bHNMYWJlbEJsb2NrTXNnUnNwEjMKDVN0YXR1c1N1bW1hcnkYASABKAsyHC5z",
            "ZXJ2aWNlX2xheWVyLlNMRXJyb3JTdGF0dXMSNgoHUmVzdWx0cxgCIAMoCzIl",
            "LnNlcnZpY2VfbGF5ZXIuU0xNcGxzTGFiZWxCbG9ja01zZ1JlcyJwChZTTE1w",
            "bHNMYWJlbEJsb2NrR2V0TXNnEi8KA0tleRgBIAEoCzIiLnNlcnZpY2VfbGF5",
            "ZXIuU0xNcGxzTGFiZWxCbG9ja0tleRIUCgxFbnRyaWVzQ291bnQYAiABKA0S",
            "DwoHR2V0TmV4dBgDIAEoCCKOAQoZU0xNcGxzTGFiZWxCbG9ja0dldE1zZ1Jz",
            "cBILCgNFb2YYASABKAgSLwoJRXJyU3RhdHVzGAIgASgLMhwuc2VydmljZV9s",
            "YXllci5TTEVycm9yU3RhdHVzEjMKB0VudHJpZXMYAyADKAsyIi5zZXJ2aWNl",
            "X2xheWVyLlNMTXBsc0xhYmVsQmxvY2tLZXkiKQoJU2xNcGxzUmVnEhwKFFB1",
            "cmdlSW50ZXJ2YWxTZWNvbmRzGAEgASgNIl4KDFNMTXBsc1JlZ01zZxIkCgRP",
            "cGVyGAEgASgOMhYuc2VydmljZV9sYXllci5TTFJlZ09wEigKBlJlZ01zZxgC",
            "IAEoCzIYLnNlcnZpY2VfbGF5ZXIuU2xNcGxzUmVnIkIKD1NMTXBsc1JlZ01z",
            "Z1JzcBIvCglFcnJTdGF0dXMYASABKAsyHC5zZXJ2aWNlX2xheWVyLlNMRXJy",
            "b3JTdGF0dXMiDgoMU0xNcGxzR2V0TXNnIuUBCg9TTE1wbHNHZXRNc2dSc3AS",
            "LwoJRXJyU3RhdHVzGAEgASgLMhwuc2VydmljZV9sYXllci5TTEVycm9yU3Rh",
            "dHVzEhkKEU1heExhYmVsc1BlckJsb2NrGAIgASgNEiYKHk1heExhYmVsYmxv",
            "Y2tzUGVyTGFiZWxibG9ja21zZxgDIAEoDRIVCg1NaW5TdGFydExhYmVsGAQg",
            "ASgNEhYKDkxhYmVsVGFibGVTaXplGAUgASgNEhcKD01heElsbVBlcklsbW1z",
            "ZxgGIAEoDRIWCg5NYXhQYXRoc1BlcklsbRgHIAEoDSJyChRTTE1wbHNHZXRT",
            "dGF0c01zZ1JzcBIvCglFcnJTdGF0dXMYASABKAsyHC5zZXJ2aWNlX2xheWVy",
            "LlNMRXJyb3JTdGF0dXMSFwoPTGFiZWxCbG9ja0NvdW50GAIgASgNEhAKCEls",
            "bUNvdW50GAMgASgNIroDCgpTTE1wbHNQYXRoEjIKDk5leHRob3BBZGRyZXNz",
            "GAEgASgLMhouc2VydmljZV9sYXllci5TTElwQWRkcmVzcxI0ChBOZXh0aG9w",
            "SW50ZXJmYWNlGAIgASgLMhouc2VydmljZV9sYXllci5TTEludGVyZmFjZRIS",
            "CgpMb2FkTWV0cmljGAMgASgNEg8KB1ZyZk5hbWUYBCABKAkSLAoGQWN0aW9u",
            "GAUgASgOMhwuc2VydmljZV9sYXllci5TbExhYmVsQWN0aW9uEg4KBlBhdGhJ",
            "ZBgGIAEoDRIbChNQcm90ZWN0ZWRQYXRoQml0bWFwGAcgAygEEhIKCkxhYmVs",
            "U3RhY2sYCCADKA0SMQoNUmVtb3RlQWRkcmVzcxgJIAMoCzIaLnNlcnZpY2Vf",
            "bGF5ZXIuU0xJcEFkZHJlc3MSLgoMU2xNcGxzQ29zVmFsGAogASgLMhguc2Vy",
            "dmljZV9sYXllci5TTE1wbHNDb3MSGgoSU2xNcGxzUGF0aFByaW9yaXR5GAsg",
            "ASgNEhcKD1NsTXBsc1BhdGhTZXRJZBgMIAEoDRIWCg5TbE1wbHNQYXRoRG93",
            "bhgNIAEoCCKIAwoMU0xNcGxzSWxtS2V5EhIKCkxvY2FsTGFiZWwYASABKA0S",
            "LgoMU2xNcGxzQ29zVmFsGAIgASgLMhguc2VydmljZV9sYXllci5TTE1wbHND",
            "b3MSNwoGUHJlZml4GAMgASgLMicuc2VydmljZV9sYXllci5TTE1wbHNJbG1L",
            "ZXkuSVBQcmVmaXhLZXkaHwoNSVB2NFByZWZpeEtleRIOCgZQcmVmaXgYASAB",
            "KA0aHwoNSVB2NlByZWZpeEtleRIOCgZQcmVmaXgYASABKAwauAEKC0lQUHJl",
            "Zml4S2V5Ej0KCFY0UHJlZml4GAEgASgLMikuc2VydmljZV9sYXllci5TTE1w",
            "bHNJbG1LZXkuSVB2NFByZWZpeEtleUgAEj0KCFY2UHJlZml4GAIgASgLMiku",
            "c2VydmljZV9sYXllci5TTE1wbHNJbG1LZXkuSVB2NlByZWZpeEtleUgAEhEK",
            "CVByZWZpeExlbhgDIAEoDRIPCgdWcmZOYW1lGAQgASgJQgcKBWVudHJ5IlkK",
            "CVNMTXBsc0NvcxINCgNFeHAYASABKA1IABIZCg9EZWZhdWx0RWxzcFBhdGgY",
            "AiABKAhIABIZCg9Gb3J3YXJkaW5nQ2xhc3MYAyABKA1IAEIHCgV2YWx1ZSKX",
            "AQoOU0xNcGxzSWxtRW50cnkSKAoDS2V5GAEgASgLMhsuc2VydmljZV9sYXll",
            "ci5TTE1wbHNJbG1LZXkSKAoFUGF0aHMYAiADKAsyGS5zZXJ2aWNlX2xheWVy",
            "LlNMTXBsc1BhdGgSMQoIUHJpb3JpdHkYAyABKA4yHy5zZXJ2aWNlX2xheWVy",
            "LlNMVXBkYXRlUHJpb3JpdHkifAoMU0xNcGxzSWxtTXNnEicKBE9wZXIYASAB",
            "KA4yGS5zZXJ2aWNlX2xheWVyLlNMT2JqZWN0T3ASEgoKQ29ycmVsYXRvchgC",
            "IAEoBBIvCghNcGxzSWxtcxgDIAMoCzIdLnNlcnZpY2VfbGF5ZXIuU0xNcGxz",
            "SWxtRW50cnkiaQoMU0xNcGxzSWxtUmVzEi8KCUVyclN0YXR1cxgBIAEoCzIc",
            "LnNlcnZpY2VfbGF5ZXIuU0xFcnJvclN0YXR1cxIoCgNLZXkYAiABKAsyGy5z",
            "ZXJ2aWNlX2xheWVyLlNMTXBsc0lsbUtleSKIAQoPU0xNcGxzSWxtTXNnUnNw",
            "EhIKCkNvcnJlbGF0b3IYASABKAQSMwoNU3RhdHVzU3VtbWFyeRgCIAEoCzIc",
            "LnNlcnZpY2VfbGF5ZXIuU0xFcnJvclN0YXR1cxIsCgdSZXN1bHRzGAMgAygL",
            "Mhsuc2VydmljZV9sYXllci5TTE1wbHNJbG1SZXMidgoPU0xNcGxzSWxtR2V0",
            "TXNnEhIKCkNvcnJlbGF0b3IYASABKAQSKAoDS2V5GAIgASgLMhsuc2Vydmlj",
            "ZV9sYXllci5TTE1wbHNJbG1LZXkSFAoMRW50cmllc0NvdW50GAMgASgNEg8K",
            "B0dldE5leHQYBCABKAgilgEKElNMTXBsc0lsbUdldE1zZ1JzcBISCgpDb3Jy",
            "ZWxhdG9yGAEgASgEEgsKA0VvZhgCIAEoCBIvCglFcnJTdGF0dXMYAyABKAsy",
            "HC5zZXJ2aWNlX2xheWVyLlNMRXJyb3JTdGF0dXMSLgoHRW50cmllcxgEIAMo",
            "CzIdLnNlcnZpY2VfbGF5ZXIuU0xNcGxzSWxtRW50cnkq/AEKDVNsTGFiZWxB",
            "Y3Rpb24SHAoYU0xfTEFCRUxfQUNUSU9OX1JFU0VSVkVEEAASGAoUU0xfTEFC",
            "RUxfQUNUSU9OX1NXQVAQARIjCh9TTF9MQUJFTF9BQ1RJT05fUE9QX0FORF9G",
            "T1JXQVJEEAISJwojU0xfTEFCRUxfQUNUSU9OX1BPUF9BTkRfTE9PS1VQX0lQ",
            "VjQQAxInCiNTTF9MQUJFTF9BQ1RJT05fUE9QX0FORF9MT09LVVBfSVBWNhAE",
            "EiIKHlNMX0xBQkVMX0FDVElPTl9QT1BfQU5EX0xPT0tVUBAFEhgKFFNMX0xB",
            "QkVMX0FDVElPTl9QVVNIEAYqggEKFFNMTXBsc0xhYmVsQmxvY2tUeXBlEiUK",
            "IVNMX01QTFNfTEFCRUxfQkxPQ0tfVFlQRV9SRVNFUlZFRBAAEiEKHVNMX01Q",
            "TFNfTEFCRUxfQkxPQ0tfVFlQRV9TUkdCEAESIAocU0xfTVBMU19MQUJFTF9C",
            "TE9DS19UWVBFX0NCRhACMpEGCgpTTE1wbHNPcGVyEkoKC1NMTXBsc1JlZ09w",
            "Ehsuc2VydmljZV9sYXllci5TTE1wbHNSZWdNc2caHi5zZXJ2aWNlX2xheWVy",
            "LlNMTXBsc1JlZ01zZ1JzcBJICglTTE1wbHNHZXQSGy5zZXJ2aWNlX2xheWVy",
            "LlNMTXBsc0dldE1zZxoeLnNlcnZpY2VfbGF5ZXIuU0xNcGxzR2V0TXNnUnNw",
            "ElIKDlNMTXBsc0dldFN0YXRzEhsuc2VydmljZV9sYXllci5TTE1wbHNHZXRN",
            "c2caIy5zZXJ2aWNlX2xheWVyLlNMTXBsc0dldFN0YXRzTXNnUnNwEl8KElNM",
            "TXBsc0xhYmVsQmxvY2tPcBIiLnNlcnZpY2VfbGF5ZXIuU0xNcGxzTGFiZWxC",
            "bG9ja01zZxolLnNlcnZpY2VfbGF5ZXIuU0xNcGxzTGFiZWxCbG9ja01zZ1Jz",
            "cBJmChNTTE1wbHNMYWJlbEJsb2NrR2V0EiUuc2VydmljZV9sYXllci5TTE1w",
            "bHNMYWJlbEJsb2NrR2V0TXNnGiguc2VydmljZV9sYXllci5TTE1wbHNMYWJl",
            "bEJsb2NrR2V0TXNnUnNwEkoKC1NMTXBsc0lsbU9wEhsuc2VydmljZV9sYXll",
            "ci5TTE1wbHNJbG1Nc2caHi5zZXJ2aWNlX2xheWVyLlNMTXBsc0lsbU1zZ1Jz",
            "cBJRCgxTTE1wbHNJbG1HZXQSHi5zZXJ2aWNlX2xheWVyLlNMTXBsc0lsbUdl",
            "dE1zZxohLnNlcnZpY2VfbGF5ZXIuU0xNcGxzSWxtR2V0TXNnUnNwElQKEVNM",
            "TXBsc0lsbU9wU3RyZWFtEhsuc2VydmljZV9sYXllci5TTE1wbHNJbG1Nc2ca",
            "Hi5zZXJ2aWNlX2xheWVyLlNMTXBsc0lsbU1zZ1JzcCgBMAESWwoSU0xNcGxz",
            "SWxtR2V0U3RyZWFtEh4uc2VydmljZV9sYXllci5TTE1wbHNJbG1HZXRNc2ca",
            "IS5zZXJ2aWNlX2xheWVyLlNMTXBsc0lsbUdldE1zZ1JzcCgBMAFCUVpPZ2l0",
            "aHViLmNvbS9DaXNjby1zZXJ2aWNlLWxheWVyL3NlcnZpY2UtbGF5ZXItb2Jq",
            "bW9kZWwvZ3JwYy9wcm90b3M7c2VydmljZV9sYXllcmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ServiceLayer.SlCommonTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ServiceLayer.SlLabelAction), typeof(global::ServiceLayer.SLMplsLabelBlockType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsLabelBlockKey), global::ServiceLayer.SLMplsLabelBlockKey.Parser, new[]{ "StartLabel", "LabelBlockSize", "BlockType", "ClientName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsLabelBlockMsg), global::ServiceLayer.SLMplsLabelBlockMsg.Parser, new[]{ "Oper", "MplsBlocks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsLabelBlockMsgRes), global::ServiceLayer.SLMplsLabelBlockMsgRes.Parser, new[]{ "ErrStatus", "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsLabelBlockMsgRsp), global::ServiceLayer.SLMplsLabelBlockMsgRsp.Parser, new[]{ "StatusSummary", "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsLabelBlockGetMsg), global::ServiceLayer.SLMplsLabelBlockGetMsg.Parser, new[]{ "Key", "EntriesCount", "GetNext" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsLabelBlockGetMsgRsp), global::ServiceLayer.SLMplsLabelBlockGetMsgRsp.Parser, new[]{ "Eof", "ErrStatus", "Entries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SlMplsReg), global::ServiceLayer.SlMplsReg.Parser, new[]{ "PurgeIntervalSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsRegMsg), global::ServiceLayer.SLMplsRegMsg.Parser, new[]{ "Oper", "RegMsg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsRegMsgRsp), global::ServiceLayer.SLMplsRegMsgRsp.Parser, new[]{ "ErrStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsGetMsg), global::ServiceLayer.SLMplsGetMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsGetMsgRsp), global::ServiceLayer.SLMplsGetMsgRsp.Parser, new[]{ "ErrStatus", "MaxLabelsPerBlock", "MaxLabelblocksPerLabelblockmsg", "MinStartLabel", "LabelTableSize", "MaxIlmPerIlmmsg", "MaxPathsPerIlm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsGetStatsMsgRsp), global::ServiceLayer.SLMplsGetStatsMsgRsp.Parser, new[]{ "ErrStatus", "LabelBlockCount", "IlmCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsPath), global::ServiceLayer.SLMplsPath.Parser, new[]{ "NexthopAddress", "NexthopInterface", "LoadMetric", "VrfName", "Action", "PathId", "ProtectedPathBitmap", "LabelStack", "RemoteAddress", "SlMplsCosVal", "SlMplsPathPriority", "SlMplsPathSetId", "SlMplsPathDown" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsIlmKey), global::ServiceLayer.SLMplsIlmKey.Parser, new[]{ "LocalLabel", "SlMplsCosVal", "Prefix" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsIlmKey.Types.IPv4PrefixKey), global::ServiceLayer.SLMplsIlmKey.Types.IPv4PrefixKey.Parser, new[]{ "Prefix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsIlmKey.Types.IPv6PrefixKey), global::ServiceLayer.SLMplsIlmKey.Types.IPv6PrefixKey.Parser, new[]{ "Prefix" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsIlmKey.Types.IPPrefixKey), global::ServiceLayer.SLMplsIlmKey.Types.IPPrefixKey.Parser, new[]{ "V4Prefix", "V6Prefix", "PrefixLen", "VrfName" }, new[]{ "Entry" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsCos), global::ServiceLayer.SLMplsCos.Parser, new[]{ "Exp", "DefaultElspPath", "ForwardingClass" }, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsIlmEntry), global::ServiceLayer.SLMplsIlmEntry.Parser, new[]{ "Key", "Paths", "Priority" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsIlmMsg), global::ServiceLayer.SLMplsIlmMsg.Parser, new[]{ "Oper", "Correlator", "MplsIlms" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsIlmRes), global::ServiceLayer.SLMplsIlmRes.Parser, new[]{ "ErrStatus", "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsIlmMsgRsp), global::ServiceLayer.SLMplsIlmMsgRsp.Parser, new[]{ "Correlator", "StatusSummary", "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsIlmGetMsg), global::ServiceLayer.SLMplsIlmGetMsg.Parser, new[]{ "Correlator", "Key", "EntriesCount", "GetNext" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLMplsIlmGetMsgRsp), global::ServiceLayer.SLMplsIlmGetMsgRsp.Parser, new[]{ "Correlator", "Eof", "ErrStatus", "Entries" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// MPLS label actions.
  /// </summary>
  public enum SlLabelAction {
    /// <summary>
    /// Reserved. 0x0
    /// </summary>
    [pbr::OriginalName("SL_LABEL_ACTION_RESERVED")] Reserved = 0,
    /// <summary>
    /// Swap. 0x1
    /// Swap outer label and forward.
    /// Used at tunnel midpoint for swapping labels.
    /// </summary>
    [pbr::OriginalName("SL_LABEL_ACTION_SWAP")] Swap = 1,
    /// <summary>
    /// Pop and forward. 0x2
    /// Pop outer label and forward.
    /// Used for per CE and per prefix label disposition at egress PE.
    /// </summary>
    [pbr::OriginalName("SL_LABEL_ACTION_POP_AND_FORWARD")] PopAndForward = 2,
    /// <summary>
    /// Pop and lookup IPv4. 0x3
    /// Pop and lookup the IPv4 next header in the specified Vrf.
    /// Used for per vrf labels at egress PE.
    /// </summary>
    [pbr::OriginalName("SL_LABEL_ACTION_POP_AND_LOOKUP_IPV4")] PopAndLookupIpv4 = 3,
    /// <summary>
    /// Pop and lookup IPv6. 0x4
    /// Pop and lookup the IPv6 next header in the specified Vrf.
    /// Used for per vrf labels at egress PE.
    /// </summary>
    [pbr::OriginalName("SL_LABEL_ACTION_POP_AND_LOOKUP_IPV6")] PopAndLookupIpv6 = 4,
    /// <summary>
    /// Pop and lookup. 0x5
    /// Pop and lookup the next header in the packet (MPLS, IPv4, IPv6) in the specified Vrf.
    /// Used for per vrf labels at egress PE.
    /// </summary>
    [pbr::OriginalName("SL_LABEL_ACTION_POP_AND_LOOKUP")] PopAndLookup = 5,
    /// <summary>
    /// Push. 0x6
    /// Push MPLS labels on a IP packet. Support
    /// only exists for IP imposition.
    /// </summary>
    [pbr::OriginalName("SL_LABEL_ACTION_PUSH")] Push = 6,
  }

  /// <summary>
  /// Label Block Types
  /// </summary>
  public enum SLMplsLabelBlockType {
    /// <summary>
    /// Reserved. 0x0
    /// </summary>
    [pbr::OriginalName("SL_MPLS_LABEL_BLOCK_TYPE_RESERVED")] Reserved = 0,
    /// <summary>
    /// Segment Routing Global Block (SRGB) Block Type. 0x1
    /// </summary>
    [pbr::OriginalName("SL_MPLS_LABEL_BLOCK_TYPE_SRGB")] Srgb = 1,
    /// <summary>
    /// Class Based Forwarding (CBF) Block Type. 0x2
    /// </summary>
    [pbr::OriginalName("SL_MPLS_LABEL_BLOCK_TYPE_CBF")] Cbf = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// MPLS Label block key.
  /// This message is used to relay the label block key attributes.
  /// </summary>
  public sealed partial class SLMplsLabelBlockKey : pb::IMessage<SLMplsLabelBlockKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsLabelBlockKey> _parser = new pb::MessageParser<SLMplsLabelBlockKey>(() => new SLMplsLabelBlockKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsLabelBlockKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockKey(SLMplsLabelBlockKey other) : this() {
      startLabel_ = other.startLabel_;
      labelBlockSize_ = other.labelBlockSize_;
      blockType_ = other.blockType_;
      clientName_ = other.clientName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockKey Clone() {
      return new SLMplsLabelBlockKey(this);
    }

    /// <summary>Field number for the "StartLabel" field.</summary>
    public const int StartLabelFieldNumber = 1;
    private uint startLabel_;
    /// <summary>
    /// Starting label value of the block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StartLabel {
      get { return startLabel_; }
      set {
        startLabel_ = value;
      }
    }

    /// <summary>Field number for the "LabelBlockSize" field.</summary>
    public const int LabelBlockSizeFieldNumber = 2;
    private uint labelBlockSize_;
    /// <summary>
    /// Label block size.
    /// Block size should be &lt;= SLServerResponse.MaxLabelsPerBlock
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LabelBlockSize {
      get { return labelBlockSize_; }
      set {
        labelBlockSize_ = value;
      }
    }

    /// <summary>Field number for the "BlockType" field.</summary>
    public const int BlockTypeFieldNumber = 3;
    private global::ServiceLayer.SLMplsLabelBlockType blockType_ = global::ServiceLayer.SLMplsLabelBlockType.Reserved;
    /// <summary>
    /// Label block type. See definition of SlMplsLabelBlockType for valid values.
    /// If none specified, defaults to SL_MPLS_LABEL_BLOCK_TYPE_SRGB.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLMplsLabelBlockType BlockType {
      get { return blockType_; }
      set {
        blockType_ = value;
      }
    }

    /// <summary>Field number for the "ClientName" field.</summary>
    public const int ClientNameFieldNumber = 4;
    private string clientName_ = "";
    /// <summary>
    /// Label block client name as configured e.g. through CLI.
    /// Client name is ignored if BlockType is not SL_MPLS_LABEL_BLOCK_TYPE_CBF.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientName {
      get { return clientName_; }
      set {
        clientName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsLabelBlockKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsLabelBlockKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartLabel != other.StartLabel) return false;
      if (LabelBlockSize != other.LabelBlockSize) return false;
      if (BlockType != other.BlockType) return false;
      if (ClientName != other.ClientName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StartLabel != 0) hash ^= StartLabel.GetHashCode();
      if (LabelBlockSize != 0) hash ^= LabelBlockSize.GetHashCode();
      if (BlockType != global::ServiceLayer.SLMplsLabelBlockType.Reserved) hash ^= BlockType.GetHashCode();
      if (ClientName.Length != 0) hash ^= ClientName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StartLabel != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StartLabel);
      }
      if (LabelBlockSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(LabelBlockSize);
      }
      if (BlockType != global::ServiceLayer.SLMplsLabelBlockType.Reserved) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BlockType);
      }
      if (ClientName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClientName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StartLabel != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(StartLabel);
      }
      if (LabelBlockSize != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(LabelBlockSize);
      }
      if (BlockType != global::ServiceLayer.SLMplsLabelBlockType.Reserved) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BlockType);
      }
      if (ClientName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ClientName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StartLabel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StartLabel);
      }
      if (LabelBlockSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LabelBlockSize);
      }
      if (BlockType != global::ServiceLayer.SLMplsLabelBlockType.Reserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BlockType);
      }
      if (ClientName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsLabelBlockKey other) {
      if (other == null) {
        return;
      }
      if (other.StartLabel != 0) {
        StartLabel = other.StartLabel;
      }
      if (other.LabelBlockSize != 0) {
        LabelBlockSize = other.LabelBlockSize;
      }
      if (other.BlockType != global::ServiceLayer.SLMplsLabelBlockType.Reserved) {
        BlockType = other.BlockType;
      }
      if (other.ClientName.Length != 0) {
        ClientName = other.ClientName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartLabel = input.ReadUInt32();
            break;
          }
          case 16: {
            LabelBlockSize = input.ReadUInt32();
            break;
          }
          case 24: {
            BlockType = (global::ServiceLayer.SLMplsLabelBlockType) input.ReadEnum();
            break;
          }
          case 34: {
            ClientName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StartLabel = input.ReadUInt32();
            break;
          }
          case 16: {
            LabelBlockSize = input.ReadUInt32();
            break;
          }
          case 24: {
            BlockType = (global::ServiceLayer.SLMplsLabelBlockType) input.ReadEnum();
            break;
          }
          case 34: {
            ClientName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Label block batch reservation message.
  /// This message is used to send a batch of label block requests.
  /// The Oper attributes indicates add or delete operations.
  /// </summary>
  public sealed partial class SLMplsLabelBlockMsg : pb::IMessage<SLMplsLabelBlockMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsLabelBlockMsg> _parser = new pb::MessageParser<SLMplsLabelBlockMsg>(() => new SLMplsLabelBlockMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsLabelBlockMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockMsg(SLMplsLabelBlockMsg other) : this() {
      oper_ = other.oper_;
      mplsBlocks_ = other.mplsBlocks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockMsg Clone() {
      return new SLMplsLabelBlockMsg(this);
    }

    /// <summary>Field number for the "Oper" field.</summary>
    public const int OperFieldNumber = 1;
    private global::ServiceLayer.SLObjectOp oper_ = global::ServiceLayer.SLObjectOp.SlObjopReserved;
    /// <summary>
    /// MPLS Label Block Operations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLObjectOp Oper {
      get { return oper_; }
      set {
        oper_ = value;
      }
    }

    /// <summary>Field number for the "MplsBlocks" field.</summary>
    public const int MplsBlocksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLMplsLabelBlockKey> _repeated_mplsBlocks_codec
        = pb::FieldCodec.ForMessage(18, global::ServiceLayer.SLMplsLabelBlockKey.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLMplsLabelBlockKey> mplsBlocks_ = new pbc::RepeatedField<global::ServiceLayer.SLMplsLabelBlockKey>();
    /// <summary>
    /// List of label blocks requests.
    /// List size should be &lt;= SLServerResponse.MaxLabelBlocksPerRequest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLMplsLabelBlockKey> MplsBlocks {
      get { return mplsBlocks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsLabelBlockMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsLabelBlockMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Oper != other.Oper) return false;
      if(!mplsBlocks_.Equals(other.mplsBlocks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Oper != global::ServiceLayer.SLObjectOp.SlObjopReserved) hash ^= Oper.GetHashCode();
      hash ^= mplsBlocks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Oper != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oper);
      }
      mplsBlocks_.WriteTo(output, _repeated_mplsBlocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Oper != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oper);
      }
      mplsBlocks_.WriteTo(ref output, _repeated_mplsBlocks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Oper != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Oper);
      }
      size += mplsBlocks_.CalculateSize(_repeated_mplsBlocks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsLabelBlockMsg other) {
      if (other == null) {
        return;
      }
      if (other.Oper != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        Oper = other.Oper;
      }
      mplsBlocks_.Add(other.mplsBlocks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Oper = (global::ServiceLayer.SLObjectOp) input.ReadEnum();
            break;
          }
          case 18: {
            mplsBlocks_.AddEntriesFrom(input, _repeated_mplsBlocks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Oper = (global::ServiceLayer.SLObjectOp) input.ReadEnum();
            break;
          }
          case 18: {
            mplsBlocks_.AddEntriesFrom(ref input, _repeated_mplsBlocks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Label block reservation result.
  /// This message is used to convey the result status corresponding to
  /// the label block operation.
  /// </summary>
  public sealed partial class SLMplsLabelBlockMsgRes : pb::IMessage<SLMplsLabelBlockMsgRes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsLabelBlockMsgRes> _parser = new pb::MessageParser<SLMplsLabelBlockMsgRes>(() => new SLMplsLabelBlockMsgRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsLabelBlockMsgRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockMsgRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockMsgRes(SLMplsLabelBlockMsgRes other) : this() {
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      key_ = other.key_ != null ? other.key_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockMsgRes Clone() {
      return new SLMplsLabelBlockMsgRes(this);
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 1;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Corresponding error code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 2;
    private global::ServiceLayer.SLMplsLabelBlockKey key_;
    /// <summary>
    /// Key for which the error code is reported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLMplsLabelBlockKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsLabelBlockMsgRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsLabelBlockMsgRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if (!object.Equals(Key, other.Key)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      if (key_ != null) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (key_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (key_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsLabelBlockMsgRes other) {
      if (other == null) {
        return;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::ServiceLayer.SLMplsLabelBlockKey();
        }
        Key.MergeFrom(other.Key);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 18: {
            if (key_ == null) {
              Key = new global::ServiceLayer.SLMplsLabelBlockKey();
            }
            input.ReadMessage(Key);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 18: {
            if (key_ == null) {
              Key = new global::ServiceLayer.SLMplsLabelBlockKey();
            }
            input.ReadMessage(Key);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Label block batch reservation response.
  /// This message is used to convey a summary status for the batch operation.
  /// If there are errors encountered, the Results field would indicate which
  /// label block reservation failed.
  /// </summary>
  public sealed partial class SLMplsLabelBlockMsgRsp : pb::IMessage<SLMplsLabelBlockMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsLabelBlockMsgRsp> _parser = new pb::MessageParser<SLMplsLabelBlockMsgRsp>(() => new SLMplsLabelBlockMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsLabelBlockMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockMsgRsp(SLMplsLabelBlockMsgRsp other) : this() {
      statusSummary_ = other.statusSummary_ != null ? other.statusSummary_.Clone() : null;
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockMsgRsp Clone() {
      return new SLMplsLabelBlockMsgRsp(this);
    }

    /// <summary>Field number for the "StatusSummary" field.</summary>
    public const int StatusSummaryFieldNumber = 1;
    private global::ServiceLayer.SLErrorStatus statusSummary_;
    /// <summary>
    /// Summary result of the bulk operation (refer to enum SLErrorStatus)
    /// In general, the StatusSummary implies one of 3 things:
    /// 1. SL_SUCCESS: signifies that the entire bulk operation was successful.
    ///         In this case, the Results list is empty.
    /// 2. SL_SOME_ERR: signifies that the operation failed for one or more
    ///         entries. In this case, Results holds the result for
    ///         each individual entry in the bulk.
    /// 3. SL_RPC_XXX: signifies that the entire bulk operation failed.
    ///         In this case, the Results list is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus StatusSummary {
      get { return statusSummary_; }
      set {
        statusSummary_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLMplsLabelBlockMsgRes> _repeated_results_codec
        = pb::FieldCodec.ForMessage(18, global::ServiceLayer.SLMplsLabelBlockMsgRes.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLMplsLabelBlockMsgRes> results_ = new pbc::RepeatedField<global::ServiceLayer.SLMplsLabelBlockMsgRes>();
    /// <summary>
    /// In case of errors, this field indicates which entry in the bulk was
    /// erroneous.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLMplsLabelBlockMsgRes> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsLabelBlockMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsLabelBlockMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StatusSummary, other.StatusSummary)) return false;
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (statusSummary_ != null) hash ^= StatusSummary.GetHashCode();
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (statusSummary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusSummary);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (statusSummary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusSummary);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (statusSummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusSummary);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsLabelBlockMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.statusSummary_ != null) {
        if (statusSummary_ == null) {
          StatusSummary = new global::ServiceLayer.SLErrorStatus();
        }
        StatusSummary.MergeFrom(other.StatusSummary);
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (statusSummary_ == null) {
              StatusSummary = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(StatusSummary);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (statusSummary_ == null) {
              StatusSummary = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(StatusSummary);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Label Block Get Message
  /// This message is used to query previous label block reservations.
  /// </summary>
  public sealed partial class SLMplsLabelBlockGetMsg : pb::IMessage<SLMplsLabelBlockGetMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsLabelBlockGetMsg> _parser = new pb::MessageParser<SLMplsLabelBlockGetMsg>(() => new SLMplsLabelBlockGetMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsLabelBlockGetMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockGetMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockGetMsg(SLMplsLabelBlockGetMsg other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      entriesCount_ = other.entriesCount_;
      getNext_ = other.getNext_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockGetMsg Clone() {
      return new SLMplsLabelBlockGetMsg(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::ServiceLayer.SLMplsLabelBlockKey key_;
    /// <summary>
    /// MPLS Label Block key.
    /// If the Key is not specified, then request up to the first 
    /// 'EntriesCount' entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLMplsLabelBlockKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "EntriesCount" field.</summary>
    public const int EntriesCountFieldNumber = 2;
    private uint entriesCount_;
    /// <summary>
    /// Number of entries requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EntriesCount {
      get { return entriesCount_; }
      set {
        entriesCount_ = value;
      }
    }

    /// <summary>Field number for the "GetNext" field.</summary>
    public const int GetNextFieldNumber = 3;
    private bool getNext_;
    /// <summary>
    /// if GetNext is FALSE:
    ///     request up to 'EntriesCount' entries starting from the key
    /// If GetNext is TRUE, or if the key exact match is not found:
    ///     request up to 'EntriesCount' entries starting from the key's next
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetNext {
      get { return getNext_; }
      set {
        getNext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsLabelBlockGetMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsLabelBlockGetMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (EntriesCount != other.EntriesCount) return false;
      if (GetNext != other.GetNext) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (EntriesCount != 0) hash ^= EntriesCount.GetHashCode();
      if (GetNext != false) hash ^= GetNext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (EntriesCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EntriesCount);
      }
      if (GetNext != false) {
        output.WriteRawTag(24);
        output.WriteBool(GetNext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (EntriesCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EntriesCount);
      }
      if (GetNext != false) {
        output.WriteRawTag(24);
        output.WriteBool(GetNext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (EntriesCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntriesCount);
      }
      if (GetNext != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsLabelBlockGetMsg other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::ServiceLayer.SLMplsLabelBlockKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.EntriesCount != 0) {
        EntriesCount = other.EntriesCount;
      }
      if (other.GetNext != false) {
        GetNext = other.GetNext;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::ServiceLayer.SLMplsLabelBlockKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 16: {
            EntriesCount = input.ReadUInt32();
            break;
          }
          case 24: {
            GetNext = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::ServiceLayer.SLMplsLabelBlockKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 16: {
            EntriesCount = input.ReadUInt32();
            break;
          }
          case 24: {
            GetNext = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Label Block get message response
  /// This message is the response to the label block query.
  /// </summary>
  public sealed partial class SLMplsLabelBlockGetMsgRsp : pb::IMessage<SLMplsLabelBlockGetMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsLabelBlockGetMsgRsp> _parser = new pb::MessageParser<SLMplsLabelBlockGetMsgRsp>(() => new SLMplsLabelBlockGetMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsLabelBlockGetMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockGetMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockGetMsgRsp(SLMplsLabelBlockGetMsgRsp other) : this() {
      eof_ = other.eof_;
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsLabelBlockGetMsgRsp Clone() {
      return new SLMplsLabelBlockGetMsgRsp(this);
    }

    /// <summary>Field number for the "Eof" field.</summary>
    public const int EofFieldNumber = 1;
    private bool eof_;
    /// <summary>
    /// End Of File.
    /// When set to True, it indicates that the server has returned M, where 
    /// M &lt; N, of the original N requested Entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Eof {
      get { return eof_; }
      set {
        eof_ = value;
      }
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 2;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Status of the Get operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "Entries" field.</summary>
    public const int EntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLMplsLabelBlockKey> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceLayer.SLMplsLabelBlockKey.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLMplsLabelBlockKey> entries_ = new pbc::RepeatedField<global::ServiceLayer.SLMplsLabelBlockKey>();
    /// <summary>
    /// Returned entries as requested in the Get operation.
    /// if ErrStatus is SL_SUCCESS, Entries contains the info requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLMplsLabelBlockKey> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsLabelBlockGetMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsLabelBlockGetMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Eof != other.Eof) return false;
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Eof != false) hash ^= Eof.GetHashCode();
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Eof != false) {
        output.WriteRawTag(8);
        output.WriteBool(Eof);
      }
      if (errStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrStatus);
      }
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Eof != false) {
        output.WriteRawTag(8);
        output.WriteBool(Eof);
      }
      if (errStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrStatus);
      }
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Eof != false) {
        size += 1 + 1;
      }
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsLabelBlockGetMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.Eof != false) {
        Eof = other.Eof;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Eof = input.ReadBool();
            break;
          }
          case 18: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Eof = input.ReadBool();
            break;
          }
          case 18: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Registration message.
  /// </summary>
  public sealed partial class SlMplsReg : pb::IMessage<SlMplsReg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SlMplsReg> _parser = new pb::MessageParser<SlMplsReg>(() => new SlMplsReg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SlMplsReg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlMplsReg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlMplsReg(SlMplsReg other) : this() {
      purgeIntervalSeconds_ = other.purgeIntervalSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SlMplsReg Clone() {
      return new SlMplsReg(this);
    }

    /// <summary>Field number for the "PurgeIntervalSeconds" field.</summary>
    public const int PurgeIntervalSecondsFieldNumber = 1;
    private uint purgeIntervalSeconds_;
    /// <summary>
    /// In case the Service Layer -> LSD connection is lost, this specifies the
    /// timeout period after which LSD will automatically purge the installed
    /// ILMs, unless the service layer:
    ///    1. Sends MPLS Registration message
    ///    2. Replays all label blocks and ILMs
    ///    3. and sends MPLS EOF message
    /// Similarly, in the event of an RP Switchover the ILMs must be replayed
    /// within the purge interval.
    /// Purge timer is ignored for all registration messages except for
    /// SL_REGOP_REGISTER
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PurgeIntervalSeconds {
      get { return purgeIntervalSeconds_; }
      set {
        purgeIntervalSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SlMplsReg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SlMplsReg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PurgeIntervalSeconds != other.PurgeIntervalSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PurgeIntervalSeconds != 0) hash ^= PurgeIntervalSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PurgeIntervalSeconds != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PurgeIntervalSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PurgeIntervalSeconds != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PurgeIntervalSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PurgeIntervalSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PurgeIntervalSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SlMplsReg other) {
      if (other == null) {
        return;
      }
      if (other.PurgeIntervalSeconds != 0) {
        PurgeIntervalSeconds = other.PurgeIntervalSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PurgeIntervalSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PurgeIntervalSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Registration message.
  /// This message is used for MPLS global registration. Clients must register
  /// before using any MPLS service.
  /// </summary>
  public sealed partial class SLMplsRegMsg : pb::IMessage<SLMplsRegMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsRegMsg> _parser = new pb::MessageParser<SLMplsRegMsg>(() => new SLMplsRegMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsRegMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsRegMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsRegMsg(SLMplsRegMsg other) : this() {
      oper_ = other.oper_;
      regMsg_ = other.regMsg_ != null ? other.regMsg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsRegMsg Clone() {
      return new SLMplsRegMsg(this);
    }

    /// <summary>Field number for the "Oper" field.</summary>
    public const int OperFieldNumber = 1;
    private global::ServiceLayer.SLRegOp oper_ = global::ServiceLayer.SLRegOp.Reserved;
    /// <summary>
    /// Registration Operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLRegOp Oper {
      get { return oper_; }
      set {
        oper_ = value;
      }
    }

    /// <summary>Field number for the "RegMsg" field.</summary>
    public const int RegMsgFieldNumber = 2;
    private global::ServiceLayer.SlMplsReg regMsg_;
    /// <summary>
    /// Registration Message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SlMplsReg RegMsg {
      get { return regMsg_; }
      set {
        regMsg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsRegMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsRegMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Oper != other.Oper) return false;
      if (!object.Equals(RegMsg, other.RegMsg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Oper != global::ServiceLayer.SLRegOp.Reserved) hash ^= Oper.GetHashCode();
      if (regMsg_ != null) hash ^= RegMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Oper != global::ServiceLayer.SLRegOp.Reserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oper);
      }
      if (regMsg_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Oper != global::ServiceLayer.SLRegOp.Reserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oper);
      }
      if (regMsg_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Oper != global::ServiceLayer.SLRegOp.Reserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Oper);
      }
      if (regMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsRegMsg other) {
      if (other == null) {
        return;
      }
      if (other.Oper != global::ServiceLayer.SLRegOp.Reserved) {
        Oper = other.Oper;
      }
      if (other.regMsg_ != null) {
        if (regMsg_ == null) {
          RegMsg = new global::ServiceLayer.SlMplsReg();
        }
        RegMsg.MergeFrom(other.RegMsg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Oper = (global::ServiceLayer.SLRegOp) input.ReadEnum();
            break;
          }
          case 18: {
            if (regMsg_ == null) {
              RegMsg = new global::ServiceLayer.SlMplsReg();
            }
            input.ReadMessage(RegMsg);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Oper = (global::ServiceLayer.SLRegOp) input.ReadEnum();
            break;
          }
          case 18: {
            if (regMsg_ == null) {
              RegMsg = new global::ServiceLayer.SlMplsReg();
            }
            input.ReadMessage(RegMsg);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Registration response message.
  /// This message is used to convey the result of the MPLS registration.
  /// </summary>
  public sealed partial class SLMplsRegMsgRsp : pb::IMessage<SLMplsRegMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsRegMsgRsp> _parser = new pb::MessageParser<SLMplsRegMsgRsp>(() => new SLMplsRegMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsRegMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsRegMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsRegMsgRsp(SLMplsRegMsgRsp other) : this() {
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsRegMsgRsp Clone() {
      return new SLMplsRegMsgRsp(this);
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 1;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Error code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsRegMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsRegMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsRegMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Get Global Info message.
  /// This message is used to query MPLS global capabilities.
  /// </summary>
  public sealed partial class SLMplsGetMsg : pb::IMessage<SLMplsGetMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsGetMsg> _parser = new pb::MessageParser<SLMplsGetMsg>(() => new SLMplsGetMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsGetMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsGetMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsGetMsg(SLMplsGetMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsGetMsg Clone() {
      return new SLMplsGetMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsGetMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsGetMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsGetMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Get Global Info response message.
  /// This message is used to convey the response to the global capabilities query.
  /// </summary>
  public sealed partial class SLMplsGetMsgRsp : pb::IMessage<SLMplsGetMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsGetMsgRsp> _parser = new pb::MessageParser<SLMplsGetMsgRsp>(() => new SLMplsGetMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsGetMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsGetMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsGetMsgRsp(SLMplsGetMsgRsp other) : this() {
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      maxLabelsPerBlock_ = other.maxLabelsPerBlock_;
      maxLabelblocksPerLabelblockmsg_ = other.maxLabelblocksPerLabelblockmsg_;
      minStartLabel_ = other.minStartLabel_;
      labelTableSize_ = other.labelTableSize_;
      maxIlmPerIlmmsg_ = other.maxIlmPerIlmmsg_;
      maxPathsPerIlm_ = other.maxPathsPerIlm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsGetMsgRsp Clone() {
      return new SLMplsGetMsgRsp(this);
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 1;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Error code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "MaxLabelsPerBlock" field.</summary>
    public const int MaxLabelsPerBlockFieldNumber = 2;
    private uint maxLabelsPerBlock_;
    /// <summary>
    /// Maximum labels that can be allocated/freed per label block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxLabelsPerBlock {
      get { return maxLabelsPerBlock_; }
      set {
        maxLabelsPerBlock_ = value;
      }
    }

    /// <summary>Field number for the "MaxLabelblocksPerLabelblockmsg" field.</summary>
    public const int MaxLabelblocksPerLabelblockmsgFieldNumber = 3;
    private uint maxLabelblocksPerLabelblockmsg_;
    /// <summary>
    /// Maximum label blocks that can be allocated/freed per MplsLabelBlockMsg
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxLabelblocksPerLabelblockmsg {
      get { return maxLabelblocksPerLabelblockmsg_; }
      set {
        maxLabelblocksPerLabelblockmsg_ = value;
      }
    }

    /// <summary>Field number for the "MinStartLabel" field.</summary>
    public const int MinStartLabelFieldNumber = 4;
    private uint minStartLabel_;
    /// <summary>
    /// Minimum label value that can be reserved on the platform.
    /// MplsLabelBlockKey.StartLabel >= MinStartLabel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MinStartLabel {
      get { return minStartLabel_; }
      set {
        minStartLabel_ = value;
      }
    }

    /// <summary>Field number for the "LabelTableSize" field.</summary>
    public const int LabelTableSizeFieldNumber = 5;
    private uint labelTableSize_;
    /// <summary>
    /// Label table size for the platform.
    /// MplsLabelBlockKey.StartLabel &lt;= LabelTableSize
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LabelTableSize {
      get { return labelTableSize_; }
      set {
        labelTableSize_ = value;
      }
    }

    /// <summary>Field number for the "MaxIlmPerIlmmsg" field.</summary>
    public const int MaxIlmPerIlmmsgFieldNumber = 6;
    private uint maxIlmPerIlmmsg_;
    /// <summary>
    /// Max ILM objects within a single IlmMsg message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxIlmPerIlmmsg {
      get { return maxIlmPerIlmmsg_; }
      set {
        maxIlmPerIlmmsg_ = value;
      }
    }

    /// <summary>Field number for the "MaxPathsPerIlm" field.</summary>
    public const int MaxPathsPerIlmFieldNumber = 7;
    private uint maxPathsPerIlm_;
    /// <summary>
    /// Maximum paths per ILM.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxPathsPerIlm {
      get { return maxPathsPerIlm_; }
      set {
        maxPathsPerIlm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsGetMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsGetMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if (MaxLabelsPerBlock != other.MaxLabelsPerBlock) return false;
      if (MaxLabelblocksPerLabelblockmsg != other.MaxLabelblocksPerLabelblockmsg) return false;
      if (MinStartLabel != other.MinStartLabel) return false;
      if (LabelTableSize != other.LabelTableSize) return false;
      if (MaxIlmPerIlmmsg != other.MaxIlmPerIlmmsg) return false;
      if (MaxPathsPerIlm != other.MaxPathsPerIlm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      if (MaxLabelsPerBlock != 0) hash ^= MaxLabelsPerBlock.GetHashCode();
      if (MaxLabelblocksPerLabelblockmsg != 0) hash ^= MaxLabelblocksPerLabelblockmsg.GetHashCode();
      if (MinStartLabel != 0) hash ^= MinStartLabel.GetHashCode();
      if (LabelTableSize != 0) hash ^= LabelTableSize.GetHashCode();
      if (MaxIlmPerIlmmsg != 0) hash ^= MaxIlmPerIlmmsg.GetHashCode();
      if (MaxPathsPerIlm != 0) hash ^= MaxPathsPerIlm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (MaxLabelsPerBlock != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxLabelsPerBlock);
      }
      if (MaxLabelblocksPerLabelblockmsg != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxLabelblocksPerLabelblockmsg);
      }
      if (MinStartLabel != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MinStartLabel);
      }
      if (LabelTableSize != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LabelTableSize);
      }
      if (MaxIlmPerIlmmsg != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxIlmPerIlmmsg);
      }
      if (MaxPathsPerIlm != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(MaxPathsPerIlm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (MaxLabelsPerBlock != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxLabelsPerBlock);
      }
      if (MaxLabelblocksPerLabelblockmsg != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxLabelblocksPerLabelblockmsg);
      }
      if (MinStartLabel != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MinStartLabel);
      }
      if (LabelTableSize != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LabelTableSize);
      }
      if (MaxIlmPerIlmmsg != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MaxIlmPerIlmmsg);
      }
      if (MaxPathsPerIlm != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(MaxPathsPerIlm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      if (MaxLabelsPerBlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxLabelsPerBlock);
      }
      if (MaxLabelblocksPerLabelblockmsg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxLabelblocksPerLabelblockmsg);
      }
      if (MinStartLabel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinStartLabel);
      }
      if (LabelTableSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LabelTableSize);
      }
      if (MaxIlmPerIlmmsg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxIlmPerIlmmsg);
      }
      if (MaxPathsPerIlm != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxPathsPerIlm);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsGetMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      if (other.MaxLabelsPerBlock != 0) {
        MaxLabelsPerBlock = other.MaxLabelsPerBlock;
      }
      if (other.MaxLabelblocksPerLabelblockmsg != 0) {
        MaxLabelblocksPerLabelblockmsg = other.MaxLabelblocksPerLabelblockmsg;
      }
      if (other.MinStartLabel != 0) {
        MinStartLabel = other.MinStartLabel;
      }
      if (other.LabelTableSize != 0) {
        LabelTableSize = other.LabelTableSize;
      }
      if (other.MaxIlmPerIlmmsg != 0) {
        MaxIlmPerIlmmsg = other.MaxIlmPerIlmmsg;
      }
      if (other.MaxPathsPerIlm != 0) {
        MaxPathsPerIlm = other.MaxPathsPerIlm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 16: {
            MaxLabelsPerBlock = input.ReadUInt32();
            break;
          }
          case 24: {
            MaxLabelblocksPerLabelblockmsg = input.ReadUInt32();
            break;
          }
          case 32: {
            MinStartLabel = input.ReadUInt32();
            break;
          }
          case 40: {
            LabelTableSize = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxIlmPerIlmmsg = input.ReadUInt32();
            break;
          }
          case 56: {
            MaxPathsPerIlm = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 16: {
            MaxLabelsPerBlock = input.ReadUInt32();
            break;
          }
          case 24: {
            MaxLabelblocksPerLabelblockmsg = input.ReadUInt32();
            break;
          }
          case 32: {
            MinStartLabel = input.ReadUInt32();
            break;
          }
          case 40: {
            LabelTableSize = input.ReadUInt32();
            break;
          }
          case 48: {
            MaxIlmPerIlmmsg = input.ReadUInt32();
            break;
          }
          case 56: {
            MaxPathsPerIlm = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Get Global Stats response message.
  /// This message is used to convey the response to the MPLS statistics query.
  /// </summary>
  public sealed partial class SLMplsGetStatsMsgRsp : pb::IMessage<SLMplsGetStatsMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsGetStatsMsgRsp> _parser = new pb::MessageParser<SLMplsGetStatsMsgRsp>(() => new SLMplsGetStatsMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsGetStatsMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsGetStatsMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsGetStatsMsgRsp(SLMplsGetStatsMsgRsp other) : this() {
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      labelBlockCount_ = other.labelBlockCount_;
      ilmCount_ = other.ilmCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsGetStatsMsgRsp Clone() {
      return new SLMplsGetStatsMsgRsp(this);
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 1;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Error code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "LabelBlockCount" field.</summary>
    public const int LabelBlockCountFieldNumber = 2;
    private uint labelBlockCount_;
    /// <summary>
    /// Num of label blocks created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LabelBlockCount {
      get { return labelBlockCount_; }
      set {
        labelBlockCount_ = value;
      }
    }

    /// <summary>Field number for the "IlmCount" field.</summary>
    public const int IlmCountFieldNumber = 3;
    private uint ilmCount_;
    /// <summary>
    /// Num ILMs added through the service layer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint IlmCount {
      get { return ilmCount_; }
      set {
        ilmCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsGetStatsMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsGetStatsMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if (LabelBlockCount != other.LabelBlockCount) return false;
      if (IlmCount != other.IlmCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      if (LabelBlockCount != 0) hash ^= LabelBlockCount.GetHashCode();
      if (IlmCount != 0) hash ^= IlmCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (LabelBlockCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(LabelBlockCount);
      }
      if (IlmCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(IlmCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (LabelBlockCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(LabelBlockCount);
      }
      if (IlmCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(IlmCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      if (LabelBlockCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LabelBlockCount);
      }
      if (IlmCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(IlmCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsGetStatsMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      if (other.LabelBlockCount != 0) {
        LabelBlockCount = other.LabelBlockCount;
      }
      if (other.IlmCount != 0) {
        IlmCount = other.IlmCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 16: {
            LabelBlockCount = input.ReadUInt32();
            break;
          }
          case 24: {
            IlmCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 16: {
            LabelBlockCount = input.ReadUInt32();
            break;
          }
          case 24: {
            IlmCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS Path (or NHLFE) information.
  /// This message holds the ILM path attributes.
  /// </summary>
  public sealed partial class SLMplsPath : pb::IMessage<SLMplsPath>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsPath> _parser = new pb::MessageParser<SLMplsPath>(() => new SLMplsPath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsPath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsPath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsPath(SLMplsPath other) : this() {
      nexthopAddress_ = other.nexthopAddress_ != null ? other.nexthopAddress_.Clone() : null;
      nexthopInterface_ = other.nexthopInterface_ != null ? other.nexthopInterface_.Clone() : null;
      loadMetric_ = other.loadMetric_;
      vrfName_ = other.vrfName_;
      action_ = other.action_;
      pathId_ = other.pathId_;
      protectedPathBitmap_ = other.protectedPathBitmap_.Clone();
      labelStack_ = other.labelStack_.Clone();
      remoteAddress_ = other.remoteAddress_.Clone();
      slMplsCosVal_ = other.slMplsCosVal_ != null ? other.slMplsCosVal_.Clone() : null;
      slMplsPathPriority_ = other.slMplsPathPriority_;
      slMplsPathSetId_ = other.slMplsPathSetId_;
      slMplsPathDown_ = other.slMplsPathDown_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsPath Clone() {
      return new SLMplsPath(this);
    }

    /// <summary>Field number for the "NexthopAddress" field.</summary>
    public const int NexthopAddressFieldNumber = 1;
    private global::ServiceLayer.SLIpAddress nexthopAddress_;
    /// <summary>
    /// One of IPv4 or IPv6 address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLIpAddress NexthopAddress {
      get { return nexthopAddress_; }
      set {
        nexthopAddress_ = value;
      }
    }

    /// <summary>Field number for the "NexthopInterface" field.</summary>
    public const int NexthopInterfaceFieldNumber = 2;
    private global::ServiceLayer.SLInterface nexthopInterface_;
    /// <summary>
    /// Next hop interface.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLInterface NexthopInterface {
      get { return nexthopInterface_; }
      set {
        nexthopInterface_ = value;
      }
    }

    /// <summary>Field number for the "LoadMetric" field.</summary>
    public const int LoadMetricFieldNumber = 3;
    private uint loadMetric_;
    /// <summary>
    /// ECMP load weight metric
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LoadMetric {
      get { return loadMetric_; }
      set {
        loadMetric_ = value;
      }
    }

    /// <summary>Field number for the "VrfName" field.</summary>
    public const int VrfNameFieldNumber = 4;
    private string vrfName_ = "";
    /// <summary>
    /// VRF name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrfName {
      get { return vrfName_; }
      set {
        vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Action" field.</summary>
    public const int ActionFieldNumber = 5;
    private global::ServiceLayer.SlLabelAction action_ = global::ServiceLayer.SlLabelAction.Reserved;
    /// <summary>
    /// Associated MPLS incoming label's action.
    /// The label action dictates what to do with the incoming label.
    /// Possible actions are:
    ///  - SL_LABEL_ACTION_SWAP: SWAP the incoming label with the
    ///      specified LabelStack (see below), and forward the packet.
    ///      Path attributes: NexthopInterface, VrfName, NexthopAddress.
    ///  - SL_LABEL_ACTION_POP_AND_FORWARD: Pop the label, and forward the
    ///      packet to the specified nexthop.
    ///      Path attributes: NexthopInterface, VrfName, NexthopAddress.
    ///  - SL_LABEL_ACTION_POP_AND_LOOKUP: Pop the label, and lookup the
    ///      packet's next header's address in the specified VrfName.
    ///      Path attributes: VrfName.
    ///  - SL_LABEL_ACTION_POP_AND_LOOKUP_V4: Pop the label, and if the
    ///      packet is IPv4, then lookup the IPv4 address in the specified
    ///      VrfName.
    ///      Path attributes: VrfName.
    ///  - SL_LABEL_ACTION_POP_AND_LOOKUP_V6: Pop the label, and if the
    ///      packet is IPv6, then lookup the IPv6 address in the specified
    ///      VrfName.
    ///      Path attributes: VrfName.
    ///  - SL_LABEL_ACTION_PUSH: PUSH the specified LabelStack, and forward
    ///      the packet.
    ///      Path attributes: NexthopInterface, VrfName, NexthopAddress.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SlLabelAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "PathId" field.</summary>
    public const int PathIdFieldNumber = 6;
    private uint pathId_;
    /// <summary>
    /// Path identifier.
    /// Path-id is used to uniquely identify a path when it comes to
    /// protection (Fast Re-Route - FRR). It is not used otherwise.
    ///
    /// In general, for FRR, There are 3 main path attributes:
    ///    1. Primary. The path is the main path to carry traffic.
    ///    2. Protected. A primary path with a configured backup path.
    ///    3. Backup. The path is protecting a primary path.
    ///
    /// NOTE1: a primary path (A) can be simultaneously protected (by B), and
    /// acting as a backup for another path (C).
    /// In this example, the primary path C is protected by A (which happens to
    /// be primary). So the primary path (A) is Primary, Protected, and Backup.
    ///
    /// The following are various path types based on combinations of attributes:
    ///    1. Pure Primary i.e. Not Protected and is not a Backup.
    ///       => PathId is optional. ProtectedPathBitmap = 0x0
    ///    2. Primary and Protected. Path is not a Backup.
    ///       => PathId is mandatory. ProtectedPathBitmap = 0x0
    ///    3. Primary and Not Protected. Path is also a Backup.
    ///       => PathId is mandatory. ProtectedPathBitmap = 0xYYYY
    ///    4. Primary and Protected. Path is also a Backup.
    ///       => PathId is mandatory. ProtectedPathBitmap = 0xYYYY
    ///    5. Pure Backup. Protection is not allowed for backup paths.
    ///       => PathId is mandatory. ProtectedPathBitmap = 0xYYYY
    ///
    /// NOTE2: Pure backup path-id uses a different range than primary path-ids.
    /// The valid range of primary path IDs, and pure backup path IDS are
    /// platform dependent and can be retrieved through the client init message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PathId {
      get { return pathId_; }
      set {
        pathId_ = value;
      }
    }

    /// <summary>Field number for the "ProtectedPathBitmap" field.</summary>
    public const int ProtectedPathBitmapFieldNumber = 7;
    private static readonly pb::FieldCodec<ulong> _repeated_protectedPathBitmap_codec
        = pb::FieldCodec.ForUInt64(58);
    private readonly pbc::RepeatedField<ulong> protectedPathBitmap_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// Path protection bitmap.
    /// The bitmap of paths this Backup path is protecting.
    /// Example: If this path is protecting paths with IDs 4, 5 and 6, then
    /// set bitmap to:
    /// 0x38 ==> 0011 1000
    ///            || |-- path 4
    ///            ||-- path 5
    ///            |-- path 6
    /// (1 &lt;&lt; (pathId_1 - 1))  | (1 &lt;&lt; (pathId_2 - 1)) | (1 &lt;&lt; (pathId_3 - 1))
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> ProtectedPathBitmap {
      get { return protectedPathBitmap_; }
    }

    /// <summary>Field number for the "LabelStack" field.</summary>
    public const int LabelStackFieldNumber = 8;
    private static readonly pb::FieldCodec<uint> _repeated_labelStack_codec
        = pb::FieldCodec.ForUInt32(66);
    private readonly pbc::RepeatedField<uint> labelStack_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// MPLS label stack.
    /// Stack of labels that is pushed when the packet is switched out.
    /// Label size is LSB 20 bits. Forwarding will set EXP, TTL and BOS.
    /// For primary path, typically only 1 label is used.
    /// For backup paths, more than 1 label can be used. If more than one label
    /// is used, remote backup addresses must be specified.
    /// The maximum number of labels pushed for primary and backup are
    /// platform dependent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> LabelStack {
      get { return labelStack_; }
    }

    /// <summary>Field number for the "RemoteAddress" field.</summary>
    public const int RemoteAddressFieldNumber = 9;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLIpAddress> _repeated_remoteAddress_codec
        = pb::FieldCodec.ForMessage(74, global::ServiceLayer.SLIpAddress.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLIpAddress> remoteAddress_ = new pbc::RepeatedField<global::ServiceLayer.SLIpAddress>();
    /// <summary>
    /// MPLS Remote router backup address.
    /// This field is used for backup MPLS path with more than one label,
    /// Typically associated with the PQ routers and remote Loop Free
    /// Alternatives.
    /// For N+1 backup labels, N remote backup addresses must be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLIpAddress> RemoteAddress {
      get { return remoteAddress_; }
    }

    /// <summary>Field number for the "SlMplsCosVal" field.</summary>
    public const int SlMplsCosValFieldNumber = 10;
    private global::ServiceLayer.SLMplsCos slMplsCosVal_;
    /// <summary>
    /// Either Exp bits or CoS forwarding class.
    /// For class based forwarding of MPLS labels, the client can choose to
    /// program forwarding class as an attribute of the path. In this
    /// programming model, all paths for all classes must be programmed together
    /// and class must not be specified as key attribute on the ILM.
    /// All the paths of the same class must be contiguous.
    /// If any path has a class specified, then all others paths must
    /// have the class specified as well.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLMplsCos SlMplsCosVal {
      get { return slMplsCosVal_; }
      set {
        slMplsCosVal_ = value;
      }
    }

    /// <summary>Field number for the "SlMplsPathPriority" field.</summary>
    public const int SlMplsPathPriorityFieldNumber = 11;
    private uint slMplsPathPriority_;
    /// <summary>
    /// Set Path priority as primary, backup or reserved.
    /// 0: Path is installed as the primary path.
    /// 1: Path is installed as a backup path.
    /// Everything else: Reserved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SlMplsPathPriority {
      get { return slMplsPathPriority_; }
      set {
        slMplsPathPriority_ = value;
      }
    }

    /// <summary>Field number for the "SlMplsPathSetId" field.</summary>
    public const int SlMplsPathSetIdFieldNumber = 12;
    private uint slMplsPathSetId_;
    /// <summary>
    /// Set the Path set-id,
    /// Integer range [0 .. 7], default = 0
    /// Paths of an ILM should be associated with a SetID.
    /// SetID is used for grouping paths with the same SlMplsPathPriority value. 
    /// Paths with same SetID must have same SlMplsPathPriority value.
    /// Client makes the entire set primary or backup by setting
    /// the SlMplsPathPriority for all paths in the set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SlMplsPathSetId {
      get { return slMplsPathSetId_; }
      set {
        slMplsPathSetId_ = value;
      }
    }

    /// <summary>Field number for the "SlMplsPathDown" field.</summary>
    public const int SlMplsPathDownFieldNumber = 13;
    private bool slMplsPathDown_;
    /// <summary>
    /// Set the Path availability.
    /// TRUE  : Path is DOWN. Not available for carrying traffic but preprogrammed.
    /// FALSE : Path is UP. Available for carrying traffic.(default).
    /// Load metric should be set to 0 when the path is down.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SlMplsPathDown {
      get { return slMplsPathDown_; }
      set {
        slMplsPathDown_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsPath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsPath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NexthopAddress, other.NexthopAddress)) return false;
      if (!object.Equals(NexthopInterface, other.NexthopInterface)) return false;
      if (LoadMetric != other.LoadMetric) return false;
      if (VrfName != other.VrfName) return false;
      if (Action != other.Action) return false;
      if (PathId != other.PathId) return false;
      if(!protectedPathBitmap_.Equals(other.protectedPathBitmap_)) return false;
      if(!labelStack_.Equals(other.labelStack_)) return false;
      if(!remoteAddress_.Equals(other.remoteAddress_)) return false;
      if (!object.Equals(SlMplsCosVal, other.SlMplsCosVal)) return false;
      if (SlMplsPathPriority != other.SlMplsPathPriority) return false;
      if (SlMplsPathSetId != other.SlMplsPathSetId) return false;
      if (SlMplsPathDown != other.SlMplsPathDown) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nexthopAddress_ != null) hash ^= NexthopAddress.GetHashCode();
      if (nexthopInterface_ != null) hash ^= NexthopInterface.GetHashCode();
      if (LoadMetric != 0) hash ^= LoadMetric.GetHashCode();
      if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
      if (Action != global::ServiceLayer.SlLabelAction.Reserved) hash ^= Action.GetHashCode();
      if (PathId != 0) hash ^= PathId.GetHashCode();
      hash ^= protectedPathBitmap_.GetHashCode();
      hash ^= labelStack_.GetHashCode();
      hash ^= remoteAddress_.GetHashCode();
      if (slMplsCosVal_ != null) hash ^= SlMplsCosVal.GetHashCode();
      if (SlMplsPathPriority != 0) hash ^= SlMplsPathPriority.GetHashCode();
      if (SlMplsPathSetId != 0) hash ^= SlMplsPathSetId.GetHashCode();
      if (SlMplsPathDown != false) hash ^= SlMplsPathDown.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nexthopAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NexthopAddress);
      }
      if (nexthopInterface_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NexthopInterface);
      }
      if (LoadMetric != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(LoadMetric);
      }
      if (VrfName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(VrfName);
      }
      if (Action != global::ServiceLayer.SlLabelAction.Reserved) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Action);
      }
      if (PathId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PathId);
      }
      protectedPathBitmap_.WriteTo(output, _repeated_protectedPathBitmap_codec);
      labelStack_.WriteTo(output, _repeated_labelStack_codec);
      remoteAddress_.WriteTo(output, _repeated_remoteAddress_codec);
      if (slMplsCosVal_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SlMplsCosVal);
      }
      if (SlMplsPathPriority != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(SlMplsPathPriority);
      }
      if (SlMplsPathSetId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(SlMplsPathSetId);
      }
      if (SlMplsPathDown != false) {
        output.WriteRawTag(104);
        output.WriteBool(SlMplsPathDown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nexthopAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NexthopAddress);
      }
      if (nexthopInterface_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NexthopInterface);
      }
      if (LoadMetric != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(LoadMetric);
      }
      if (VrfName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(VrfName);
      }
      if (Action != global::ServiceLayer.SlLabelAction.Reserved) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Action);
      }
      if (PathId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PathId);
      }
      protectedPathBitmap_.WriteTo(ref output, _repeated_protectedPathBitmap_codec);
      labelStack_.WriteTo(ref output, _repeated_labelStack_codec);
      remoteAddress_.WriteTo(ref output, _repeated_remoteAddress_codec);
      if (slMplsCosVal_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SlMplsCosVal);
      }
      if (SlMplsPathPriority != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(SlMplsPathPriority);
      }
      if (SlMplsPathSetId != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(SlMplsPathSetId);
      }
      if (SlMplsPathDown != false) {
        output.WriteRawTag(104);
        output.WriteBool(SlMplsPathDown);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nexthopAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NexthopAddress);
      }
      if (nexthopInterface_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NexthopInterface);
      }
      if (LoadMetric != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LoadMetric);
      }
      if (VrfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
      }
      if (Action != global::ServiceLayer.SlLabelAction.Reserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (PathId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PathId);
      }
      size += protectedPathBitmap_.CalculateSize(_repeated_protectedPathBitmap_codec);
      size += labelStack_.CalculateSize(_repeated_labelStack_codec);
      size += remoteAddress_.CalculateSize(_repeated_remoteAddress_codec);
      if (slMplsCosVal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SlMplsCosVal);
      }
      if (SlMplsPathPriority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SlMplsPathPriority);
      }
      if (SlMplsPathSetId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SlMplsPathSetId);
      }
      if (SlMplsPathDown != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsPath other) {
      if (other == null) {
        return;
      }
      if (other.nexthopAddress_ != null) {
        if (nexthopAddress_ == null) {
          NexthopAddress = new global::ServiceLayer.SLIpAddress();
        }
        NexthopAddress.MergeFrom(other.NexthopAddress);
      }
      if (other.nexthopInterface_ != null) {
        if (nexthopInterface_ == null) {
          NexthopInterface = new global::ServiceLayer.SLInterface();
        }
        NexthopInterface.MergeFrom(other.NexthopInterface);
      }
      if (other.LoadMetric != 0) {
        LoadMetric = other.LoadMetric;
      }
      if (other.VrfName.Length != 0) {
        VrfName = other.VrfName;
      }
      if (other.Action != global::ServiceLayer.SlLabelAction.Reserved) {
        Action = other.Action;
      }
      if (other.PathId != 0) {
        PathId = other.PathId;
      }
      protectedPathBitmap_.Add(other.protectedPathBitmap_);
      labelStack_.Add(other.labelStack_);
      remoteAddress_.Add(other.remoteAddress_);
      if (other.slMplsCosVal_ != null) {
        if (slMplsCosVal_ == null) {
          SlMplsCosVal = new global::ServiceLayer.SLMplsCos();
        }
        SlMplsCosVal.MergeFrom(other.SlMplsCosVal);
      }
      if (other.SlMplsPathPriority != 0) {
        SlMplsPathPriority = other.SlMplsPathPriority;
      }
      if (other.SlMplsPathSetId != 0) {
        SlMplsPathSetId = other.SlMplsPathSetId;
      }
      if (other.SlMplsPathDown != false) {
        SlMplsPathDown = other.SlMplsPathDown;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nexthopAddress_ == null) {
              NexthopAddress = new global::ServiceLayer.SLIpAddress();
            }
            input.ReadMessage(NexthopAddress);
            break;
          }
          case 18: {
            if (nexthopInterface_ == null) {
              NexthopInterface = new global::ServiceLayer.SLInterface();
            }
            input.ReadMessage(NexthopInterface);
            break;
          }
          case 24: {
            LoadMetric = input.ReadUInt32();
            break;
          }
          case 34: {
            VrfName = input.ReadString();
            break;
          }
          case 40: {
            Action = (global::ServiceLayer.SlLabelAction) input.ReadEnum();
            break;
          }
          case 48: {
            PathId = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            protectedPathBitmap_.AddEntriesFrom(input, _repeated_protectedPathBitmap_codec);
            break;
          }
          case 66:
          case 64: {
            labelStack_.AddEntriesFrom(input, _repeated_labelStack_codec);
            break;
          }
          case 74: {
            remoteAddress_.AddEntriesFrom(input, _repeated_remoteAddress_codec);
            break;
          }
          case 82: {
            if (slMplsCosVal_ == null) {
              SlMplsCosVal = new global::ServiceLayer.SLMplsCos();
            }
            input.ReadMessage(SlMplsCosVal);
            break;
          }
          case 88: {
            SlMplsPathPriority = input.ReadUInt32();
            break;
          }
          case 96: {
            SlMplsPathSetId = input.ReadUInt32();
            break;
          }
          case 104: {
            SlMplsPathDown = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nexthopAddress_ == null) {
              NexthopAddress = new global::ServiceLayer.SLIpAddress();
            }
            input.ReadMessage(NexthopAddress);
            break;
          }
          case 18: {
            if (nexthopInterface_ == null) {
              NexthopInterface = new global::ServiceLayer.SLInterface();
            }
            input.ReadMessage(NexthopInterface);
            break;
          }
          case 24: {
            LoadMetric = input.ReadUInt32();
            break;
          }
          case 34: {
            VrfName = input.ReadString();
            break;
          }
          case 40: {
            Action = (global::ServiceLayer.SlLabelAction) input.ReadEnum();
            break;
          }
          case 48: {
            PathId = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            protectedPathBitmap_.AddEntriesFrom(ref input, _repeated_protectedPathBitmap_codec);
            break;
          }
          case 66:
          case 64: {
            labelStack_.AddEntriesFrom(ref input, _repeated_labelStack_codec);
            break;
          }
          case 74: {
            remoteAddress_.AddEntriesFrom(ref input, _repeated_remoteAddress_codec);
            break;
          }
          case 82: {
            if (slMplsCosVal_ == null) {
              SlMplsCosVal = new global::ServiceLayer.SLMplsCos();
            }
            input.ReadMessage(SlMplsCosVal);
            break;
          }
          case 88: {
            SlMplsPathPriority = input.ReadUInt32();
            break;
          }
          case 96: {
            SlMplsPathSetId = input.ReadUInt32();
            break;
          }
          case 104: {
            SlMplsPathDown = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS ILM entry's key.
  /// This message defines the Incoming Label Map key attributes.
  /// </summary>
  public sealed partial class SLMplsIlmKey : pb::IMessage<SLMplsIlmKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsIlmKey> _parser = new pb::MessageParser<SLMplsIlmKey>(() => new SLMplsIlmKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsIlmKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmKey(SLMplsIlmKey other) : this() {
      localLabel_ = other.localLabel_;
      slMplsCosVal_ = other.slMplsCosVal_ != null ? other.slMplsCosVal_.Clone() : null;
      prefix_ = other.prefix_ != null ? other.prefix_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmKey Clone() {
      return new SLMplsIlmKey(this);
    }

    /// <summary>Field number for the "LocalLabel" field.</summary>
    public const int LocalLabelFieldNumber = 1;
    private uint localLabel_;
    /// <summary>
    /// Incoming local label.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LocalLabel {
      get { return localLabel_; }
      set {
        localLabel_ = value;
      }
    }

    /// <summary>Field number for the "SlMplsCosVal" field.</summary>
    public const int SlMplsCosValFieldNumber = 2;
    private global::ServiceLayer.SLMplsCos slMplsCosVal_;
    /// <summary>
    /// Either Exp bits or CoS forwarding class.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLMplsCos SlMplsCosVal {
      get { return slMplsCosVal_; }
      set {
        slMplsCosVal_ = value;
      }
    }

    /// <summary>Field number for the "Prefix" field.</summary>
    public const int PrefixFieldNumber = 3;
    private global::ServiceLayer.SLMplsIlmKey.Types.IPPrefixKey prefix_;
    /// <summary>
    /// IP Prefix key. If set, the prefix is used
    /// as ILM key instead of LocalLabel.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLMplsIlmKey.Types.IPPrefixKey Prefix {
      get { return prefix_; }
      set {
        prefix_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsIlmKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsIlmKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LocalLabel != other.LocalLabel) return false;
      if (!object.Equals(SlMplsCosVal, other.SlMplsCosVal)) return false;
      if (!object.Equals(Prefix, other.Prefix)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LocalLabel != 0) hash ^= LocalLabel.GetHashCode();
      if (slMplsCosVal_ != null) hash ^= SlMplsCosVal.GetHashCode();
      if (prefix_ != null) hash ^= Prefix.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LocalLabel != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(LocalLabel);
      }
      if (slMplsCosVal_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SlMplsCosVal);
      }
      if (prefix_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Prefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LocalLabel != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(LocalLabel);
      }
      if (slMplsCosVal_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SlMplsCosVal);
      }
      if (prefix_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Prefix);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LocalLabel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LocalLabel);
      }
      if (slMplsCosVal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SlMplsCosVal);
      }
      if (prefix_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prefix);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsIlmKey other) {
      if (other == null) {
        return;
      }
      if (other.LocalLabel != 0) {
        LocalLabel = other.LocalLabel;
      }
      if (other.slMplsCosVal_ != null) {
        if (slMplsCosVal_ == null) {
          SlMplsCosVal = new global::ServiceLayer.SLMplsCos();
        }
        SlMplsCosVal.MergeFrom(other.SlMplsCosVal);
      }
      if (other.prefix_ != null) {
        if (prefix_ == null) {
          Prefix = new global::ServiceLayer.SLMplsIlmKey.Types.IPPrefixKey();
        }
        Prefix.MergeFrom(other.Prefix);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LocalLabel = input.ReadUInt32();
            break;
          }
          case 18: {
            if (slMplsCosVal_ == null) {
              SlMplsCosVal = new global::ServiceLayer.SLMplsCos();
            }
            input.ReadMessage(SlMplsCosVal);
            break;
          }
          case 26: {
            if (prefix_ == null) {
              Prefix = new global::ServiceLayer.SLMplsIlmKey.Types.IPPrefixKey();
            }
            input.ReadMessage(Prefix);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LocalLabel = input.ReadUInt32();
            break;
          }
          case 18: {
            if (slMplsCosVal_ == null) {
              SlMplsCosVal = new global::ServiceLayer.SLMplsCos();
            }
            input.ReadMessage(SlMplsCosVal);
            break;
          }
          case 26: {
            if (prefix_ == null) {
              Prefix = new global::ServiceLayer.SLMplsIlmKey.Types.IPPrefixKey();
            }
            input.ReadMessage(Prefix);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SLMplsIlmKey message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class IPv4PrefixKey : pb::IMessage<IPv4PrefixKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IPv4PrefixKey> _parser = new pb::MessageParser<IPv4PrefixKey>(() => new IPv4PrefixKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<IPv4PrefixKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::ServiceLayer.SLMplsIlmKey.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IPv4PrefixKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IPv4PrefixKey(IPv4PrefixKey other) : this() {
          prefix_ = other.prefix_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IPv4PrefixKey Clone() {
          return new IPv4PrefixKey(this);
        }

        /// <summary>Field number for the "Prefix" field.</summary>
        public const int PrefixFieldNumber = 1;
        private uint prefix_;
        /// <summary>
        /// IPv4 Prefix in host byte order.
        /// - 0.0.0.0
        /// - 1.0.0.0 - 223.255.255.255
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint Prefix {
          get { return prefix_; }
          set {
            prefix_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as IPv4PrefixKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(IPv4PrefixKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Prefix != other.Prefix) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Prefix != 0) hash ^= Prefix.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Prefix != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Prefix);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Prefix != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Prefix);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Prefix != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Prefix);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(IPv4PrefixKey other) {
          if (other == null) {
            return;
          }
          if (other.Prefix != 0) {
            Prefix = other.Prefix;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Prefix = input.ReadUInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Prefix = input.ReadUInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class IPv6PrefixKey : pb::IMessage<IPv6PrefixKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IPv6PrefixKey> _parser = new pb::MessageParser<IPv6PrefixKey>(() => new IPv6PrefixKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<IPv6PrefixKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::ServiceLayer.SLMplsIlmKey.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IPv6PrefixKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IPv6PrefixKey(IPv6PrefixKey other) : this() {
          prefix_ = other.prefix_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IPv6PrefixKey Clone() {
          return new IPv6PrefixKey(this);
        }

        /// <summary>Field number for the "Prefix" field.</summary>
        public const int PrefixFieldNumber = 1;
        private pb::ByteString prefix_ = pb::ByteString.Empty;
        /// <summary>
        /// IPv6 Prefix in network byte order.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pb::ByteString Prefix {
          get { return prefix_; }
          set {
            prefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as IPv6PrefixKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(IPv6PrefixKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Prefix != other.Prefix) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Prefix.Length != 0) hash ^= Prefix.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Prefix.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Prefix);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Prefix.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Prefix);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Prefix.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Prefix);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(IPv6PrefixKey other) {
          if (other == null) {
            return;
          }
          if (other.Prefix.Length != 0) {
            Prefix = other.Prefix;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Prefix = input.ReadBytes();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Prefix = input.ReadBytes();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class IPPrefixKey : pb::IMessage<IPPrefixKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IPPrefixKey> _parser = new pb::MessageParser<IPPrefixKey>(() => new IPPrefixKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<IPPrefixKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::ServiceLayer.SLMplsIlmKey.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IPPrefixKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IPPrefixKey(IPPrefixKey other) : this() {
          prefixLen_ = other.prefixLen_;
          vrfName_ = other.vrfName_;
          switch (other.EntryCase) {
            case EntryOneofCase.V4Prefix:
              V4Prefix = other.V4Prefix.Clone();
              break;
            case EntryOneofCase.V6Prefix:
              V6Prefix = other.V6Prefix.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public IPPrefixKey Clone() {
          return new IPPrefixKey(this);
        }

        /// <summary>Field number for the "V4Prefix" field.</summary>
        public const int V4PrefixFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::ServiceLayer.SLMplsIlmKey.Types.IPv4PrefixKey V4Prefix {
          get { return entryCase_ == EntryOneofCase.V4Prefix ? (global::ServiceLayer.SLMplsIlmKey.Types.IPv4PrefixKey) entry_ : null; }
          set {
            entry_ = value;
            entryCase_ = value == null ? EntryOneofCase.None : EntryOneofCase.V4Prefix;
          }
        }

        /// <summary>Field number for the "V6Prefix" field.</summary>
        public const int V6PrefixFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::ServiceLayer.SLMplsIlmKey.Types.IPv6PrefixKey V6Prefix {
          get { return entryCase_ == EntryOneofCase.V6Prefix ? (global::ServiceLayer.SLMplsIlmKey.Types.IPv6PrefixKey) entry_ : null; }
          set {
            entry_ = value;
            entryCase_ = value == null ? EntryOneofCase.None : EntryOneofCase.V6Prefix;
          }
        }

        /// <summary>Field number for the "PrefixLen" field.</summary>
        public const int PrefixLenFieldNumber = 3;
        private uint prefixLen_;
        /// <summary>
        /// IPv4 Prefix length [0-32]
        /// IPv6 Prefix length [0-128]
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public uint PrefixLen {
          get { return prefixLen_; }
          set {
            prefixLen_ = value;
          }
        }

        /// <summary>Field number for the "VrfName" field.</summary>
        public const int VrfNameFieldNumber = 4;
        private string vrfName_ = "";
        /// <summary>
        /// VRF name. Client must withdraw
        /// ILM if VRF configuration is removed.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string VrfName {
          get { return vrfName_; }
          set {
            vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        private object entry_;
        /// <summary>Enum of possible cases for the "entry" oneof.</summary>
        public enum EntryOneofCase {
          None = 0,
          V4Prefix = 1,
          V6Prefix = 2,
        }
        private EntryOneofCase entryCase_ = EntryOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public EntryOneofCase EntryCase {
          get { return entryCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearEntry() {
          entryCase_ = EntryOneofCase.None;
          entry_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as IPPrefixKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(IPPrefixKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(V4Prefix, other.V4Prefix)) return false;
          if (!object.Equals(V6Prefix, other.V6Prefix)) return false;
          if (PrefixLen != other.PrefixLen) return false;
          if (VrfName != other.VrfName) return false;
          if (EntryCase != other.EntryCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (entryCase_ == EntryOneofCase.V4Prefix) hash ^= V4Prefix.GetHashCode();
          if (entryCase_ == EntryOneofCase.V6Prefix) hash ^= V6Prefix.GetHashCode();
          if (PrefixLen != 0) hash ^= PrefixLen.GetHashCode();
          if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
          hash ^= (int) entryCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (entryCase_ == EntryOneofCase.V4Prefix) {
            output.WriteRawTag(10);
            output.WriteMessage(V4Prefix);
          }
          if (entryCase_ == EntryOneofCase.V6Prefix) {
            output.WriteRawTag(18);
            output.WriteMessage(V6Prefix);
          }
          if (PrefixLen != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(PrefixLen);
          }
          if (VrfName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(VrfName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (entryCase_ == EntryOneofCase.V4Prefix) {
            output.WriteRawTag(10);
            output.WriteMessage(V4Prefix);
          }
          if (entryCase_ == EntryOneofCase.V6Prefix) {
            output.WriteRawTag(18);
            output.WriteMessage(V6Prefix);
          }
          if (PrefixLen != 0) {
            output.WriteRawTag(24);
            output.WriteUInt32(PrefixLen);
          }
          if (VrfName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(VrfName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (entryCase_ == EntryOneofCase.V4Prefix) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(V4Prefix);
          }
          if (entryCase_ == EntryOneofCase.V6Prefix) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(V6Prefix);
          }
          if (PrefixLen != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PrefixLen);
          }
          if (VrfName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(IPPrefixKey other) {
          if (other == null) {
            return;
          }
          if (other.PrefixLen != 0) {
            PrefixLen = other.PrefixLen;
          }
          if (other.VrfName.Length != 0) {
            VrfName = other.VrfName;
          }
          switch (other.EntryCase) {
            case EntryOneofCase.V4Prefix:
              if (V4Prefix == null) {
                V4Prefix = new global::ServiceLayer.SLMplsIlmKey.Types.IPv4PrefixKey();
              }
              V4Prefix.MergeFrom(other.V4Prefix);
              break;
            case EntryOneofCase.V6Prefix:
              if (V6Prefix == null) {
                V6Prefix = new global::ServiceLayer.SLMplsIlmKey.Types.IPv6PrefixKey();
              }
              V6Prefix.MergeFrom(other.V6Prefix);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::ServiceLayer.SLMplsIlmKey.Types.IPv4PrefixKey subBuilder = new global::ServiceLayer.SLMplsIlmKey.Types.IPv4PrefixKey();
                if (entryCase_ == EntryOneofCase.V4Prefix) {
                  subBuilder.MergeFrom(V4Prefix);
                }
                input.ReadMessage(subBuilder);
                V4Prefix = subBuilder;
                break;
              }
              case 18: {
                global::ServiceLayer.SLMplsIlmKey.Types.IPv6PrefixKey subBuilder = new global::ServiceLayer.SLMplsIlmKey.Types.IPv6PrefixKey();
                if (entryCase_ == EntryOneofCase.V6Prefix) {
                  subBuilder.MergeFrom(V6Prefix);
                }
                input.ReadMessage(subBuilder);
                V6Prefix = subBuilder;
                break;
              }
              case 24: {
                PrefixLen = input.ReadUInt32();
                break;
              }
              case 34: {
                VrfName = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::ServiceLayer.SLMplsIlmKey.Types.IPv4PrefixKey subBuilder = new global::ServiceLayer.SLMplsIlmKey.Types.IPv4PrefixKey();
                if (entryCase_ == EntryOneofCase.V4Prefix) {
                  subBuilder.MergeFrom(V4Prefix);
                }
                input.ReadMessage(subBuilder);
                V4Prefix = subBuilder;
                break;
              }
              case 18: {
                global::ServiceLayer.SLMplsIlmKey.Types.IPv6PrefixKey subBuilder = new global::ServiceLayer.SLMplsIlmKey.Types.IPv6PrefixKey();
                if (entryCase_ == EntryOneofCase.V6Prefix) {
                  subBuilder.MergeFrom(V6Prefix);
                }
                input.ReadMessage(subBuilder);
                V6Prefix = subBuilder;
                break;
              }
              case 24: {
                PrefixLen = input.ReadUInt32();
                break;
              }
              case 34: {
                VrfName = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// MPLS ILM entry's CoS value
  /// This message contains either EXP bits or a forwarding class
  /// </summary>
  public sealed partial class SLMplsCos : pb::IMessage<SLMplsCos>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsCos> _parser = new pb::MessageParser<SLMplsCos>(() => new SLMplsCos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsCos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsCos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsCos(SLMplsCos other) : this() {
      switch (other.ValueCase) {
        case ValueOneofCase.Exp:
          Exp = other.Exp;
          break;
        case ValueOneofCase.DefaultElspPath:
          DefaultElspPath = other.DefaultElspPath;
          break;
        case ValueOneofCase.ForwardingClass:
          ForwardingClass = other.ForwardingClass;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsCos Clone() {
      return new SLMplsCos(this);
    }

    /// <summary>Field number for the "Exp" field.</summary>
    public const int ExpFieldNumber = 1;
    /// <summary>
    /// LSB 3 bits with valid range &lt;0-7>
    /// this is used to configure E-LSPs (see RFC 3270)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Exp {
      get { return valueCase_ == ValueOneofCase.Exp ? (uint) value_ : 0; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.Exp;
      }
    }

    /// <summary>Field number for the "DefaultElspPath" field.</summary>
    public const int DefaultElspPathFieldNumber = 2;
    /// <summary>
    /// Flag to indicate that this is also an E-LSP entry and all paths
    /// will be using this default path
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DefaultElspPath {
      get { return valueCase_ == ValueOneofCase.DefaultElspPath ? (bool) value_ : false; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.DefaultElspPath;
      }
    }

    /// <summary>Field number for the "ForwardingClass" field.</summary>
    public const int ForwardingClassFieldNumber = 3;
    /// <summary>
    /// forwarding class with valid range &lt;0-7>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ForwardingClass {
      get { return valueCase_ == ValueOneofCase.ForwardingClass ? (uint) value_ : 0; }
      set {
        value_ = value;
        valueCase_ = ValueOneofCase.ForwardingClass;
      }
    }

    private object value_;
    /// <summary>Enum of possible cases for the "value" oneof.</summary>
    public enum ValueOneofCase {
      None = 0,
      Exp = 1,
      DefaultElspPath = 2,
      ForwardingClass = 3,
    }
    private ValueOneofCase valueCase_ = ValueOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValueOneofCase ValueCase {
      get { return valueCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      valueCase_ = ValueOneofCase.None;
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsCos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsCos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Exp != other.Exp) return false;
      if (DefaultElspPath != other.DefaultElspPath) return false;
      if (ForwardingClass != other.ForwardingClass) return false;
      if (ValueCase != other.ValueCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (valueCase_ == ValueOneofCase.Exp) hash ^= Exp.GetHashCode();
      if (valueCase_ == ValueOneofCase.DefaultElspPath) hash ^= DefaultElspPath.GetHashCode();
      if (valueCase_ == ValueOneofCase.ForwardingClass) hash ^= ForwardingClass.GetHashCode();
      hash ^= (int) valueCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (valueCase_ == ValueOneofCase.Exp) {
        output.WriteRawTag(8);
        output.WriteUInt32(Exp);
      }
      if (valueCase_ == ValueOneofCase.DefaultElspPath) {
        output.WriteRawTag(16);
        output.WriteBool(DefaultElspPath);
      }
      if (valueCase_ == ValueOneofCase.ForwardingClass) {
        output.WriteRawTag(24);
        output.WriteUInt32(ForwardingClass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (valueCase_ == ValueOneofCase.Exp) {
        output.WriteRawTag(8);
        output.WriteUInt32(Exp);
      }
      if (valueCase_ == ValueOneofCase.DefaultElspPath) {
        output.WriteRawTag(16);
        output.WriteBool(DefaultElspPath);
      }
      if (valueCase_ == ValueOneofCase.ForwardingClass) {
        output.WriteRawTag(24);
        output.WriteUInt32(ForwardingClass);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (valueCase_ == ValueOneofCase.Exp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Exp);
      }
      if (valueCase_ == ValueOneofCase.DefaultElspPath) {
        size += 1 + 1;
      }
      if (valueCase_ == ValueOneofCase.ForwardingClass) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ForwardingClass);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsCos other) {
      if (other == null) {
        return;
      }
      switch (other.ValueCase) {
        case ValueOneofCase.Exp:
          Exp = other.Exp;
          break;
        case ValueOneofCase.DefaultElspPath:
          DefaultElspPath = other.DefaultElspPath;
          break;
        case ValueOneofCase.ForwardingClass:
          ForwardingClass = other.ForwardingClass;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Exp = input.ReadUInt32();
            break;
          }
          case 16: {
            DefaultElspPath = input.ReadBool();
            break;
          }
          case 24: {
            ForwardingClass = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Exp = input.ReadUInt32();
            break;
          }
          case 16: {
            DefaultElspPath = input.ReadBool();
            break;
          }
          case 24: {
            ForwardingClass = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS ILM entry.
  /// This messages defines an ILM entry.
  /// </summary>
  public sealed partial class SLMplsIlmEntry : pb::IMessage<SLMplsIlmEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsIlmEntry> _parser = new pb::MessageParser<SLMplsIlmEntry>(() => new SLMplsIlmEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsIlmEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmEntry(SLMplsIlmEntry other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      paths_ = other.paths_.Clone();
      priority_ = other.priority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmEntry Clone() {
      return new SLMplsIlmEntry(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::ServiceLayer.SLMplsIlmKey key_;
    /// <summary>
    /// ILM Key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLMplsIlmKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "Paths" field.</summary>
    public const int PathsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLMplsPath> _repeated_paths_codec
        = pb::FieldCodec.ForMessage(18, global::ServiceLayer.SLMplsPath.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLMplsPath> paths_ = new pbc::RepeatedField<global::ServiceLayer.SLMplsPath>();
    /// <summary>
    /// List of path (NHLFE) information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLMplsPath> Paths {
      get { return paths_; }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 3;
    private global::ServiceLayer.SLUpdatePriority priority_ = global::ServiceLayer.SLUpdatePriority.SlPriorityReserved;
    /// <summary>
    /// Each entry can have priority value, this priority value may be used
    /// in internal queuing of routes while programming the data-plane
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLUpdatePriority Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsIlmEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsIlmEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if(!paths_.Equals(other.paths_)) return false;
      if (Priority != other.Priority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      hash ^= paths_.GetHashCode();
      if (Priority != global::ServiceLayer.SLUpdatePriority.SlPriorityReserved) hash ^= Priority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      paths_.WriteTo(output, _repeated_paths_codec);
      if (Priority != global::ServiceLayer.SLUpdatePriority.SlPriorityReserved) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Priority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      paths_.WriteTo(ref output, _repeated_paths_codec);
      if (Priority != global::ServiceLayer.SLUpdatePriority.SlPriorityReserved) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Priority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      size += paths_.CalculateSize(_repeated_paths_codec);
      if (Priority != global::ServiceLayer.SLUpdatePriority.SlPriorityReserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Priority);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsIlmEntry other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::ServiceLayer.SLMplsIlmKey();
        }
        Key.MergeFrom(other.Key);
      }
      paths_.Add(other.paths_);
      if (other.Priority != global::ServiceLayer.SLUpdatePriority.SlPriorityReserved) {
        Priority = other.Priority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::ServiceLayer.SLMplsIlmKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            paths_.AddEntriesFrom(input, _repeated_paths_codec);
            break;
          }
          case 24: {
            Priority = (global::ServiceLayer.SLUpdatePriority) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::ServiceLayer.SLMplsIlmKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            paths_.AddEntriesFrom(ref input, _repeated_paths_codec);
            break;
          }
          case 24: {
            Priority = (global::ServiceLayer.SLUpdatePriority) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A batch of MPLS ILM entries.
  /// This message is used to send a batch of ILM entries.
  /// </summary>
  public sealed partial class SLMplsIlmMsg : pb::IMessage<SLMplsIlmMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsIlmMsg> _parser = new pb::MessageParser<SLMplsIlmMsg>(() => new SLMplsIlmMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsIlmMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmMsg(SLMplsIlmMsg other) : this() {
      oper_ = other.oper_;
      correlator_ = other.correlator_;
      mplsIlms_ = other.mplsIlms_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmMsg Clone() {
      return new SLMplsIlmMsg(this);
    }

    /// <summary>Field number for the "Oper" field.</summary>
    public const int OperFieldNumber = 1;
    private global::ServiceLayer.SLObjectOp oper_ = global::ServiceLayer.SLObjectOp.SlObjopReserved;
    /// <summary>
    /// MPLS Object Operations
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLObjectOp Oper {
      get { return oper_; }
      set {
        oper_ = value;
      }
    }

    /// <summary>Field number for the "Correlator" field.</summary>
    public const int CorrelatorFieldNumber = 2;
    private ulong correlator_;
    /// <summary>
    /// Correlator. This can be used to correlate replies with requests.
    /// The Server simply reflects this field back in the reply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Correlator {
      get { return correlator_; }
      set {
        correlator_ = value;
      }
    }

    /// <summary>Field number for the "MplsIlms" field.</summary>
    public const int MplsIlmsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLMplsIlmEntry> _repeated_mplsIlms_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceLayer.SLMplsIlmEntry.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLMplsIlmEntry> mplsIlms_ = new pbc::RepeatedField<global::ServiceLayer.SLMplsIlmEntry>();
    /// <summary>
    /// List of ILM entries
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLMplsIlmEntry> MplsIlms {
      get { return mplsIlms_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsIlmMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsIlmMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Oper != other.Oper) return false;
      if (Correlator != other.Correlator) return false;
      if(!mplsIlms_.Equals(other.mplsIlms_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Oper != global::ServiceLayer.SLObjectOp.SlObjopReserved) hash ^= Oper.GetHashCode();
      if (Correlator != 0UL) hash ^= Correlator.GetHashCode();
      hash ^= mplsIlms_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Oper != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oper);
      }
      if (Correlator != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Correlator);
      }
      mplsIlms_.WriteTo(output, _repeated_mplsIlms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Oper != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oper);
      }
      if (Correlator != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Correlator);
      }
      mplsIlms_.WriteTo(ref output, _repeated_mplsIlms_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Oper != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Oper);
      }
      if (Correlator != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Correlator);
      }
      size += mplsIlms_.CalculateSize(_repeated_mplsIlms_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsIlmMsg other) {
      if (other == null) {
        return;
      }
      if (other.Oper != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        Oper = other.Oper;
      }
      if (other.Correlator != 0UL) {
        Correlator = other.Correlator;
      }
      mplsIlms_.Add(other.mplsIlms_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Oper = (global::ServiceLayer.SLObjectOp) input.ReadEnum();
            break;
          }
          case 16: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 26: {
            mplsIlms_.AddEntriesFrom(input, _repeated_mplsIlms_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Oper = (global::ServiceLayer.SLObjectOp) input.ReadEnum();
            break;
          }
          case 16: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 26: {
            mplsIlms_.AddEntriesFrom(ref input, _repeated_mplsIlms_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS ILM result.
  /// This message is used to convey the result of the ILM entry operation.
  /// </summary>
  public sealed partial class SLMplsIlmRes : pb::IMessage<SLMplsIlmRes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsIlmRes> _parser = new pb::MessageParser<SLMplsIlmRes>(() => new SLMplsIlmRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsIlmRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmRes(SLMplsIlmRes other) : this() {
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      key_ = other.key_ != null ? other.key_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmRes Clone() {
      return new SLMplsIlmRes(this);
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 1;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Corresponding error code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 2;
    private global::ServiceLayer.SLMplsIlmKey key_;
    /// <summary>
    /// ILM Key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLMplsIlmKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsIlmRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsIlmRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if (!object.Equals(Key, other.Key)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      if (key_ != null) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (key_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (key_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsIlmRes other) {
      if (other == null) {
        return;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::ServiceLayer.SLMplsIlmKey();
        }
        Key.MergeFrom(other.Key);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 18: {
            if (key_ == null) {
              Key = new global::ServiceLayer.SLMplsIlmKey();
            }
            input.ReadMessage(Key);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 18: {
            if (key_ == null) {
              Key = new global::ServiceLayer.SLMplsIlmKey();
            }
            input.ReadMessage(Key);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS ILM batch response.
  /// This message is used to convey the result of the ILM batch operation.
  /// </summary>
  public sealed partial class SLMplsIlmMsgRsp : pb::IMessage<SLMplsIlmMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsIlmMsgRsp> _parser = new pb::MessageParser<SLMplsIlmMsgRsp>(() => new SLMplsIlmMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsIlmMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmMsgRsp(SLMplsIlmMsgRsp other) : this() {
      correlator_ = other.correlator_;
      statusSummary_ = other.statusSummary_ != null ? other.statusSummary_.Clone() : null;
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmMsgRsp Clone() {
      return new SLMplsIlmMsgRsp(this);
    }

    /// <summary>Field number for the "Correlator" field.</summary>
    public const int CorrelatorFieldNumber = 1;
    private ulong correlator_;
    /// <summary>
    /// Correlator. This can be used to correlate replies with requests.
    /// The Server simply reflects this field back in the reply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Correlator {
      get { return correlator_; }
      set {
        correlator_ = value;
      }
    }

    /// <summary>Field number for the "StatusSummary" field.</summary>
    public const int StatusSummaryFieldNumber = 2;
    private global::ServiceLayer.SLErrorStatus statusSummary_;
    /// <summary>
    /// Summary result of the bulk operation (refer to enum SLErrorStatus)
    /// In general, the StatusSummary implies one of 3 things:
    /// 1. SL_SUCCESS: signifies that the entire bulk operation was successful.
    ///         In this case, the Results list is empty.
    /// 2. SL_SOME_ERR: signifies that the operation failed for one or more
    ///         entries. In this case, Results holds the result for
    ///         each individual entry in the bulk.
    /// 3. SL_RPC_XXX: signifies that the entire bulk operation failed.
    ///         In this case, the Results list is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus StatusSummary {
      get { return statusSummary_; }
      set {
        statusSummary_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLMplsIlmRes> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceLayer.SLMplsIlmRes.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLMplsIlmRes> results_ = new pbc::RepeatedField<global::ServiceLayer.SLMplsIlmRes>();
    /// <summary>
    /// In case of errors, this field indicates which entry in the bulk was
    /// erroneous.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLMplsIlmRes> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsIlmMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsIlmMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Correlator != other.Correlator) return false;
      if (!object.Equals(StatusSummary, other.StatusSummary)) return false;
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Correlator != 0UL) hash ^= Correlator.GetHashCode();
      if (statusSummary_ != null) hash ^= StatusSummary.GetHashCode();
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Correlator != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Correlator);
      }
      if (statusSummary_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StatusSummary);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Correlator != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Correlator);
      }
      if (statusSummary_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(StatusSummary);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Correlator != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Correlator);
      }
      if (statusSummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusSummary);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsIlmMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.Correlator != 0UL) {
        Correlator = other.Correlator;
      }
      if (other.statusSummary_ != null) {
        if (statusSummary_ == null) {
          StatusSummary = new global::ServiceLayer.SLErrorStatus();
        }
        StatusSummary.MergeFrom(other.StatusSummary);
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 18: {
            if (statusSummary_ == null) {
              StatusSummary = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(StatusSummary);
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 18: {
            if (statusSummary_ == null) {
              StatusSummary = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(StatusSummary);
            break;
          }
          case 26: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS ILM Get Message
  /// This message is used to query the attributes of an ILM entry.
  /// All labels and prefixes programmed via the MPLS RPCs
  /// are stored in the same table and objects are returned
  /// from the specified key in the order of labels, IPv4 prefixes,
  /// followed any IPv6 prefixes.
  /// </summary>
  public sealed partial class SLMplsIlmGetMsg : pb::IMessage<SLMplsIlmGetMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsIlmGetMsg> _parser = new pb::MessageParser<SLMplsIlmGetMsg>(() => new SLMplsIlmGetMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsIlmGetMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmGetMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmGetMsg(SLMplsIlmGetMsg other) : this() {
      correlator_ = other.correlator_;
      key_ = other.key_ != null ? other.key_.Clone() : null;
      entriesCount_ = other.entriesCount_;
      getNext_ = other.getNext_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmGetMsg Clone() {
      return new SLMplsIlmGetMsg(this);
    }

    /// <summary>Field number for the "Correlator" field.</summary>
    public const int CorrelatorFieldNumber = 1;
    private ulong correlator_;
    /// <summary>
    /// Correlator. This can be used to correlate replies with requests.
    /// The Server simply reflects this field back in the reply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Correlator {
      get { return correlator_; }
      set {
        correlator_ = value;
      }
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 2;
    private global::ServiceLayer.SLMplsIlmKey key_;
    /// <summary>
    /// MPLS ILM key.
    /// If the Key is not specified, then request up to the first 
    /// 'EntriesCount' entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLMplsIlmKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "EntriesCount" field.</summary>
    public const int EntriesCountFieldNumber = 3;
    private uint entriesCount_;
    /// <summary>
    /// Number of entries requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EntriesCount {
      get { return entriesCount_; }
      set {
        entriesCount_ = value;
      }
    }

    /// <summary>Field number for the "GetNext" field.</summary>
    public const int GetNextFieldNumber = 4;
    private bool getNext_;
    /// <summary>
    /// if GetNext is FALSE:
    ///     request up to 'EntriesCount' entries starting from the key
    /// If GetNext is TRUE, or if the key exact match is not found:
    ///     request up to 'EntriesCount' entries starting from the key's next
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetNext {
      get { return getNext_; }
      set {
        getNext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsIlmGetMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsIlmGetMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Correlator != other.Correlator) return false;
      if (!object.Equals(Key, other.Key)) return false;
      if (EntriesCount != other.EntriesCount) return false;
      if (GetNext != other.GetNext) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Correlator != 0UL) hash ^= Correlator.GetHashCode();
      if (key_ != null) hash ^= Key.GetHashCode();
      if (EntriesCount != 0) hash ^= EntriesCount.GetHashCode();
      if (GetNext != false) hash ^= GetNext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Correlator != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Correlator);
      }
      if (key_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Key);
      }
      if (EntriesCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(EntriesCount);
      }
      if (GetNext != false) {
        output.WriteRawTag(32);
        output.WriteBool(GetNext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Correlator != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Correlator);
      }
      if (key_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Key);
      }
      if (EntriesCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(EntriesCount);
      }
      if (GetNext != false) {
        output.WriteRawTag(32);
        output.WriteBool(GetNext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Correlator != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Correlator);
      }
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (EntriesCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntriesCount);
      }
      if (GetNext != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsIlmGetMsg other) {
      if (other == null) {
        return;
      }
      if (other.Correlator != 0UL) {
        Correlator = other.Correlator;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::ServiceLayer.SLMplsIlmKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.EntriesCount != 0) {
        EntriesCount = other.EntriesCount;
      }
      if (other.GetNext != false) {
        GetNext = other.GetNext;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 18: {
            if (key_ == null) {
              Key = new global::ServiceLayer.SLMplsIlmKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 24: {
            EntriesCount = input.ReadUInt32();
            break;
          }
          case 32: {
            GetNext = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 18: {
            if (key_ == null) {
              Key = new global::ServiceLayer.SLMplsIlmKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 24: {
            EntriesCount = input.ReadUInt32();
            break;
          }
          case 32: {
            GetNext = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// MPLS ILM Get Message Response.
  /// </summary>
  public sealed partial class SLMplsIlmGetMsgRsp : pb::IMessage<SLMplsIlmGetMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLMplsIlmGetMsgRsp> _parser = new pb::MessageParser<SLMplsIlmGetMsgRsp>(() => new SLMplsIlmGetMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLMplsIlmGetMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlMplsReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmGetMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmGetMsgRsp(SLMplsIlmGetMsgRsp other) : this() {
      correlator_ = other.correlator_;
      eof_ = other.eof_;
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLMplsIlmGetMsgRsp Clone() {
      return new SLMplsIlmGetMsgRsp(this);
    }

    /// <summary>Field number for the "Correlator" field.</summary>
    public const int CorrelatorFieldNumber = 1;
    private ulong correlator_;
    /// <summary>
    /// Correlator. This can be used to correlate replies with requests.
    /// The Server simply reflects this field back in the reply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Correlator {
      get { return correlator_; }
      set {
        correlator_ = value;
      }
    }

    /// <summary>Field number for the "Eof" field.</summary>
    public const int EofFieldNumber = 2;
    private bool eof_;
    /// <summary>
    /// End Of File.
    /// When set to True, it indicates that the server has returned M, where
    /// M &lt; N, of the original N requested Entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Eof {
      get { return eof_; }
      set {
        eof_ = value;
      }
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 3;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Status of the Get operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "Entries" field.</summary>
    public const int EntriesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLMplsIlmEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(34, global::ServiceLayer.SLMplsIlmEntry.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLMplsIlmEntry> entries_ = new pbc::RepeatedField<global::ServiceLayer.SLMplsIlmEntry>();
    /// <summary>
    /// Returned entries as requested in the Get operation.
    /// if ErrStatus is SL_SUCCESS, Entries contains the info requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLMplsIlmEntry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLMplsIlmGetMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLMplsIlmGetMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Correlator != other.Correlator) return false;
      if (Eof != other.Eof) return false;
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Correlator != 0UL) hash ^= Correlator.GetHashCode();
      if (Eof != false) hash ^= Eof.GetHashCode();
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Correlator != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Correlator);
      }
      if (Eof != false) {
        output.WriteRawTag(16);
        output.WriteBool(Eof);
      }
      if (errStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ErrStatus);
      }
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Correlator != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Correlator);
      }
      if (Eof != false) {
        output.WriteRawTag(16);
        output.WriteBool(Eof);
      }
      if (errStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ErrStatus);
      }
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Correlator != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Correlator);
      }
      if (Eof != false) {
        size += 1 + 1;
      }
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLMplsIlmGetMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.Correlator != 0UL) {
        Correlator = other.Correlator;
      }
      if (other.Eof != false) {
        Eof = other.Eof;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 16: {
            Eof = input.ReadBool();
            break;
          }
          case 26: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 34: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 16: {
            Eof = input.ReadBool();
            break;
          }
          case 26: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 34: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
