// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: sl_route_common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ServiceLayer {

  /// <summary>Holder for reflection information generated from sl_route_common.proto</summary>
  public static partial class SlRouteCommonReflection {

    #region Descriptor
    /// <summary>File descriptor for sl_route_common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SlRouteCommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVzbF9yb3V0ZV9jb21tb24ucHJvdG8SDXNlcnZpY2VfbGF5ZXIaFXNsX2Nv",
            "bW1vbl90eXBlcy5wcm90byIWChRTTFJvdXRlR2xvYmFsc0dldE1zZyKGAQoX",
            "U0xSb3V0ZUdsb2JhbHNHZXRNc2dSc3ASLwoJRXJyU3RhdHVzGAEgASgLMhwu",
            "c2VydmljZV9sYXllci5TTEVycm9yU3RhdHVzEh0KFU1heFZyZnJlZ1BlclZy",
            "ZnJlZ21zZxgCIAEoDRIbChNNYXhSb3V0ZVBlclJvdXRlbXNnGAMgASgNIhoK",
            "GFNMUm91dGVHbG9iYWxTdGF0c0dldE1zZyJ0ChtTTFJvdXRlR2xvYmFsU3Rh",
            "dHNHZXRNc2dSc3ASLwoJRXJyU3RhdHVzGAEgASgLMhwuc2VydmljZV9sYXll",
            "ci5TTEVycm9yU3RhdHVzEhAKCFZyZkNvdW50GAIgASgNEhIKClJvdXRlQ291",
            "bnQYAyABKA0iUwoIU0xWcmZSZWcSDwoHVnJmTmFtZRgBIAEoCRIVCg1BZG1p",
            "bkRpc3RhbmNlGAIgASgNEh8KF1ZyZlB1cmdlSW50ZXJ2YWxTZWNvbmRzGAMg",
            "ASgNImAKC1NMVnJmUmVnTXNnEiQKBE9wZXIYASABKA4yFi5zZXJ2aWNlX2xh",
            "eWVyLlNMUmVnT3ASKwoKVnJmUmVnTXNncxgCIAMoCzIXLnNlcnZpY2VfbGF5",
            "ZXIuU0xWcmZSZWciUgoOU0xWcmZSZWdNc2dSZXMSLwoJRXJyU3RhdHVzGAEg",
            "ASgLMhwuc2VydmljZV9sYXllci5TTEVycm9yU3RhdHVzEg8KB1ZyZk5hbWUY",
            "AiABKAkidQoOU0xWcmZSZWdNc2dSc3ASMwoNU3RhdHVzU3VtbWFyeRgBIAEo",
            "CzIcLnNlcnZpY2VfbGF5ZXIuU0xFcnJvclN0YXR1cxIuCgdSZXN1bHRzGAIg",
            "AygLMh0uc2VydmljZV9sYXllci5TTFZyZlJlZ01zZ1JlcyJICg5TTFZyZlJl",
            "Z0dldE1zZxIPCgdWcmZOYW1lGAEgASgJEhQKDEVudHJpZXNDb3VudBgCIAEo",
            "DRIPCgdHZXROZXh0GAMgASgIInsKEVNMVnJmUmVnR2V0TXNnUnNwEgsKA0Vv",
            "ZhgBIAEoCBIvCglFcnJTdGF0dXMYAiABKAsyHC5zZXJ2aWNlX2xheWVyLlNM",
            "RXJyb3JTdGF0dXMSKAoHRW50cmllcxgDIAMoCzIXLnNlcnZpY2VfbGF5ZXIu",
            "U0xWcmZSZWciOgoTU0xWUkZHZXRTdGF0c01zZ1JlcxIPCgdWcmZOYW1lGAEg",
            "ASgJEhIKClJvdXRlQ291bnQYAiABKA0iiAEKE1NMVlJGR2V0U3RhdHNNc2dS",
            "c3ASCwoDRW9mGAEgASgIEi8KCUVyclN0YXR1cxgCIAEoCzIcLnNlcnZpY2Vf",
            "bGF5ZXIuU0xFcnJvclN0YXR1cxIzCgdFbnRyaWVzGAMgAygLMiIuc2Vydmlj",
            "ZV9sYXllci5TTFZSRkdldFN0YXRzTXNnUmVzIogBChJTTFJvdXRlR2V0Tm90",
            "aWZNc2cSJgoET3BlchgBIAEoDjIYLnNlcnZpY2VfbGF5ZXIuU0xOb3RpZk9w",
            "EhIKCkNvcnJlbGF0b3IYAiABKAQSDwoHVnJmTmFtZRgDIAEoCRIQCghTcmNQ",
            "cm90bxgEIAEoCRITCgtTcmNQcm90b1RhZxgFIAEoCSJsChJTTFJvdXRlTm90",
            "aWZTdGF0dXMSEgoKQ29ycmVsYXRvchgBIAEoBBIPCgdWcmZOYW1lGAIgASgJ",
            "EjEKC05vdGlmU3RhdHVzGAMgASgLMhwuc2VydmljZV9sYXllci5TTEVycm9y",
            "U3RhdHVzIiUKElNMUm91dGVOb3RpZk1hcmtlchIPCgdWcmZOYW1lGAEgASgJ",
            "IkgKClNMVnJmTm90aWYSDwoHVnJmTmFtZRgBIAEoCRIpCgZTdGF0dXMYAiAB",
            "KA4yGS5zZXJ2aWNlX2xheWVyLlNMT2JqZWN0T3Ai7wEKDVNMUm91dGVDb21t",
            "b24SFQoNQWRtaW5EaXN0YW5jZRgBIAEoDRISCgpMb2NhbExhYmVsGAIgASgN",
            "EgsKA1RhZxgDIAEoDRIQCghTcmNQcm90bxgEIAEoCRITCgtTcmNQcm90b1Rh",
            "ZxgFIAEoCRIvCgpSb3V0ZUZsYWdzGAcgAygOMhsuc2VydmljZV9sYXllci5T",
            "TFJvdXRlRmxhZ3MSDgoGTWV0cmljGAggASgNEjEKCFByaW9yaXR5GAkgASgO",
            "Mh8uc2VydmljZV9sYXllci5TTFVwZGF0ZVByaW9yaXR5SgQIBhAHUgVGbGFn",
            "cyKxAQoLU0xWeExBTlBhdGgSCwoDVk5JGAEgASgNEhgKEFNvdXJjZU1hY0Fk",
            "ZHJlc3MYAiABKAwSFgoORGVzdE1hY0FkZHJlc3MYAyABKAwSMAoMU3JjSXBB",
            "ZGRyZXNzGAQgASgLMhouc2VydmljZV9sYXllci5TTElwQWRkcmVzcxIxCg1E",
            "ZXN0SXBBZGRyZXNzGAUgASgLMhouc2VydmljZV9sYXllci5TTElwQWRkcmVz",
            "cyKhBAoLU0xSb3V0ZVBhdGgSMgoOTmV4dGhvcEFkZHJlc3MYASABKAsyGi5z",
            "ZXJ2aWNlX2xheWVyLlNMSXBBZGRyZXNzEjQKEE5leHRob3BJbnRlcmZhY2UY",
            "AiABKAsyGi5zZXJ2aWNlX2xheWVyLlNMSW50ZXJmYWNlEhIKCkxvYWRNZXRy",
            "aWMYAyABKA0SDwoHVnJmTmFtZRgEIAEoCRIOCgZQYXRoSWQYBiABKA0SGwoT",
            "UHJvdGVjdGVkUGF0aEJpdG1hcBgHIAMoBBISCgpMYWJlbFN0YWNrGAggAygN",
            "EjEKDVJlbW90ZUFkZHJlc3MYCSADKAsyGi5zZXJ2aWNlX2xheWVyLlNMSXBB",
            "ZGRyZXNzEjEKCUVuY2FwVHlwZRgKIAEoDjIaLnNlcnZpY2VfbGF5ZXIuU0xF",
            "bmNhcFR5cGVCAhgBEiAKFFZ0ZXBSb3V0ZXJNYWNBZGRyZXNzGAsgASgMQgIY",
            "ARItCglWeExBTlBhdGgYDCABKAsyGi5zZXJ2aWNlX2xheWVyLlNMVnhMQU5Q",
            "YXRoEi0KCVBhdGhGbGFncxgOIAMoDjIaLnNlcnZpY2VfbGF5ZXIuU0xQYXRo",
            "RmxhZ3MSOAoMUGF0aEdyb3VwS2V5GA8gASgLMiAuc2VydmljZV9sYXllci5T",
            "TFBhdGhHcm91cFJlZktleUgAQgcKBWVudHJ5SgQIDRAOSgQIBRAGUgVGbGFn",
            "c1IGTWV0cmljIk4KDVNMUm91dGVQcmVmaXgSKgoGUHJlZml4GAEgASgLMhou",
            "c2VydmljZV9sYXllci5TTElwQWRkcmVzcxIRCglQcmVmaXhMZW4YAiABKA0q",
            "ygEKC1NMTm90aWZUeXBlEhoKFlNMX0VWRU5UX1RZUEVfUkVTRVJWRUQQABIX",
            "ChNTTF9FVkVOVF9UWVBFX0VSUk9SEAESGAoUU0xfRVZFTlRfVFlQRV9TVEFU",
            "VVMQAhIXChNTTF9FVkVOVF9UWVBFX1JPVVRFEAMSHgoaU0xfRVZFTlRfVFlQ",
            "RV9TVEFSVF9NQVJLRVIQBBIcChhTTF9FVkVOVF9UWVBFX0VORF9NQVJLRVIQ",
            "BRIVChFTTF9FVkVOVF9UWVBFX1ZSRhAGKsIBCgxTTFJvdXRlRmxhZ3MSGgoW",
            "U0xfUk9VVEVfRkxBR19SRVNFUlZFRBAAEiEKHVNMX1JPVVRFX0ZMQUdfUFJF",
            "RkVSX09WRVJfTERQEAESJQohU0xfUk9VVEVfRkxBR19ESVNBQkxFX0xBQkVM",
            "X01FUkdFEAISIwofU0xfUk9VVEVfRkxBR19WSUFCTEVfUEFUSFNfT05MWRAD",
            "EicKI1NMX1JPVVRFX0ZMQUdfQUNUSVZFX09OX1ZJQUJMRV9QQVRIEAQqSgoL",
            "U0xQYXRoRmxhZ3MSGQoVU0xfUEFUSF9GTEFHX1JFU0VSVkVEEAASIAocU0xf",
            "UEFUSF9GTEFHX1NJTkdMRV9QQVRIX09QVBABQlFaT2dpdGh1Yi5jb20vQ2lz",
            "Y28tc2VydmljZS1sYXllci9zZXJ2aWNlLWxheWVyLW9iam1vZGVsL2dycGMv",
            "cHJvdG9zO3NlcnZpY2VfbGF5ZXJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ServiceLayer.SlCommonTypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ServiceLayer.SLNotifType), typeof(global::ServiceLayer.SLRouteFlags), typeof(global::ServiceLayer.SLPathFlags), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLRouteGlobalsGetMsg), global::ServiceLayer.SLRouteGlobalsGetMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLRouteGlobalsGetMsgRsp), global::ServiceLayer.SLRouteGlobalsGetMsgRsp.Parser, new[]{ "ErrStatus", "MaxVrfregPerVrfregmsg", "MaxRoutePerRoutemsg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLRouteGlobalStatsGetMsg), global::ServiceLayer.SLRouteGlobalStatsGetMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLRouteGlobalStatsGetMsgRsp), global::ServiceLayer.SLRouteGlobalStatsGetMsgRsp.Parser, new[]{ "ErrStatus", "VrfCount", "RouteCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLVrfReg), global::ServiceLayer.SLVrfReg.Parser, new[]{ "VrfName", "AdminDistance", "VrfPurgeIntervalSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLVrfRegMsg), global::ServiceLayer.SLVrfRegMsg.Parser, new[]{ "Oper", "VrfRegMsgs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLVrfRegMsgRes), global::ServiceLayer.SLVrfRegMsgRes.Parser, new[]{ "ErrStatus", "VrfName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLVrfRegMsgRsp), global::ServiceLayer.SLVrfRegMsgRsp.Parser, new[]{ "StatusSummary", "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLVrfRegGetMsg), global::ServiceLayer.SLVrfRegGetMsg.Parser, new[]{ "VrfName", "EntriesCount", "GetNext" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLVrfRegGetMsgRsp), global::ServiceLayer.SLVrfRegGetMsgRsp.Parser, new[]{ "Eof", "ErrStatus", "Entries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLVRFGetStatsMsgRes), global::ServiceLayer.SLVRFGetStatsMsgRes.Parser, new[]{ "VrfName", "RouteCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLVRFGetStatsMsgRsp), global::ServiceLayer.SLVRFGetStatsMsgRsp.Parser, new[]{ "Eof", "ErrStatus", "Entries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLRouteGetNotifMsg), global::ServiceLayer.SLRouteGetNotifMsg.Parser, new[]{ "Oper", "Correlator", "VrfName", "SrcProto", "SrcProtoTag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLRouteNotifStatus), global::ServiceLayer.SLRouteNotifStatus.Parser, new[]{ "Correlator", "VrfName", "NotifStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLRouteNotifMarker), global::ServiceLayer.SLRouteNotifMarker.Parser, new[]{ "VrfName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLVrfNotif), global::ServiceLayer.SLVrfNotif.Parser, new[]{ "VrfName", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLRouteCommon), global::ServiceLayer.SLRouteCommon.Parser, new[]{ "AdminDistance", "LocalLabel", "Tag", "SrcProto", "SrcProtoTag", "RouteFlags", "Metric", "Priority" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLVxLANPath), global::ServiceLayer.SLVxLANPath.Parser, new[]{ "VNI", "SourceMacAddress", "DestMacAddress", "SrcIpAddress", "DestIpAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLRoutePath), global::ServiceLayer.SLRoutePath.Parser, new[]{ "NexthopAddress", "NexthopInterface", "LoadMetric", "VrfName", "PathId", "ProtectedPathBitmap", "LabelStack", "RemoteAddress", "EncapType", "VtepRouterMacAddress", "VxLANPath", "PathFlags", "PathGroupKey" }, new[]{ "Entry" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceLayer.SLRoutePrefix), global::ServiceLayer.SLRoutePrefix.Parser, new[]{ "Prefix", "PrefixLen" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// L3 Event Notification types
  /// </summary>
  public enum SLNotifType {
    /// <summary>
    /// Reserved. 0x0
    /// </summary>
    [pbr::OriginalName("SL_EVENT_TYPE_RESERVED")] SlEventTypeReserved = 0,
    /// <summary>
    /// Error - ErrStatus field elaborates on the error.
    /// The client can decide to close the stream based on the error. 0x1
    /// </summary>
    [pbr::OriginalName("SL_EVENT_TYPE_ERROR")] SlEventTypeError = 1,
    /// <summary>
    /// Status of GetNotifMsg per VRF.
    /// NotifStatus field elaborates on the result.
    /// If there is an error, only the notification for the VRF in the
    /// status message is not setup. 0x2
    /// </summary>
    [pbr::OriginalName("SL_EVENT_TYPE_STATUS")] SlEventTypeStatus = 2,
    /// <summary>
    /// Route Notification. 0x3
    /// </summary>
    [pbr::OriginalName("SL_EVENT_TYPE_ROUTE")] SlEventTypeRoute = 3,
    /// <summary>
    /// Start marker per VRF - sent before any ROUTE notification is sent.
    /// This is an indication to stale any objects received until now. 0x4
    /// </summary>
    [pbr::OriginalName("SL_EVENT_TYPE_START_MARKER")] SlEventTypeStartMarker = 4,
    /// <summary>
    /// End marker per VRF - sent after all ROUTE notifications are sent.
    /// This is an indication to sweep any stale objects, if present. 0x5
    /// </summary>
    [pbr::OriginalName("SL_EVENT_TYPE_END_MARKER")] SlEventTypeEndMarker = 5,
    /// <summary>
    /// VRF Add/Update/Delete Notification. 0x6
    /// </summary>
    [pbr::OriginalName("SL_EVENT_TYPE_VRF")] SlEventTypeVrf = 6,
  }

  /// <summary>
  /// Flags to control programming of the route and Path Group to 
  /// Routing Information Base.
  /// Each flag is indicated as a bit field. Supported values are:
  /// </summary>
  public enum SLRouteFlags {
    /// <summary>
    /// Reserved.
    /// </summary>
    [pbr::OriginalName("SL_ROUTE_FLAG_RESERVED")] SlRouteFlagReserved = 0,
    /// <summary>
    /// This route takes precedence over a route
    /// learnt by LDP.
    /// </summary>
    [pbr::OriginalName("SL_ROUTE_FLAG_PREFER_OVER_LDP")] SlRouteFlagPreferOverLdp = 1,
    /// <summary>
    /// If this route is preferred over any other producer of the same prefix
    /// and the latter is programmed with a SR label as well, do not merge
    /// that label's programming this route.
    /// </summary>
    [pbr::OriginalName("SL_ROUTE_FLAG_DISABLE_LABEL_MERGE")] SlRouteFlagDisableLabelMerge = 2,
    /// <summary>
    /// Install viable paths only. See text in SLRoutecommon/PathGroup for more details
    /// </summary>
    [pbr::OriginalName("SL_ROUTE_FLAG_VIABLE_PATHS_ONLY")] SlRouteFlagViablePathsOnly = 3,
    /// <summary>
    /// Route is considered active if there is atleast one viable path.
    /// See text in SLRoutecommon/PathGroup for more details.
    /// </summary>
    [pbr::OriginalName("SL_ROUTE_FLAG_ACTIVE_ON_VIABLE_PATH")] SlRouteFlagActiveOnViablePath = 4,
  }

  /// <summary>
  /// Path Flags.
  /// Each flag is indicated as a bit field. Supported values are:
  /// </summary>
  public enum SLPathFlags {
    /// <summary>
    /// Reserved.
    /// </summary>
    [pbr::OriginalName("SL_PATH_FLAG_RESERVED")] SlPathFlagReserved = 0,
    /// <summary>
    /// Enables hardware optimization for single path VxLAN tunnels.
    /// </summary>
    [pbr::OriginalName("SL_PATH_FLAG_SINGLE_PATH_OPT")] InglePathOpt = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Route Globals Get Message
  /// </summary>
  public sealed partial class SLRouteGlobalsGetMsg : pb::IMessage<SLRouteGlobalsGetMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLRouteGlobalsGetMsg> _parser = new pb::MessageParser<SLRouteGlobalsGetMsg>(() => new SLRouteGlobalsGetMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLRouteGlobalsGetMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalsGetMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalsGetMsg(SLRouteGlobalsGetMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalsGetMsg Clone() {
      return new SLRouteGlobalsGetMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLRouteGlobalsGetMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLRouteGlobalsGetMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLRouteGlobalsGetMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Route Globals Get Message Response
  /// </summary>
  public sealed partial class SLRouteGlobalsGetMsgRsp : pb::IMessage<SLRouteGlobalsGetMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLRouteGlobalsGetMsgRsp> _parser = new pb::MessageParser<SLRouteGlobalsGetMsgRsp>(() => new SLRouteGlobalsGetMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLRouteGlobalsGetMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalsGetMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalsGetMsgRsp(SLRouteGlobalsGetMsgRsp other) : this() {
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      maxVrfregPerVrfregmsg_ = other.maxVrfregPerVrfregmsg_;
      maxRoutePerRoutemsg_ = other.maxRoutePerRoutemsg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalsGetMsgRsp Clone() {
      return new SLRouteGlobalsGetMsgRsp(this);
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 1;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Corresponding error code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "MaxVrfregPerVrfregmsg" field.</summary>
    public const int MaxVrfregPerVrfregmsgFieldNumber = 2;
    private uint maxVrfregPerVrfregmsg_;
    /// <summary>
    /// Max VrfReg objects within a single VrfRegMsg message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxVrfregPerVrfregmsg {
      get { return maxVrfregPerVrfregmsg_; }
      set {
        maxVrfregPerVrfregmsg_ = value;
      }
    }

    /// <summary>Field number for the "MaxRoutePerRoutemsg" field.</summary>
    public const int MaxRoutePerRoutemsgFieldNumber = 3;
    private uint maxRoutePerRoutemsg_;
    /// <summary>
    /// Max Route objects within a single RouteMsg message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint MaxRoutePerRoutemsg {
      get { return maxRoutePerRoutemsg_; }
      set {
        maxRoutePerRoutemsg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLRouteGlobalsGetMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLRouteGlobalsGetMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if (MaxVrfregPerVrfregmsg != other.MaxVrfregPerVrfregmsg) return false;
      if (MaxRoutePerRoutemsg != other.MaxRoutePerRoutemsg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      if (MaxVrfregPerVrfregmsg != 0) hash ^= MaxVrfregPerVrfregmsg.GetHashCode();
      if (MaxRoutePerRoutemsg != 0) hash ^= MaxRoutePerRoutemsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (MaxVrfregPerVrfregmsg != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxVrfregPerVrfregmsg);
      }
      if (MaxRoutePerRoutemsg != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxRoutePerRoutemsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (MaxVrfregPerVrfregmsg != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxVrfregPerVrfregmsg);
      }
      if (MaxRoutePerRoutemsg != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MaxRoutePerRoutemsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      if (MaxVrfregPerVrfregmsg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxVrfregPerVrfregmsg);
      }
      if (MaxRoutePerRoutemsg != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxRoutePerRoutemsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLRouteGlobalsGetMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      if (other.MaxVrfregPerVrfregmsg != 0) {
        MaxVrfregPerVrfregmsg = other.MaxVrfregPerVrfregmsg;
      }
      if (other.MaxRoutePerRoutemsg != 0) {
        MaxRoutePerRoutemsg = other.MaxRoutePerRoutemsg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 16: {
            MaxVrfregPerVrfregmsg = input.ReadUInt32();
            break;
          }
          case 24: {
            MaxRoutePerRoutemsg = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 16: {
            MaxVrfregPerVrfregmsg = input.ReadUInt32();
            break;
          }
          case 24: {
            MaxRoutePerRoutemsg = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Route Global Stats Get Message
  /// </summary>
  public sealed partial class SLRouteGlobalStatsGetMsg : pb::IMessage<SLRouteGlobalStatsGetMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLRouteGlobalStatsGetMsg> _parser = new pb::MessageParser<SLRouteGlobalStatsGetMsg>(() => new SLRouteGlobalStatsGetMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLRouteGlobalStatsGetMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalStatsGetMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalStatsGetMsg(SLRouteGlobalStatsGetMsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalStatsGetMsg Clone() {
      return new SLRouteGlobalStatsGetMsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLRouteGlobalStatsGetMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLRouteGlobalStatsGetMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLRouteGlobalStatsGetMsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Route Global Stats Get Message Response
  /// </summary>
  public sealed partial class SLRouteGlobalStatsGetMsgRsp : pb::IMessage<SLRouteGlobalStatsGetMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLRouteGlobalStatsGetMsgRsp> _parser = new pb::MessageParser<SLRouteGlobalStatsGetMsgRsp>(() => new SLRouteGlobalStatsGetMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLRouteGlobalStatsGetMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalStatsGetMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalStatsGetMsgRsp(SLRouteGlobalStatsGetMsgRsp other) : this() {
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      vrfCount_ = other.vrfCount_;
      routeCount_ = other.routeCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGlobalStatsGetMsgRsp Clone() {
      return new SLRouteGlobalStatsGetMsgRsp(this);
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 1;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Corresponding error code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "VrfCount" field.</summary>
    public const int VrfCountFieldNumber = 2;
    private uint vrfCount_;
    /// <summary>
    /// Num VRFs registered through the service layer for the requested client
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VrfCount {
      get { return vrfCount_; }
      set {
        vrfCount_ = value;
      }
    }

    /// <summary>Field number for the "RouteCount" field.</summary>
    public const int RouteCountFieldNumber = 3;
    private uint routeCount_;
    /// <summary>
    /// Num Routes added through the service layer for the requested client
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RouteCount {
      get { return routeCount_; }
      set {
        routeCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLRouteGlobalStatsGetMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLRouteGlobalStatsGetMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if (VrfCount != other.VrfCount) return false;
      if (RouteCount != other.RouteCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      if (VrfCount != 0) hash ^= VrfCount.GetHashCode();
      if (RouteCount != 0) hash ^= RouteCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (VrfCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(VrfCount);
      }
      if (RouteCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RouteCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (VrfCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(VrfCount);
      }
      if (RouteCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(RouteCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      if (VrfCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VrfCount);
      }
      if (RouteCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RouteCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLRouteGlobalStatsGetMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      if (other.VrfCount != 0) {
        VrfCount = other.VrfCount;
      }
      if (other.RouteCount != 0) {
        RouteCount = other.RouteCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 16: {
            VrfCount = input.ReadUInt32();
            break;
          }
          case 24: {
            RouteCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 16: {
            VrfCount = input.ReadUInt32();
            break;
          }
          case 24: {
            RouteCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VRF Registration message
  /// </summary>
  public sealed partial class SLVrfReg : pb::IMessage<SLVrfReg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLVrfReg> _parser = new pb::MessageParser<SLVrfReg>(() => new SLVrfReg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLVrfReg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfReg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfReg(SLVrfReg other) : this() {
      vrfName_ = other.vrfName_;
      adminDistance_ = other.adminDistance_;
      vrfPurgeIntervalSeconds_ = other.vrfPurgeIntervalSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfReg Clone() {
      return new SLVrfReg(this);
    }

    /// <summary>Field number for the "VrfName" field.</summary>
    public const int VrfNameFieldNumber = 1;
    private string vrfName_ = "";
    /// <summary>
    /// VRF Name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrfName {
      get { return vrfName_; }
      set {
        vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AdminDistance" field.</summary>
    public const int AdminDistanceFieldNumber = 2;
    private uint adminDistance_;
    /// <summary>
    /// Default Admin distance for routes programmed by this application
    /// Range [0-255]
    /// This default value is used if route objects' AdminDistance is 0.
    /// Refer to SLRouteCommon
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AdminDistance {
      get { return adminDistance_; }
      set {
        adminDistance_ = value;
      }
    }

    /// <summary>Field number for the "VrfPurgeIntervalSeconds" field.</summary>
    public const int VrfPurgeIntervalSecondsFieldNumber = 3;
    private uint vrfPurgeIntervalSeconds_;
    /// <summary>
    /// In case the Service Layer -> RIB connection is lost, this specifies the
    /// timeout period after which RIB will automatically purge the installed
    /// routes, unless the service layer:
    ///    1. Re-registers (VRF)
    ///    2. Replay all routes
    ///    3. And send EOF, before the purge timeout
    ///
    /// AdminDistance and VrfPurgeIntervalSeconds values are ignored
    /// for SL_PATH_GROUP_TABLE type registration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VrfPurgeIntervalSeconds {
      get { return vrfPurgeIntervalSeconds_; }
      set {
        vrfPurgeIntervalSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLVrfReg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLVrfReg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VrfName != other.VrfName) return false;
      if (AdminDistance != other.AdminDistance) return false;
      if (VrfPurgeIntervalSeconds != other.VrfPurgeIntervalSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
      if (AdminDistance != 0) hash ^= AdminDistance.GetHashCode();
      if (VrfPurgeIntervalSeconds != 0) hash ^= VrfPurgeIntervalSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (AdminDistance != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AdminDistance);
      }
      if (VrfPurgeIntervalSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(VrfPurgeIntervalSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (AdminDistance != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(AdminDistance);
      }
      if (VrfPurgeIntervalSeconds != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(VrfPurgeIntervalSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VrfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
      }
      if (AdminDistance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AdminDistance);
      }
      if (VrfPurgeIntervalSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VrfPurgeIntervalSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLVrfReg other) {
      if (other == null) {
        return;
      }
      if (other.VrfName.Length != 0) {
        VrfName = other.VrfName;
      }
      if (other.AdminDistance != 0) {
        AdminDistance = other.AdminDistance;
      }
      if (other.VrfPurgeIntervalSeconds != 0) {
        VrfPurgeIntervalSeconds = other.VrfPurgeIntervalSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
          case 16: {
            AdminDistance = input.ReadUInt32();
            break;
          }
          case 24: {
            VrfPurgeIntervalSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
          case 16: {
            AdminDistance = input.ReadUInt32();
            break;
          }
          case 24: {
            VrfPurgeIntervalSeconds = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VRF Registration messages.
  /// </summary>
  public sealed partial class SLVrfRegMsg : pb::IMessage<SLVrfRegMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLVrfRegMsg> _parser = new pb::MessageParser<SLVrfRegMsg>(() => new SLVrfRegMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLVrfRegMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegMsg(SLVrfRegMsg other) : this() {
      oper_ = other.oper_;
      vrfRegMsgs_ = other.vrfRegMsgs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegMsg Clone() {
      return new SLVrfRegMsg(this);
    }

    /// <summary>Field number for the "Oper" field.</summary>
    public const int OperFieldNumber = 1;
    private global::ServiceLayer.SLRegOp oper_ = global::ServiceLayer.SLRegOp.Reserved;
    /// <summary>
    /// Registration Operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLRegOp Oper {
      get { return oper_; }
      set {
        oper_ = value;
      }
    }

    /// <summary>Field number for the "VrfRegMsgs" field.</summary>
    public const int VrfRegMsgsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLVrfReg> _repeated_vrfRegMsgs_codec
        = pb::FieldCodec.ForMessage(18, global::ServiceLayer.SLVrfReg.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLVrfReg> vrfRegMsgs_ = new pbc::RepeatedField<global::ServiceLayer.SLVrfReg>();
    /// <summary>
    /// List of VRF registrations
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLVrfReg> VrfRegMsgs {
      get { return vrfRegMsgs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLVrfRegMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLVrfRegMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Oper != other.Oper) return false;
      if(!vrfRegMsgs_.Equals(other.vrfRegMsgs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Oper != global::ServiceLayer.SLRegOp.Reserved) hash ^= Oper.GetHashCode();
      hash ^= vrfRegMsgs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Oper != global::ServiceLayer.SLRegOp.Reserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oper);
      }
      vrfRegMsgs_.WriteTo(output, _repeated_vrfRegMsgs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Oper != global::ServiceLayer.SLRegOp.Reserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oper);
      }
      vrfRegMsgs_.WriteTo(ref output, _repeated_vrfRegMsgs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Oper != global::ServiceLayer.SLRegOp.Reserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Oper);
      }
      size += vrfRegMsgs_.CalculateSize(_repeated_vrfRegMsgs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLVrfRegMsg other) {
      if (other == null) {
        return;
      }
      if (other.Oper != global::ServiceLayer.SLRegOp.Reserved) {
        Oper = other.Oper;
      }
      vrfRegMsgs_.Add(other.vrfRegMsgs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Oper = (global::ServiceLayer.SLRegOp) input.ReadEnum();
            break;
          }
          case 18: {
            vrfRegMsgs_.AddEntriesFrom(input, _repeated_vrfRegMsgs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Oper = (global::ServiceLayer.SLRegOp) input.ReadEnum();
            break;
          }
          case 18: {
            vrfRegMsgs_.AddEntriesFrom(ref input, _repeated_vrfRegMsgs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VRF Registration message Result
  /// </summary>
  public sealed partial class SLVrfRegMsgRes : pb::IMessage<SLVrfRegMsgRes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLVrfRegMsgRes> _parser = new pb::MessageParser<SLVrfRegMsgRes>(() => new SLVrfRegMsgRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLVrfRegMsgRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegMsgRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegMsgRes(SLVrfRegMsgRes other) : this() {
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      vrfName_ = other.vrfName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegMsgRes Clone() {
      return new SLVrfRegMsgRes(this);
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 1;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Corresponding error code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "VrfName" field.</summary>
    public const int VrfNameFieldNumber = 2;
    private string vrfName_ = "";
    /// <summary>
    /// VRF Name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrfName {
      get { return vrfName_; }
      set {
        vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLVrfRegMsgRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLVrfRegMsgRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if (VrfName != other.VrfName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (VrfName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VrfName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (errStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrStatus);
      }
      if (VrfName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VrfName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      if (VrfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLVrfRegMsgRes other) {
      if (other == null) {
        return;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      if (other.VrfName.Length != 0) {
        VrfName = other.VrfName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 18: {
            VrfName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 18: {
            VrfName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VRF Registration message Response.
  /// </summary>
  public sealed partial class SLVrfRegMsgRsp : pb::IMessage<SLVrfRegMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLVrfRegMsgRsp> _parser = new pb::MessageParser<SLVrfRegMsgRsp>(() => new SLVrfRegMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLVrfRegMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegMsgRsp(SLVrfRegMsgRsp other) : this() {
      statusSummary_ = other.statusSummary_ != null ? other.statusSummary_.Clone() : null;
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegMsgRsp Clone() {
      return new SLVrfRegMsgRsp(this);
    }

    /// <summary>Field number for the "StatusSummary" field.</summary>
    public const int StatusSummaryFieldNumber = 1;
    private global::ServiceLayer.SLErrorStatus statusSummary_;
    /// <summary>
    /// Summary result of the bulk operation (refer to enum SLErrorStatus)
    /// In general, the StatusSummary implies one of 3 things:
    /// 1. SL_SUCCESS: signifies that the entire bulk operation was successful.
    ///         In this case, the Results list is empty.
    /// 2. SL_SOME_ERR: signifies that the operation failed for one or more
    ///         entries. In this case, Results holds the result for
    ///         each individual entry in the bulk.
    /// 3. SL_RPC_XXX: signifies that the entire bulk operation failed.
    ///         In this case, the Results list is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus StatusSummary {
      get { return statusSummary_; }
      set {
        statusSummary_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLVrfRegMsgRes> _repeated_results_codec
        = pb::FieldCodec.ForMessage(18, global::ServiceLayer.SLVrfRegMsgRes.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLVrfRegMsgRes> results_ = new pbc::RepeatedField<global::ServiceLayer.SLVrfRegMsgRes>();
    /// <summary>
    /// In case of errors, this field indicates which entry in the bulk was
    /// erroneous.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLVrfRegMsgRes> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLVrfRegMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLVrfRegMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StatusSummary, other.StatusSummary)) return false;
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (statusSummary_ != null) hash ^= StatusSummary.GetHashCode();
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (statusSummary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusSummary);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (statusSummary_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusSummary);
      }
      results_.WriteTo(ref output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (statusSummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusSummary);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLVrfRegMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.statusSummary_ != null) {
        if (statusSummary_ == null) {
          StatusSummary = new global::ServiceLayer.SLErrorStatus();
        }
        StatusSummary.MergeFrom(other.StatusSummary);
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (statusSummary_ == null) {
              StatusSummary = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(StatusSummary);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (statusSummary_ == null) {
              StatusSummary = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(StatusSummary);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(ref input, _repeated_results_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VRF Get Message
  /// </summary>
  public sealed partial class SLVrfRegGetMsg : pb::IMessage<SLVrfRegGetMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLVrfRegGetMsg> _parser = new pb::MessageParser<SLVrfRegGetMsg>(() => new SLVrfRegGetMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLVrfRegGetMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegGetMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegGetMsg(SLVrfRegGetMsg other) : this() {
      vrfName_ = other.vrfName_;
      entriesCount_ = other.entriesCount_;
      getNext_ = other.getNext_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegGetMsg Clone() {
      return new SLVrfRegGetMsg(this);
    }

    /// <summary>Field number for the "VrfName" field.</summary>
    public const int VrfNameFieldNumber = 1;
    private string vrfName_ = "";
    /// <summary>
    /// VRF name (key).
    /// If the Key is not specified, then request up to the first
    /// 'EntriesCount' entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrfName {
      get { return vrfName_; }
      set {
        vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EntriesCount" field.</summary>
    public const int EntriesCountFieldNumber = 2;
    private uint entriesCount_;
    /// <summary>
    /// Number of entries requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EntriesCount {
      get { return entriesCount_; }
      set {
        entriesCount_ = value;
      }
    }

    /// <summary>Field number for the "GetNext" field.</summary>
    public const int GetNextFieldNumber = 3;
    private bool getNext_;
    /// <summary>
    /// if GetNext is FALSE:
    ///     request up to 'EntriesCount' entries starting from the key
    /// If GetNext is TRUE, or if the key exact match is not found:
    ///     request up to 'EntriesCount' entries starting from the key's next
    ///     GetNext does not get the routes in the next client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetNext {
      get { return getNext_; }
      set {
        getNext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLVrfRegGetMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLVrfRegGetMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VrfName != other.VrfName) return false;
      if (EntriesCount != other.EntriesCount) return false;
      if (GetNext != other.GetNext) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
      if (EntriesCount != 0) hash ^= EntriesCount.GetHashCode();
      if (GetNext != false) hash ^= GetNext.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (EntriesCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EntriesCount);
      }
      if (GetNext != false) {
        output.WriteRawTag(24);
        output.WriteBool(GetNext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (EntriesCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(EntriesCount);
      }
      if (GetNext != false) {
        output.WriteRawTag(24);
        output.WriteBool(GetNext);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VrfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
      }
      if (EntriesCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntriesCount);
      }
      if (GetNext != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLVrfRegGetMsg other) {
      if (other == null) {
        return;
      }
      if (other.VrfName.Length != 0) {
        VrfName = other.VrfName;
      }
      if (other.EntriesCount != 0) {
        EntriesCount = other.EntriesCount;
      }
      if (other.GetNext != false) {
        GetNext = other.GetNext;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
          case 16: {
            EntriesCount = input.ReadUInt32();
            break;
          }
          case 24: {
            GetNext = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
          case 16: {
            EntriesCount = input.ReadUInt32();
            break;
          }
          case 24: {
            GetNext = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VRF Get Message Response
  /// </summary>
  public sealed partial class SLVrfRegGetMsgRsp : pb::IMessage<SLVrfRegGetMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLVrfRegGetMsgRsp> _parser = new pb::MessageParser<SLVrfRegGetMsgRsp>(() => new SLVrfRegGetMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLVrfRegGetMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegGetMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegGetMsgRsp(SLVrfRegGetMsgRsp other) : this() {
      eof_ = other.eof_;
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfRegGetMsgRsp Clone() {
      return new SLVrfRegGetMsgRsp(this);
    }

    /// <summary>Field number for the "Eof" field.</summary>
    public const int EofFieldNumber = 1;
    private bool eof_;
    /// <summary>
    /// End Of File.
    /// When set to True, it indicates that the server has returned M, where
    /// M &lt; N, of the original N requested Entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Eof {
      get { return eof_; }
      set {
        eof_ = value;
      }
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 2;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Status of the Get operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "Entries" field.</summary>
    public const int EntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLVrfReg> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceLayer.SLVrfReg.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLVrfReg> entries_ = new pbc::RepeatedField<global::ServiceLayer.SLVrfReg>();
    /// <summary>
    /// Returned entries as requested in the Get operation.
    /// if ErrStatus is SL_SUCCESS, Entries contains the info requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLVrfReg> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLVrfRegGetMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLVrfRegGetMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Eof != other.Eof) return false;
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Eof != false) hash ^= Eof.GetHashCode();
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Eof != false) {
        output.WriteRawTag(8);
        output.WriteBool(Eof);
      }
      if (errStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrStatus);
      }
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Eof != false) {
        output.WriteRawTag(8);
        output.WriteBool(Eof);
      }
      if (errStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrStatus);
      }
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Eof != false) {
        size += 1 + 1;
      }
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLVrfRegGetMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.Eof != false) {
        Eof = other.Eof;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Eof = input.ReadBool();
            break;
          }
          case 18: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Eof = input.ReadBool();
            break;
          }
          case 18: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VRF Get Stats Message Response
  /// </summary>
  public sealed partial class SLVRFGetStatsMsgRes : pb::IMessage<SLVRFGetStatsMsgRes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLVRFGetStatsMsgRes> _parser = new pb::MessageParser<SLVRFGetStatsMsgRes>(() => new SLVRFGetStatsMsgRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLVRFGetStatsMsgRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVRFGetStatsMsgRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVRFGetStatsMsgRes(SLVRFGetStatsMsgRes other) : this() {
      vrfName_ = other.vrfName_;
      routeCount_ = other.routeCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVRFGetStatsMsgRes Clone() {
      return new SLVRFGetStatsMsgRes(this);
    }

    /// <summary>Field number for the "VrfName" field.</summary>
    public const int VrfNameFieldNumber = 1;
    private string vrfName_ = "";
    /// <summary>
    /// VRF name as key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrfName {
      get { return vrfName_; }
      set {
        vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RouteCount" field.</summary>
    public const int RouteCountFieldNumber = 2;
    private uint routeCount_;
    /// <summary>
    /// Num VRF Routes added through the service layer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RouteCount {
      get { return routeCount_; }
      set {
        routeCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLVRFGetStatsMsgRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLVRFGetStatsMsgRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VrfName != other.VrfName) return false;
      if (RouteCount != other.RouteCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
      if (RouteCount != 0) hash ^= RouteCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (RouteCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RouteCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (RouteCount != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(RouteCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VrfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
      }
      if (RouteCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RouteCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLVRFGetStatsMsgRes other) {
      if (other == null) {
        return;
      }
      if (other.VrfName.Length != 0) {
        VrfName = other.VrfName;
      }
      if (other.RouteCount != 0) {
        RouteCount = other.RouteCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
          case 16: {
            RouteCount = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
          case 16: {
            RouteCount = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// VRF Get Stats Message Response
  /// </summary>
  public sealed partial class SLVRFGetStatsMsgRsp : pb::IMessage<SLVRFGetStatsMsgRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLVRFGetStatsMsgRsp> _parser = new pb::MessageParser<SLVRFGetStatsMsgRsp>(() => new SLVRFGetStatsMsgRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLVRFGetStatsMsgRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVRFGetStatsMsgRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVRFGetStatsMsgRsp(SLVRFGetStatsMsgRsp other) : this() {
      eof_ = other.eof_;
      errStatus_ = other.errStatus_ != null ? other.errStatus_.Clone() : null;
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVRFGetStatsMsgRsp Clone() {
      return new SLVRFGetStatsMsgRsp(this);
    }

    /// <summary>Field number for the "Eof" field.</summary>
    public const int EofFieldNumber = 1;
    private bool eof_;
    /// <summary>
    /// End Of File.
    /// When set to True, it indicates that the server has returned M, where 
    /// M &lt; N, of the original N requested Entries.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Eof {
      get { return eof_; }
      set {
        eof_ = value;
      }
    }

    /// <summary>Field number for the "ErrStatus" field.</summary>
    public const int ErrStatusFieldNumber = 2;
    private global::ServiceLayer.SLErrorStatus errStatus_;
    /// <summary>
    /// Status of the Get Stats operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus ErrStatus {
      get { return errStatus_; }
      set {
        errStatus_ = value;
      }
    }

    /// <summary>Field number for the "Entries" field.</summary>
    public const int EntriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLVRFGetStatsMsgRes> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceLayer.SLVRFGetStatsMsgRes.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLVRFGetStatsMsgRes> entries_ = new pbc::RepeatedField<global::ServiceLayer.SLVRFGetStatsMsgRes>();
    /// <summary>
    /// Returned entries as requested in the Get Stats operation on per client basis
    /// if ErrStatus is SL_SUCCESS, Entries contains the info requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLVRFGetStatsMsgRes> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLVRFGetStatsMsgRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLVRFGetStatsMsgRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Eof != other.Eof) return false;
      if (!object.Equals(ErrStatus, other.ErrStatus)) return false;
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Eof != false) hash ^= Eof.GetHashCode();
      if (errStatus_ != null) hash ^= ErrStatus.GetHashCode();
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Eof != false) {
        output.WriteRawTag(8);
        output.WriteBool(Eof);
      }
      if (errStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrStatus);
      }
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Eof != false) {
        output.WriteRawTag(8);
        output.WriteBool(Eof);
      }
      if (errStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ErrStatus);
      }
      entries_.WriteTo(ref output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Eof != false) {
        size += 1 + 1;
      }
      if (errStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrStatus);
      }
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLVRFGetStatsMsgRsp other) {
      if (other == null) {
        return;
      }
      if (other.Eof != false) {
        Eof = other.Eof;
      }
      if (other.errStatus_ != null) {
        if (errStatus_ == null) {
          ErrStatus = new global::ServiceLayer.SLErrorStatus();
        }
        ErrStatus.MergeFrom(other.ErrStatus);
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Eof = input.ReadBool();
            break;
          }
          case 18: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Eof = input.ReadBool();
            break;
          }
          case 18: {
            if (errStatus_ == null) {
              ErrStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(ErrStatus);
            break;
          }
          case 26: {
            entries_.AddEntriesFrom(ref input, _repeated_entries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Common Get Notifications message
  /// </summary>
  public sealed partial class SLRouteGetNotifMsg : pb::IMessage<SLRouteGetNotifMsg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLRouteGetNotifMsg> _parser = new pb::MessageParser<SLRouteGetNotifMsg>(() => new SLRouteGetNotifMsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLRouteGetNotifMsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGetNotifMsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGetNotifMsg(SLRouteGetNotifMsg other) : this() {
      oper_ = other.oper_;
      correlator_ = other.correlator_;
      vrfName_ = other.vrfName_;
      srcProto_ = other.srcProto_;
      srcProtoTag_ = other.srcProtoTag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteGetNotifMsg Clone() {
      return new SLRouteGetNotifMsg(this);
    }

    /// <summary>Field number for the "Oper" field.</summary>
    public const int OperFieldNumber = 1;
    private global::ServiceLayer.SLNotifOp oper_ = global::ServiceLayer.SLNotifOp.Reserved;
    /// <summary>
    /// Oper = SL_NOTIFOP_ENABLE
    ///   This is to enable route notifications in a VRF
    /// Oper = SL_NOTIFOP_DISABLE
    ///   This is to disable route notifications in a VRF
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLNotifOp Oper {
      get { return oper_; }
      set {
        oper_ = value;
      }
    }

    /// <summary>Field number for the "Correlator" field.</summary>
    public const int CorrelatorFieldNumber = 2;
    private ulong correlator_;
    /// <summary>
    /// Correlator. This is used to correlate SLRouteGetNotifMsg with
    /// SLRouteNotifStatus. The server reflects this field in the reply.
    /// A client can send a SLRouteGetNotifMsg with the Correlator only.
    /// Once accepted and reply is sent, VRF notifications are sent.
    /// This is useful if a client wants to receive VRF notifications
    /// (SLVrfNotif) only and is not interested in receiving route
    /// notifications (SLRoutev4NotifRoute/SLRoutev6NotifRoute) from any VRF.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Correlator {
      get { return correlator_; }
      set {
        correlator_ = value;
      }
    }

    /// <summary>Field number for the "VrfName" field.</summary>
    public const int VrfNameFieldNumber = 3;
    private string vrfName_ = "";
    /// <summary>
    /// Vrf that the client is interested in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrfName {
      get { return vrfName_; }
      set {
        vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SrcProto" field.</summary>
    public const int SrcProtoFieldNumber = 4;
    private string srcProto_ = "";
    /// <summary>
    /// Source Protocol.
    /// Only routes with specified source protocol and protocol tag will be
    /// notified.
    /// Contact Cisco for supported protocol string names.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SrcProto {
      get { return srcProto_; }
      set {
        srcProto_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SrcProtoTag" field.</summary>
    public const int SrcProtoTagFieldNumber = 5;
    private string srcProtoTag_ = "";
    /// <summary>
    /// Source Protocol Tag. This can be empty if N/A.
    /// Contact Cisco for supported protocol tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SrcProtoTag {
      get { return srcProtoTag_; }
      set {
        srcProtoTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLRouteGetNotifMsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLRouteGetNotifMsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Oper != other.Oper) return false;
      if (Correlator != other.Correlator) return false;
      if (VrfName != other.VrfName) return false;
      if (SrcProto != other.SrcProto) return false;
      if (SrcProtoTag != other.SrcProtoTag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Oper != global::ServiceLayer.SLNotifOp.Reserved) hash ^= Oper.GetHashCode();
      if (Correlator != 0UL) hash ^= Correlator.GetHashCode();
      if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
      if (SrcProto.Length != 0) hash ^= SrcProto.GetHashCode();
      if (SrcProtoTag.Length != 0) hash ^= SrcProtoTag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Oper != global::ServiceLayer.SLNotifOp.Reserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oper);
      }
      if (Correlator != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Correlator);
      }
      if (VrfName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VrfName);
      }
      if (SrcProto.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SrcProto);
      }
      if (SrcProtoTag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SrcProtoTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Oper != global::ServiceLayer.SLNotifOp.Reserved) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Oper);
      }
      if (Correlator != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Correlator);
      }
      if (VrfName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VrfName);
      }
      if (SrcProto.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SrcProto);
      }
      if (SrcProtoTag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SrcProtoTag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Oper != global::ServiceLayer.SLNotifOp.Reserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Oper);
      }
      if (Correlator != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Correlator);
      }
      if (VrfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
      }
      if (SrcProto.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SrcProto);
      }
      if (SrcProtoTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SrcProtoTag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLRouteGetNotifMsg other) {
      if (other == null) {
        return;
      }
      if (other.Oper != global::ServiceLayer.SLNotifOp.Reserved) {
        Oper = other.Oper;
      }
      if (other.Correlator != 0UL) {
        Correlator = other.Correlator;
      }
      if (other.VrfName.Length != 0) {
        VrfName = other.VrfName;
      }
      if (other.SrcProto.Length != 0) {
        SrcProto = other.SrcProto;
      }
      if (other.SrcProtoTag.Length != 0) {
        SrcProtoTag = other.SrcProtoTag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Oper = (global::ServiceLayer.SLNotifOp) input.ReadEnum();
            break;
          }
          case 16: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 26: {
            VrfName = input.ReadString();
            break;
          }
          case 34: {
            SrcProto = input.ReadString();
            break;
          }
          case 42: {
            SrcProtoTag = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Oper = (global::ServiceLayer.SLNotifOp) input.ReadEnum();
            break;
          }
          case 16: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 26: {
            VrfName = input.ReadString();
            break;
          }
          case 34: {
            SrcProto = input.ReadString();
            break;
          }
          case 42: {
            SrcProtoTag = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Common Route Notification Status message
  /// </summary>
  public sealed partial class SLRouteNotifStatus : pb::IMessage<SLRouteNotifStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLRouteNotifStatus> _parser = new pb::MessageParser<SLRouteNotifStatus>(() => new SLRouteNotifStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLRouteNotifStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteNotifStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteNotifStatus(SLRouteNotifStatus other) : this() {
      correlator_ = other.correlator_;
      vrfName_ = other.vrfName_;
      notifStatus_ = other.notifStatus_ != null ? other.notifStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteNotifStatus Clone() {
      return new SLRouteNotifStatus(this);
    }

    /// <summary>Field number for the "Correlator" field.</summary>
    public const int CorrelatorFieldNumber = 1;
    private ulong correlator_;
    /// <summary>
    /// Correlator in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Correlator {
      get { return correlator_; }
      set {
        correlator_ = value;
      }
    }

    /// <summary>Field number for the "VrfName" field.</summary>
    public const int VrfNameFieldNumber = 2;
    private string vrfName_ = "";
    /// <summary>
    /// Vrf in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrfName {
      get { return vrfName_; }
      set {
        vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NotifStatus" field.</summary>
    public const int NotifStatusFieldNumber = 3;
    private global::ServiceLayer.SLErrorStatus notifStatus_;
    /// <summary>
    /// The NotifStatus implies one of 2 things:
    /// SL_SUCCESS: signifies that the notification request was successful
    /// SL_XXX: signifies an error in setting up a notification for the Vrf.
    ///  Implies that notifications for this VRF will not be sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLErrorStatus NotifStatus {
      get { return notifStatus_; }
      set {
        notifStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLRouteNotifStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLRouteNotifStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Correlator != other.Correlator) return false;
      if (VrfName != other.VrfName) return false;
      if (!object.Equals(NotifStatus, other.NotifStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Correlator != 0UL) hash ^= Correlator.GetHashCode();
      if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
      if (notifStatus_ != null) hash ^= NotifStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Correlator != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Correlator);
      }
      if (VrfName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VrfName);
      }
      if (notifStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NotifStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Correlator != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Correlator);
      }
      if (VrfName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VrfName);
      }
      if (notifStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NotifStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Correlator != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Correlator);
      }
      if (VrfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
      }
      if (notifStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NotifStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLRouteNotifStatus other) {
      if (other == null) {
        return;
      }
      if (other.Correlator != 0UL) {
        Correlator = other.Correlator;
      }
      if (other.VrfName.Length != 0) {
        VrfName = other.VrfName;
      }
      if (other.notifStatus_ != null) {
        if (notifStatus_ == null) {
          NotifStatus = new global::ServiceLayer.SLErrorStatus();
        }
        NotifStatus.MergeFrom(other.NotifStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 18: {
            VrfName = input.ReadString();
            break;
          }
          case 26: {
            if (notifStatus_ == null) {
              NotifStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(NotifStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Correlator = input.ReadUInt64();
            break;
          }
          case 18: {
            VrfName = input.ReadString();
            break;
          }
          case 26: {
            if (notifStatus_ == null) {
              NotifStatus = new global::ServiceLayer.SLErrorStatus();
            }
            input.ReadMessage(NotifStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Common Marker Notification message
  /// </summary>
  public sealed partial class SLRouteNotifMarker : pb::IMessage<SLRouteNotifMarker>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLRouteNotifMarker> _parser = new pb::MessageParser<SLRouteNotifMarker>(() => new SLRouteNotifMarker());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLRouteNotifMarker> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteNotifMarker() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteNotifMarker(SLRouteNotifMarker other) : this() {
      vrfName_ = other.vrfName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteNotifMarker Clone() {
      return new SLRouteNotifMarker(this);
    }

    /// <summary>Field number for the "VrfName" field.</summary>
    public const int VrfNameFieldNumber = 1;
    private string vrfName_ = "";
    /// <summary>
    /// Vrf that this notification message applies to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrfName {
      get { return vrfName_; }
      set {
        vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLRouteNotifMarker);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLRouteNotifMarker other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VrfName != other.VrfName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VrfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLRouteNotifMarker other) {
      if (other == null) {
        return;
      }
      if (other.VrfName.Length != 0) {
        VrfName = other.VrfName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Common Vrf Notification message
  /// </summary>
  public sealed partial class SLVrfNotif : pb::IMessage<SLVrfNotif>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLVrfNotif> _parser = new pb::MessageParser<SLVrfNotif>(() => new SLVrfNotif());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLVrfNotif> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfNotif() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfNotif(SLVrfNotif other) : this() {
      vrfName_ = other.vrfName_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVrfNotif Clone() {
      return new SLVrfNotif(this);
    }

    /// <summary>Field number for the "VrfName" field.</summary>
    public const int VrfNameFieldNumber = 1;
    private string vrfName_ = "";
    /// <summary>
    /// Vrf that this notification message applies to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrfName {
      get { return vrfName_; }
      set {
        vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::ServiceLayer.SLObjectOp status_ = global::ServiceLayer.SLObjectOp.SlObjopReserved;
    /// <summary>
    /// Status of this Vrf: add/update/delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLObjectOp Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLVrfNotif);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLVrfNotif other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VrfName != other.VrfName) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
      if (Status != global::ServiceLayer.SLObjectOp.SlObjopReserved) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (Status != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VrfName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VrfName);
      }
      if (Status != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VrfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
      }
      if (Status != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLVrfNotif other) {
      if (other == null) {
        return;
      }
      if (other.VrfName.Length != 0) {
        VrfName = other.VrfName;
      }
      if (other.Status != global::ServiceLayer.SLObjectOp.SlObjopReserved) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
          case 16: {
            Status = (global::ServiceLayer.SLObjectOp) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            VrfName = input.ReadString();
            break;
          }
          case 16: {
            Status = (global::ServiceLayer.SLObjectOp) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Common IPv4/IPv6 route attributes.
  /// </summary>
  public sealed partial class SLRouteCommon : pb::IMessage<SLRouteCommon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLRouteCommon> _parser = new pb::MessageParser<SLRouteCommon>(() => new SLRouteCommon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLRouteCommon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteCommon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteCommon(SLRouteCommon other) : this() {
      adminDistance_ = other.adminDistance_;
      localLabel_ = other.localLabel_;
      tag_ = other.tag_;
      srcProto_ = other.srcProto_;
      srcProtoTag_ = other.srcProtoTag_;
      routeFlags_ = other.routeFlags_.Clone();
      metric_ = other.metric_;
      priority_ = other.priority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRouteCommon Clone() {
      return new SLRouteCommon(this);
    }

    /// <summary>Field number for the "AdminDistance" field.</summary>
    public const int AdminDistanceFieldNumber = 1;
    private uint adminDistance_;
    /// <summary>
    /// Adminstrative distance of the route. [0-255].
    /// RIB uses this field to break the tie when multiple
    /// sources install the same route.
    /// Lower distance is preferred over higher distance.
    /// The per route object admin distance overrides the default admin
    /// distance set at VRF registration. see SLVrfReg
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint AdminDistance {
      get { return adminDistance_; }
      set {
        adminDistance_ = value;
      }
    }

    /// <summary>Field number for the "LocalLabel" field.</summary>
    public const int LocalLabelFieldNumber = 2;
    private uint localLabel_;
    /// <summary>
    /// Local label associated with this route.
    /// This is an optional field that can be used to simulatenously setup an 
    /// ILM entry (e.g. head end of an MPLS LSP) for the same route.
    /// This is especially useful when setting up an MPLS LSP (a /32-route 
    /// towards the remote LSP peer e.g. 2.2.2.2/32) which is required for MPLS
    /// VPN labeled routes.
    ///
    /// Note: MPLS VPN labeled routes can resolve only on:
    ///    - /32-routes with valid LocalLabel and a valid egress MPLS path label
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LocalLabel {
      get { return localLabel_; }
      set {
        localLabel_ = value;
      }
    }

    /// <summary>Field number for the "Tag" field.</summary>
    public const int TagFieldNumber = 3;
    private uint tag_;
    /// <summary>
    /// Route Tag.
    /// Routes are usually tagged to prevent loops during redistribution between
    /// protocols.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    /// <summary>Field number for the "SrcProto" field.</summary>
    public const int SrcProtoFieldNumber = 4;
    private string srcProto_ = "";
    /// <summary>
    /// Source Protocol.
    /// For redistributed messages via notification stream only,
    /// ignored otherwise.
    /// Contact Cisco for supported protocol string names.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SrcProto {
      get { return srcProto_; }
      set {
        srcProto_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SrcProtoTag" field.</summary>
    public const int SrcProtoTagFieldNumber = 5;
    private string srcProtoTag_ = "";
    /// <summary>
    /// Source Protocol Tag. This can be empty if N/A.
    /// For redistributed messages via notification stream only,
    /// ignored otherwise.
    /// Contact Cisco for supported protocol tags.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SrcProtoTag {
      get { return srcProtoTag_; }
      set {
        srcProtoTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RouteFlags" field.</summary>
    public const int RouteFlagsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLRouteFlags> _repeated_routeFlags_codec
        = pb::FieldCodec.ForEnum(58, x => (int) x, x => (global::ServiceLayer.SLRouteFlags) x);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLRouteFlags> routeFlags_ = new pbc::RepeatedField<global::ServiceLayer.SLRouteFlags>();
    /// <summary>
    /// Route Flags.
    /// Flags to control programming of the route to Routing Information Base.
    /// Each flag is indicated as a bit field. 
    /// See SLRouteFlags for flag enumerations.
    /// Supported values are:
    ///
    /// SL_ROUTE_FLAG_PREFER_OVER_LDP - This route takes precedence
    /// over a route learnt by LDP.
    ///
    /// SL_ROUTE_FLAG_DISABLE_LABEL_MERGE
    /// If this route is preferred over any other producer of the same prefix
    /// and the latter is programmed with a SR label as well, do not merge
    /// that label's programming this route.
    ///
    /// SL_ROUTE_FLAG_VIABLE_PATHS_ONLY - This flag on the route
    /// is applicable only if the route contains the PathList.
    ///
    /// - If the flag is not set, all paths in the PathList are installed in
    ///   the route's load balance group, even if paths are unviable. The
    ///   Network element does not automatically update the route's load balance
    ///   group when path viability changes and expects the client to take
    ///   corrective action.
    ///
    /// - If the flag is set, the network element only installs viable
    ///   paths from the PathList in the route's load balance group.
    ///   The Network element also automatically updates the route's
    ///   load balance group when path viability changes.
    ///
    /// - If the route refers to the PathGroup, then a programming error is 
    ///   returned and the corresponding setting on the PathGroup dictates 
    ///   path programming.
    ///
    /// SL_ROUTE_FLAG_ACTIVE_ON_VIABLE_PATH - This flag is supported only for
    /// routes that contain the PathList.
    ///
    /// - If this flag is not set, the route is active if it is preferred
    ///   based on administrative distance. Viability of the paths in
    ///   the PathList is not used as a criterion to determine
    ///   route's activeness.
    ///   If the route is active, the PathList programming is dictated by
    ///   SL_ROUTE_FLAG_VIABLE_PATHS_ONLY.
    ///
    /// - If this flag is set, SL_ROUTE_FLAG_VIABLE_PATHS_ONLY must also
    ///   be set. The route is considered as active if it is preferred based
    ///   on administrative distance AND at least one path in the PathList
    ///   is viable. The Network element also automatically promotes or demotes
    ///   the route when the first path becomes viable or none of the paths
    ///   are no longer viable.
    ///
    /// - If the route refers to the PathGroup, then a programming error is 
    ///   returned and the corresponding setting on the PathGroup dictates 
    ///   whether this route should be considered in best route calculations.
    ///
    /// All others are reserved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLRouteFlags> RouteFlags {
      get { return routeFlags_; }
    }

    /// <summary>Field number for the "Metric" field.</summary>
    public const int MetricFieldNumber = 8;
    private uint metric_;
    /// <summary>
    /// Route Metric. [0-4294967294]
    /// The metric is typically based on information like load, hop count,
    /// MTU, reliability of the path, etc.
    /// When routes from different protocols share the same admin distance, 
    /// RIB selects the route with the lowest value in this field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Metric {
      get { return metric_; }
      set {
        metric_ = value;
      }
    }

    /// <summary>Field number for the "Priority" field.</summary>
    public const int PriorityFieldNumber = 9;
    private global::ServiceLayer.SLUpdatePriority priority_ = global::ServiceLayer.SLUpdatePriority.SlPriorityReserved;
    /// <summary>
    /// Each entry can have priority value, this priority value may be used
    /// in internal queuing of routes while programming the data-plane
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLUpdatePriority Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLRouteCommon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLRouteCommon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdminDistance != other.AdminDistance) return false;
      if (LocalLabel != other.LocalLabel) return false;
      if (Tag != other.Tag) return false;
      if (SrcProto != other.SrcProto) return false;
      if (SrcProtoTag != other.SrcProtoTag) return false;
      if(!routeFlags_.Equals(other.routeFlags_)) return false;
      if (Metric != other.Metric) return false;
      if (Priority != other.Priority) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AdminDistance != 0) hash ^= AdminDistance.GetHashCode();
      if (LocalLabel != 0) hash ^= LocalLabel.GetHashCode();
      if (Tag != 0) hash ^= Tag.GetHashCode();
      if (SrcProto.Length != 0) hash ^= SrcProto.GetHashCode();
      if (SrcProtoTag.Length != 0) hash ^= SrcProtoTag.GetHashCode();
      hash ^= routeFlags_.GetHashCode();
      if (Metric != 0) hash ^= Metric.GetHashCode();
      if (Priority != global::ServiceLayer.SLUpdatePriority.SlPriorityReserved) hash ^= Priority.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AdminDistance != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(AdminDistance);
      }
      if (LocalLabel != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(LocalLabel);
      }
      if (Tag != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Tag);
      }
      if (SrcProto.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SrcProto);
      }
      if (SrcProtoTag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SrcProtoTag);
      }
      routeFlags_.WriteTo(output, _repeated_routeFlags_codec);
      if (Metric != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Metric);
      }
      if (Priority != global::ServiceLayer.SLUpdatePriority.SlPriorityReserved) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Priority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AdminDistance != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(AdminDistance);
      }
      if (LocalLabel != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(LocalLabel);
      }
      if (Tag != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Tag);
      }
      if (SrcProto.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SrcProto);
      }
      if (SrcProtoTag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SrcProtoTag);
      }
      routeFlags_.WriteTo(ref output, _repeated_routeFlags_codec);
      if (Metric != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Metric);
      }
      if (Priority != global::ServiceLayer.SLUpdatePriority.SlPriorityReserved) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Priority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AdminDistance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AdminDistance);
      }
      if (LocalLabel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LocalLabel);
      }
      if (Tag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Tag);
      }
      if (SrcProto.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SrcProto);
      }
      if (SrcProtoTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SrcProtoTag);
      }
      size += routeFlags_.CalculateSize(_repeated_routeFlags_codec);
      if (Metric != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Metric);
      }
      if (Priority != global::ServiceLayer.SLUpdatePriority.SlPriorityReserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Priority);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLRouteCommon other) {
      if (other == null) {
        return;
      }
      if (other.AdminDistance != 0) {
        AdminDistance = other.AdminDistance;
      }
      if (other.LocalLabel != 0) {
        LocalLabel = other.LocalLabel;
      }
      if (other.Tag != 0) {
        Tag = other.Tag;
      }
      if (other.SrcProto.Length != 0) {
        SrcProto = other.SrcProto;
      }
      if (other.SrcProtoTag.Length != 0) {
        SrcProtoTag = other.SrcProtoTag;
      }
      routeFlags_.Add(other.routeFlags_);
      if (other.Metric != 0) {
        Metric = other.Metric;
      }
      if (other.Priority != global::ServiceLayer.SLUpdatePriority.SlPriorityReserved) {
        Priority = other.Priority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AdminDistance = input.ReadUInt32();
            break;
          }
          case 16: {
            LocalLabel = input.ReadUInt32();
            break;
          }
          case 24: {
            Tag = input.ReadUInt32();
            break;
          }
          case 34: {
            SrcProto = input.ReadString();
            break;
          }
          case 42: {
            SrcProtoTag = input.ReadString();
            break;
          }
          case 58:
          case 56: {
            routeFlags_.AddEntriesFrom(input, _repeated_routeFlags_codec);
            break;
          }
          case 64: {
            Metric = input.ReadUInt32();
            break;
          }
          case 72: {
            Priority = (global::ServiceLayer.SLUpdatePriority) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AdminDistance = input.ReadUInt32();
            break;
          }
          case 16: {
            LocalLabel = input.ReadUInt32();
            break;
          }
          case 24: {
            Tag = input.ReadUInt32();
            break;
          }
          case 34: {
            SrcProto = input.ReadString();
            break;
          }
          case 42: {
            SrcProtoTag = input.ReadString();
            break;
          }
          case 58:
          case 56: {
            routeFlags_.AddEntriesFrom(ref input, _repeated_routeFlags_codec);
            break;
          }
          case 64: {
            Metric = input.ReadUInt32();
            break;
          }
          case 72: {
            Priority = (global::ServiceLayer.SLUpdatePriority) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Attributes for constructing VxLAN encapsulation for a IP packet.
  /// </summary>
  public sealed partial class SLVxLANPath : pb::IMessage<SLVxLANPath>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLVxLANPath> _parser = new pb::MessageParser<SLVxLANPath>(() => new SLVxLANPath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLVxLANPath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVxLANPath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVxLANPath(SLVxLANPath other) : this() {
      vNI_ = other.vNI_;
      sourceMacAddress_ = other.sourceMacAddress_;
      destMacAddress_ = other.destMacAddress_;
      srcIpAddress_ = other.srcIpAddress_ != null ? other.srcIpAddress_.Clone() : null;
      destIpAddress_ = other.destIpAddress_ != null ? other.destIpAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLVxLANPath Clone() {
      return new SLVxLANPath(this);
    }

    /// <summary>Field number for the "VNI" field.</summary>
    public const int VNIFieldNumber = 1;
    private uint vNI_;
    /// <summary>
    /// Virtual network identifier. Client must set a valid non-zero idenifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VNI {
      get { return vNI_; }
      set {
        vNI_ = value;
      }
    }

    /// <summary>Field number for the "SourceMacAddress" field.</summary>
    public const int SourceMacAddressFieldNumber = 2;
    private pb::ByteString sourceMacAddress_ = pb::ByteString.Empty;
    /// <summary>
    /// Source MAC address is optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SourceMacAddress {
      get { return sourceMacAddress_; }
      set {
        sourceMacAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DestMacAddress" field.</summary>
    public const int DestMacAddressFieldNumber = 3;
    private pb::ByteString destMacAddress_ = pb::ByteString.Empty;
    /// <summary>
    /// Destination MAC address is optional.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString DestMacAddress {
      get { return destMacAddress_; }
      set {
        destMacAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SrcIpAddress" field.</summary>
    public const int SrcIpAddressFieldNumber = 4;
    private global::ServiceLayer.SLIpAddress srcIpAddress_;
    /// <summary>
    /// Tunnel Source or Local IP address is mandatory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLIpAddress SrcIpAddress {
      get { return srcIpAddress_; }
      set {
        srcIpAddress_ = value;
      }
    }

    /// <summary>Field number for the "DestIpAddress" field.</summary>
    public const int DestIpAddressFieldNumber = 5;
    private global::ServiceLayer.SLIpAddress destIpAddress_;
    /// <summary>
    /// Tunnel Destination or Remote IP address is mandatory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLIpAddress DestIpAddress {
      get { return destIpAddress_; }
      set {
        destIpAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLVxLANPath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLVxLANPath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VNI != other.VNI) return false;
      if (SourceMacAddress != other.SourceMacAddress) return false;
      if (DestMacAddress != other.DestMacAddress) return false;
      if (!object.Equals(SrcIpAddress, other.SrcIpAddress)) return false;
      if (!object.Equals(DestIpAddress, other.DestIpAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VNI != 0) hash ^= VNI.GetHashCode();
      if (SourceMacAddress.Length != 0) hash ^= SourceMacAddress.GetHashCode();
      if (DestMacAddress.Length != 0) hash ^= DestMacAddress.GetHashCode();
      if (srcIpAddress_ != null) hash ^= SrcIpAddress.GetHashCode();
      if (destIpAddress_ != null) hash ^= DestIpAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VNI != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VNI);
      }
      if (SourceMacAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(SourceMacAddress);
      }
      if (DestMacAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(DestMacAddress);
      }
      if (srcIpAddress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SrcIpAddress);
      }
      if (destIpAddress_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DestIpAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VNI != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VNI);
      }
      if (SourceMacAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(SourceMacAddress);
      }
      if (DestMacAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(DestMacAddress);
      }
      if (srcIpAddress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SrcIpAddress);
      }
      if (destIpAddress_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DestIpAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VNI != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VNI);
      }
      if (SourceMacAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SourceMacAddress);
      }
      if (DestMacAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DestMacAddress);
      }
      if (srcIpAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SrcIpAddress);
      }
      if (destIpAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestIpAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLVxLANPath other) {
      if (other == null) {
        return;
      }
      if (other.VNI != 0) {
        VNI = other.VNI;
      }
      if (other.SourceMacAddress.Length != 0) {
        SourceMacAddress = other.SourceMacAddress;
      }
      if (other.DestMacAddress.Length != 0) {
        DestMacAddress = other.DestMacAddress;
      }
      if (other.srcIpAddress_ != null) {
        if (srcIpAddress_ == null) {
          SrcIpAddress = new global::ServiceLayer.SLIpAddress();
        }
        SrcIpAddress.MergeFrom(other.SrcIpAddress);
      }
      if (other.destIpAddress_ != null) {
        if (destIpAddress_ == null) {
          DestIpAddress = new global::ServiceLayer.SLIpAddress();
        }
        DestIpAddress.MergeFrom(other.DestIpAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VNI = input.ReadUInt32();
            break;
          }
          case 18: {
            SourceMacAddress = input.ReadBytes();
            break;
          }
          case 26: {
            DestMacAddress = input.ReadBytes();
            break;
          }
          case 34: {
            if (srcIpAddress_ == null) {
              SrcIpAddress = new global::ServiceLayer.SLIpAddress();
            }
            input.ReadMessage(SrcIpAddress);
            break;
          }
          case 42: {
            if (destIpAddress_ == null) {
              DestIpAddress = new global::ServiceLayer.SLIpAddress();
            }
            input.ReadMessage(DestIpAddress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VNI = input.ReadUInt32();
            break;
          }
          case 18: {
            SourceMacAddress = input.ReadBytes();
            break;
          }
          case 26: {
            DestMacAddress = input.ReadBytes();
            break;
          }
          case 34: {
            if (srcIpAddress_ == null) {
              SrcIpAddress = new global::ServiceLayer.SLIpAddress();
            }
            input.ReadMessage(SrcIpAddress);
            break;
          }
          case 42: {
            if (destIpAddress_ == null) {
              DestIpAddress = new global::ServiceLayer.SLIpAddress();
            }
            input.ReadMessage(DestIpAddress);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Route Path attributes.
  ///
  /// In the multi-path associated with a IP route, MPLS label or a Path Group,
  /// paths with identical keys are coalesced and cannot be used
  /// as a mechanism to achieve unequal cost multi-path distribution.
  ///
  /// Path key includes NextHopAdress, NextHopInterface, LabelStack and VrfName.
  ///
  /// FRR Note:
  /// Failover from primary to backup is based on the trigger used (e.g.
  /// link down, BFD, etc.). Revertion is mainly timeout based. The timeout
  /// value is platform specific and is not configurable.
  /// </summary>
  public sealed partial class SLRoutePath : pb::IMessage<SLRoutePath>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLRoutePath> _parser = new pb::MessageParser<SLRoutePath>(() => new SLRoutePath());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLRoutePath> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRoutePath() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRoutePath(SLRoutePath other) : this() {
      nexthopAddress_ = other.nexthopAddress_ != null ? other.nexthopAddress_.Clone() : null;
      nexthopInterface_ = other.nexthopInterface_ != null ? other.nexthopInterface_.Clone() : null;
      loadMetric_ = other.loadMetric_;
      vrfName_ = other.vrfName_;
      pathId_ = other.pathId_;
      protectedPathBitmap_ = other.protectedPathBitmap_.Clone();
      labelStack_ = other.labelStack_.Clone();
      remoteAddress_ = other.remoteAddress_.Clone();
      encapType_ = other.encapType_;
      vtepRouterMacAddress_ = other.vtepRouterMacAddress_;
      vxLANPath_ = other.vxLANPath_ != null ? other.vxLANPath_.Clone() : null;
      pathFlags_ = other.pathFlags_.Clone();
      switch (other.EntryCase) {
        case EntryOneofCase.PathGroupKey:
          PathGroupKey = other.PathGroupKey.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRoutePath Clone() {
      return new SLRoutePath(this);
    }

    /// <summary>Field number for the "NexthopAddress" field.</summary>
    public const int NexthopAddressFieldNumber = 1;
    private global::ServiceLayer.SLIpAddress nexthopAddress_;
    /// <summary>
    /// One of IPv4 or IPv6 address.
    /// For ENCAP_VXLAN, this field is not supported and will be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLIpAddress NexthopAddress {
      get { return nexthopAddress_; }
      set {
        nexthopAddress_ = value;
      }
    }

    /// <summary>Field number for the "NexthopInterface" field.</summary>
    public const int NexthopInterfaceFieldNumber = 2;
    private global::ServiceLayer.SLInterface nexthopInterface_;
    /// <summary>
    /// Outgoing interface name for the path.
    /// For ENCAP_VXLAN, this field is not supported and will be ignored.
    /// The client should listen to interface state change API for create/delete 
    /// and reprogram the route or PG.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLInterface NexthopInterface {
      get { return nexthopInterface_; }
      set {
        nexthopInterface_ = value;
      }
    }

    /// <summary>Field number for the "LoadMetric" field.</summary>
    public const int LoadMetricFieldNumber = 3;
    private uint loadMetric_;
    /// <summary>
    /// Load metric for this path.
    /// Used for equal/unequal cost load balancing of traffic distribution.
    /// For equal cost load balancing, all paths associated with the
    /// route, MPLS label or PathGroup must have a value of 0. For
    /// unequal cost load balancing, all paths must have non-zero value
    /// otherwise system defaults to equal cost load balancing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LoadMetric {
      get { return loadMetric_; }
      set {
        loadMetric_ = value;
      }
    }

    /// <summary>Field number for the "VrfName" field.</summary>
    public const int VrfNameFieldNumber = 4;
    private string vrfName_ = "";
    /// <summary>
    /// Path VRF name. This field is optional and if not specified, VRF of
    /// the AF object containing this path is assumed. The client can set a
    /// different VRF name for certain use cases such as VPN or VxLAN encapsulation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VrfName {
      get { return vrfName_; }
      set {
        vrfName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PathId" field.</summary>
    public const int PathIdFieldNumber = 6;
    private uint pathId_;
    /// <summary>
    /// Path identifier.
    /// Path-id is used to uniquely identify a path when it comes to
    /// protection (Fast Re-Route - FRR). It is not used otherwise.
    ///
    /// In general, for FRR, There are 3 main path attributes:
    ///    1. Primary. The path is the main path to carry traffic.
    ///    2. Protected. A primary path with a configured backup path.
    ///    3. Backup. The path is protecting a primary path.
    ///
    /// NOTE1: a primary path (A) can be simultaneously protected (by B), and
    /// acting as a backup for another path (C).
    /// In this example, the primary path C is protected by A (which happens to
    /// be primary). So the primary path (A) is Primary, Protected, and Backup.
    ///
    /// The following are various path types based on combinations of attributes:
    ///    1. Pure Primary i.e. Not Protected and is not a Backup.
    ///       => PathId is optional. ProtectedPathBitmap = 0x0
    ///    2. Primary and Protected. Path is not a Backup.
    ///       => PathId is mandatory. ProtectedPathBitmap = 0x0
    ///    3. Primary and Not Protected. Path is also a Backup.
    ///       => PathId is mandatory. ProtectedPathBitmap = 0xYYYY
    ///    4. Primary and Protected. Path is also a Backup.
    ///       => PathId is mandatory. ProtectedPathBitmap = 0xYYYY
    ///    5. Pure Backup. Protection is not allowed for backup paths.
    ///       => PathId is mandatory. ProtectedPathBitmap = 0xYYYY
    ///
    /// NOTE2: Pure backup path-id uses a different range than primary path-ids.
    /// The valid range of primary path IDs, and pure backup path IDS are
    /// platform dependent and can be retrieved through the client init message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PathId {
      get { return pathId_; }
      set {
        pathId_ = value;
      }
    }

    /// <summary>Field number for the "ProtectedPathBitmap" field.</summary>
    public const int ProtectedPathBitmapFieldNumber = 7;
    private static readonly pb::FieldCodec<ulong> _repeated_protectedPathBitmap_codec
        = pb::FieldCodec.ForUInt64(58);
    private readonly pbc::RepeatedField<ulong> protectedPathBitmap_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// Path protection bitmap.
    /// The bitmap of paths this Backup path is protecting.
    /// Example: If this path is protecting paths with IDs 4, 5 and 6, then
    /// set bitmap to:
    /// 0x38 ==> 0011 1000
    ///            || |-- path 4
    ///            ||-- path 5
    ///            |-- path 6
    /// (1 &lt;&lt; (pathId_1 - 1))  | (1 &lt;&lt; (pathId_2 - 1)) | (1 &lt;&lt; (pathId_3 - 1))
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> ProtectedPathBitmap {
      get { return protectedPathBitmap_; }
    }

    /// <summary>Field number for the "LabelStack" field.</summary>
    public const int LabelStackFieldNumber = 8;
    private static readonly pb::FieldCodec<uint> _repeated_labelStack_codec
        = pb::FieldCodec.ForUInt32(66);
    private readonly pbc::RepeatedField<uint> labelStack_ = new pbc::RepeatedField<uint>();
    /// <summary>
    /// MPLS label stack.
    /// Stack of labels that is pushed when the packet is switched out.
    /// Label size is LSB 20 bits. Forwarding will set EXP, TTL and BOS.
    /// For primary path, typically only 1 label is used.
    /// For backup paths, more than 1 label can be used. If more than one label
    /// is used, remote backup addresses must be specified.
    ///
    /// The maximum number of labels pushed for primary and backup are
    /// platform dependent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<uint> LabelStack {
      get { return labelStack_; }
    }

    /// <summary>Field number for the "RemoteAddress" field.</summary>
    public const int RemoteAddressFieldNumber = 9;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLIpAddress> _repeated_remoteAddress_codec
        = pb::FieldCodec.ForMessage(74, global::ServiceLayer.SLIpAddress.Parser);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLIpAddress> remoteAddress_ = new pbc::RepeatedField<global::ServiceLayer.SLIpAddress>();
    /// <summary>
    /// MPLS Remote router backup address.
    /// This field is used only for backup MPLS path with more than one label
    /// For N+1 backup labels, N remote backup addresses must be specified.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLIpAddress> RemoteAddress {
      get { return remoteAddress_; }
    }

    /// <summary>Field number for the "EncapType" field.</summary>
    public const int EncapTypeFieldNumber = 10;
    private global::ServiceLayer.SLEncapType encapType_ = global::ServiceLayer.SLEncapType.SlEncapReserved;
    /// <summary>
    /// For VxLAN, Encapsulation type must be set to SL_ENCAP_VXLAN
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLEncapType EncapType {
      get { return encapType_; }
      set {
        encapType_ = value;
      }
    }

    /// <summary>Field number for the "VtepRouterMacAddress" field.</summary>
    public const int VtepRouterMacAddressFieldNumber = 11;
    private pb::ByteString vtepRouterMacAddress_ = pb::ByteString.Empty;
    /// <summary>
    /// VTEP (VxLAN tunnel end point) router MAC address.
    /// A unique system MAC address that other VTEPs can use for inter-VNI
    /// routing. The router MAC address is used as the inner destination MAC
    /// address for routed VXLAN packet. If this attribute
    /// is set, route can be only be signalled via BGP for EVPN use and
    /// local tunnel endpoint is not created.
    ///
    /// This field and VxLANPath are mutually exclusive. This field
    /// is deprecated and will eventually be removed.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString VtepRouterMacAddress {
      get { return vtepRouterMacAddress_; }
      set {
        vtepRouterMacAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "VxLANPath" field.</summary>
    public const int VxLANPathFieldNumber = 12;
    private global::ServiceLayer.SLVxLANPath vxLANPath_;
    /// <summary>
    /// Create L3 VxLAN tunnel endpoint. Apply VxLAN encapsulation
    /// on the IP packet.
    /// Note: SLVxLANPath is supported only through following RPCs
    /// a) SLAFOp
    /// b) SLAFOpStream
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLVxLANPath VxLANPath {
      get { return vxLANPath_; }
      set {
        vxLANPath_ = value;
      }
    }

    /// <summary>Field number for the "PathFlags" field.</summary>
    public const int PathFlagsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::ServiceLayer.SLPathFlags> _repeated_pathFlags_codec
        = pb::FieldCodec.ForEnum(114, x => (int) x, x => (global::ServiceLayer.SLPathFlags) x);
    private readonly pbc::RepeatedField<global::ServiceLayer.SLPathFlags> pathFlags_ = new pbc::RepeatedField<global::ServiceLayer.SLPathFlags>();
    /// <summary>
    /// Path Flags. Each flag is indicated as a bit field. Supported values are:
    /// - 0x00000001 = SINGLE_PATH_OPT Enables hardware optimization for single path VxLAN tunnels.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ServiceLayer.SLPathFlags> PathFlags {
      get { return pathFlags_; }
    }

    /// <summary>Field number for the "PathGroupKey" field.</summary>
    public const int PathGroupKeyFieldNumber = 15;
    /// <summary>
    /// Path group reference key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLPathGroupRefKey PathGroupKey {
      get { return entryCase_ == EntryOneofCase.PathGroupKey ? (global::ServiceLayer.SLPathGroupRefKey) entry_ : null; }
      set {
        entry_ = value;
        entryCase_ = value == null ? EntryOneofCase.None : EntryOneofCase.PathGroupKey;
      }
    }

    private object entry_;
    /// <summary>Enum of possible cases for the "entry" oneof.</summary>
    public enum EntryOneofCase {
      None = 0,
      PathGroupKey = 15,
    }
    private EntryOneofCase entryCase_ = EntryOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EntryOneofCase EntryCase {
      get { return entryCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEntry() {
      entryCase_ = EntryOneofCase.None;
      entry_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLRoutePath);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLRoutePath other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NexthopAddress, other.NexthopAddress)) return false;
      if (!object.Equals(NexthopInterface, other.NexthopInterface)) return false;
      if (LoadMetric != other.LoadMetric) return false;
      if (VrfName != other.VrfName) return false;
      if (PathId != other.PathId) return false;
      if(!protectedPathBitmap_.Equals(other.protectedPathBitmap_)) return false;
      if(!labelStack_.Equals(other.labelStack_)) return false;
      if(!remoteAddress_.Equals(other.remoteAddress_)) return false;
      if (EncapType != other.EncapType) return false;
      if (VtepRouterMacAddress != other.VtepRouterMacAddress) return false;
      if (!object.Equals(VxLANPath, other.VxLANPath)) return false;
      if(!pathFlags_.Equals(other.pathFlags_)) return false;
      if (!object.Equals(PathGroupKey, other.PathGroupKey)) return false;
      if (EntryCase != other.EntryCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (nexthopAddress_ != null) hash ^= NexthopAddress.GetHashCode();
      if (nexthopInterface_ != null) hash ^= NexthopInterface.GetHashCode();
      if (LoadMetric != 0) hash ^= LoadMetric.GetHashCode();
      if (VrfName.Length != 0) hash ^= VrfName.GetHashCode();
      if (PathId != 0) hash ^= PathId.GetHashCode();
      hash ^= protectedPathBitmap_.GetHashCode();
      hash ^= labelStack_.GetHashCode();
      hash ^= remoteAddress_.GetHashCode();
      if (EncapType != global::ServiceLayer.SLEncapType.SlEncapReserved) hash ^= EncapType.GetHashCode();
      if (VtepRouterMacAddress.Length != 0) hash ^= VtepRouterMacAddress.GetHashCode();
      if (vxLANPath_ != null) hash ^= VxLANPath.GetHashCode();
      hash ^= pathFlags_.GetHashCode();
      if (entryCase_ == EntryOneofCase.PathGroupKey) hash ^= PathGroupKey.GetHashCode();
      hash ^= (int) entryCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (nexthopAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NexthopAddress);
      }
      if (nexthopInterface_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NexthopInterface);
      }
      if (LoadMetric != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(LoadMetric);
      }
      if (VrfName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(VrfName);
      }
      if (PathId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PathId);
      }
      protectedPathBitmap_.WriteTo(output, _repeated_protectedPathBitmap_codec);
      labelStack_.WriteTo(output, _repeated_labelStack_codec);
      remoteAddress_.WriteTo(output, _repeated_remoteAddress_codec);
      if (EncapType != global::ServiceLayer.SLEncapType.SlEncapReserved) {
        output.WriteRawTag(80);
        output.WriteEnum((int) EncapType);
      }
      if (VtepRouterMacAddress.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(VtepRouterMacAddress);
      }
      if (vxLANPath_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(VxLANPath);
      }
      pathFlags_.WriteTo(output, _repeated_pathFlags_codec);
      if (entryCase_ == EntryOneofCase.PathGroupKey) {
        output.WriteRawTag(122);
        output.WriteMessage(PathGroupKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (nexthopAddress_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NexthopAddress);
      }
      if (nexthopInterface_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NexthopInterface);
      }
      if (LoadMetric != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(LoadMetric);
      }
      if (VrfName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(VrfName);
      }
      if (PathId != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PathId);
      }
      protectedPathBitmap_.WriteTo(ref output, _repeated_protectedPathBitmap_codec);
      labelStack_.WriteTo(ref output, _repeated_labelStack_codec);
      remoteAddress_.WriteTo(ref output, _repeated_remoteAddress_codec);
      if (EncapType != global::ServiceLayer.SLEncapType.SlEncapReserved) {
        output.WriteRawTag(80);
        output.WriteEnum((int) EncapType);
      }
      if (VtepRouterMacAddress.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(VtepRouterMacAddress);
      }
      if (vxLANPath_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(VxLANPath);
      }
      pathFlags_.WriteTo(ref output, _repeated_pathFlags_codec);
      if (entryCase_ == EntryOneofCase.PathGroupKey) {
        output.WriteRawTag(122);
        output.WriteMessage(PathGroupKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (nexthopAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NexthopAddress);
      }
      if (nexthopInterface_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NexthopInterface);
      }
      if (LoadMetric != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LoadMetric);
      }
      if (VrfName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VrfName);
      }
      if (PathId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PathId);
      }
      size += protectedPathBitmap_.CalculateSize(_repeated_protectedPathBitmap_codec);
      size += labelStack_.CalculateSize(_repeated_labelStack_codec);
      size += remoteAddress_.CalculateSize(_repeated_remoteAddress_codec);
      if (EncapType != global::ServiceLayer.SLEncapType.SlEncapReserved) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EncapType);
      }
      if (VtepRouterMacAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(VtepRouterMacAddress);
      }
      if (vxLANPath_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VxLANPath);
      }
      size += pathFlags_.CalculateSize(_repeated_pathFlags_codec);
      if (entryCase_ == EntryOneofCase.PathGroupKey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PathGroupKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLRoutePath other) {
      if (other == null) {
        return;
      }
      if (other.nexthopAddress_ != null) {
        if (nexthopAddress_ == null) {
          NexthopAddress = new global::ServiceLayer.SLIpAddress();
        }
        NexthopAddress.MergeFrom(other.NexthopAddress);
      }
      if (other.nexthopInterface_ != null) {
        if (nexthopInterface_ == null) {
          NexthopInterface = new global::ServiceLayer.SLInterface();
        }
        NexthopInterface.MergeFrom(other.NexthopInterface);
      }
      if (other.LoadMetric != 0) {
        LoadMetric = other.LoadMetric;
      }
      if (other.VrfName.Length != 0) {
        VrfName = other.VrfName;
      }
      if (other.PathId != 0) {
        PathId = other.PathId;
      }
      protectedPathBitmap_.Add(other.protectedPathBitmap_);
      labelStack_.Add(other.labelStack_);
      remoteAddress_.Add(other.remoteAddress_);
      if (other.EncapType != global::ServiceLayer.SLEncapType.SlEncapReserved) {
        EncapType = other.EncapType;
      }
      if (other.VtepRouterMacAddress.Length != 0) {
        VtepRouterMacAddress = other.VtepRouterMacAddress;
      }
      if (other.vxLANPath_ != null) {
        if (vxLANPath_ == null) {
          VxLANPath = new global::ServiceLayer.SLVxLANPath();
        }
        VxLANPath.MergeFrom(other.VxLANPath);
      }
      pathFlags_.Add(other.pathFlags_);
      switch (other.EntryCase) {
        case EntryOneofCase.PathGroupKey:
          if (PathGroupKey == null) {
            PathGroupKey = new global::ServiceLayer.SLPathGroupRefKey();
          }
          PathGroupKey.MergeFrom(other.PathGroupKey);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (nexthopAddress_ == null) {
              NexthopAddress = new global::ServiceLayer.SLIpAddress();
            }
            input.ReadMessage(NexthopAddress);
            break;
          }
          case 18: {
            if (nexthopInterface_ == null) {
              NexthopInterface = new global::ServiceLayer.SLInterface();
            }
            input.ReadMessage(NexthopInterface);
            break;
          }
          case 24: {
            LoadMetric = input.ReadUInt32();
            break;
          }
          case 34: {
            VrfName = input.ReadString();
            break;
          }
          case 48: {
            PathId = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            protectedPathBitmap_.AddEntriesFrom(input, _repeated_protectedPathBitmap_codec);
            break;
          }
          case 66:
          case 64: {
            labelStack_.AddEntriesFrom(input, _repeated_labelStack_codec);
            break;
          }
          case 74: {
            remoteAddress_.AddEntriesFrom(input, _repeated_remoteAddress_codec);
            break;
          }
          case 80: {
            EncapType = (global::ServiceLayer.SLEncapType) input.ReadEnum();
            break;
          }
          case 90: {
            VtepRouterMacAddress = input.ReadBytes();
            break;
          }
          case 98: {
            if (vxLANPath_ == null) {
              VxLANPath = new global::ServiceLayer.SLVxLANPath();
            }
            input.ReadMessage(VxLANPath);
            break;
          }
          case 114:
          case 112: {
            pathFlags_.AddEntriesFrom(input, _repeated_pathFlags_codec);
            break;
          }
          case 122: {
            global::ServiceLayer.SLPathGroupRefKey subBuilder = new global::ServiceLayer.SLPathGroupRefKey();
            if (entryCase_ == EntryOneofCase.PathGroupKey) {
              subBuilder.MergeFrom(PathGroupKey);
            }
            input.ReadMessage(subBuilder);
            PathGroupKey = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (nexthopAddress_ == null) {
              NexthopAddress = new global::ServiceLayer.SLIpAddress();
            }
            input.ReadMessage(NexthopAddress);
            break;
          }
          case 18: {
            if (nexthopInterface_ == null) {
              NexthopInterface = new global::ServiceLayer.SLInterface();
            }
            input.ReadMessage(NexthopInterface);
            break;
          }
          case 24: {
            LoadMetric = input.ReadUInt32();
            break;
          }
          case 34: {
            VrfName = input.ReadString();
            break;
          }
          case 48: {
            PathId = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            protectedPathBitmap_.AddEntriesFrom(ref input, _repeated_protectedPathBitmap_codec);
            break;
          }
          case 66:
          case 64: {
            labelStack_.AddEntriesFrom(ref input, _repeated_labelStack_codec);
            break;
          }
          case 74: {
            remoteAddress_.AddEntriesFrom(ref input, _repeated_remoteAddress_codec);
            break;
          }
          case 80: {
            EncapType = (global::ServiceLayer.SLEncapType) input.ReadEnum();
            break;
          }
          case 90: {
            VtepRouterMacAddress = input.ReadBytes();
            break;
          }
          case 98: {
            if (vxLANPath_ == null) {
              VxLANPath = new global::ServiceLayer.SLVxLANPath();
            }
            input.ReadMessage(VxLANPath);
            break;
          }
          case 114:
          case 112: {
            pathFlags_.AddEntriesFrom(ref input, _repeated_pathFlags_codec);
            break;
          }
          case 122: {
            global::ServiceLayer.SLPathGroupRefKey subBuilder = new global::ServiceLayer.SLPathGroupRefKey();
            if (entryCase_ == EntryOneofCase.PathGroupKey) {
              subBuilder.MergeFrom(PathGroupKey);
            }
            input.ReadMessage(subBuilder);
            PathGroupKey = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// IP Route Prefix and Prefix Length
  /// </summary>
  public sealed partial class SLRoutePrefix : pb::IMessage<SLRoutePrefix>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SLRoutePrefix> _parser = new pb::MessageParser<SLRoutePrefix>(() => new SLRoutePrefix());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SLRoutePrefix> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceLayer.SlRouteCommonReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRoutePrefix() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRoutePrefix(SLRoutePrefix other) : this() {
      prefix_ = other.prefix_ != null ? other.prefix_.Clone() : null;
      prefixLen_ = other.prefixLen_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SLRoutePrefix Clone() {
      return new SLRoutePrefix(this);
    }

    /// <summary>Field number for the "Prefix" field.</summary>
    public const int PrefixFieldNumber = 1;
    private global::ServiceLayer.SLIpAddress prefix_;
    /// <summary>
    /// IPv4 or IPv6 address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ServiceLayer.SLIpAddress Prefix {
      get { return prefix_; }
      set {
        prefix_ = value;
      }
    }

    /// <summary>Field number for the "PrefixLen" field.</summary>
    public const int PrefixLenFieldNumber = 2;
    private uint prefixLen_;
    /// <summary>
    /// Prefix length
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint PrefixLen {
      get { return prefixLen_; }
      set {
        prefixLen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SLRoutePrefix);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SLRoutePrefix other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Prefix, other.Prefix)) return false;
      if (PrefixLen != other.PrefixLen) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (prefix_ != null) hash ^= Prefix.GetHashCode();
      if (PrefixLen != 0) hash ^= PrefixLen.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (prefix_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Prefix);
      }
      if (PrefixLen != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PrefixLen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (prefix_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Prefix);
      }
      if (PrefixLen != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PrefixLen);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (prefix_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Prefix);
      }
      if (PrefixLen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PrefixLen);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SLRoutePrefix other) {
      if (other == null) {
        return;
      }
      if (other.prefix_ != null) {
        if (prefix_ == null) {
          Prefix = new global::ServiceLayer.SLIpAddress();
        }
        Prefix.MergeFrom(other.Prefix);
      }
      if (other.PrefixLen != 0) {
        PrefixLen = other.PrefixLen;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (prefix_ == null) {
              Prefix = new global::ServiceLayer.SLIpAddress();
            }
            input.ReadMessage(Prefix);
            break;
          }
          case 16: {
            PrefixLen = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (prefix_ == null) {
              Prefix = new global::ServiceLayer.SLIpAddress();
            }
            input.ReadMessage(Prefix);
            break;
          }
          case 16: {
            PrefixLen = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
