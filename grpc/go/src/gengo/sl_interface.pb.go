// @file
// @brief Server RPC proto file for Interface handles.
// Declares an RPC that gets interface details.
// ----------------------------------------------------------------
//  Copyright (c) 2016 by Cisco Systems, Inc.
//  All rights reserved.
// -----------------------------------------------------------------
//
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.3
// source: sl_interface.proto

package service_layer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The current state of the interface.
type SLInterfaceState int32

const (
	// State unknown
	SLInterfaceState_SL_IF_STATE_UNKNOWN SLInterfaceState = 0
	// Interface created
	SLInterfaceState_SL_IF_STATE_CREATED SLInterfaceState = 1
	// Link state operationally down
	SLInterfaceState_SL_IF_STATE_DOWN SLInterfaceState = 2
	// Link state operationally up
	SLInterfaceState_SL_IF_STATE_UP SLInterfaceState = 3
	// Interface deleted
	SLInterfaceState_SL_IF_STATE_DELETED SLInterfaceState = 4
	// Bandwidth changed
	SLInterfaceState_SL_IF_STATE_BW_CHANGED SLInterfaceState = 5
	// L2 state operationally up
	SLInterfaceState_SL_IF_STATE_L2_UP SLInterfaceState = 6
	// L2 state operationally down
	SLInterfaceState_SL_IF_STATE_L2_DOWN SLInterfaceState = 7
)

// Enum value maps for SLInterfaceState.
var (
	SLInterfaceState_name = map[int32]string{
		0: "SL_IF_STATE_UNKNOWN",
		1: "SL_IF_STATE_CREATED",
		2: "SL_IF_STATE_DOWN",
		3: "SL_IF_STATE_UP",
		4: "SL_IF_STATE_DELETED",
		5: "SL_IF_STATE_BW_CHANGED",
		6: "SL_IF_STATE_L2_UP",
		7: "SL_IF_STATE_L2_DOWN",
	}
	SLInterfaceState_value = map[string]int32{
		"SL_IF_STATE_UNKNOWN":    0,
		"SL_IF_STATE_CREATED":    1,
		"SL_IF_STATE_DOWN":       2,
		"SL_IF_STATE_UP":         3,
		"SL_IF_STATE_DELETED":    4,
		"SL_IF_STATE_BW_CHANGED": 5,
		"SL_IF_STATE_L2_UP":      6,
		"SL_IF_STATE_L2_DOWN":    7,
	}
)

func (x SLInterfaceState) Enum() *SLInterfaceState {
	p := new(SLInterfaceState)
	*p = x
	return p
}

func (x SLInterfaceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SLInterfaceState) Descriptor() protoreflect.EnumDescriptor {
	return file_sl_interface_proto_enumTypes[0].Descriptor()
}

func (SLInterfaceState) Type() protoreflect.EnumType {
	return &file_sl_interface_proto_enumTypes[0]
}

func (x SLInterfaceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SLInterfaceState.Descriptor instead.
func (SLInterfaceState) EnumDescriptor() ([]byte, []int) {
	return file_sl_interface_proto_rawDescGZIP(), []int{0}
}

type SLInterfaceInfoMsgBw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The New Bandwidth.
	NewBandwidth uint64 `protobuf:"varint,1,opt,name=NewBandwidth,proto3" json:"NewBandwidth,omitempty"`
	// The Old Bandwidth prior to the update.
	OldBandwidth uint64 `protobuf:"varint,2,opt,name=OldBandwidth,proto3" json:"OldBandwidth,omitempty"`
}

func (x *SLInterfaceInfoMsgBw) Reset() {
	*x = SLInterfaceInfoMsgBw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sl_interface_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLInterfaceInfoMsgBw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLInterfaceInfoMsgBw) ProtoMessage() {}

func (x *SLInterfaceInfoMsgBw) ProtoReflect() protoreflect.Message {
	mi := &file_sl_interface_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLInterfaceInfoMsgBw.ProtoReflect.Descriptor instead.
func (*SLInterfaceInfoMsgBw) Descriptor() ([]byte, []int) {
	return file_sl_interface_proto_rawDescGZIP(), []int{0}
}

func (x *SLInterfaceInfoMsgBw) GetNewBandwidth() uint64 {
	if x != nil {
		return x.NewBandwidth
	}
	return 0
}

func (x *SLInterfaceInfoMsgBw) GetOldBandwidth() uint64 {
	if x != nil {
		return x.OldBandwidth
	}
	return 0
}

// Interface Get Message result.
type SLInterfaceInfoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface info.
	SLIfInfo *SLInterface `protobuf:"bytes,1,opt,name=SLIfInfo,proto3" json:"SLIfInfo,omitempty"`
	// Interface state.
	IfState SLInterfaceState `protobuf:"varint,2,opt,name=IfState,proto3,enum=service_layer.SLInterfaceState" json:"IfState,omitempty"`
	// Timestamp in microseconds since Epoch
	// January 1st, 1970 00:00:00 GMT, a.k.a. unix epoch.
	Timestamp int64 `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	// Types that are assignable to Value:
	//
	//	*SLInterfaceInfoMsg_BwInfo
	Value isSLInterfaceInfoMsg_Value `protobuf_oneof:"Value"`
}

func (x *SLInterfaceInfoMsg) Reset() {
	*x = SLInterfaceInfoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sl_interface_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLInterfaceInfoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLInterfaceInfoMsg) ProtoMessage() {}

func (x *SLInterfaceInfoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_sl_interface_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLInterfaceInfoMsg.ProtoReflect.Descriptor instead.
func (*SLInterfaceInfoMsg) Descriptor() ([]byte, []int) {
	return file_sl_interface_proto_rawDescGZIP(), []int{1}
}

func (x *SLInterfaceInfoMsg) GetSLIfInfo() *SLInterface {
	if x != nil {
		return x.SLIfInfo
	}
	return nil
}

func (x *SLInterfaceInfoMsg) GetIfState() SLInterfaceState {
	if x != nil {
		return x.IfState
	}
	return SLInterfaceState_SL_IF_STATE_UNKNOWN
}

func (x *SLInterfaceInfoMsg) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (m *SLInterfaceInfoMsg) GetValue() isSLInterfaceInfoMsg_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *SLInterfaceInfoMsg) GetBwInfo() *SLInterfaceInfoMsgBw {
	if x, ok := x.GetValue().(*SLInterfaceInfoMsg_BwInfo); ok {
		return x.BwInfo
	}
	return nil
}

type isSLInterfaceInfoMsg_Value interface {
	isSLInterfaceInfoMsg_Value()
}

type SLInterfaceInfoMsg_BwInfo struct {
	// case IfState SL_IF_STATE_BW_CHANGED is set:
	BwInfo *SLInterfaceInfoMsgBw `protobuf:"bytes,10,opt,name=BwInfo,proto3,oneof"`
}

func (*SLInterfaceInfoMsg_BwInfo) isSLInterfaceInfoMsg_Value() {}

// Interface Notification Entry.
type SLInterfaceNotifMsgEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OperationId. This can be used to correlate replies with requests.
	// The Server simply reflects this field back in the reply.
	// See SLInterfaceNotifMsgRes.
	OperationId uint64 `protobuf:"varint,1,opt,name=OperationId,proto3" json:"OperationId,omitempty"`
	// If true, the Name in the Interface field is a regex.
	// Else, the Name field is an exact match.
	Regex bool `protobuf:"varint,2,opt,name=Regex,proto3" json:"Regex,omitempty"`
	// Interface key attributes.
	// Only SLInterface.Name is supported. The Name can be a regular expression.
	Interface *SLInterface `protobuf:"bytes,3,opt,name=Interface,proto3" json:"Interface,omitempty"`
	// Interface states that this notification entry is interested in.
	States []SLInterfaceState `protobuf:"varint,4,rep,packed,name=States,proto3,enum=service_layer.SLInterfaceState" json:"States,omitempty"`
}

func (x *SLInterfaceNotifMsgEntry) Reset() {
	*x = SLInterfaceNotifMsgEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sl_interface_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLInterfaceNotifMsgEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLInterfaceNotifMsgEntry) ProtoMessage() {}

func (x *SLInterfaceNotifMsgEntry) ProtoReflect() protoreflect.Message {
	mi := &file_sl_interface_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLInterfaceNotifMsgEntry.ProtoReflect.Descriptor instead.
func (*SLInterfaceNotifMsgEntry) Descriptor() ([]byte, []int) {
	return file_sl_interface_proto_rawDescGZIP(), []int{2}
}

func (x *SLInterfaceNotifMsgEntry) GetOperationId() uint64 {
	if x != nil {
		return x.OperationId
	}
	return 0
}

func (x *SLInterfaceNotifMsgEntry) GetRegex() bool {
	if x != nil {
		return x.Regex
	}
	return false
}

func (x *SLInterfaceNotifMsgEntry) GetInterface() *SLInterface {
	if x != nil {
		return x.Interface
	}
	return nil
}

func (x *SLInterfaceNotifMsgEntry) GetStates() []SLInterfaceState {
	if x != nil {
		return x.States
	}
	return nil
}

// Interface Notification message.
type SLInterfaceNotifMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Notification Operation.
	Oper SLNotifOp `protobuf:"varint,1,opt,name=Oper,proto3,enum=service_layer.SLNotifOp" json:"Oper,omitempty"`
	// Notification Entries.
	Entries []*SLInterfaceNotifMsgEntry `protobuf:"bytes,2,rep,name=Entries,proto3" json:"Entries,omitempty"`
}

func (x *SLInterfaceNotifMsg) Reset() {
	*x = SLInterfaceNotifMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sl_interface_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLInterfaceNotifMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLInterfaceNotifMsg) ProtoMessage() {}

func (x *SLInterfaceNotifMsg) ProtoReflect() protoreflect.Message {
	mi := &file_sl_interface_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLInterfaceNotifMsg.ProtoReflect.Descriptor instead.
func (*SLInterfaceNotifMsg) Descriptor() ([]byte, []int) {
	return file_sl_interface_proto_rawDescGZIP(), []int{3}
}

func (x *SLInterfaceNotifMsg) GetOper() SLNotifOp {
	if x != nil {
		return x.Oper
	}
	return SLNotifOp_SL_NOTIFOP_RESERVED
}

func (x *SLInterfaceNotifMsg) GetEntries() []*SLInterfaceNotifMsgEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

// Interface Notification message result.
type SLInterfaceNotifMsgRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// OperationId. This can be used to correlate replies with requests.
	// The Server simply reflects this field back in the reply.
	// See SLInterfaceNotifMsgEntry.
	OperationId uint64 `protobuf:"varint,1,opt,name=OperationId,proto3" json:"OperationId,omitempty"`
	// Corresponding error code.
	ErrStatus *SLErrorStatus `protobuf:"bytes,2,opt,name=ErrStatus,proto3" json:"ErrStatus,omitempty"`
	// Interface key attributes.
	Key *SLInterface `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
}

func (x *SLInterfaceNotifMsgRes) Reset() {
	*x = SLInterfaceNotifMsgRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sl_interface_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLInterfaceNotifMsgRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLInterfaceNotifMsgRes) ProtoMessage() {}

func (x *SLInterfaceNotifMsgRes) ProtoReflect() protoreflect.Message {
	mi := &file_sl_interface_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLInterfaceNotifMsgRes.ProtoReflect.Descriptor instead.
func (*SLInterfaceNotifMsgRes) Descriptor() ([]byte, []int) {
	return file_sl_interface_proto_rawDescGZIP(), []int{4}
}

func (x *SLInterfaceNotifMsgRes) GetOperationId() uint64 {
	if x != nil {
		return x.OperationId
	}
	return 0
}

func (x *SLInterfaceNotifMsgRes) GetErrStatus() *SLErrorStatus {
	if x != nil {
		return x.ErrStatus
	}
	return nil
}

func (x *SLInterfaceNotifMsgRes) GetKey() *SLInterface {
	if x != nil {
		return x.Key
	}
	return nil
}

// Interface Notification message error.
type SLInterfaceNotifMsgErr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Interface key attributes.
	Details []*SLInterfaceNotifMsgRes `protobuf:"bytes,1,rep,name=Details,proto3" json:"Details,omitempty"`
}

func (x *SLInterfaceNotifMsgErr) Reset() {
	*x = SLInterfaceNotifMsgErr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sl_interface_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLInterfaceNotifMsgErr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLInterfaceNotifMsgErr) ProtoMessage() {}

func (x *SLInterfaceNotifMsgErr) ProtoReflect() protoreflect.Message {
	mi := &file_sl_interface_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLInterfaceNotifMsgErr.ProtoReflect.Descriptor instead.
func (*SLInterfaceNotifMsgErr) Descriptor() ([]byte, []int) {
	return file_sl_interface_proto_rawDescGZIP(), []int{5}
}

func (x *SLInterfaceNotifMsgErr) GetDetails() []*SLInterfaceNotifMsgRes {
	if x != nil {
		return x.Details
	}
	return nil
}

// Interface Notification Event.
type SLInterfaceNotif struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//
	//	*SLInterfaceNotif_Error
	//	*SLInterfaceNotif_Info
	Event isSLInterfaceNotif_Event `protobuf_oneof:"Event"`
}

func (x *SLInterfaceNotif) Reset() {
	*x = SLInterfaceNotif{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sl_interface_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SLInterfaceNotif) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SLInterfaceNotif) ProtoMessage() {}

func (x *SLInterfaceNotif) ProtoReflect() protoreflect.Message {
	mi := &file_sl_interface_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SLInterfaceNotif.ProtoReflect.Descriptor instead.
func (*SLInterfaceNotif) Descriptor() ([]byte, []int) {
	return file_sl_interface_proto_rawDescGZIP(), []int{6}
}

func (m *SLInterfaceNotif) GetEvent() isSLInterfaceNotif_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *SLInterfaceNotif) GetError() *SLInterfaceNotifMsgErr {
	if x, ok := x.GetEvent().(*SLInterfaceNotif_Error); ok {
		return x.Error
	}
	return nil
}

func (x *SLInterfaceNotif) GetInfo() *SLInterfaceInfoMsg {
	if x, ok := x.GetEvent().(*SLInterfaceNotif_Info); ok {
		return x.Info
	}
	return nil
}

type isSLInterfaceNotif_Event interface {
	isSLInterfaceNotif_Event()
}

type SLInterfaceNotif_Error struct {
	// This field carries error info, if any error occurs during
	// notification subscription.
	Error *SLInterfaceNotifMsgErr `protobuf:"bytes,1,opt,name=Error,proto3,oneof"`
}

type SLInterfaceNotif_Info struct {
	// This field carries the notification info.
	Info *SLInterfaceInfoMsg `protobuf:"bytes,2,opt,name=Info,proto3,oneof"`
}

func (*SLInterfaceNotif_Error) isSLInterfaceNotif_Event() {}

func (*SLInterfaceNotif_Info) isSLInterfaceNotif_Event() {}

var File_sl_interface_proto protoreflect.FileDescriptor

var file_sl_interface_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x1a, 0x15, 0x73, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x14, 0x53, 0x4c,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73, 0x67,
	0x42, 0x77, 0x12, 0x22, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x4e, 0x65, 0x77, 0x42, 0x61, 0x6e,
	0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x4f, 0x6c, 0x64, 0x42, 0x61, 0x6e,
	0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x4f, 0x6c,
	0x64, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0xed, 0x01, 0x0a, 0x12, 0x53,
	0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73,
	0x67, 0x12, 0x36, 0x0a, 0x08, 0x53, 0x4c, 0x49, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52,
	0x08, 0x53, 0x4c, 0x49, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x07, 0x49, 0x66, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x4c, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x49, 0x66, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x3d, 0x0a, 0x06, 0x42, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x73, 0x67, 0x42, 0x77, 0x48, 0x00, 0x52, 0x06, 0x42, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x07, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x18, 0x53,
	0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x4d,
	0x73, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x67,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x52, 0x65, 0x67, 0x65, 0x78, 0x12,
	0x38, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x09,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x13, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x4f, 0x70,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x4c, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x4f, 0x70, 0x52, 0x04, 0x4f, 0x70, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x4d, 0x73, 0x67, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x16,
	0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x4c, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x45, 0x72, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x03, 0x4b,
	0x65, 0x79, 0x22, 0x59, 0x0a, 0x16, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x12, 0x3f, 0x0a, 0x07,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x4c,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x73, 0x52, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x93, 0x01,
	0x0a, 0x10, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x12, 0x3d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x4d, 0x73, 0x67, 0x45, 0x72, 0x72, 0x48, 0x00, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x37, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4d,
	0x73, 0x67, 0x48, 0x00, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2a, 0xd3, 0x01, 0x0a, 0x10, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x4c, 0x5f, 0x49,
	0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x4c, 0x5f, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x4c,
	0x5f, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x4c, 0x5f, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x55, 0x50, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x4c, 0x5f, 0x49, 0x46, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x1a, 0x0a,
	0x16, 0x53, 0x4c, 0x5f, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x42, 0x57, 0x5f,
	0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x4c, 0x5f,
	0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4c, 0x32, 0x5f, 0x55, 0x50, 0x10, 0x06,
	0x12, 0x17, 0x0a, 0x13, 0x53, 0x4c, 0x5f, 0x49, 0x46, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x4c, 0x32, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x07, 0x32, 0x74, 0x0a, 0x0f, 0x53, 0x4c, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x12, 0x61, 0x0a, 0x16,
	0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x4c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x4d, 0x73, 0x67, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x4c, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x51, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x69,
	0x73, 0x63, 0x6f, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2d,
	0x6f, 0x62, 0x6a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sl_interface_proto_rawDescOnce sync.Once
	file_sl_interface_proto_rawDescData = file_sl_interface_proto_rawDesc
)

func file_sl_interface_proto_rawDescGZIP() []byte {
	file_sl_interface_proto_rawDescOnce.Do(func() {
		file_sl_interface_proto_rawDescData = protoimpl.X.CompressGZIP(file_sl_interface_proto_rawDescData)
	})
	return file_sl_interface_proto_rawDescData
}

var file_sl_interface_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sl_interface_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_sl_interface_proto_goTypes = []interface{}{
	(SLInterfaceState)(0),            // 0: service_layer.SLInterfaceState
	(*SLInterfaceInfoMsgBw)(nil),     // 1: service_layer.SLInterfaceInfoMsgBw
	(*SLInterfaceInfoMsg)(nil),       // 2: service_layer.SLInterfaceInfoMsg
	(*SLInterfaceNotifMsgEntry)(nil), // 3: service_layer.SLInterfaceNotifMsgEntry
	(*SLInterfaceNotifMsg)(nil),      // 4: service_layer.SLInterfaceNotifMsg
	(*SLInterfaceNotifMsgRes)(nil),   // 5: service_layer.SLInterfaceNotifMsgRes
	(*SLInterfaceNotifMsgErr)(nil),   // 6: service_layer.SLInterfaceNotifMsgErr
	(*SLInterfaceNotif)(nil),         // 7: service_layer.SLInterfaceNotif
	(*SLInterface)(nil),              // 8: service_layer.SLInterface
	(SLNotifOp)(0),                   // 9: service_layer.SLNotifOp
	(*SLErrorStatus)(nil),            // 10: service_layer.SLErrorStatus
}
var file_sl_interface_proto_depIdxs = []int32{
	8,  // 0: service_layer.SLInterfaceInfoMsg.SLIfInfo:type_name -> service_layer.SLInterface
	0,  // 1: service_layer.SLInterfaceInfoMsg.IfState:type_name -> service_layer.SLInterfaceState
	1,  // 2: service_layer.SLInterfaceInfoMsg.BwInfo:type_name -> service_layer.SLInterfaceInfoMsgBw
	8,  // 3: service_layer.SLInterfaceNotifMsgEntry.Interface:type_name -> service_layer.SLInterface
	0,  // 4: service_layer.SLInterfaceNotifMsgEntry.States:type_name -> service_layer.SLInterfaceState
	9,  // 5: service_layer.SLInterfaceNotifMsg.Oper:type_name -> service_layer.SLNotifOp
	3,  // 6: service_layer.SLInterfaceNotifMsg.Entries:type_name -> service_layer.SLInterfaceNotifMsgEntry
	10, // 7: service_layer.SLInterfaceNotifMsgRes.ErrStatus:type_name -> service_layer.SLErrorStatus
	8,  // 8: service_layer.SLInterfaceNotifMsgRes.Key:type_name -> service_layer.SLInterface
	5,  // 9: service_layer.SLInterfaceNotifMsgErr.Details:type_name -> service_layer.SLInterfaceNotifMsgRes
	6,  // 10: service_layer.SLInterfaceNotif.Error:type_name -> service_layer.SLInterfaceNotifMsgErr
	2,  // 11: service_layer.SLInterfaceNotif.Info:type_name -> service_layer.SLInterfaceInfoMsg
	4,  // 12: service_layer.SLInterfaceOper.SLInterfaceNotifStream:input_type -> service_layer.SLInterfaceNotifMsg
	7,  // 13: service_layer.SLInterfaceOper.SLInterfaceNotifStream:output_type -> service_layer.SLInterfaceNotif
	13, // [13:14] is the sub-list for method output_type
	12, // [12:13] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_sl_interface_proto_init() }
func file_sl_interface_proto_init() {
	if File_sl_interface_proto != nil {
		return
	}
	file_sl_common_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_sl_interface_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLInterfaceInfoMsgBw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sl_interface_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLInterfaceInfoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sl_interface_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLInterfaceNotifMsgEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sl_interface_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLInterfaceNotifMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sl_interface_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLInterfaceNotifMsgRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sl_interface_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLInterfaceNotifMsgErr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sl_interface_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SLInterfaceNotif); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sl_interface_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SLInterfaceInfoMsg_BwInfo)(nil),
	}
	file_sl_interface_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*SLInterfaceNotif_Error)(nil),
		(*SLInterfaceNotif_Info)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sl_interface_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sl_interface_proto_goTypes,
		DependencyIndexes: file_sl_interface_proto_depIdxs,
		EnumInfos:         file_sl_interface_proto_enumTypes,
		MessageInfos:      file_sl_interface_proto_msgTypes,
	}.Build()
	File_sl_interface_proto = out.File
	file_sl_interface_proto_rawDesc = nil
	file_sl_interface_proto_goTypes = nil
	file_sl_interface_proto_depIdxs = nil
}
