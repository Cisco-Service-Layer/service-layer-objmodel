// @file
// @brief Server RPC proto file for Interface handles.
// Declares an RPC that gets interface details.
// ----------------------------------------------------------------
//  Copyright (c) 2016 by Cisco Systems, Inc.
//  All rights reserved.
// -----------------------------------------------------------------
//
//

syntax = "proto3";
package service_layer;

import "sl_common_types.proto";
option go_package="github.com/Cisco-service-layer/service-layer-objmodel/grpc/protos;service_layer";

//@defgroup Interfaces
//@brief Interface service definitions.
//Defines the RPC for getting interface status(es).
//@{
service SLInterfaceOper {
    //@addtogroup Interfaces
    //@{
    //;
    // This service can be used to receive interface state change notifications.
    //

    // This call is used to get a stream of interface notifications.
    // The caller must maintain the GRPC channel as long as
    // there is interest in interface notifications.
    // This call can be used to get "push" notifications for interface info.
    // It is advised that the caller register for notifications before any
    // interfaces are used to avoid any loss of notifications.
    rpc SLInterfaceNotifStream(stream SLInterfaceNotifMsg) returns (stream SLInterfaceNotif);

    //@}
}

// The current state of the interface.
enum SLInterfaceState {
    // State unknown
    SL_IF_STATE_UNKNOWN = 0;

    // Interface created
    SL_IF_STATE_CREATED = 1;

    // Link state operationally down
    SL_IF_STATE_DOWN = 2;

    // Link state operationally up
    SL_IF_STATE_UP = 3;

    // Interface deleted
    SL_IF_STATE_DELETED = 4;

    // Bandwidth changed
    SL_IF_STATE_BW_CHANGED = 5;

    // L2 state operationally up
    SL_IF_STATE_L2_UP = 6;

    // L2 state operationally down
    SL_IF_STATE_L2_DOWN = 7;
}

message SLInterfaceInfoMsgBw {
    // The New Bandwidth.
    uint64 NewBandwidth = 1;

    // The Old Bandwidth prior to the update.
    uint64 OldBandwidth = 2;
}

// Interface Get Message result.
message SLInterfaceInfoMsg {
    // Interface info.
    SLInterface SLIfInfo = 1;

    // Interface state.
    SLInterfaceState IfState = 2;

    // Timestamp in microseconds since Epoch
    // January 1st, 1970 00:00:00 GMT, a.k.a. unix epoch.
    int64 Timestamp = 3;

    oneof Value {
        // case IfState SL_IF_STATE_BW_CHANGED is set:
        SLInterfaceInfoMsgBw BwInfo = 10;
    }
}


// Interface Notification Entry.
message SLInterfaceNotifMsgEntry {
    // OperationId. This can be used to correlate replies with requests.
    // The Server simply reflects this field back in the reply.
    // See SLInterfaceNotifMsgRes.
    uint64 OperationId = 1;

    // If true, the Name in the Interface field is a regex.
    // Else, the Name field is an exact match.
    bool Regex = 2;

    // Interface key attributes.
    // Only SLInterface.Name is supported. The Name can be a regular expression.
    SLInterface Interface = 3;

    // Interface states that this notification entry is interested in.
    repeated SLInterfaceState States = 4;
}

// Interface Notification message.
message SLInterfaceNotifMsg {
    // Notification Operation.
    SLNotifOp Oper = 1;

    // Notification Entries.
    repeated SLInterfaceNotifMsgEntry Entries = 2;
}

// Interface Notification message result.
message SLInterfaceNotifMsgRes {
    // OperationId. This can be used to correlate replies with requests.
    // The Server simply reflects this field back in the reply.
    // See SLInterfaceNotifMsgEntry.
    uint64 OperationId = 1;

    // Corresponding error code.
    SLErrorStatus ErrStatus = 2;

    // Interface key attributes.
    SLInterface Key = 3;
}

// Interface Notification message error.
message SLInterfaceNotifMsgErr {
    // Interface key attributes.
    repeated SLInterfaceNotifMsgRes Details = 1;
}

// Interface Notification Event.
message SLInterfaceNotif {
    oneof Event {
        // This field carries error info, if any error occurs during
        // notification subscription.
        SLInterfaceNotifMsgErr Error = 1;

        // This field carries the notification info.
        SLInterfaceInfoMsg Info = 2;
    }
}

//@}
