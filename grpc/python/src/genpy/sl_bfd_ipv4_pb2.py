# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sl_bfd_ipv4.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import sl_common_types_pb2 as sl__common__types__pb2
import sl_bfd_common_pb2 as sl__bfd__common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='sl_bfd_ipv4.proto',
  package='service_layer',
  syntax='proto3',
  serialized_pb=_b('\n\x11sl_bfd_ipv4.proto\x12\rservice_layer\x1a\x15sl_common_types.proto\x1a\x13sl_bfd_common.proto\"\x99\x01\n\nSLBfdv4Key\x12&\n\x04Type\x18\x01 \x01(\x0e\x32\x18.service_layer.SLBfdType\x12\x0f\n\x07VrfName\x18\x02 \x01(\t\x12\x0f\n\x07NbrAddr\x18\x03 \x01(\r\x12-\n\tInterface\x18\x04 \x01(\x0b\x32\x1a.service_layer.SLInterface\x12\x12\n\nSourceAddr\x18\x05 \x01(\r\"m\n\x11SLBfdv4SessionCfg\x12&\n\x03Key\x18\x01 \x01(\x0b\x32\x19.service_layer.SLBfdv4Key\x12\x30\n\x06\x43onfig\x18\x02 \x01(\x0b\x32 .service_layer.SLBfdConfigCommon\"i\n\nSLBfdv4Msg\x12\'\n\x04Oper\x18\x01 \x01(\x0e\x32\x19.service_layer.SLObjectOp\x12\x32\n\x08Sessions\x18\x02 \x03(\x0b\x32 .service_layer.SLBfdv4SessionCfg\"e\n\nSLBfdv4Res\x12/\n\tErrStatus\x18\x01 \x01(\x0b\x32\x1c.service_layer.SLErrorStatus\x12&\n\x03Key\x18\x02 \x01(\x0b\x32\x19.service_layer.SLBfdv4Key\"p\n\rSLBfdv4MsgRsp\x12\x33\n\rStatusSummary\x18\x01 \x01(\x0b\x32\x1c.service_layer.SLErrorStatus\x12*\n\x07Results\x18\x02 \x03(\x0b\x32\x19.service_layer.SLBfdv4Res\"n\n\rSLBfdv4GetMsg\x12&\n\x03Key\x18\x01 \x01(\x0b\x32\x19.service_layer.SLBfdv4Key\x12\x0e\n\x06SeqNum\x18\x02 \x01(\x04\x12\x14\n\x0c\x45ntriesCount\x18\x03 \x01(\r\x12\x0f\n\x07GetNext\x18\x04 \x01(\x08\"\xa2\x01\n\x16SLBfdv4SessionCfgState\x12&\n\x03Key\x18\x01 \x01(\x0b\x32\x19.service_layer.SLBfdv4Key\x12\x30\n\x06\x43onfig\x18\x02 \x01(\x0b\x32 .service_layer.SLBfdConfigCommon\x12.\n\x05State\x18\x03 \x01(\x0b\x32\x1f.service_layer.SLBfdCommonState\"\x88\x01\n\x10SLBfdv4GetMsgRsp\x12\x0b\n\x03\x45of\x18\x01 \x01(\x08\x12/\n\tErrStatus\x18\x02 \x01(\x0b\x32\x1c.service_layer.SLErrorStatus\x12\x36\n\x07\x45ntries\x18\x03 \x03(\x0b\x32%.service_layer.SLBfdv4SessionCfgState\"m\n\x13SLBfdv4SessionState\x12&\n\x03Key\x18\x01 \x01(\x0b\x32\x19.service_layer.SLBfdv4Key\x12.\n\x05State\x18\x02 \x01(\x0b\x32\x1f.service_layer.SLBfdCommonState\"\xb3\x01\n\x0cSLBfdv4Notif\x12\x30\n\tEventType\x18\x01 \x01(\x0e\x32\x1d.service_layer.SLBfdNotifType\x12\x31\n\tErrStatus\x18\x02 \x01(\x0b\x32\x1c.service_layer.SLErrorStatusH\x00\x12\x35\n\x07Session\x18\x03 \x01(\x0b\x32\".service_layer.SLBfdv4SessionStateH\x00\x42\x07\n\x05\x45vent2\xee\x03\n\x0bSLBfdv4Oper\x12I\n\x0cSLBfdv4RegOp\x12\x1a.service_layer.SLBfdRegMsg\x1a\x1d.service_layer.SLBfdRegMsgRsp\x12G\n\nSLBfdv4Get\x12\x1a.service_layer.SLBfdGetMsg\x1a\x1d.service_layer.SLBfdGetMsgRsp\x12Q\n\x0fSLBfdv4GetStats\x12\x1a.service_layer.SLBfdGetMsg\x1a\".service_layer.SLBfdGetStatsMsgRsp\x12W\n\x15SLBfdv4GetNotifStream\x12\x1f.service_layer.SLBfdGetNotifMsg\x1a\x1b.service_layer.SLBfdv4Notif0\x01\x12K\n\x10SLBfdv4SessionOp\x12\x19.service_layer.SLBfdv4Msg\x1a\x1c.service_layer.SLBfdv4MsgRsp\x12R\n\x11SLBfdv4SessionGet\x12\x1c.service_layer.SLBfdv4GetMsg\x1a\x1f.service_layer.SLBfdv4GetMsgRspb\x06proto3')
  ,
  dependencies=[sl__common__types__pb2.DESCRIPTOR,sl__bfd__common__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_SLBFDV4KEY = _descriptor.Descriptor(
  name='SLBfdv4Key',
  full_name='service_layer.SLBfdv4Key',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Type', full_name='service_layer.SLBfdv4Key.Type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='VrfName', full_name='service_layer.SLBfdv4Key.VrfName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='NbrAddr', full_name='service_layer.SLBfdv4Key.NbrAddr', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Interface', full_name='service_layer.SLBfdv4Key.Interface', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SourceAddr', full_name='service_layer.SLBfdv4Key.SourceAddr', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=81,
  serialized_end=234,
)


_SLBFDV4SESSIONCFG = _descriptor.Descriptor(
  name='SLBfdv4SessionCfg',
  full_name='service_layer.SLBfdv4SessionCfg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Key', full_name='service_layer.SLBfdv4SessionCfg.Key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Config', full_name='service_layer.SLBfdv4SessionCfg.Config', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=236,
  serialized_end=345,
)


_SLBFDV4MSG = _descriptor.Descriptor(
  name='SLBfdv4Msg',
  full_name='service_layer.SLBfdv4Msg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Oper', full_name='service_layer.SLBfdv4Msg.Oper', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Sessions', full_name='service_layer.SLBfdv4Msg.Sessions', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=347,
  serialized_end=452,
)


_SLBFDV4RES = _descriptor.Descriptor(
  name='SLBfdv4Res',
  full_name='service_layer.SLBfdv4Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ErrStatus', full_name='service_layer.SLBfdv4Res.ErrStatus', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Key', full_name='service_layer.SLBfdv4Res.Key', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=454,
  serialized_end=555,
)


_SLBFDV4MSGRSP = _descriptor.Descriptor(
  name='SLBfdv4MsgRsp',
  full_name='service_layer.SLBfdv4MsgRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='StatusSummary', full_name='service_layer.SLBfdv4MsgRsp.StatusSummary', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Results', full_name='service_layer.SLBfdv4MsgRsp.Results', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=557,
  serialized_end=669,
)


_SLBFDV4GETMSG = _descriptor.Descriptor(
  name='SLBfdv4GetMsg',
  full_name='service_layer.SLBfdv4GetMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Key', full_name='service_layer.SLBfdv4GetMsg.Key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='SeqNum', full_name='service_layer.SLBfdv4GetMsg.SeqNum', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='EntriesCount', full_name='service_layer.SLBfdv4GetMsg.EntriesCount', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='GetNext', full_name='service_layer.SLBfdv4GetMsg.GetNext', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=671,
  serialized_end=781,
)


_SLBFDV4SESSIONCFGSTATE = _descriptor.Descriptor(
  name='SLBfdv4SessionCfgState',
  full_name='service_layer.SLBfdv4SessionCfgState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Key', full_name='service_layer.SLBfdv4SessionCfgState.Key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Config', full_name='service_layer.SLBfdv4SessionCfgState.Config', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='State', full_name='service_layer.SLBfdv4SessionCfgState.State', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=784,
  serialized_end=946,
)


_SLBFDV4GETMSGRSP = _descriptor.Descriptor(
  name='SLBfdv4GetMsgRsp',
  full_name='service_layer.SLBfdv4GetMsgRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Eof', full_name='service_layer.SLBfdv4GetMsgRsp.Eof', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ErrStatus', full_name='service_layer.SLBfdv4GetMsgRsp.ErrStatus', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Entries', full_name='service_layer.SLBfdv4GetMsgRsp.Entries', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=949,
  serialized_end=1085,
)


_SLBFDV4SESSIONSTATE = _descriptor.Descriptor(
  name='SLBfdv4SessionState',
  full_name='service_layer.SLBfdv4SessionState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='Key', full_name='service_layer.SLBfdv4SessionState.Key', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='State', full_name='service_layer.SLBfdv4SessionState.State', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1087,
  serialized_end=1196,
)


_SLBFDV4NOTIF = _descriptor.Descriptor(
  name='SLBfdv4Notif',
  full_name='service_layer.SLBfdv4Notif',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='EventType', full_name='service_layer.SLBfdv4Notif.EventType', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ErrStatus', full_name='service_layer.SLBfdv4Notif.ErrStatus', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='Session', full_name='service_layer.SLBfdv4Notif.Session', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='Event', full_name='service_layer.SLBfdv4Notif.Event',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1199,
  serialized_end=1378,
)

_SLBFDV4KEY.fields_by_name['Type'].enum_type = sl__bfd__common__pb2._SLBFDTYPE
_SLBFDV4KEY.fields_by_name['Interface'].message_type = sl__common__types__pb2._SLINTERFACE
_SLBFDV4SESSIONCFG.fields_by_name['Key'].message_type = _SLBFDV4KEY
_SLBFDV4SESSIONCFG.fields_by_name['Config'].message_type = sl__bfd__common__pb2._SLBFDCONFIGCOMMON
_SLBFDV4MSG.fields_by_name['Oper'].enum_type = sl__common__types__pb2._SLOBJECTOP
_SLBFDV4MSG.fields_by_name['Sessions'].message_type = _SLBFDV4SESSIONCFG
_SLBFDV4RES.fields_by_name['ErrStatus'].message_type = sl__common__types__pb2._SLERRORSTATUS
_SLBFDV4RES.fields_by_name['Key'].message_type = _SLBFDV4KEY
_SLBFDV4MSGRSP.fields_by_name['StatusSummary'].message_type = sl__common__types__pb2._SLERRORSTATUS
_SLBFDV4MSGRSP.fields_by_name['Results'].message_type = _SLBFDV4RES
_SLBFDV4GETMSG.fields_by_name['Key'].message_type = _SLBFDV4KEY
_SLBFDV4SESSIONCFGSTATE.fields_by_name['Key'].message_type = _SLBFDV4KEY
_SLBFDV4SESSIONCFGSTATE.fields_by_name['Config'].message_type = sl__bfd__common__pb2._SLBFDCONFIGCOMMON
_SLBFDV4SESSIONCFGSTATE.fields_by_name['State'].message_type = sl__bfd__common__pb2._SLBFDCOMMONSTATE
_SLBFDV4GETMSGRSP.fields_by_name['ErrStatus'].message_type = sl__common__types__pb2._SLERRORSTATUS
_SLBFDV4GETMSGRSP.fields_by_name['Entries'].message_type = _SLBFDV4SESSIONCFGSTATE
_SLBFDV4SESSIONSTATE.fields_by_name['Key'].message_type = _SLBFDV4KEY
_SLBFDV4SESSIONSTATE.fields_by_name['State'].message_type = sl__bfd__common__pb2._SLBFDCOMMONSTATE
_SLBFDV4NOTIF.fields_by_name['EventType'].enum_type = sl__bfd__common__pb2._SLBFDNOTIFTYPE
_SLBFDV4NOTIF.fields_by_name['ErrStatus'].message_type = sl__common__types__pb2._SLERRORSTATUS
_SLBFDV4NOTIF.fields_by_name['Session'].message_type = _SLBFDV4SESSIONSTATE
_SLBFDV4NOTIF.oneofs_by_name['Event'].fields.append(
  _SLBFDV4NOTIF.fields_by_name['ErrStatus'])
_SLBFDV4NOTIF.fields_by_name['ErrStatus'].containing_oneof = _SLBFDV4NOTIF.oneofs_by_name['Event']
_SLBFDV4NOTIF.oneofs_by_name['Event'].fields.append(
  _SLBFDV4NOTIF.fields_by_name['Session'])
_SLBFDV4NOTIF.fields_by_name['Session'].containing_oneof = _SLBFDV4NOTIF.oneofs_by_name['Event']
DESCRIPTOR.message_types_by_name['SLBfdv4Key'] = _SLBFDV4KEY
DESCRIPTOR.message_types_by_name['SLBfdv4SessionCfg'] = _SLBFDV4SESSIONCFG
DESCRIPTOR.message_types_by_name['SLBfdv4Msg'] = _SLBFDV4MSG
DESCRIPTOR.message_types_by_name['SLBfdv4Res'] = _SLBFDV4RES
DESCRIPTOR.message_types_by_name['SLBfdv4MsgRsp'] = _SLBFDV4MSGRSP
DESCRIPTOR.message_types_by_name['SLBfdv4GetMsg'] = _SLBFDV4GETMSG
DESCRIPTOR.message_types_by_name['SLBfdv4SessionCfgState'] = _SLBFDV4SESSIONCFGSTATE
DESCRIPTOR.message_types_by_name['SLBfdv4GetMsgRsp'] = _SLBFDV4GETMSGRSP
DESCRIPTOR.message_types_by_name['SLBfdv4SessionState'] = _SLBFDV4SESSIONSTATE
DESCRIPTOR.message_types_by_name['SLBfdv4Notif'] = _SLBFDV4NOTIF

SLBfdv4Key = _reflection.GeneratedProtocolMessageType('SLBfdv4Key', (_message.Message,), dict(
  DESCRIPTOR = _SLBFDV4KEY,
  __module__ = 'sl_bfd_ipv4_pb2'
  # @@protoc_insertion_point(class_scope:service_layer.SLBfdv4Key)
  ))
_sym_db.RegisterMessage(SLBfdv4Key)

SLBfdv4SessionCfg = _reflection.GeneratedProtocolMessageType('SLBfdv4SessionCfg', (_message.Message,), dict(
  DESCRIPTOR = _SLBFDV4SESSIONCFG,
  __module__ = 'sl_bfd_ipv4_pb2'
  # @@protoc_insertion_point(class_scope:service_layer.SLBfdv4SessionCfg)
  ))
_sym_db.RegisterMessage(SLBfdv4SessionCfg)

SLBfdv4Msg = _reflection.GeneratedProtocolMessageType('SLBfdv4Msg', (_message.Message,), dict(
  DESCRIPTOR = _SLBFDV4MSG,
  __module__ = 'sl_bfd_ipv4_pb2'
  # @@protoc_insertion_point(class_scope:service_layer.SLBfdv4Msg)
  ))
_sym_db.RegisterMessage(SLBfdv4Msg)

SLBfdv4Res = _reflection.GeneratedProtocolMessageType('SLBfdv4Res', (_message.Message,), dict(
  DESCRIPTOR = _SLBFDV4RES,
  __module__ = 'sl_bfd_ipv4_pb2'
  # @@protoc_insertion_point(class_scope:service_layer.SLBfdv4Res)
  ))
_sym_db.RegisterMessage(SLBfdv4Res)

SLBfdv4MsgRsp = _reflection.GeneratedProtocolMessageType('SLBfdv4MsgRsp', (_message.Message,), dict(
  DESCRIPTOR = _SLBFDV4MSGRSP,
  __module__ = 'sl_bfd_ipv4_pb2'
  # @@protoc_insertion_point(class_scope:service_layer.SLBfdv4MsgRsp)
  ))
_sym_db.RegisterMessage(SLBfdv4MsgRsp)

SLBfdv4GetMsg = _reflection.GeneratedProtocolMessageType('SLBfdv4GetMsg', (_message.Message,), dict(
  DESCRIPTOR = _SLBFDV4GETMSG,
  __module__ = 'sl_bfd_ipv4_pb2'
  # @@protoc_insertion_point(class_scope:service_layer.SLBfdv4GetMsg)
  ))
_sym_db.RegisterMessage(SLBfdv4GetMsg)

SLBfdv4SessionCfgState = _reflection.GeneratedProtocolMessageType('SLBfdv4SessionCfgState', (_message.Message,), dict(
  DESCRIPTOR = _SLBFDV4SESSIONCFGSTATE,
  __module__ = 'sl_bfd_ipv4_pb2'
  # @@protoc_insertion_point(class_scope:service_layer.SLBfdv4SessionCfgState)
  ))
_sym_db.RegisterMessage(SLBfdv4SessionCfgState)

SLBfdv4GetMsgRsp = _reflection.GeneratedProtocolMessageType('SLBfdv4GetMsgRsp', (_message.Message,), dict(
  DESCRIPTOR = _SLBFDV4GETMSGRSP,
  __module__ = 'sl_bfd_ipv4_pb2'
  # @@protoc_insertion_point(class_scope:service_layer.SLBfdv4GetMsgRsp)
  ))
_sym_db.RegisterMessage(SLBfdv4GetMsgRsp)

SLBfdv4SessionState = _reflection.GeneratedProtocolMessageType('SLBfdv4SessionState', (_message.Message,), dict(
  DESCRIPTOR = _SLBFDV4SESSIONSTATE,
  __module__ = 'sl_bfd_ipv4_pb2'
  # @@protoc_insertion_point(class_scope:service_layer.SLBfdv4SessionState)
  ))
_sym_db.RegisterMessage(SLBfdv4SessionState)

SLBfdv4Notif = _reflection.GeneratedProtocolMessageType('SLBfdv4Notif', (_message.Message,), dict(
  DESCRIPTOR = _SLBFDV4NOTIF,
  __module__ = 'sl_bfd_ipv4_pb2'
  # @@protoc_insertion_point(class_scope:service_layer.SLBfdv4Notif)
  ))
_sym_db.RegisterMessage(SLBfdv4Notif)


import abc
from grpc.beta import implementations as beta_implementations
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

class BetaSLBfdv4OperServicer(object):
  """<fill me in later!>"""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def SLBfdv4RegOp(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SLBfdv4Get(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SLBfdv4GetStats(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SLBfdv4GetNotifStream(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SLBfdv4SessionOp(self, request, context):
    raise NotImplementedError()
  @abc.abstractmethod
  def SLBfdv4SessionGet(self, request, context):
    raise NotImplementedError()

class BetaSLBfdv4OperStub(object):
  """The interface to which stubs will conform."""
  __metaclass__ = abc.ABCMeta
  @abc.abstractmethod
  def SLBfdv4RegOp(self, request, timeout):
    raise NotImplementedError()
  SLBfdv4RegOp.future = None
  @abc.abstractmethod
  def SLBfdv4Get(self, request, timeout):
    raise NotImplementedError()
  SLBfdv4Get.future = None
  @abc.abstractmethod
  def SLBfdv4GetStats(self, request, timeout):
    raise NotImplementedError()
  SLBfdv4GetStats.future = None
  @abc.abstractmethod
  def SLBfdv4GetNotifStream(self, request, timeout):
    raise NotImplementedError()
  @abc.abstractmethod
  def SLBfdv4SessionOp(self, request, timeout):
    raise NotImplementedError()
  SLBfdv4SessionOp.future = None
  @abc.abstractmethod
  def SLBfdv4SessionGet(self, request, timeout):
    raise NotImplementedError()
  SLBfdv4SessionGet.future = None

def beta_create_SLBfdv4Oper_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_ipv4_pb2
  import sl_bfd_ipv4_pb2
  import sl_bfd_ipv4_pb2
  import sl_bfd_ipv4_pb2
  import sl_bfd_ipv4_pb2
  request_deserializers = {
    ('service_layer.SLBfdv4Oper', 'SLBfdv4Get'): sl_bfd_common_pb2.SLBfdGetMsg.FromString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4GetNotifStream'): sl_bfd_common_pb2.SLBfdGetNotifMsg.FromString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4GetStats'): sl_bfd_common_pb2.SLBfdGetMsg.FromString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4RegOp'): sl_bfd_common_pb2.SLBfdRegMsg.FromString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4SessionGet'): sl_bfd_ipv4_pb2.SLBfdv4GetMsg.FromString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4SessionOp'): sl_bfd_ipv4_pb2.SLBfdv4Msg.FromString,
  }
  response_serializers = {
    ('service_layer.SLBfdv4Oper', 'SLBfdv4Get'): sl_bfd_common_pb2.SLBfdGetMsgRsp.SerializeToString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4GetNotifStream'): sl_bfd_ipv4_pb2.SLBfdv4Notif.SerializeToString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4GetStats'): sl_bfd_common_pb2.SLBfdGetStatsMsgRsp.SerializeToString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4RegOp'): sl_bfd_common_pb2.SLBfdRegMsgRsp.SerializeToString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4SessionGet'): sl_bfd_ipv4_pb2.SLBfdv4GetMsgRsp.SerializeToString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4SessionOp'): sl_bfd_ipv4_pb2.SLBfdv4MsgRsp.SerializeToString,
  }
  method_implementations = {
    ('service_layer.SLBfdv4Oper', 'SLBfdv4Get'): face_utilities.unary_unary_inline(servicer.SLBfdv4Get),
    ('service_layer.SLBfdv4Oper', 'SLBfdv4GetNotifStream'): face_utilities.unary_stream_inline(servicer.SLBfdv4GetNotifStream),
    ('service_layer.SLBfdv4Oper', 'SLBfdv4GetStats'): face_utilities.unary_unary_inline(servicer.SLBfdv4GetStats),
    ('service_layer.SLBfdv4Oper', 'SLBfdv4RegOp'): face_utilities.unary_unary_inline(servicer.SLBfdv4RegOp),
    ('service_layer.SLBfdv4Oper', 'SLBfdv4SessionGet'): face_utilities.unary_unary_inline(servicer.SLBfdv4SessionGet),
    ('service_layer.SLBfdv4Oper', 'SLBfdv4SessionOp'): face_utilities.unary_unary_inline(servicer.SLBfdv4SessionOp),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_SLBfdv4Oper_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_common_pb2
  import sl_bfd_ipv4_pb2
  import sl_bfd_ipv4_pb2
  import sl_bfd_ipv4_pb2
  import sl_bfd_ipv4_pb2
  import sl_bfd_ipv4_pb2
  request_serializers = {
    ('service_layer.SLBfdv4Oper', 'SLBfdv4Get'): sl_bfd_common_pb2.SLBfdGetMsg.SerializeToString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4GetNotifStream'): sl_bfd_common_pb2.SLBfdGetNotifMsg.SerializeToString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4GetStats'): sl_bfd_common_pb2.SLBfdGetMsg.SerializeToString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4RegOp'): sl_bfd_common_pb2.SLBfdRegMsg.SerializeToString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4SessionGet'): sl_bfd_ipv4_pb2.SLBfdv4GetMsg.SerializeToString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4SessionOp'): sl_bfd_ipv4_pb2.SLBfdv4Msg.SerializeToString,
  }
  response_deserializers = {
    ('service_layer.SLBfdv4Oper', 'SLBfdv4Get'): sl_bfd_common_pb2.SLBfdGetMsgRsp.FromString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4GetNotifStream'): sl_bfd_ipv4_pb2.SLBfdv4Notif.FromString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4GetStats'): sl_bfd_common_pb2.SLBfdGetStatsMsgRsp.FromString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4RegOp'): sl_bfd_common_pb2.SLBfdRegMsgRsp.FromString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4SessionGet'): sl_bfd_ipv4_pb2.SLBfdv4GetMsgRsp.FromString,
    ('service_layer.SLBfdv4Oper', 'SLBfdv4SessionOp'): sl_bfd_ipv4_pb2.SLBfdv4MsgRsp.FromString,
  }
  cardinalities = {
    'SLBfdv4Get': cardinality.Cardinality.UNARY_UNARY,
    'SLBfdv4GetNotifStream': cardinality.Cardinality.UNARY_STREAM,
    'SLBfdv4GetStats': cardinality.Cardinality.UNARY_UNARY,
    'SLBfdv4RegOp': cardinality.Cardinality.UNARY_UNARY,
    'SLBfdv4SessionGet': cardinality.Cardinality.UNARY_UNARY,
    'SLBfdv4SessionOp': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'service_layer.SLBfdv4Oper', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
