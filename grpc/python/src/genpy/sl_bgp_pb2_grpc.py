# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import sl_bgp_pb2 as sl__bgp__pb2


class SLBgpApiStub(object):
    """@defgroup SLBgpApi
    Defines RPC calls for BGP APIs.
    Update and Delete the BGP Object Parameters
    Supports only single client
    @{
    @addtogroup SlBgpApi
    @{
    ;
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SLBgpOp = channel.stream_stream(
                '/service_layer.SLBgpApi/SLBgpOp',
                request_serializer=sl__bgp__pb2.SLBgpApiMsg.SerializeToString,
                response_deserializer=sl__bgp__pb2.SLBgpApiMsgRsp.FromString,
                )


class SLBgpApiServicer(object):
    """@defgroup SLBgpApi
    Defines RPC calls for BGP APIs.
    Update and Delete the BGP Object Parameters
    Supports only single client
    @{
    @addtogroup SlBgpApi
    @{
    ;
    """

    def SLBgpOp(self, request_iterator, context):
        """RPC supports 
        1. BGP API capability
        2. BGP object (eg. neighbor) parameters (eg. Link Bandwidth) setting.
        3. Get and GetNext to retrieve objects programmed on the device by client 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SLBgpApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SLBgpOp': grpc.stream_stream_rpc_method_handler(
                    servicer.SLBgpOp,
                    request_deserializer=sl__bgp__pb2.SLBgpApiMsg.FromString,
                    response_serializer=sl__bgp__pb2.SLBgpApiMsgRsp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'service_layer.SLBgpApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SLBgpApi(object):
    """@defgroup SLBgpApi
    Defines RPC calls for BGP APIs.
    Update and Delete the BGP Object Parameters
    Supports only single client
    @{
    @addtogroup SlBgpApi
    @{
    ;
    """

    @staticmethod
    def SLBgpOp(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/service_layer.SLBgpApi/SLBgpOp',
            sl__bgp__pb2.SLBgpApiMsg.SerializeToString,
            sl__bgp__pb2.SLBgpApiMsgRsp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
